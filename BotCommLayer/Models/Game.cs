// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: game.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game {

  /// <summary>Holder for reflection information generated from game.proto</summary>
  public static partial class GameReflection {

    #region Descriptor
    /// <summary>File descriptor for game.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpnYW1lLnByb3RvEgRnYW1lIsUBCglXb1dPYmplY3QSDAoEZ3VpZBgBIAEo",
            "BBISCgpvYmplY3RUeXBlGAIgASgNEhMKC2xhc3RVcGRhdGVkGAMgASgNEg0K",
            "BWVudHJ5GAQgASgNEg4KBnNjYWxlWBgFIAEoAhIOCgZoZWlnaHQYBiABKAIS",
            "DgoGZmFjaW5nGAcgASgCEiAKCHBvc2l0aW9uGAggASgLMg4uZ2FtZS5Qb3Np",
            "dGlvbhIPCgdwYWRkaW5nGAkgASgNEg8KB2luV29ybGQYCiABKAgivgEKDVdv",
            "V0dhbWVPYmplY3QSHQoEYmFzZRgBIAEoCzIPLmdhbWUuV29XT2JqZWN0EgwK",
            "BG5hbWUYAiABKAkSEQoJZGlzcGxheUlkGAMgASgNEg8KB2dvU3RhdGUYBCAB",
            "KA0SDgoGYXJ0S2l0GAUgASgNEhQKDGFuaW1Qcm9ncmVzcxgGIAEoDRINCgVs",
            "ZXZlbBgHIAEoDRIXCg9mYWN0aW9uVGVtcGxhdGUYCCABKA0SDgoGdHlwZUlk",
            "GAkgASgNIr0DCgdXb1dVbml0EiEKBGJhc2UYASABKAsyEy5nYW1lLldvV0dh",
            "bWVPYmplY3QSDAoEbmFtZRgCIAEoCRISCgp0YXJnZXRHdWlkGAMgASgEEg4K",
            "BmhlYWx0aBgEIAEoDRIRCgltYXhIZWFsdGgYBSABKA0SJwoFcG93ZXIYBiAD",
            "KAsyGC5nYW1lLldvV1VuaXQuUG93ZXJFbnRyeRItCghtYXhQb3dlchgHIAMo",
            "CzIbLmdhbWUuV29XVW5pdC5NYXhQb3dlckVudHJ5EhYKDnN1bW1vbmVkQnlH",
            "dWlkGAggASgEEhYKDm1vdW50RGlzcGxheUlkGAkgASgNEhQKDHVuaXRSZWFj",
            "dGlvbhgKIAEoDRIUCgxkeW5hbWljRmxhZ3MYCyABKA0SEQoJdW5pdEZsYWdz",
            "GAwgASgNEhUKDW1vdmVtZW50RmxhZ3MYDSABKA0SDQoFbGV2ZWwYDiABKAUa",
            "LAoKUG93ZXJFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06AjgB",
            "Gi8KDU1heFBvd2VyRW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgN",
            "OgI4ASLkAwoJRXF1aXBtZW50EhgKBGhlYWQYASABKAsyCi5nYW1lLkl0ZW0S",
            "GAoEbmVjaxgCIAEoCzIKLmdhbWUuSXRlbRIcCghzaG91bGRlchgDIAEoCzIK",
            "LmdhbWUuSXRlbRIYCgRiYWNrGAQgASgLMgouZ2FtZS5JdGVtEhkKBWNoZXN0",
            "GAUgASgLMgouZ2FtZS5JdGVtEhkKBXdyaXN0GAYgASgLMgouZ2FtZS5JdGVt",
            "EhkKBWhhbmRzGAcgASgLMgouZ2FtZS5JdGVtEhkKBXdhaXN0GAggASgLMgou",
            "Z2FtZS5JdGVtEhgKBGxlZ3MYCSABKAsyCi5nYW1lLkl0ZW0SGAoEZmVldBgK",
            "IAEoCzIKLmdhbWUuSXRlbRIbCgdmaW5nZXIxGAsgASgLMgouZ2FtZS5JdGVt",
            "EhsKB2ZpbmdlcjIYDCABKAsyCi5nYW1lLkl0ZW0SHAoIdHJpbmtldDEYDSAB",
            "KAsyCi5nYW1lLkl0ZW0SHAoIdHJpbmtldDIYDiABKAsyCi5nYW1lLkl0ZW0S",
            "HAoIbWFpbkhhbmQYDyABKAsyCi5nYW1lLkl0ZW0SGwoHb2ZmSGFuZBgQIAEo",
            "CzIKLmdhbWUuSXRlbRIaCgZyYW5nZWQYESABKAsyCi5nYW1lLkl0ZW0iJAoF",
            "U2tpbGwSDAoEbmFtZRgBIAEoCRINCgVsZXZlbBgCIAEoDSJoCgtSZXNpc3Rh",
            "bmNlcxIMCgRob2x5GAEgASgNEgwKBGZpcmUYAiABKA0SDgoGbmF0dXJlGAMg",
            "ASgNEg0KBWZyb3N0GAQgASgNEg4KBnNoYWRvdxgFIAEoDRIOCgZhcmNhbmUY",
            "BiABKA0iPAoRRmFjdGlvblJlcHV0YXRpb24SEwoLZmFjdGlvbk5hbWUYASAB",
            "KAkSEgoKcmVwdXRhdGlvbhgCIAEoBSJbCgRJdGVtEgoKAmlkGAEgASgEEgwK",
            "BG5hbWUYAiABKAkSDAoEc2xvdBgDIAEoCRIQCghxdWFudGl0eRgEIAEoDRIZ",
            "CgVzdGF0cxgFIAMoCzIKLmdhbWUuU3RhdCIjCgRTdGF0EgwKBHR5cGUYASAB",
            "KAkSDQoFdmFsdWUYAiABKAUiKwoIUG9zaXRpb24SCQoBeBgBIAEoAhIJCgF5",
            "GAIgASgCEgkKAXoYAyABKAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWObject), global::Game.WoWObject.Parser, new[]{ "Guid", "ObjectType", "LastUpdated", "Entry", "ScaleX", "Height", "Facing", "Position", "Padding", "InWorld" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWGameObject), global::Game.WoWGameObject.Parser, new[]{ "Base", "Name", "DisplayId", "GoState", "ArtKit", "AnimProgress", "Level", "FactionTemplate", "TypeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWUnit), global::Game.WoWUnit.Parser, new[]{ "Base", "Name", "TargetGuid", "Health", "MaxHealth", "Power", "MaxPower", "SummonedByGuid", "MountDisplayId", "UnitReaction", "DynamicFlags", "UnitFlags", "MovementFlags", "Level" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Equipment), global::Game.Equipment.Parser, new[]{ "Head", "Neck", "Shoulder", "Back", "Chest", "Wrist", "Hands", "Waist", "Legs", "Feet", "Finger1", "Finger2", "Trinket1", "Trinket2", "MainHand", "OffHand", "Ranged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Skill), global::Game.Skill.Parser, new[]{ "Name", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Resistances), global::Game.Resistances.Parser, new[]{ "Holy", "Fire", "Nature", "Frost", "Shadow", "Arcane" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.FactionReputation), global::Game.FactionReputation.Parser, new[]{ "FactionName", "Reputation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Item), global::Game.Item.Parser, new[]{ "Id", "Name", "Slot", "Quantity", "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Stat), global::Game.Stat.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Position), global::Game.Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Definition for WoWObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWObject : pb::IMessage<WoWObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWObject> _parser = new pb::MessageParser<WoWObject>(() => new WoWObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject(WoWObject other) : this() {
      guid_ = other.guid_;
      objectType_ = other.objectType_;
      lastUpdated_ = other.lastUpdated_;
      entry_ = other.entry_;
      scaleX_ = other.scaleX_;
      height_ = other.height_;
      facing_ = other.facing_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      padding_ = other.padding_;
      inWorld_ = other.inWorld_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject Clone() {
      return new WoWObject(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private ulong guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 2;
    private uint objectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "lastUpdated" field.</summary>
    public const int LastUpdatedFieldNumber = 3;
    private uint lastUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 4;
    private uint entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "scaleX" field.</summary>
    public const int ScaleXFieldNumber = 5;
    private float scaleX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScaleX {
      get { return scaleX_; }
      set {
        scaleX_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 6;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 7;
    private float facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Facing {
      get { return facing_; }
      set {
        facing_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 8;
    private global::Game.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "padding" field.</summary>
    public const int PaddingFieldNumber = 9;
    private uint padding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Padding {
      get { return padding_; }
      set {
        padding_ = value;
      }
    }

    /// <summary>Field number for the "inWorld" field.</summary>
    public const int InWorldFieldNumber = 10;
    private bool inWorld_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InWorld {
      get { return inWorld_; }
      set {
        inWorld_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (ObjectType != other.ObjectType) return false;
      if (LastUpdated != other.LastUpdated) return false;
      if (Entry != other.Entry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScaleX, other.ScaleX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Facing, other.Facing)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (Padding != other.Padding) return false;
      if (InWorld != other.InWorld) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0UL) hash ^= Guid.GetHashCode();
      if (ObjectType != 0) hash ^= ObjectType.GetHashCode();
      if (LastUpdated != 0) hash ^= LastUpdated.GetHashCode();
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (ScaleX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScaleX);
      if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
      if (Facing != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Facing);
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Padding != 0) hash ^= Padding.GetHashCode();
      if (InWorld != false) hash ^= InWorld.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Guid);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectType);
      }
      if (LastUpdated != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LastUpdated);
      }
      if (Entry != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Entry);
      }
      if (ScaleX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ScaleX);
      }
      if (Height != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Height);
      }
      if (Facing != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (position_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Position);
      }
      if (Padding != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Padding);
      }
      if (InWorld != false) {
        output.WriteRawTag(80);
        output.WriteBool(InWorld);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Guid);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectType);
      }
      if (LastUpdated != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LastUpdated);
      }
      if (Entry != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Entry);
      }
      if (ScaleX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ScaleX);
      }
      if (Height != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Height);
      }
      if (Facing != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (position_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Position);
      }
      if (Padding != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Padding);
      }
      if (InWorld != false) {
        output.WriteRawTag(80);
        output.WriteBool(InWorld);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guid);
      }
      if (ObjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectType);
      }
      if (LastUpdated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastUpdated);
      }
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (ScaleX != 0F) {
        size += 1 + 4;
      }
      if (Height != 0F) {
        size += 1 + 4;
      }
      if (Facing != 0F) {
        size += 1 + 4;
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Padding != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Padding);
      }
      if (InWorld != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWObject other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0UL) {
        Guid = other.Guid;
      }
      if (other.ObjectType != 0) {
        ObjectType = other.ObjectType;
      }
      if (other.LastUpdated != 0) {
        LastUpdated = other.LastUpdated;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.ScaleX != 0F) {
        ScaleX = other.ScaleX;
      }
      if (other.Height != 0F) {
        Height = other.Height;
      }
      if (other.Facing != 0F) {
        Facing = other.Facing;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Game.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Padding != 0) {
        Padding = other.Padding;
      }
      if (other.InWorld != false) {
        InWorld = other.InWorld;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt64();
            break;
          }
          case 16: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 24: {
            LastUpdated = input.ReadUInt32();
            break;
          }
          case 32: {
            Entry = input.ReadUInt32();
            break;
          }
          case 45: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 53: {
            Height = input.ReadFloat();
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 66: {
            if (position_ == null) {
              Position = new global::Game.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 72: {
            Padding = input.ReadUInt32();
            break;
          }
          case 80: {
            InWorld = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt64();
            break;
          }
          case 16: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 24: {
            LastUpdated = input.ReadUInt32();
            break;
          }
          case 32: {
            Entry = input.ReadUInt32();
            break;
          }
          case 45: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 53: {
            Height = input.ReadFloat();
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 66: {
            if (position_ == null) {
              Position = new global::Game.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 72: {
            Padding = input.ReadUInt32();
            break;
          }
          case 80: {
            InWorld = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for WoWGameObject, extending WoWObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWGameObject : pb::IMessage<WoWGameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWGameObject> _parser = new pb::MessageParser<WoWGameObject>(() => new WoWGameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWGameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject(WoWGameObject other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      name_ = other.name_;
      displayId_ = other.displayId_;
      goState_ = other.goState_;
      artKit_ = other.artKit_;
      animProgress_ = other.animProgress_;
      level_ = other.level_;
      factionTemplate_ = other.factionTemplate_;
      typeId_ = other.typeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject Clone() {
      return new WoWGameObject(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Game.WoWObject base_;
    /// <summary>
    /// Composition for inheritance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWObject Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayId" field.</summary>
    public const int DisplayIdFieldNumber = 3;
    private uint displayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DisplayId {
      get { return displayId_; }
      set {
        displayId_ = value;
      }
    }

    /// <summary>Field number for the "goState" field.</summary>
    public const int GoStateFieldNumber = 4;
    private uint goState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GoState {
      get { return goState_; }
      set {
        goState_ = value;
      }
    }

    /// <summary>Field number for the "artKit" field.</summary>
    public const int ArtKitFieldNumber = 5;
    private uint artKit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ArtKit {
      get { return artKit_; }
      set {
        artKit_ = value;
      }
    }

    /// <summary>Field number for the "animProgress" field.</summary>
    public const int AnimProgressFieldNumber = 6;
    private uint animProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AnimProgress {
      get { return animProgress_; }
      set {
        animProgress_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "factionTemplate" field.</summary>
    public const int FactionTemplateFieldNumber = 8;
    private uint factionTemplate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionTemplate {
      get { return factionTemplate_; }
      set {
        factionTemplate_ = value;
      }
    }

    /// <summary>Field number for the "typeId" field.</summary>
    public const int TypeIdFieldNumber = 9;
    private uint typeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TypeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWGameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWGameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (Name != other.Name) return false;
      if (DisplayId != other.DisplayId) return false;
      if (GoState != other.GoState) return false;
      if (ArtKit != other.ArtKit) return false;
      if (AnimProgress != other.AnimProgress) return false;
      if (Level != other.Level) return false;
      if (FactionTemplate != other.FactionTemplate) return false;
      if (TypeId != other.TypeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayId != 0) hash ^= DisplayId.GetHashCode();
      if (GoState != 0) hash ^= GoState.GetHashCode();
      if (ArtKit != 0) hash ^= ArtKit.GetHashCode();
      if (AnimProgress != 0) hash ^= AnimProgress.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (FactionTemplate != 0) hash ^= FactionTemplate.GetHashCode();
      if (TypeId != 0) hash ^= TypeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DisplayId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DisplayId);
      }
      if (GoState != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GoState);
      }
      if (ArtKit != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ArtKit);
      }
      if (AnimProgress != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AnimProgress);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (FactionTemplate != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FactionTemplate);
      }
      if (TypeId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (DisplayId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(DisplayId);
      }
      if (GoState != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GoState);
      }
      if (ArtKit != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ArtKit);
      }
      if (AnimProgress != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AnimProgress);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Level);
      }
      if (FactionTemplate != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FactionTemplate);
      }
      if (TypeId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DisplayId);
      }
      if (GoState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoState);
      }
      if (ArtKit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ArtKit);
      }
      if (AnimProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnimProgress);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (FactionTemplate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FactionTemplate);
      }
      if (TypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWGameObject other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Game.WoWObject();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayId != 0) {
        DisplayId = other.DisplayId;
      }
      if (other.GoState != 0) {
        GoState = other.GoState;
      }
      if (other.ArtKit != 0) {
        ArtKit = other.ArtKit;
      }
      if (other.AnimProgress != 0) {
        AnimProgress = other.AnimProgress;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.FactionTemplate != 0) {
        FactionTemplate = other.FactionTemplate;
      }
      if (other.TypeId != 0) {
        TypeId = other.TypeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DisplayId = input.ReadUInt32();
            break;
          }
          case 32: {
            GoState = input.ReadUInt32();
            break;
          }
          case 40: {
            ArtKit = input.ReadUInt32();
            break;
          }
          case 48: {
            AnimProgress = input.ReadUInt32();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
          case 64: {
            FactionTemplate = input.ReadUInt32();
            break;
          }
          case 72: {
            TypeId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DisplayId = input.ReadUInt32();
            break;
          }
          case 32: {
            GoState = input.ReadUInt32();
            break;
          }
          case 40: {
            ArtKit = input.ReadUInt32();
            break;
          }
          case 48: {
            AnimProgress = input.ReadUInt32();
            break;
          }
          case 56: {
            Level = input.ReadUInt32();
            break;
          }
          case 64: {
            FactionTemplate = input.ReadUInt32();
            break;
          }
          case 72: {
            TypeId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for WoWUnit, extending WoWGameObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWUnit : pb::IMessage<WoWUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWUnit> _parser = new pb::MessageParser<WoWUnit>(() => new WoWUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit(WoWUnit other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      name_ = other.name_;
      targetGuid_ = other.targetGuid_;
      health_ = other.health_;
      maxHealth_ = other.maxHealth_;
      power_ = other.power_.Clone();
      maxPower_ = other.maxPower_.Clone();
      summonedByGuid_ = other.summonedByGuid_;
      mountDisplayId_ = other.mountDisplayId_;
      unitReaction_ = other.unitReaction_;
      dynamicFlags_ = other.dynamicFlags_;
      unitFlags_ = other.unitFlags_;
      movementFlags_ = other.movementFlags_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit Clone() {
      return new WoWUnit(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Game.WoWGameObject base_;
    /// <summary>
    /// Composition for inheritance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWGameObject Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetGuid" field.</summary>
    public const int TargetGuidFieldNumber = 3;
    private ulong targetGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 4;
    private uint health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "maxHealth" field.</summary>
    public const int MaxHealthFieldNumber = 5;
    private uint maxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 6;
    private static readonly pbc::MapField<uint, uint>.Codec _map_power_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 50);
    private readonly pbc::MapField<uint, uint> power_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Power {
      get { return power_; }
    }

    /// <summary>Field number for the "maxPower" field.</summary>
    public const int MaxPowerFieldNumber = 7;
    private static readonly pbc::MapField<uint, uint>.Codec _map_maxPower_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 58);
    private readonly pbc::MapField<uint, uint> maxPower_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> MaxPower {
      get { return maxPower_; }
    }

    /// <summary>Field number for the "summonedByGuid" field.</summary>
    public const int SummonedByGuidFieldNumber = 8;
    private ulong summonedByGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SummonedByGuid {
      get { return summonedByGuid_; }
      set {
        summonedByGuid_ = value;
      }
    }

    /// <summary>Field number for the "mountDisplayId" field.</summary>
    public const int MountDisplayIdFieldNumber = 9;
    private uint mountDisplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MountDisplayId {
      get { return mountDisplayId_; }
      set {
        mountDisplayId_ = value;
      }
    }

    /// <summary>Field number for the "unitReaction" field.</summary>
    public const int UnitReactionFieldNumber = 10;
    private uint unitReaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitReaction {
      get { return unitReaction_; }
      set {
        unitReaction_ = value;
      }
    }

    /// <summary>Field number for the "dynamicFlags" field.</summary>
    public const int DynamicFlagsFieldNumber = 11;
    private uint dynamicFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DynamicFlags {
      get { return dynamicFlags_; }
      set {
        dynamicFlags_ = value;
      }
    }

    /// <summary>Field number for the "unitFlags" field.</summary>
    public const int UnitFlagsFieldNumber = 12;
    private uint unitFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitFlags {
      get { return unitFlags_; }
      set {
        unitFlags_ = value;
      }
    }

    /// <summary>Field number for the "movementFlags" field.</summary>
    public const int MovementFlagsFieldNumber = 13;
    private uint movementFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MovementFlags {
      get { return movementFlags_; }
      set {
        movementFlags_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 14;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (Name != other.Name) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (Health != other.Health) return false;
      if (MaxHealth != other.MaxHealth) return false;
      if (!Power.Equals(other.Power)) return false;
      if (!MaxPower.Equals(other.MaxPower)) return false;
      if (SummonedByGuid != other.SummonedByGuid) return false;
      if (MountDisplayId != other.MountDisplayId) return false;
      if (UnitReaction != other.UnitReaction) return false;
      if (DynamicFlags != other.DynamicFlags) return false;
      if (UnitFlags != other.UnitFlags) return false;
      if (MovementFlags != other.MovementFlags) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TargetGuid != 0UL) hash ^= TargetGuid.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (MaxHealth != 0) hash ^= MaxHealth.GetHashCode();
      hash ^= Power.GetHashCode();
      hash ^= MaxPower.GetHashCode();
      if (SummonedByGuid != 0UL) hash ^= SummonedByGuid.GetHashCode();
      if (MountDisplayId != 0) hash ^= MountDisplayId.GetHashCode();
      if (UnitReaction != 0) hash ^= UnitReaction.GetHashCode();
      if (DynamicFlags != 0) hash ^= DynamicFlags.GetHashCode();
      if (UnitFlags != 0) hash ^= UnitFlags.GetHashCode();
      if (MovementFlags != 0) hash ^= MovementFlags.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (TargetGuid != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetGuid);
      }
      if (Health != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Health);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxHealth);
      }
      power_.WriteTo(output, _map_power_codec);
      maxPower_.WriteTo(output, _map_maxPower_codec);
      if (SummonedByGuid != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(SummonedByGuid);
      }
      if (MountDisplayId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MountDisplayId);
      }
      if (UnitReaction != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(UnitReaction);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DynamicFlags);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(UnitFlags);
      }
      if (MovementFlags != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MovementFlags);
      }
      if (Level != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (TargetGuid != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetGuid);
      }
      if (Health != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Health);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxHealth);
      }
      power_.WriteTo(ref output, _map_power_codec);
      maxPower_.WriteTo(ref output, _map_maxPower_codec);
      if (SummonedByGuid != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(SummonedByGuid);
      }
      if (MountDisplayId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MountDisplayId);
      }
      if (UnitReaction != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(UnitReaction);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DynamicFlags);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(UnitFlags);
      }
      if (MovementFlags != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MovementFlags);
      }
      if (Level != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TargetGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetGuid);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Health);
      }
      if (MaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxHealth);
      }
      size += power_.CalculateSize(_map_power_codec);
      size += maxPower_.CalculateSize(_map_maxPower_codec);
      if (SummonedByGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SummonedByGuid);
      }
      if (MountDisplayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MountDisplayId);
      }
      if (UnitReaction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitReaction);
      }
      if (DynamicFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DynamicFlags);
      }
      if (UnitFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitFlags);
      }
      if (MovementFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MovementFlags);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWUnit other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Game.WoWGameObject();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TargetGuid != 0UL) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.MaxHealth != 0) {
        MaxHealth = other.MaxHealth;
      }
      power_.MergeFrom(other.power_);
      maxPower_.MergeFrom(other.maxPower_);
      if (other.SummonedByGuid != 0UL) {
        SummonedByGuid = other.SummonedByGuid;
      }
      if (other.MountDisplayId != 0) {
        MountDisplayId = other.MountDisplayId;
      }
      if (other.UnitReaction != 0) {
        UnitReaction = other.UnitReaction;
      }
      if (other.DynamicFlags != 0) {
        DynamicFlags = other.DynamicFlags;
      }
      if (other.UnitFlags != 0) {
        UnitFlags = other.UnitFlags;
      }
      if (other.MovementFlags != 0) {
        MovementFlags = other.MovementFlags;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWGameObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TargetGuid = input.ReadUInt64();
            break;
          }
          case 32: {
            Health = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 50: {
            power_.AddEntriesFrom(input, _map_power_codec);
            break;
          }
          case 58: {
            maxPower_.AddEntriesFrom(input, _map_maxPower_codec);
            break;
          }
          case 64: {
            SummonedByGuid = input.ReadUInt64();
            break;
          }
          case 72: {
            MountDisplayId = input.ReadUInt32();
            break;
          }
          case 80: {
            UnitReaction = input.ReadUInt32();
            break;
          }
          case 88: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 104: {
            MovementFlags = input.ReadUInt32();
            break;
          }
          case 112: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWGameObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            TargetGuid = input.ReadUInt64();
            break;
          }
          case 32: {
            Health = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 50: {
            power_.AddEntriesFrom(ref input, _map_power_codec);
            break;
          }
          case 58: {
            maxPower_.AddEntriesFrom(ref input, _map_maxPower_codec);
            break;
          }
          case 64: {
            SummonedByGuid = input.ReadUInt64();
            break;
          }
          case 72: {
            MountDisplayId = input.ReadUInt32();
            break;
          }
          case 80: {
            UnitReaction = input.ReadUInt32();
            break;
          }
          case 88: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 104: {
            MovementFlags = input.ReadUInt32();
            break;
          }
          case 112: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for Equipment
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment(Equipment other) : this() {
      head_ = other.head_ != null ? other.head_.Clone() : null;
      neck_ = other.neck_ != null ? other.neck_.Clone() : null;
      shoulder_ = other.shoulder_ != null ? other.shoulder_.Clone() : null;
      back_ = other.back_ != null ? other.back_.Clone() : null;
      chest_ = other.chest_ != null ? other.chest_.Clone() : null;
      wrist_ = other.wrist_ != null ? other.wrist_.Clone() : null;
      hands_ = other.hands_ != null ? other.hands_.Clone() : null;
      waist_ = other.waist_ != null ? other.waist_.Clone() : null;
      legs_ = other.legs_ != null ? other.legs_.Clone() : null;
      feet_ = other.feet_ != null ? other.feet_.Clone() : null;
      finger1_ = other.finger1_ != null ? other.finger1_.Clone() : null;
      finger2_ = other.finger2_ != null ? other.finger2_.Clone() : null;
      trinket1_ = other.trinket1_ != null ? other.trinket1_.Clone() : null;
      trinket2_ = other.trinket2_ != null ? other.trinket2_.Clone() : null;
      mainHand_ = other.mainHand_ != null ? other.mainHand_.Clone() : null;
      offHand_ = other.offHand_ != null ? other.offHand_.Clone() : null;
      ranged_ = other.ranged_ != null ? other.ranged_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 1;
    private global::Game.Item head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "neck" field.</summary>
    public const int NeckFieldNumber = 2;
    private global::Game.Item neck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Neck {
      get { return neck_; }
      set {
        neck_ = value;
      }
    }

    /// <summary>Field number for the "shoulder" field.</summary>
    public const int ShoulderFieldNumber = 3;
    private global::Game.Item shoulder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Shoulder {
      get { return shoulder_; }
      set {
        shoulder_ = value;
      }
    }

    /// <summary>Field number for the "back" field.</summary>
    public const int BackFieldNumber = 4;
    private global::Game.Item back_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Back {
      get { return back_; }
      set {
        back_ = value;
      }
    }

    /// <summary>Field number for the "chest" field.</summary>
    public const int ChestFieldNumber = 5;
    private global::Game.Item chest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Chest {
      get { return chest_; }
      set {
        chest_ = value;
      }
    }

    /// <summary>Field number for the "wrist" field.</summary>
    public const int WristFieldNumber = 6;
    private global::Game.Item wrist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Wrist {
      get { return wrist_; }
      set {
        wrist_ = value;
      }
    }

    /// <summary>Field number for the "hands" field.</summary>
    public const int HandsFieldNumber = 7;
    private global::Game.Item hands_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Hands {
      get { return hands_; }
      set {
        hands_ = value;
      }
    }

    /// <summary>Field number for the "waist" field.</summary>
    public const int WaistFieldNumber = 8;
    private global::Game.Item waist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Waist {
      get { return waist_; }
      set {
        waist_ = value;
      }
    }

    /// <summary>Field number for the "legs" field.</summary>
    public const int LegsFieldNumber = 9;
    private global::Game.Item legs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Legs {
      get { return legs_; }
      set {
        legs_ = value;
      }
    }

    /// <summary>Field number for the "feet" field.</summary>
    public const int FeetFieldNumber = 10;
    private global::Game.Item feet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Feet {
      get { return feet_; }
      set {
        feet_ = value;
      }
    }

    /// <summary>Field number for the "finger1" field.</summary>
    public const int Finger1FieldNumber = 11;
    private global::Game.Item finger1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Finger1 {
      get { return finger1_; }
      set {
        finger1_ = value;
      }
    }

    /// <summary>Field number for the "finger2" field.</summary>
    public const int Finger2FieldNumber = 12;
    private global::Game.Item finger2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Finger2 {
      get { return finger2_; }
      set {
        finger2_ = value;
      }
    }

    /// <summary>Field number for the "trinket1" field.</summary>
    public const int Trinket1FieldNumber = 13;
    private global::Game.Item trinket1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Trinket1 {
      get { return trinket1_; }
      set {
        trinket1_ = value;
      }
    }

    /// <summary>Field number for the "trinket2" field.</summary>
    public const int Trinket2FieldNumber = 14;
    private global::Game.Item trinket2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Trinket2 {
      get { return trinket2_; }
      set {
        trinket2_ = value;
      }
    }

    /// <summary>Field number for the "mainHand" field.</summary>
    public const int MainHandFieldNumber = 15;
    private global::Game.Item mainHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item MainHand {
      get { return mainHand_; }
      set {
        mainHand_ = value;
      }
    }

    /// <summary>Field number for the "offHand" field.</summary>
    public const int OffHandFieldNumber = 16;
    private global::Game.Item offHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item OffHand {
      get { return offHand_; }
      set {
        offHand_ = value;
      }
    }

    /// <summary>Field number for the "ranged" field.</summary>
    public const int RangedFieldNumber = 17;
    private global::Game.Item ranged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Item Ranged {
      get { return ranged_; }
      set {
        ranged_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Neck, other.Neck)) return false;
      if (!object.Equals(Shoulder, other.Shoulder)) return false;
      if (!object.Equals(Back, other.Back)) return false;
      if (!object.Equals(Chest, other.Chest)) return false;
      if (!object.Equals(Wrist, other.Wrist)) return false;
      if (!object.Equals(Hands, other.Hands)) return false;
      if (!object.Equals(Waist, other.Waist)) return false;
      if (!object.Equals(Legs, other.Legs)) return false;
      if (!object.Equals(Feet, other.Feet)) return false;
      if (!object.Equals(Finger1, other.Finger1)) return false;
      if (!object.Equals(Finger2, other.Finger2)) return false;
      if (!object.Equals(Trinket1, other.Trinket1)) return false;
      if (!object.Equals(Trinket2, other.Trinket2)) return false;
      if (!object.Equals(MainHand, other.MainHand)) return false;
      if (!object.Equals(OffHand, other.OffHand)) return false;
      if (!object.Equals(Ranged, other.Ranged)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (head_ != null) hash ^= Head.GetHashCode();
      if (neck_ != null) hash ^= Neck.GetHashCode();
      if (shoulder_ != null) hash ^= Shoulder.GetHashCode();
      if (back_ != null) hash ^= Back.GetHashCode();
      if (chest_ != null) hash ^= Chest.GetHashCode();
      if (wrist_ != null) hash ^= Wrist.GetHashCode();
      if (hands_ != null) hash ^= Hands.GetHashCode();
      if (waist_ != null) hash ^= Waist.GetHashCode();
      if (legs_ != null) hash ^= Legs.GetHashCode();
      if (feet_ != null) hash ^= Feet.GetHashCode();
      if (finger1_ != null) hash ^= Finger1.GetHashCode();
      if (finger2_ != null) hash ^= Finger2.GetHashCode();
      if (trinket1_ != null) hash ^= Trinket1.GetHashCode();
      if (trinket2_ != null) hash ^= Trinket2.GetHashCode();
      if (mainHand_ != null) hash ^= MainHand.GetHashCode();
      if (offHand_ != null) hash ^= OffHand.GetHashCode();
      if (ranged_ != null) hash ^= Ranged.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (neck_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Neck);
      }
      if (shoulder_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Shoulder);
      }
      if (back_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Back);
      }
      if (chest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Chest);
      }
      if (wrist_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Wrist);
      }
      if (hands_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Hands);
      }
      if (waist_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Waist);
      }
      if (legs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Legs);
      }
      if (feet_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Feet);
      }
      if (finger1_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Finger1);
      }
      if (finger2_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Finger2);
      }
      if (trinket1_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Trinket1);
      }
      if (trinket2_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Trinket2);
      }
      if (mainHand_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(MainHand);
      }
      if (offHand_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(OffHand);
      }
      if (ranged_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Ranged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (neck_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Neck);
      }
      if (shoulder_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Shoulder);
      }
      if (back_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Back);
      }
      if (chest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Chest);
      }
      if (wrist_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Wrist);
      }
      if (hands_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Hands);
      }
      if (waist_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Waist);
      }
      if (legs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Legs);
      }
      if (feet_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Feet);
      }
      if (finger1_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Finger1);
      }
      if (finger2_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Finger2);
      }
      if (trinket1_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Trinket1);
      }
      if (trinket2_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Trinket2);
      }
      if (mainHand_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(MainHand);
      }
      if (offHand_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(OffHand);
      }
      if (ranged_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Ranged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (neck_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Neck);
      }
      if (shoulder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shoulder);
      }
      if (back_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Back);
      }
      if (chest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chest);
      }
      if (wrist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Wrist);
      }
      if (hands_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hands);
      }
      if (waist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Waist);
      }
      if (legs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Legs);
      }
      if (feet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feet);
      }
      if (finger1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Finger1);
      }
      if (finger2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Finger2);
      }
      if (trinket1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trinket1);
      }
      if (trinket2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trinket2);
      }
      if (mainHand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MainHand);
      }
      if (offHand_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OffHand);
      }
      if (ranged_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ranged);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.head_ != null) {
        if (head_ == null) {
          Head = new global::Game.Item();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.neck_ != null) {
        if (neck_ == null) {
          Neck = new global::Game.Item();
        }
        Neck.MergeFrom(other.Neck);
      }
      if (other.shoulder_ != null) {
        if (shoulder_ == null) {
          Shoulder = new global::Game.Item();
        }
        Shoulder.MergeFrom(other.Shoulder);
      }
      if (other.back_ != null) {
        if (back_ == null) {
          Back = new global::Game.Item();
        }
        Back.MergeFrom(other.Back);
      }
      if (other.chest_ != null) {
        if (chest_ == null) {
          Chest = new global::Game.Item();
        }
        Chest.MergeFrom(other.Chest);
      }
      if (other.wrist_ != null) {
        if (wrist_ == null) {
          Wrist = new global::Game.Item();
        }
        Wrist.MergeFrom(other.Wrist);
      }
      if (other.hands_ != null) {
        if (hands_ == null) {
          Hands = new global::Game.Item();
        }
        Hands.MergeFrom(other.Hands);
      }
      if (other.waist_ != null) {
        if (waist_ == null) {
          Waist = new global::Game.Item();
        }
        Waist.MergeFrom(other.Waist);
      }
      if (other.legs_ != null) {
        if (legs_ == null) {
          Legs = new global::Game.Item();
        }
        Legs.MergeFrom(other.Legs);
      }
      if (other.feet_ != null) {
        if (feet_ == null) {
          Feet = new global::Game.Item();
        }
        Feet.MergeFrom(other.Feet);
      }
      if (other.finger1_ != null) {
        if (finger1_ == null) {
          Finger1 = new global::Game.Item();
        }
        Finger1.MergeFrom(other.Finger1);
      }
      if (other.finger2_ != null) {
        if (finger2_ == null) {
          Finger2 = new global::Game.Item();
        }
        Finger2.MergeFrom(other.Finger2);
      }
      if (other.trinket1_ != null) {
        if (trinket1_ == null) {
          Trinket1 = new global::Game.Item();
        }
        Trinket1.MergeFrom(other.Trinket1);
      }
      if (other.trinket2_ != null) {
        if (trinket2_ == null) {
          Trinket2 = new global::Game.Item();
        }
        Trinket2.MergeFrom(other.Trinket2);
      }
      if (other.mainHand_ != null) {
        if (mainHand_ == null) {
          MainHand = new global::Game.Item();
        }
        MainHand.MergeFrom(other.MainHand);
      }
      if (other.offHand_ != null) {
        if (offHand_ == null) {
          OffHand = new global::Game.Item();
        }
        OffHand.MergeFrom(other.OffHand);
      }
      if (other.ranged_ != null) {
        if (ranged_ == null) {
          Ranged = new global::Game.Item();
        }
        Ranged.MergeFrom(other.Ranged);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::Game.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (neck_ == null) {
              Neck = new global::Game.Item();
            }
            input.ReadMessage(Neck);
            break;
          }
          case 26: {
            if (shoulder_ == null) {
              Shoulder = new global::Game.Item();
            }
            input.ReadMessage(Shoulder);
            break;
          }
          case 34: {
            if (back_ == null) {
              Back = new global::Game.Item();
            }
            input.ReadMessage(Back);
            break;
          }
          case 42: {
            if (chest_ == null) {
              Chest = new global::Game.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 50: {
            if (wrist_ == null) {
              Wrist = new global::Game.Item();
            }
            input.ReadMessage(Wrist);
            break;
          }
          case 58: {
            if (hands_ == null) {
              Hands = new global::Game.Item();
            }
            input.ReadMessage(Hands);
            break;
          }
          case 66: {
            if (waist_ == null) {
              Waist = new global::Game.Item();
            }
            input.ReadMessage(Waist);
            break;
          }
          case 74: {
            if (legs_ == null) {
              Legs = new global::Game.Item();
            }
            input.ReadMessage(Legs);
            break;
          }
          case 82: {
            if (feet_ == null) {
              Feet = new global::Game.Item();
            }
            input.ReadMessage(Feet);
            break;
          }
          case 90: {
            if (finger1_ == null) {
              Finger1 = new global::Game.Item();
            }
            input.ReadMessage(Finger1);
            break;
          }
          case 98: {
            if (finger2_ == null) {
              Finger2 = new global::Game.Item();
            }
            input.ReadMessage(Finger2);
            break;
          }
          case 106: {
            if (trinket1_ == null) {
              Trinket1 = new global::Game.Item();
            }
            input.ReadMessage(Trinket1);
            break;
          }
          case 114: {
            if (trinket2_ == null) {
              Trinket2 = new global::Game.Item();
            }
            input.ReadMessage(Trinket2);
            break;
          }
          case 122: {
            if (mainHand_ == null) {
              MainHand = new global::Game.Item();
            }
            input.ReadMessage(MainHand);
            break;
          }
          case 130: {
            if (offHand_ == null) {
              OffHand = new global::Game.Item();
            }
            input.ReadMessage(OffHand);
            break;
          }
          case 138: {
            if (ranged_ == null) {
              Ranged = new global::Game.Item();
            }
            input.ReadMessage(Ranged);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::Game.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (neck_ == null) {
              Neck = new global::Game.Item();
            }
            input.ReadMessage(Neck);
            break;
          }
          case 26: {
            if (shoulder_ == null) {
              Shoulder = new global::Game.Item();
            }
            input.ReadMessage(Shoulder);
            break;
          }
          case 34: {
            if (back_ == null) {
              Back = new global::Game.Item();
            }
            input.ReadMessage(Back);
            break;
          }
          case 42: {
            if (chest_ == null) {
              Chest = new global::Game.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 50: {
            if (wrist_ == null) {
              Wrist = new global::Game.Item();
            }
            input.ReadMessage(Wrist);
            break;
          }
          case 58: {
            if (hands_ == null) {
              Hands = new global::Game.Item();
            }
            input.ReadMessage(Hands);
            break;
          }
          case 66: {
            if (waist_ == null) {
              Waist = new global::Game.Item();
            }
            input.ReadMessage(Waist);
            break;
          }
          case 74: {
            if (legs_ == null) {
              Legs = new global::Game.Item();
            }
            input.ReadMessage(Legs);
            break;
          }
          case 82: {
            if (feet_ == null) {
              Feet = new global::Game.Item();
            }
            input.ReadMessage(Feet);
            break;
          }
          case 90: {
            if (finger1_ == null) {
              Finger1 = new global::Game.Item();
            }
            input.ReadMessage(Finger1);
            break;
          }
          case 98: {
            if (finger2_ == null) {
              Finger2 = new global::Game.Item();
            }
            input.ReadMessage(Finger2);
            break;
          }
          case 106: {
            if (trinket1_ == null) {
              Trinket1 = new global::Game.Item();
            }
            input.ReadMessage(Trinket1);
            break;
          }
          case 114: {
            if (trinket2_ == null) {
              Trinket2 = new global::Game.Item();
            }
            input.ReadMessage(Trinket2);
            break;
          }
          case 122: {
            if (mainHand_ == null) {
              MainHand = new global::Game.Item();
            }
            input.ReadMessage(MainHand);
            break;
          }
          case 130: {
            if (offHand_ == null) {
              OffHand = new global::Game.Item();
            }
            input.ReadMessage(OffHand);
            break;
          }
          case 138: {
            if (ranged_ == null) {
              Ranged = new global::Game.Item();
            }
            input.ReadMessage(Ranged);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for Skill
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      name_ = other.name_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for Resistances
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Resistances : pb::IMessage<Resistances>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resistances> _parser = new pb::MessageParser<Resistances>(() => new Resistances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Resistances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistances(Resistances other) : this() {
      holy_ = other.holy_;
      fire_ = other.fire_;
      nature_ = other.nature_;
      frost_ = other.frost_;
      shadow_ = other.shadow_;
      arcane_ = other.arcane_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistances Clone() {
      return new Resistances(this);
    }

    /// <summary>Field number for the "holy" field.</summary>
    public const int HolyFieldNumber = 1;
    private uint holy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Holy {
      get { return holy_; }
      set {
        holy_ = value;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 2;
    private uint fire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fire {
      get { return fire_; }
      set {
        fire_ = value;
      }
    }

    /// <summary>Field number for the "nature" field.</summary>
    public const int NatureFieldNumber = 3;
    private uint nature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Nature {
      get { return nature_; }
      set {
        nature_ = value;
      }
    }

    /// <summary>Field number for the "frost" field.</summary>
    public const int FrostFieldNumber = 4;
    private uint frost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frost {
      get { return frost_; }
      set {
        frost_ = value;
      }
    }

    /// <summary>Field number for the "shadow" field.</summary>
    public const int ShadowFieldNumber = 5;
    private uint shadow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Shadow {
      get { return shadow_; }
      set {
        shadow_ = value;
      }
    }

    /// <summary>Field number for the "arcane" field.</summary>
    public const int ArcaneFieldNumber = 6;
    private uint arcane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Arcane {
      get { return arcane_; }
      set {
        arcane_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Resistances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Resistances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Holy != other.Holy) return false;
      if (Fire != other.Fire) return false;
      if (Nature != other.Nature) return false;
      if (Frost != other.Frost) return false;
      if (Shadow != other.Shadow) return false;
      if (Arcane != other.Arcane) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Holy != 0) hash ^= Holy.GetHashCode();
      if (Fire != 0) hash ^= Fire.GetHashCode();
      if (Nature != 0) hash ^= Nature.GetHashCode();
      if (Frost != 0) hash ^= Frost.GetHashCode();
      if (Shadow != 0) hash ^= Shadow.GetHashCode();
      if (Arcane != 0) hash ^= Arcane.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Holy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Holy);
      }
      if (Fire != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fire);
      }
      if (Nature != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Nature);
      }
      if (Frost != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frost);
      }
      if (Shadow != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Shadow);
      }
      if (Arcane != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Arcane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Holy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Holy);
      }
      if (Fire != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fire);
      }
      if (Nature != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Nature);
      }
      if (Frost != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frost);
      }
      if (Shadow != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Shadow);
      }
      if (Arcane != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Arcane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Holy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Holy);
      }
      if (Fire != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fire);
      }
      if (Nature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nature);
      }
      if (Frost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frost);
      }
      if (Shadow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Shadow);
      }
      if (Arcane != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Arcane);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Resistances other) {
      if (other == null) {
        return;
      }
      if (other.Holy != 0) {
        Holy = other.Holy;
      }
      if (other.Fire != 0) {
        Fire = other.Fire;
      }
      if (other.Nature != 0) {
        Nature = other.Nature;
      }
      if (other.Frost != 0) {
        Frost = other.Frost;
      }
      if (other.Shadow != 0) {
        Shadow = other.Shadow;
      }
      if (other.Arcane != 0) {
        Arcane = other.Arcane;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Holy = input.ReadUInt32();
            break;
          }
          case 16: {
            Fire = input.ReadUInt32();
            break;
          }
          case 24: {
            Nature = input.ReadUInt32();
            break;
          }
          case 32: {
            Frost = input.ReadUInt32();
            break;
          }
          case 40: {
            Shadow = input.ReadUInt32();
            break;
          }
          case 48: {
            Arcane = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Holy = input.ReadUInt32();
            break;
          }
          case 16: {
            Fire = input.ReadUInt32();
            break;
          }
          case 24: {
            Nature = input.ReadUInt32();
            break;
          }
          case 32: {
            Frost = input.ReadUInt32();
            break;
          }
          case 40: {
            Shadow = input.ReadUInt32();
            break;
          }
          case 48: {
            Arcane = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for Faction Reputation
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FactionReputation : pb::IMessage<FactionReputation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FactionReputation> _parser = new pb::MessageParser<FactionReputation>(() => new FactionReputation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FactionReputation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionReputation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionReputation(FactionReputation other) : this() {
      factionName_ = other.factionName_;
      reputation_ = other.reputation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionReputation Clone() {
      return new FactionReputation(this);
    }

    /// <summary>Field number for the "factionName" field.</summary>
    public const int FactionNameFieldNumber = 1;
    private string factionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FactionName {
      get { return factionName_; }
      set {
        factionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reputation" field.</summary>
    public const int ReputationFieldNumber = 2;
    private int reputation_;
    /// <summary>
    /// -42000 to 42000 (Hated to Exalted)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Reputation {
      get { return reputation_; }
      set {
        reputation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FactionReputation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FactionReputation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FactionName != other.FactionName) return false;
      if (Reputation != other.Reputation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FactionName.Length != 0) hash ^= FactionName.GetHashCode();
      if (Reputation != 0) hash ^= Reputation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FactionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FactionName);
      }
      if (Reputation != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Reputation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FactionName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FactionName);
      }
      if (Reputation != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Reputation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FactionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FactionName);
      }
      if (Reputation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reputation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FactionReputation other) {
      if (other == null) {
        return;
      }
      if (other.FactionName.Length != 0) {
        FactionName = other.FactionName;
      }
      if (other.Reputation != 0) {
        Reputation = other.Reputation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FactionName = input.ReadString();
            break;
          }
          case 16: {
            Reputation = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FactionName = input.ReadString();
            break;
          }
          case 16: {
            Reputation = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for Item
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item(Item other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      slot_ = other.slot_;
      quantity_ = other.quantity_;
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 3;
    private string slot_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Slot {
      get { return slot_; }
      set {
        slot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Game.Stat> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(42, global::Game.Stat.Parser);
    private readonly pbc::RepeatedField<global::Game.Stat> stats_ = new pbc::RepeatedField<global::Game.Stat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Game.Stat> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Slot != other.Slot) return false;
      if (Quantity != other.Quantity) return false;
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Slot.Length != 0) hash ^= Slot.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Slot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Slot);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Quantity);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Slot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Slot);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Quantity);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Slot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Slot);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Slot.Length != 0) {
        Slot = other.Slot;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Slot = input.ReadString();
            break;
          }
          case 32: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 42: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Slot = input.ReadString();
            break;
          }
          case 32: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 42: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for Stat
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Stat : pb::IMessage<Stat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat(Stat other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat Clone() {
      return new Stat(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
