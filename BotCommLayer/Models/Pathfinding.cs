// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pathfinding.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pathfinding {

  /// <summary>Holder for reflection information generated from pathfinding.proto</summary>
  public static partial class PathfindingReflection {

    #region Descriptor
    /// <summary>File descriptor for pathfinding.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PathfindingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFwYXRoZmluZGluZy5wcm90bxILcGF0aGZpbmRpbmcaCmdhbWUucHJvdG8a",
            "Hmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byLoAQoSUGF0aGZpbmRp",
            "bmdSZXF1ZXN0EjkKDHJlcXVlc3RfdHlwZRgBIAEoDjIjLnBhdGhmaW5kaW5n",
            "LlBhdGhmaW5kaW5nUmVxdWVzdFR5cGUSKwoFbWFwSWQYAiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuVUludDMyVmFsdWUSHQoFc3RhcnQYAyABKAsyDi5nYW1l",
            "LlBvc2l0aW9uEhsKA2VuZBgEIAEoCzIOLmdhbWUuUG9zaXRpb24SLgoKc21v",
            "b3RoUGF0aBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUinQEK",
            "E1BhdGhmaW5kaW5nUmVzcG9uc2USOgoNcmVzcG9uc2VfdHlwZRgBIAEoDjIj",
            "LnBhdGhmaW5kaW5nLlBhdGhmaW5kaW5nUmVxdWVzdFR5cGUSHAoEcGF0aBgC",
            "IAMoCzIOLmdhbWUuUG9zaXRpb24SLAoHel9wb2ludBgDIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5GbG9hdFZhbHVlKj0KFlBhdGhmaW5kaW5nUmVxdWVzdFR5",
            "cGUSCAoEUEFUSBAAEgwKCERJU1RBTkNFEAESCwoHWl9DSEVDSxACYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Game.GameReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pathfinding.PathfindingRequestType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pathfinding.PathfindingRequest), global::Pathfinding.PathfindingRequest.Parser, new[]{ "RequestType", "MapId", "Start", "End", "SmoothPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pathfinding.PathfindingResponse), global::Pathfinding.PathfindingResponse.Parser, new[]{ "ResponseType", "Path", "ZPoint" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PathfindingRequestType {
    [pbr::OriginalName("PATH")] Path = 0,
    [pbr::OriginalName("DISTANCE")] Distance = 1,
    [pbr::OriginalName("Z_CHECK")] ZCheck = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Top-level request with a oneof block
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PathfindingRequest : pb::IMessage<PathfindingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PathfindingRequest> _parser = new pb::MessageParser<PathfindingRequest>(() => new PathfindingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PathfindingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pathfinding.PathfindingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingRequest(PathfindingRequest other) : this() {
      requestType_ = other.requestType_;
      MapId = other.MapId;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      SmoothPath = other.SmoothPath;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingRequest Clone() {
      return new PathfindingRequest(this);
    }

    /// <summary>Field number for the "request_type" field.</summary>
    public const int RequestTypeFieldNumber = 1;
    private global::Pathfinding.PathfindingRequestType requestType_ = global::Pathfinding.PathfindingRequestType.Path;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pathfinding.PathfindingRequestType RequestType {
      get { return requestType_; }
      set {
        requestType_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private static readonly pb::FieldCodec<uint?> _single_mapId_codec = pb::FieldCodec.ForStructWrapper<uint>(18);
    private uint? mapId_;
    /// <summary>
    /// Wrap primitives to preserve "unset" state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint? MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }


    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 3;
    private global::Game.Position start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Position Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 4;
    private global::Game.Position end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Position End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "smoothPath" field.</summary>
    public const int SmoothPathFieldNumber = 5;
    private static readonly pb::FieldCodec<bool?> _single_smoothPath_codec = pb::FieldCodec.ForStructWrapper<bool>(42);
    private bool? smoothPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool? SmoothPath {
      get { return smoothPath_; }
      set {
        smoothPath_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PathfindingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PathfindingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestType != other.RequestType) return false;
      if (MapId != other.MapId) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if (SmoothPath != other.SmoothPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestType != global::Pathfinding.PathfindingRequestType.Path) hash ^= RequestType.GetHashCode();
      if (mapId_ != null) hash ^= MapId.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      if (smoothPath_ != null) hash ^= SmoothPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestType != global::Pathfinding.PathfindingRequestType.Path) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestType);
      }
      if (mapId_ != null) {
        _single_mapId_codec.WriteTagAndValue(output, MapId);
      }
      if (start_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(End);
      }
      if (smoothPath_ != null) {
        _single_smoothPath_codec.WriteTagAndValue(output, SmoothPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestType != global::Pathfinding.PathfindingRequestType.Path) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestType);
      }
      if (mapId_ != null) {
        _single_mapId_codec.WriteTagAndValue(ref output, MapId);
      }
      if (start_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(End);
      }
      if (smoothPath_ != null) {
        _single_smoothPath_codec.WriteTagAndValue(ref output, SmoothPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RequestType != global::Pathfinding.PathfindingRequestType.Path) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestType);
      }
      if (mapId_ != null) {
        size += _single_mapId_codec.CalculateSizeWithTag(MapId);
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      if (smoothPath_ != null) {
        size += _single_smoothPath_codec.CalculateSizeWithTag(SmoothPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PathfindingRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestType != global::Pathfinding.PathfindingRequestType.Path) {
        RequestType = other.RequestType;
      }
      if (other.mapId_ != null) {
        if (mapId_ == null || other.MapId != 0) {
          MapId = other.MapId;
        }
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::Game.Position();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::Game.Position();
        }
        End.MergeFrom(other.End);
      }
      if (other.smoothPath_ != null) {
        if (smoothPath_ == null || other.SmoothPath != false) {
          SmoothPath = other.SmoothPath;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestType = (global::Pathfinding.PathfindingRequestType) input.ReadEnum();
            break;
          }
          case 18: {
            uint? value = _single_mapId_codec.Read(input);
            if (mapId_ == null || value != 0) {
              MapId = value;
            }
            break;
          }
          case 26: {
            if (start_ == null) {
              Start = new global::Game.Position();
            }
            input.ReadMessage(Start);
            break;
          }
          case 34: {
            if (end_ == null) {
              End = new global::Game.Position();
            }
            input.ReadMessage(End);
            break;
          }
          case 42: {
            bool? value = _single_smoothPath_codec.Read(input);
            if (smoothPath_ == null || value != false) {
              SmoothPath = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestType = (global::Pathfinding.PathfindingRequestType) input.ReadEnum();
            break;
          }
          case 18: {
            uint? value = _single_mapId_codec.Read(ref input);
            if (mapId_ == null || value != 0) {
              MapId = value;
            }
            break;
          }
          case 26: {
            if (start_ == null) {
              Start = new global::Game.Position();
            }
            input.ReadMessage(Start);
            break;
          }
          case 34: {
            if (end_ == null) {
              End = new global::Game.Position();
            }
            input.ReadMessage(End);
            break;
          }
          case 42: {
            bool? value = _single_smoothPath_codec.Read(ref input);
            if (smoothPath_ == null || value != false) {
              SmoothPath = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Top-level response with corresponding union-type structure
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PathfindingResponse : pb::IMessage<PathfindingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PathfindingResponse> _parser = new pb::MessageParser<PathfindingResponse>(() => new PathfindingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PathfindingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pathfinding.PathfindingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingResponse(PathfindingResponse other) : this() {
      responseType_ = other.responseType_;
      path_ = other.path_.Clone();
      ZPoint = other.ZPoint;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PathfindingResponse Clone() {
      return new PathfindingResponse(this);
    }

    /// <summary>Field number for the "response_type" field.</summary>
    public const int ResponseTypeFieldNumber = 1;
    private global::Pathfinding.PathfindingRequestType responseType_ = global::Pathfinding.PathfindingRequestType.Path;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Pathfinding.PathfindingRequestType ResponseType {
      get { return responseType_; }
      set {
        responseType_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Game.Position> _repeated_path_codec
        = pb::FieldCodec.ForMessage(18, global::Game.Position.Parser);
    private readonly pbc::RepeatedField<global::Game.Position> path_ = new pbc::RepeatedField<global::Game.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Game.Position> Path {
      get { return path_; }
    }

    /// <summary>Field number for the "z_point" field.</summary>
    public const int ZPointFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _single_zPoint_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    private float? zPoint_;
    /// <summary>
    /// To distinguish 0.0 from unset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float? ZPoint {
      get { return zPoint_; }
      set {
        zPoint_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PathfindingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PathfindingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseType != other.ResponseType) return false;
      if(!path_.Equals(other.path_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(ZPoint, other.ZPoint)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseType != global::Pathfinding.PathfindingRequestType.Path) hash ^= ResponseType.GetHashCode();
      hash ^= path_.GetHashCode();
      if (zPoint_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(ZPoint);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResponseType != global::Pathfinding.PathfindingRequestType.Path) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResponseType);
      }
      path_.WriteTo(output, _repeated_path_codec);
      if (zPoint_ != null) {
        _single_zPoint_codec.WriteTagAndValue(output, ZPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResponseType != global::Pathfinding.PathfindingRequestType.Path) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResponseType);
      }
      path_.WriteTo(ref output, _repeated_path_codec);
      if (zPoint_ != null) {
        _single_zPoint_codec.WriteTagAndValue(ref output, ZPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ResponseType != global::Pathfinding.PathfindingRequestType.Path) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseType);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      if (zPoint_ != null) {
        size += _single_zPoint_codec.CalculateSizeWithTag(ZPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PathfindingResponse other) {
      if (other == null) {
        return;
      }
      if (other.ResponseType != global::Pathfinding.PathfindingRequestType.Path) {
        ResponseType = other.ResponseType;
      }
      path_.Add(other.path_);
      if (other.zPoint_ != null) {
        if (zPoint_ == null || other.ZPoint != 0F) {
          ZPoint = other.ZPoint;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResponseType = (global::Pathfinding.PathfindingRequestType) input.ReadEnum();
            break;
          }
          case 18: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
          case 26: {
            float? value = _single_zPoint_codec.Read(input);
            if (zPoint_ == null || value != 0F) {
              ZPoint = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResponseType = (global::Pathfinding.PathfindingRequestType) input.ReadEnum();
            break;
          }
          case 18: {
            path_.AddEntriesFrom(ref input, _repeated_path_codec);
            break;
          }
          case 26: {
            float? value = _single_zPoint_codec.Read(ref input);
            if (zPoint_ == null || value != 0F) {
              ZPoint = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
