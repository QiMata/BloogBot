// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Database {

  /// <summary>Holder for reflection information generated from database.proto</summary>
  public static partial class DatabaseReflection {

    #region Descriptor
    /// <summary>File descriptor for database.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5kYXRhYmFzZS5wcm90bxIIZGF0YWJhc2UaH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8iWwoPRGF0YWJhc2VSZXF1ZXN0EicKCnRhYmxlX25h",
            "bWUYASABKA4yEy5kYXRhYmFzZS5UYWJsZU5hbWUSHwoDa2V5GAIgAygLMhIu",
            "ZGF0YWJhc2UuS2V5VmFsdWUiqwEKEERhdGFiYXNlUmVzcG9uc2USJwoKdGFi",
            "bGVfbmFtZRgBIAEoDjITLmRhdGFiYXNlLlRhYmxlTmFtZRIsCgRyb3dzGAIg",
            "AygLMh4uZGF0YWJhc2UuRGF0YWJhc2VSZXNwb25zZS5Sb3cSFQoNZXJyb3Jf",
            "bWVzc2FnZRgDIAEoCRopCgNSb3cSIgoGZmllbGRzGAEgAygLMhIuZGF0YWJh",
            "c2UuS2V5VmFsdWUiJgoIS2V5VmFsdWUSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgJIssBChVBcmVhVHJpZ2dlckJnRW50cmFuY2USCgoCaWQYASABKA0S",
            "DAoEbmFtZRgCIAEoCRIMCgR0ZWFtGAMgASgNEhMKC2JnX3RlbXBsYXRlGAQg",
            "ASgNEhAKCGV4aXRfbWFwGAUgASgCEhcKD2V4aXRfcG9zaXRpb25feBgGIAEo",
            "AhIXCg9leGl0X3Bvc2l0aW9uX3kYByABKAISFwoPZXhpdF9wb3NpdGlvbl96",
            "GAggASgCEhgKEGV4aXRfb3JpZW50YXRpb24YCSABKAIiOAobQXJlYVRyaWdn",
            "ZXJJbnZvbHZlZFJlbGF0aW9uEgoKAmlkGAEgASgNEg0KBXF1ZXN0GAIgASgN",
            "Ii0KEUFyZWFUcmlnZ2VyVGF2ZXJuEgoKAmlkGAEgASgNEgwKBG5hbWUYAiAB",
            "KAkiiwMKE0FyZWFUcmlnZ2VyVGVsZXBvcnQSCgoCaWQYASABKA0SDQoFcGF0",
            "Y2gYAiABKA0SDAoEbmFtZRgDIAEoCRIWCg5yZXF1aXJlZF9sZXZlbBgEIAEo",
            "DRIVCg1yZXF1aXJlZF9pdGVtGAUgASgNEhYKDnJlcXVpcmVkX2l0ZW0yGAYg",
            "ASgNEhsKE3JlcXVpcmVkX3F1ZXN0X2RvbmUYByABKA0SFgoOcmVxdWlyZWRf",
            "ZXZlbnQYCCABKAUSGQoRcmVxdWlyZWRfcHZwX3JhbmsYCSABKA0SFQoNcmVx",
            "dWlyZWRfdGVhbRgKIAEoDRIcChRyZXF1aXJlZF9mYWlsZWRfdGV4dBgLIAEo",
            "CRISCgp0YXJnZXRfbWFwGAwgASgNEhkKEXRhcmdldF9wb3NpdGlvbl94GA0g",
            "ASgCEhkKEXRhcmdldF9wb3NpdGlvbl95GA4gASgCEhkKEXRhcmdldF9wb3Np",
            "dGlvbl96GA8gASgCEhoKEnRhcmdldF9vcmllbnRhdGlvbhgQIAEoAiKrAQoM",
            "QXJlYVRlbXBsYXRlEg0KBWVudHJ5GAEgASgNEg4KBm1hcF9pZBgCIAEoDRIP",
            "Cgd6b25lX2lkGAMgASgNEhQKDGV4cGxvcmVfZmxhZxgEIAEoDRINCgVmbGFn",
            "cxgFIAEoDRISCgphcmVhX2xldmVsGAYgASgFEgwKBG5hbWUYByABKAkSDAoE",
            "dGVhbRgIIAEoDRIWCg5saXF1aWRfdHlwZV9pZBgJIAEoDSJLCg9BdWN0aW9u",
            "SG91c2VCb3QSDAoEaXRlbRgBIAEoBRINCgVzdGFjaxgCIAEoBRILCgNiaWQY",
            "AyABKAUSDgoGYnV5b3V0GAQgASgFIkIKDUF1dG9Ccm9hZGNhc3QSDQoFZGVs",
            "YXkYASABKAUSEAoIc3RyaW5nSWQYAiABKAUSEAoIY29tbWVudHMYAyABKAki",
            "VQoRQmF0dGxlZ3JvdW5kRXZlbnQSCwoDbWFwGAEgASgFEg4KBmV2ZW50MRgC",
            "IAEoDRIOCgZldmVudDIYAyABKA0SEwoLZGVzY3JpcHRpb24YBCABKAkiyQIK",
            "FEJhdHRsZWdyb3VuZFRlbXBsYXRlEgoKAmlkGAEgASgNEg0KBXBhdGNoGAIg",
            "ASgNEhkKEW1pblBsYXllcnNQZXJUZWFtGAMgASgNEhkKEW1heFBsYXllcnNQ",
            "ZXJUZWFtGAQgASgNEg4KBm1pbkx2bBgFIAEoDRIOCgZtYXhMdmwYBiABKA0S",
            "GAoQYWxsaWFuY2VXaW5TcGVsbBgHIAEoDRIZChFhbGxpYW5jZUxvc2VTcGVs",
            "bBgIIAEoDRIVCg1ob3JkZVdpblNwZWxsGAkgASgNEhYKDmhvcmRlTG9zZVNw",
            "ZWxsGAogASgNEhgKEGFsbGlhbmNlU3RhcnRMb2MYCyABKA0SFgoOYWxsaWFu",
            "Y2VTdGFydE8YDCABKAISFQoNaG9yZGVTdGFydExvYxgNIAEoDRITCgtob3Jk",
            "ZVN0YXJ0TxgOIAEoAiI3ChFCYXR0bGVtYXN0ZXJFbnRyeRINCgVlbnRyeRgB",
            "IAEoDRITCgtiZ190ZW1wbGF0ZRgCIAEoDSLlAQoNQnJvYWRjYXN0VGV4dBIK",
            "CgJpZBgBIAEoDRIQCghtYWxlVGV4dBgCIAEoCRISCgpmZW1hbGVUZXh0GAMg",
            "ASgJEg0KBXNvdW5kGAQgASgNEgwKBHR5cGUYBSABKA0SEAoIbGFuZ3VhZ2UY",
            "BiABKA0SEAoIZW1vdGVJZDAYByABKA0SEAoIZW1vdGVJZDEYCCABKA0SEAoI",
            "ZW1vdGVJZDIYCSABKA0SEwoLZW1vdGVEZWxheTAYCiABKA0SEwoLZW1vdGVE",
            "ZWxheTEYCyABKA0SEwoLZW1vdGVEZWxheTIYDCABKA0icAoRQ2luZW1hdGlj",
            "V2F5cG9pbnQSEQoJY2luZW1hdGljGAEgASgFEg0KBXRpbWVyGAIgASgFEgwK",
            "BHBvc3gYAyABKAISDAoEcG9zeRgEIAEoAhIMCgRwb3N6GAUgASgCEg8KB2Nv",
            "bW1lbnQYBiABKAkiRgoHQ29tbWFuZBIMCgRuYW1lGAEgASgJEhAKCHNlY3Vy",
            "aXR5GAIgASgNEgwKBGhlbHAYAyABKAkSDQoFZmxhZ3MYBCABKAUiYQoJQ29u",
            "ZGl0aW9uEhcKD2NvbmRpdGlvbl9lbnRyeRgBIAEoDRIMCgR0eXBlGAIgASgF",
            "Eg4KBnZhbHVlMRgDIAEoDRIOCgZ2YWx1ZTIYBCABKA0SDQoFZmxhZ3MYBSAB",
            "KA0iqAMKCENyZWF0dXJlEgwKBGd1aWQYASABKA0SCgoCaWQYAiABKA0SCwoD",
            "bWFwGAMgASgNEg8KB21vZGVsaWQYBCABKA0SFAoMZXF1aXBtZW50X2lkGAUg",
            "ASgNEhIKCnBvc2l0aW9uX3gYBiABKAISEgoKcG9zaXRpb25feRgHIAEoAhIS",
            "Cgpwb3NpdGlvbl96GAggASgCEhMKC29yaWVudGF0aW9uGAkgASgCEhgKEHNw",
            "YXdudGltZXNlY3NtaW4YCiABKA0SGAoQc3Bhd250aW1lc2Vjc21heBgLIAEo",
            "DRIRCglzcGF3bmRpc3QYDCABKAISFwoPY3VycmVudHdheXBvaW50GA0gASgN",
            "EhEKCWN1cmhlYWx0aBgOIAEoDRIPCgdjdXJtYW5hGA8gASgNEhIKCmRlYXRo",
            "U3RhdGUYECABKA0SFAoMbW92ZW1lbnRUeXBlGBEgASgNEhIKCnNwYXduRmxh",
            "Z3MYEiABKA0SFQoNdmlzaWJpbGl0eW1vZBgTIAEoAhIRCglwYXRjaF9taW4Y",
            "FCABKA0SEQoJcGF0Y2hfbWF4GBUgASgNIqUBCg1DcmVhdHVyZUFkZG9uEgwK",
            "BGd1aWQYASABKA0SDQoFcGF0Y2gYAiABKA0SDQoFbW91bnQYAyABKA0SDgoG",
            "Ynl0ZXMxGAQgASgNEhMKC2IyXzBfc2hlYXRoGAUgASgNEhIKCmIyXzFfZmxh",
            "Z3MYBiABKA0SDQoFZW1vdGUYByABKA0SEQoJbW92ZWZsYWdzGAggASgNEg0K",
            "BWF1cmFzGAkgASgJItoCCg9DcmVhdHVyZUFJRXZlbnQSCgoCaWQYASABKA0S",
            "EwoLY3JlYXR1cmVfaWQYAiABKA0SFAoMY29uZGl0aW9uX2lkGAMgASgNEhIK",
            "CmV2ZW50X3R5cGUYBCABKA0SIAoYZXZlbnRfaW52ZXJzZV9waGFzZV9tYXNr",
            "GAUgASgNEhQKDGV2ZW50X2NoYW5jZRgGIAEoDRITCgtldmVudF9mbGFncxgH",
            "IAEoDRIUCgxldmVudF9wYXJhbTEYCCABKAUSFAoMZXZlbnRfcGFyYW0yGAkg",
            "ASgFEhQKDGV2ZW50X3BhcmFtMxgKIAEoBRIUCgxldmVudF9wYXJhbTQYCyAB",
            "KAUSFgoOYWN0aW9uMV9zY3JpcHQYDCABKA0SFgoOYWN0aW9uMl9zY3JpcHQY",
            "DSABKA0SFgoOYWN0aW9uM19zY3JpcHQYDiABKA0SDwoHY29tbWVudBgPIAEo",
            "CSL7AgoQQ3JlYXR1cmVBSVNjcmlwdBIKCgJpZBgBIAEoDRINCgVkZWxheRgC",
            "IAEoDRIPCgdjb21tYW5kGAMgASgNEhAKCGRhdGFsb25nGAQgASgNEhEKCWRh",
            "dGFsb25nMhgFIAEoDRIRCglkYXRhbG9uZzMYBiABKA0SEQoJZGF0YWxvbmc0",
            "GAcgASgNEhUKDXRhcmdldF9wYXJhbTEYCCABKA0SFQoNdGFyZ2V0X3BhcmFt",
            "MhgJIAEoDRITCgt0YXJnZXRfdHlwZRgKIAEoDRISCgpkYXRhX2ZsYWdzGAsg",
            "ASgNEg8KB2RhdGFpbnQYDCABKAUSEAoIZGF0YWludDIYDSABKAUSEAoIZGF0",
            "YWludDMYDiABKAUSEAoIZGF0YWludDQYDyABKAUSCQoBeBgQIAEoAhIJCgF5",
            "GBEgASgCEgkKAXoYEiABKAISCQoBbxgTIAEoAhIUCgxjb25kaXRpb25faWQY",
            "FCABKA0SEAoIY29tbWVudHMYFSABKAkiRAoUQ3JlYXR1cmVCYXR0bGVncm91",
            "bmQSDAoEZ3VpZBgBIAEoDRIOCgZldmVudDEYAiABKA0SDgoGZXZlbnQyGAMg",
            "ASgNInQKFUNyZWF0dXJlRXF1aXBUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIN",
            "CgVwYXRjaBgCIAEoDRITCgtlcXVpcGVudHJ5MRgDIAEoDRITCgtlcXVpcGVu",
            "dHJ5MhgEIAEoDRITCgtlcXVpcGVudHJ5MxgFIAEoDSLvAQoYQ3JlYXR1cmVF",
            "cXVpcFRlbXBsYXRlUmF3Eg0KBWVudHJ5GAEgASgNEg0KBXBhdGNoGAIgASgN",
            "EhMKC2VxdWlwbW9kZWwxGAMgASgNEhMKC2VxdWlwbW9kZWwyGAQgASgNEhMK",
            "C2VxdWlwbW9kZWwzGAUgASgNEhIKCmVxdWlwaW5mbzEYBiABKA0SEgoKZXF1",
            "aXBpbmZvMhgHIAEoDRISCgplcXVpcGluZm8zGAggASgNEhIKCmVxdWlwc2xv",
            "dDEYCSABKAUSEgoKZXF1aXBzbG90MhgKIAEoBRISCgplcXVpcHNsb3QzGAsg",
            "ASgFImMKDUNyZWF0dXJlR3JvdXASEgoKbGVhZGVyR1VJRBgBIAEoDRISCgpt",
            "ZW1iZXJHVUlEGAIgASgNEgwKBGRpc3QYAyABKAISDQoFYW5nbGUYBCABKAIS",
            "DQoFZmxhZ3MYBSABKA0iRAoYQ3JlYXR1cmVJbnZvbHZlZFJlbGF0aW9uEgoK",
            "AmlkGAEgASgNEg0KBXF1ZXN0GAIgASgNEg0KBXBhdGNoGAMgASgNIkIKD0Ny",
            "ZWF0dXJlTGlua2luZxIMCgRndWlkGAEgASgNEhMKC21hc3Rlcl9ndWlkGAIg",
            "ASgNEgwKBGZsYWcYAyABKA0ibwoXQ3JlYXR1cmVMaW5raW5nVGVtcGxhdGUS",
            "DQoFZW50cnkYASABKA0SCwoDbWFwGAIgASgNEhQKDG1hc3Rlcl9lbnRyeRgD",
            "IAEoDRIMCgRmbGFnGAQgASgNEhQKDHNlYXJjaF9yYW5nZRgFIAEoDSLLAQoU",
            "Q3JlYXR1cmVMb290VGVtcGxhdGUSDQoFZW50cnkYASABKA0SDAoEaXRlbRgC",
            "IAEoDRIeChZjaGFuY2Vfb3JfcXVlc3RfY2hhbmNlGAMgASgCEg8KB2dyb3Vw",
            "aWQYBCABKA0SFwoPbWluY291bnRfb3JfcmVmGAUgASgFEhAKCG1heGNvdW50",
            "GAYgASgNEhQKDGNvbmRpdGlvbl9pZBgHIAEoDRIRCglwYXRjaF9taW4YCCAB",
            "KA0SEQoJcGF0Y2hfbWF4GAkgASgNIp0BChFDcmVhdHVyZU1vZGVsSW5mbxIP",
            "Cgdtb2RlbGlkGAEgASgNEhcKD2JvdW5kaW5nX3JhZGl1cxgCIAEoAhIUCgxj",
            "b21iYXRfcmVhY2gYAyABKAISDgoGZ2VuZGVyGAQgASgNEhwKFG1vZGVsaWRf",
            "b3RoZXJfZ2VuZGVyGAUgASgNEhoKEm1vZGVsaWRfb3RoZXJfdGVhbRgGIAEo",
            "DSK2AgoQQ3JlYXR1cmVNb3ZlbWVudBIKCgJpZBgBIAEoDRINCgVwb2ludBgC",
            "IAEoDRISCgpwb3NpdGlvbl94GAMgASgCEhIKCnBvc2l0aW9uX3kYBCABKAIS",
            "EgoKcG9zaXRpb25fehgFIAEoAhIQCgh3YWl0dGltZRgGIAEoDRIRCglzY3Jp",
            "cHRfaWQYByABKA0SDwoHdGV4dGlkMRgIIAEoBRIPCgd0ZXh0aWQyGAkgASgF",
            "Eg8KB3RleHRpZDMYCiABKAUSDwoHdGV4dGlkNBgLIAEoBRIPCgd0ZXh0aWQ1",
            "GAwgASgFEg0KBWVtb3RlGA0gASgNEg0KBXNwZWxsGA4gASgNEhMKC29yaWVu",
            "dGF0aW9uGA8gASgCEg4KBm1vZGVsMRgQIAEoDRIOCgZtb2RlbDIYESABKA0i",
            "gQMKFkNyZWF0dXJlTW92ZW1lbnRTY3JpcHQSCgoCaWQYASABKA0SDQoFZGVs",
            "YXkYAiABKA0SDwoHY29tbWFuZBgDIAEoDRIQCghkYXRhbG9uZxgEIAEoDRIR",
            "CglkYXRhbG9uZzIYBSABKA0SEQoJZGF0YWxvbmczGAYgASgNEhEKCWRhdGFs",
            "b25nNBgHIAEoDRIVCg10YXJnZXRfcGFyYW0xGAggASgNEhUKDXRhcmdldF9w",
            "YXJhbTIYCSABKA0SEwoLdGFyZ2V0X3R5cGUYCiABKA0SEgoKZGF0YV9mbGFn",
            "cxgLIAEoDRIPCgdkYXRhaW50GAwgASgFEhAKCGRhdGFpbnQyGA0gASgFEhAK",
            "CGRhdGFpbnQzGA4gASgFEhAKCGRhdGFpbnQ0GA8gASgFEgkKAXgYECABKAIS",
            "CQoBeRgRIAEoAhIJCgF6GBIgASgCEgkKAW8YEyABKAISFAoMY29uZGl0aW9u",
            "X2lkGBQgASgNEhAKCGNvbW1lbnRzGBUgASgJIr0CChdDcmVhdHVyZU1vdmVt",
            "ZW50U3BlY2lhbBIKCgJpZBgBIAEoDRINCgVwb2ludBgCIAEoDRISCgpwb3Np",
            "dGlvbl94GAMgASgCEhIKCnBvc2l0aW9uX3kYBCABKAISEgoKcG9zaXRpb25f",
            "ehgFIAEoAhIQCgh3YWl0dGltZRgGIAEoDRIRCglzY3JpcHRfaWQYByABKA0S",
            "DwoHdGV4dGlkMRgIIAEoDRIPCgd0ZXh0aWQyGAkgASgNEg8KB3RleHRpZDMY",
            "CiABKA0SDwoHdGV4dGlkNBgLIAEoDRIPCgd0ZXh0aWQ1GAwgASgNEg0KBWVt",
            "b3RlGA0gASgNEg0KBXNwZWxsGA4gASgNEhMKC29yaWVudGF0aW9uGA8gASgC",
            "Eg4KBm1vZGVsMRgQIAEoDRIOCgZtb2RlbDIYESABKA0iwQIKGENyZWF0dXJl",
            "TW92ZW1lbnRUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRINCgVwb2ludBgCIAEo",
            "DRISCgpwb3NpdGlvbl94GAMgASgCEhIKCnBvc2l0aW9uX3kYBCABKAISEgoK",
            "cG9zaXRpb25fehgFIAEoAhIQCgh3YWl0dGltZRgGIAEoDRIRCglzY3JpcHRf",
            "aWQYByABKA0SDwoHdGV4dGlkMRgIIAEoDRIPCgd0ZXh0aWQyGAkgASgNEg8K",
            "B3RleHRpZDMYCiABKA0SDwoHdGV4dGlkNBgLIAEoDRIPCgd0ZXh0aWQ1GAwg",
            "ASgNEg0KBWVtb3RlGA0gASgNEg0KBXNwZWxsGA4gASgNEhMKC29yaWVudGF0",
            "aW9uGA8gASgCEg4KBm1vZGVsMRgQIAEoDRIOCgZtb2RlbDIYESABKA0ikgIK",
            "GENyZWF0dXJlT25LaWxsUmVwdXRhdGlvbhITCgtjcmVhdHVyZV9pZBgBIAEo",
            "DRIcChRSZXdPbktpbGxSZXBGYWN0aW9uMRgCIAEoBRIcChRSZXdPbktpbGxS",
            "ZXBGYWN0aW9uMhgDIAEoBRIUCgxNYXhTdGFuZGluZzEYBCABKAUSFAoMSXNU",
            "ZWFtQXdhcmQxGAUgASgIEhoKElJld09uS2lsbFJlcFZhbHVlMRgGIAEoBRIU",
            "CgxNYXhTdGFuZGluZzIYByABKAUSFAoMSXNUZWFtQXdhcmQyGAggASgIEhoK",
            "ElJld09uS2lsbFJlcFZhbHVlMhgJIAEoBRIVCg1UZWFtRGVwZW5kZW50GAog",
            "ASgIIkEKFUNyZWF0dXJlUXVlc3RSZWxhdGlvbhIKCgJpZBgBIAEoDRINCgVx",
            "dWVzdBgCIAEoDRINCgVwYXRjaBgDIAEoDSLEEAoNQ3JlYXR1cmVTcGVsbBIN",
            "CgVlbnRyeRgBIAEoDRIMCgRuYW1lGAIgASgJEhEKCXNwZWxsSWRfMRgDIAEo",
            "DRIVCg1wcm9iYWJpbGl0eV8xGAQgASgNEhQKDGNhc3RUYXJnZXRfMRgFIAEo",
            "DRIWCg50YXJnZXRQYXJhbTFfMRgGIAEoDRIWCg50YXJnZXRQYXJhbTJfMRgH",
            "IAEoDRITCgtjYXN0RmxhZ3NfMRgIIAEoDRIZChFkZWxheUluaXRpYWxNaW5f",
            "MRgJIAEoDRIZChFkZWxheUluaXRpYWxNYXhfMRgKIAEoDRIYChBkZWxheVJl",
            "cGVhdE1pbl8xGAsgASgNEhgKEGRlbGF5UmVwZWF0TWF4XzEYDCABKA0SEgoK",
            "c2NyaXB0SWRfMRgNIAEoDRIRCglzcGVsbElkXzIYDiABKA0SFQoNcHJvYmFi",
            "aWxpdHlfMhgPIAEoDRIUCgxjYXN0VGFyZ2V0XzIYECABKA0SFgoOdGFyZ2V0",
            "UGFyYW0xXzIYESABKA0SFgoOdGFyZ2V0UGFyYW0yXzIYEiABKA0SEwoLY2Fz",
            "dEZsYWdzXzIYEyABKA0SGQoRZGVsYXlJbml0aWFsTWluXzIYFCABKA0SGQoR",
            "ZGVsYXlJbml0aWFsTWF4XzIYFSABKA0SGAoQZGVsYXlSZXBlYXRNaW5fMhgW",
            "IAEoDRIYChBkZWxheVJlcGVhdE1heF8yGBcgASgNEhIKCnNjcmlwdElkXzIY",
            "GCABKA0SEQoJc3BlbGxJZF8zGBkgASgNEhUKDXByb2JhYmlsaXR5XzMYGiAB",
            "KA0SFAoMY2FzdFRhcmdldF8zGBsgASgNEhYKDnRhcmdldFBhcmFtMV8zGBwg",
            "ASgNEhYKDnRhcmdldFBhcmFtMl8zGB0gASgNEhMKC2Nhc3RGbGFnc18zGB4g",
            "ASgNEhkKEWRlbGF5SW5pdGlhbE1pbl8zGB8gASgNEhkKEWRlbGF5SW5pdGlh",
            "bE1heF8zGCAgASgNEhgKEGRlbGF5UmVwZWF0TWluXzMYISABKA0SGAoQZGVs",
            "YXlSZXBlYXRNYXhfMxgiIAEoDRISCgpzY3JpcHRJZF8zGCMgASgNEhEKCXNw",
            "ZWxsSWRfNBgkIAEoDRIVCg1wcm9iYWJpbGl0eV80GCUgASgNEhQKDGNhc3RU",
            "YXJnZXRfNBgmIAEoDRIWCg50YXJnZXRQYXJhbTFfNBgnIAEoDRIWCg50YXJn",
            "ZXRQYXJhbTJfNBgoIAEoDRITCgtjYXN0RmxhZ3NfNBgpIAEoDRIZChFkZWxh",
            "eUluaXRpYWxNaW5fNBgqIAEoDRIZChFkZWxheUluaXRpYWxNYXhfNBgrIAEo",
            "DRIYChBkZWxheVJlcGVhdE1pbl80GCwgASgNEhgKEGRlbGF5UmVwZWF0TWF4",
            "XzQYLSABKA0SEgoKc2NyaXB0SWRfNBguIAEoDRIRCglzcGVsbElkXzUYLyAB",
            "KA0SFQoNcHJvYmFiaWxpdHlfNRgwIAEoDRIUCgxjYXN0VGFyZ2V0XzUYMSAB",
            "KA0SFgoOdGFyZ2V0UGFyYW0xXzUYMiABKA0SFgoOdGFyZ2V0UGFyYW0yXzUY",
            "MyABKA0SEwoLY2FzdEZsYWdzXzUYNCABKA0SGQoRZGVsYXlJbml0aWFsTWlu",
            "XzUYNSABKA0SGQoRZGVsYXlJbml0aWFsTWF4XzUYNiABKA0SGAoQZGVsYXlS",
            "ZXBlYXRNaW5fNRg3IAEoDRIYChBkZWxheVJlcGVhdE1heF81GDggASgNEhIK",
            "CnNjcmlwdElkXzUYOSABKA0SEQoJc3BlbGxJZF82GDogASgNEhUKDXByb2Jh",
            "YmlsaXR5XzYYOyABKA0SFAoMY2FzdFRhcmdldF82GDwgASgNEhYKDnRhcmdl",
            "dFBhcmFtMV82GD0gASgNEhYKDnRhcmdldFBhcmFtMl82GD4gASgNEhMKC2Nh",
            "c3RGbGFnc182GD8gASgNEhkKEWRlbGF5SW5pdGlhbE1pbl82GEAgASgNEhkK",
            "EWRlbGF5SW5pdGlhbE1heF82GEEgASgNEhgKEGRlbGF5UmVwZWF0TWluXzYY",
            "QiABKA0SGAoQZGVsYXlSZXBlYXRNYXhfNhhDIAEoDRISCgpzY3JpcHRJZF82",
            "GEQgASgNEhEKCXNwZWxsSWRfNxhFIAEoDRIVCg1wcm9iYWJpbGl0eV83GEYg",
            "ASgNEhQKDGNhc3RUYXJnZXRfNxhHIAEoDRIWCg50YXJnZXRQYXJhbTFfNxhI",
            "IAEoDRIWCg50YXJnZXRQYXJhbTJfNxhJIAEoDRITCgtjYXN0RmxhZ3NfNxhK",
            "IAEoDRIZChFkZWxheUluaXRpYWxNaW5fNxhLIAEoDRIZChFkZWxheUluaXRp",
            "YWxNYXhfNxhMIAEoDRIYChBkZWxheVJlcGVhdE1pbl83GE0gASgNEhgKEGRl",
            "bGF5UmVwZWF0TWF4XzcYTiABKA0SEgoKc2NyaXB0SWRfNxhPIAEoDRIRCglz",
            "cGVsbElkXzgYUCABKA0SFQoNcHJvYmFiaWxpdHlfOBhRIAEoDRIUCgxjYXN0",
            "VGFyZ2V0XzgYUiABKA0SFgoOdGFyZ2V0UGFyYW0xXzgYUyABKA0SFgoOdGFy",
            "Z2V0UGFyYW0yXzgYVCABKA0SEwoLY2FzdEZsYWdzXzgYVSABKA0SGQoRZGVs",
            "YXlJbml0aWFsTWluXzgYViABKA0SGQoRZGVsYXlJbml0aWFsTWF4XzgYVyAB",
            "KA0SGAoQZGVsYXlSZXBlYXRNaW5fOBhYIAEoDRIYChBkZWxheVJlcGVhdE1h",
            "eF84GFkgASgNEhIKCnNjcmlwdElkXzgYWiABKA0i/gIKE0NyZWF0dXJlU3Bl",
            "bGxTY3JpcHQSCgoCaWQYASABKA0SDQoFZGVsYXkYAiABKA0SDwoHY29tbWFu",
            "ZBgDIAEoDRIQCghkYXRhbG9uZxgEIAEoDRIRCglkYXRhbG9uZzIYBSABKA0S",
            "EQoJZGF0YWxvbmczGAYgASgNEhEKCWRhdGFsb25nNBgHIAEoDRIVCg10YXJn",
            "ZXRfcGFyYW0xGAggASgNEhUKDXRhcmdldF9wYXJhbTIYCSABKA0SEwoLdGFy",
            "Z2V0X3R5cGUYCiABKA0SEgoKZGF0YV9mbGFncxgLIAEoDRIPCgdkYXRhaW50",
            "GAwgASgFEhAKCGRhdGFpbnQyGA0gASgFEhAKCGRhdGFpbnQzGA4gASgFEhAK",
            "CGRhdGFpbnQ0GA8gASgFEgkKAXgYECABKAISCQoBeRgRIAEoAhIJCgF6GBIg",
            "ASgCEgkKAW8YEyABKAISFAoMY29uZGl0aW9uX2lkGBQgASgNEhAKCGNvbW1l",
            "bnRzGBUgASgJIo4MChBDcmVhdHVyZVRlbXBsYXRlEg0KBWVudHJ5GAEgASgN",
            "Eg0KBXBhdGNoGAIgASgNEhUKDWtpbGxfY3JlZGl0XzEYAyABKA0SFQoNa2ls",
            "bF9jcmVkaXRfMhgEIAEoDRISCgptb2RlbF9pZF8xGAUgASgNEhIKCm1vZGVs",
            "X2lkXzIYBiABKA0SEgoKbW9kZWxfaWRfMxgHIAEoDRISCgptb2RlbF9pZF80",
            "GAggASgNEgwKBG5hbWUYCSABKAkSDwoHc3VibmFtZRgKIAEoCRIWCg5nb3Nz",
            "aXBfbWVudV9pZBgLIAEoDRIRCgltaW5fbGV2ZWwYDCABKA0SEQoJbWF4X2xl",
            "dmVsGA0gASgNEhIKCm1pbl9oZWFsdGgYDiABKA0SEgoKbWF4X2hlYWx0aBgP",
            "IAEoDRIQCghtaW5fbWFuYRgQIAEoDRIQCghtYXhfbWFuYRgRIAEoDRINCgVh",
            "cm1vchgSIAEoDRIRCglmYWN0aW9uX0EYEyABKA0SEQoJZmFjdGlvbl9IGBQg",
            "ASgNEhAKCG5wY19mbGFnGBUgASgNEhIKCnNwZWVkX3dhbGsYFiABKAISEQoJ",
            "c3BlZWRfcnVuGBcgASgCEg0KBXNjYWxlGBggASgCEgwKBHJhbmsYGSABKA0S",
            "DwoHbWluX2RtZxgaIAEoAhIPCgdtYXhfZG1nGBsgASgCEhIKCmRtZ19zY2hv",
            "b2wYHCABKA0SFAoMYXR0YWNrX3Bvd2VyGB0gASgNEhYKDmRtZ19tdWx0aXBs",
            "aWVyGB4gASgCEhgKEGJhc2VfYXR0YWNrX3RpbWUYHyABKA0SGQoRcmFuZ2Vf",
            "YXR0YWNrX3RpbWUYICABKA0SEgoKdW5pdF9jbGFzcxghIAEoDRISCgp1bml0",
            "X2ZsYWdzGCIgASgNEhUKDWR5bmFtaWNfZmxhZ3MYIyABKA0SDgoGZmFtaWx5",
            "GCQgASgNEhQKDHRyYWluZXJfdHlwZRglIAEoDRIVCg10cmFpbmVyX3NwZWxs",
            "GCYgASgNEhUKDXRyYWluZXJfY2xhc3MYJyABKA0SFAoMdHJhaW5lcl9yYWNl",
            "GCggASgNEhYKDm1pbl9yYW5nZWRfZG1nGCkgASgCEhYKDm1heF9yYW5nZWRf",
            "ZG1nGCogASgCEhsKE3JhbmdlZF9hdHRhY2tfcG93ZXIYKyABKA0SDAoEdHlw",
            "ZRgsIAEoDRISCgp0eXBlX2ZsYWdzGC0gASgNEg8KB2xvb3RfaWQYLiABKA0S",
            "FwoPcGlja3BvY2tldF9sb290GC8gASgNEhEKCXNraW5fbG9vdBgwIAEoDRIU",
            "CgxyZXNpc3RhbmNlXzEYMSABKAUSFAoMcmVzaXN0YW5jZV8yGDIgASgFEhQK",
            "DHJlc2lzdGFuY2VfMxgzIAEoBRIUCgxyZXNpc3RhbmNlXzQYNCABKAUSFAoM",
            "cmVzaXN0YW5jZV81GDUgASgFEhQKDHJlc2lzdGFuY2VfNhg2IAEoBRIPCgdz",
            "cGVsbF8xGDcgASgNEg8KB3NwZWxsXzIYOCABKA0SDwoHc3BlbGxfMxg5IAEo",
            "DRIPCgdzcGVsbF80GDogASgNEhcKD3NwZWxsc190ZW1wbGF0ZRg7IAEoDRIZ",
            "ChFwZXRfc3BlbGxfZGF0YV9pZBg8IAEoDRIQCghtaW5fZ29sZBg9IAEoDRIQ",
            "CghtYXhfZ29sZBg+IAEoDRIPCgdhaV9uYW1lGD8gASgJEhUKDW1vdmVtZW50",
            "X3R5cGUYQCABKA0SFAoMaW5oYWJpdF90eXBlGEEgASgNEhAKCGNpdmlsaWFu",
            "GEIgASgNEhUKDXJhY2lhbF9sZWFkZXIYQyABKA0SFAoMcmVnZW5faGVhbHRo",
            "GEQgASgNEhQKDGVxdWlwbWVudF9pZBhFIAEoDRISCgp0cmFpbmVyX2lkGEYg",
            "ASgNEhEKCXZlbmRvcl9pZBhHIAEoDRIcChRtZWNoYW5pY19pbW11bmVfbWFz",
            "axhIIAEoDRIaChJzY2hvb2xfaW1tdW5lX21hc2sYSSABKA0SEwoLZmxhZ3Nf",
            "ZXh0cmEYSiABKA0SEwoLc2NyaXB0X25hbWUYSyABKAkirgEKFUNyZWF0dXJl",
            "VGVtcGxhdGVBZGRvbhINCgVlbnRyeRgBIAEoDRINCgVwYXRjaBgCIAEoDRIN",
            "CgVtb3VudBgDIAEoDRIOCgZieXRlczEYBCABKA0SEwoLYjJfMF9zaGVhdGgY",
            "BSABKA0SEgoKYjJfMV9mbGFncxgGIAEoDRINCgVlbW90ZRgHIAEoDRIRCglt",
            "b3ZlZmxhZ3MYCCABKA0SDQoFYXVyYXMYCSABKAkiswIKCkN1c3RvbVRleHQS",
            "DQoFZW50cnkYASABKA0SFwoPY29udGVudF9kZWZhdWx0GAIgASgJEhQKDGNv",
            "bnRlbnRfbG9jMRgDIAEoCRIUCgxjb250ZW50X2xvYzIYBCABKAkSFAoMY29u",
            "dGVudF9sb2MzGAUgASgJEhQKDGNvbnRlbnRfbG9jNBgGIAEoCRIUCgxjb250",
            "ZW50X2xvYzUYByABKAkSFAoMY29udGVudF9sb2M2GAggASgJEhQKDGNvbnRl",
            "bnRfbG9jNxgJIAEoCRIUCgxjb250ZW50X2xvYzgYCiABKAkSDQoFc291bmQY",
            "CyABKA0SDAoEdHlwZRgMIAEoDRIQCghsYW5ndWFnZRgNIAEoDRINCgVlbW90",
            "ZRgOIAEoDRIPCgdjb21tZW50GA8gASgJIs0BChZEaXNlbmNoYW50TG9vdFRl",
            "bXBsYXRlEg0KBWVudHJ5GAEgASgNEgwKBGl0ZW0YAiABKA0SHgoWY2hhbmNl",
            "X29yX3F1ZXN0X2NoYW5jZRgDIAEoAhIPCgdncm91cGlkGAQgASgNEhcKD21p",
            "bmNvdW50X29yX3JlZhgFIAEoDRIQCghtYXhjb3VudBgGIAEoDRIUCgxjb25k",
            "aXRpb25faWQYByABKA0SEQoJcGF0Y2hfbWluGAggASgNEhEKCXBhdGNoX21h",
            "eBgJIAEoDSL2AgoLRXZlbnRTY3JpcHQSCgoCaWQYASABKA0SDQoFZGVsYXkY",
            "AiABKA0SDwoHY29tbWFuZBgDIAEoDRIQCghkYXRhbG9uZxgEIAEoDRIRCglk",
            "YXRhbG9uZzIYBSABKA0SEQoJZGF0YWxvbmczGAYgASgNEhEKCWRhdGFsb25n",
            "NBgHIAEoDRIVCg10YXJnZXRfcGFyYW0xGAggASgNEhUKDXRhcmdldF9wYXJh",
            "bTIYCSABKA0SEwoLdGFyZ2V0X3R5cGUYCiABKA0SEgoKZGF0YV9mbGFncxgL",
            "IAEoDRIPCgdkYXRhaW50GAwgASgNEhAKCGRhdGFpbnQyGA0gASgNEhAKCGRh",
            "dGFpbnQzGA4gASgNEhAKCGRhdGFpbnQ0GA8gASgNEgkKAXgYECABKAISCQoB",
            "eRgRIAEoAhIJCgF6GBIgASgCEgkKAW8YEyABKAISFAoMY29uZGl0aW9uX2lk",
            "GBQgASgNEhAKCGNvbW1lbnRzGBUgASgJIjIKEUV4cGxvcmF0aW9uQmFzZVhQ",
            "Eg0KBWxldmVsGAEgASgNEg4KBmJhc2V4cBgCIAEoDSL9BQoHRmFjdGlvbhIK",
            "CgJpZBgBIAEoDRIYChByZXB1dGF0aW9uTGlzdElEGAIgASgFEhgKEGJhc2VS",
            "ZXBSYWNlTWFzazEYAyABKA0SGAoQYmFzZVJlcFJhY2VNYXNrMhgEIAEoDRIY",
            "ChBiYXNlUmVwUmFjZU1hc2szGAUgASgNEhgKEGJhc2VSZXBSYWNlTWFzazQY",
            "BiABKA0SGQoRYmFzZVJlcENsYXNzTWFzazEYByABKA0SGQoRYmFzZVJlcENs",
            "YXNzTWFzazIYCCABKA0SGQoRYmFzZVJlcENsYXNzTWFzazMYCSABKA0SGQoR",
            "YmFzZVJlcENsYXNzTWFzazQYCiABKA0SFQoNYmFzZVJlcFZhbHVlMRgLIAEo",
            "BRIVCg1iYXNlUmVwVmFsdWUyGAwgASgFEhUKDWJhc2VSZXBWYWx1ZTMYDSAB",
            "KAUSFQoNYmFzZVJlcFZhbHVlNBgOIAEoBRIYChByZXB1dGF0aW9uRmxhZ3Mx",
            "GA8gASgNEhgKEHJlcHV0YXRpb25GbGFnczIYECABKA0SGAoQcmVwdXRhdGlv",
            "bkZsYWdzMxgRIAEoDRIYChByZXB1dGF0aW9uRmxhZ3M0GBIgASgNEgwKBHRl",
            "YW0YEyABKA0SDQoFbmFtZTEYFCABKAkSDQoFbmFtZTIYFSABKAkSDQoFbmFt",
            "ZTMYFiABKAkSDQoFbmFtZTQYFyABKAkSDQoFbmFtZTUYGCABKAkSDQoFbmFt",
            "ZTYYGSABKAkSDQoFbmFtZTcYGiABKAkSDQoFbmFtZTgYGyABKAkSFAoMZGVz",
            "Y3JpcHRpb24xGBwgASgJEhQKDGRlc2NyaXB0aW9uMhgdIAEoCRIUCgxkZXNj",
            "cmlwdGlvbjMYHiABKAkSFAoMZGVzY3JpcHRpb240GB8gASgJEhQKDGRlc2Ny",
            "aXB0aW9uNRggIAEoCRIUCgxkZXNjcmlwdGlvbjYYISABKAkSFAoMZGVzY3Jp",
            "cHRpb243GCIgASgJEhQKDGRlc2NyaXB0aW9uOBgjIAEoCSK+AgoPRmFjdGlv",
            "blRlbXBsYXRlEgoKAmlkGAEgASgNEhEKCWZhY3Rpb25JZBgCIAEoDRIUCgxm",
            "YWN0aW9uRmxhZ3MYAyABKA0SDwoHb3VyTWFzaxgEIAEoDRIUCgxmcmllbmRs",
            "eU1hc2sYBSABKA0SEwoLaG9zdGlsZU1hc2sYBiABKA0SFQoNZW5lbXlGYWN0",
            "aW9uMRgHIAEoDRIVCg1lbmVteUZhY3Rpb24yGAggASgNEhUKDWVuZW15RmFj",
            "dGlvbjMYCSABKA0SFQoNZW5lbXlGYWN0aW9uNBgKIAEoDRIWCg5mcmllbmRG",
            "YWN0aW9uMRgLIAEoDRIWCg5mcmllbmRGYWN0aW9uMhgMIAEoDRIWCg5mcmll",
            "bmRGYWN0aW9uMxgNIAEoDRIWCg5mcmllbmRGYWN0aW9uNBgOIAEoDSLCAQoT",
            "RmlzaGluZ0xvb3RUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIMCgRpdGVtGAIg",
            "ASgNEhsKE2NoYW5jZU9yUXVlc3RDaGFuY2UYAyABKAISDwoHZ3JvdXBJZBgE",
            "IAEoDRIVCg1taW5Db3VudE9yUmVmGAUgASgNEhAKCG1heENvdW50GAYgASgN",
            "EhMKC2NvbmRpdGlvbklkGAcgASgNEhAKCHBhdGNoTWluGAggASgNEhAKCHBh",
            "dGNoTWF4GAkgASgNIkQKDUZvcmJpZGRlbkl0ZW0SDQoFZW50cnkYASABKA0S",
            "DQoFcGF0Y2gYAiABKA0SFQoNYWZ0ZXJPckJlZm9yZRgDIAEoDSL6AgoKR2Ft",
            "ZU9iamVjdBIMCgRndWlkGAEgASgNEgoKAmlkGAIgASgNEgsKA21hcBgDIAEo",
            "DRISCgpwb3NpdGlvbl94GAQgASgCEhIKCnBvc2l0aW9uX3kYBSABKAISEgoK",
            "cG9zaXRpb25fehgGIAEoAhITCgtvcmllbnRhdGlvbhgHIAEoAhIRCglyb3Rh",
            "dGlvbjAYCCABKAISEQoJcm90YXRpb24xGAkgASgCEhEKCXJvdGF0aW9uMhgK",
            "IAEoAhIRCglyb3RhdGlvbjMYCyABKAISGAoQc3Bhd250aW1lc2Vjc21pbhgM",
            "IAEoBRIYChBzcGF3bnRpbWVzZWNzbWF4GA0gASgFEhQKDGFuaW1wcm9ncmVz",
            "cxgOIAEoDRINCgVzdGF0ZRgPIAEoDRISCgpzcGF3bkZsYWdzGBAgASgNEhUK",
            "DXZpc2liaWxpdHltb2QYESABKAISEQoJcGF0Y2hfbWluGBIgASgNEhEKCXBh",
            "dGNoX21heBgTIAEoDSJGChZHYW1lT2JqZWN0QmF0dGxlZ3JvdW5kEgwKBGd1",
            "aWQYASABKA0SDgoGZXZlbnQxGAIgASgNEg4KBmV2ZW50MhgDIAEoDSJGChpH",
            "YW1lT2JqZWN0SW52b2x2ZWRSZWxhdGlvbhIKCgJpZBgBIAEoDRINCgVxdWVz",
            "dBgCIAEoDRINCgVwYXRjaBgDIAEoDSLNAQoWR2FtZU9iamVjdExvb3RUZW1w",
            "bGF0ZRINCgVlbnRyeRgBIAEoDRIMCgRpdGVtGAIgASgNEh4KFmNoYW5jZV9v",
            "cl9xdWVzdF9jaGFuY2UYAyABKAISDwoHZ3JvdXBpZBgEIAEoDRIXCg9taW5j",
            "b3VudF9vcl9yZWYYBSABKAUSEAoIbWF4Y291bnQYBiABKA0SFAoMY29uZGl0",
            "aW9uX2lkGAcgASgNEhEKCXBhdGNoX21pbhgIIAEoDRIRCglwYXRjaF9tYXgY",
            "CSABKA0iQwoXR2FtZU9iamVjdFF1ZXN0UmVsYXRpb24SCgoCaWQYASABKA0S",
            "DQoFcXVlc3QYAiABKA0SDQoFcGF0Y2gYAyABKA0iRwoVR2FtZU9iamVjdFJl",
            "cXVpcmVtZW50EgwKBGd1aWQYASABKA0SDwoHcmVxVHlwZRgCIAEoDRIPCgdy",
            "ZXFHdWlkGAMgASgNIvsCChBHYW1lT2JqZWN0U2NyaXB0EgoKAmlkGAEgASgN",
            "Eg0KBWRlbGF5GAIgASgNEg8KB2NvbW1hbmQYAyABKA0SEAoIZGF0YWxvbmcY",
            "BCABKA0SEQoJZGF0YWxvbmcyGAUgASgNEhEKCWRhdGFsb25nMxgGIAEoDRIR",
            "CglkYXRhbG9uZzQYByABKA0SFQoNdGFyZ2V0X3BhcmFtMRgIIAEoDRIVCg10",
            "YXJnZXRfcGFyYW0yGAkgASgNEhMKC3RhcmdldF90eXBlGAogASgNEhIKCmRh",
            "dGFfZmxhZ3MYCyABKA0SDwoHZGF0YWludBgMIAEoBRIQCghkYXRhaW50MhgN",
            "IAEoBRIQCghkYXRhaW50MxgOIAEoBRIQCghkYXRhaW50NBgPIAEoBRIJCgF4",
            "GBAgASgCEgkKAXkYESABKAISCQoBehgSIAEoAhIJCgFvGBMgASgCEhQKDGNv",
            "bmRpdGlvbl9pZBgUIAEoDRIQCghjb21tZW50cxgVIAEoCSLTAQoSR2FtZU9i",
            "amVjdFRlbXBsYXRlEg0KBWVudHJ5GAEgASgNEg0KBXBhdGNoGAIgASgNEgwK",
            "BHR5cGUYAyABKA0SEQoJZGlzcGxheUlkGAQgASgNEgwKBG5hbWUYBSABKAkS",
            "DwoHZmFjdGlvbhgGIAEoDRINCgVmbGFncxgHIAEoDRIMCgRzaXplGAggASgC",
            "EgwKBGRhdGEYCSADKA0SDwoHbWluZ29sZBgKIAEoDRIPCgdtYXhnb2xkGAsg",
            "ASgNEhIKClNjcmlwdE5hbWUYDCABKAkijQIKCUdhbWVFdmVudBINCgVlbnRy",
            "eRgBIAEoDRIuCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIsCghlbmRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASEgoKb2NjdXJyZW5jZRgEIAEoBBIOCgZsZW5ndGgYBSAB",
            "KAQSDwoHaG9saWRheRgGIAEoDRITCgtkZXNjcmlwdGlvbhgHIAEoCRIRCglo",
            "YXJkY29kZWQYCCABKAgSEAoIZGlzYWJsZWQYCSABKAgSEQoJcGF0Y2hfbWlu",
            "GAogASgNEhEKCXBhdGNoX21heBgLIAEoDSIwChFHYW1lRXZlbnRDcmVhdHVy",
            "ZRIMCgRndWlkGAEgASgNEg0KBWV2ZW50GAIgASgFIpUBChVHYW1lRXZlbnRD",
            "cmVhdHVyZURhdGESDAoEZ3VpZBgBIAEoDRIQCghlbnRyeV9pZBgCIAEoDRIP",
            "Cgdtb2RlbGlkGAMgASgNEhQKDGVxdWlwbWVudF9pZBgEIAEoDRITCgtzcGVs",
            "bF9zdGFydBgFIAEoDRIRCglzcGVsbF9lbmQYBiABKA0SDQoFZXZlbnQYByAB",
            "KA0iMgoTR2FtZUV2ZW50R2FtZU9iamVjdBIMCgRndWlkGAEgASgNEg0KBWV2",
            "ZW50GAIgASgFImwKDUdhbWVFdmVudE1haWwSDQoFZXZlbnQYASABKAUSEAoI",
            "cmFjZU1hc2sYAiABKA0SDQoFcXVlc3QYAyABKA0SFgoObWFpbFRlbXBsYXRl",
            "SWQYBCABKA0SEwoLc2VuZGVyRW50cnkYBSABKA0iPQoOR2FtZUV2ZW50UXVl",
            "c3QSDQoFcXVlc3QYASABKA0SDQoFZXZlbnQYAiABKA0SDQoFcGF0Y2gYAyAB",
            "KA0iRAoRR2FtZUdyYXZleWFyZFpvbmUSCgoCaWQYASABKA0SEgoKZ2hvc3Rf",
            "em9uZRgCIAEoDRIPCgdmYWN0aW9uGAMgASgNIoIBCghHYW1lVGVsZRIKCgJp",
            "ZBgBIAEoDRISCgpwb3NpdGlvbl94GAIgASgCEhIKCnBvc2l0aW9uX3kYAyAB",
            "KAISEgoKcG9zaXRpb25fehgEIAEoAhITCgtvcmllbnRhdGlvbhgFIAEoAhIL",
            "CgNtYXAYBiABKA0SDAoEbmFtZRgHIAEoCSLpAgoLR2FtZVdlYXRoZXISDAoE",
            "em9uZRgBIAEoDRIaChJzcHJpbmdfcmFpbl9jaGFuY2UYAiABKA0SGgoSc3By",
            "aW5nX3Nub3dfY2hhbmNlGAMgASgNEhsKE3NwcmluZ19zdG9ybV9jaGFuY2UY",
            "BCABKA0SGgoSc3VtbWVyX3JhaW5fY2hhbmNlGAUgASgNEhoKEnN1bW1lcl9z",
            "bm93X2NoYW5jZRgGIAEoDRIbChNzdW1tZXJfc3Rvcm1fY2hhbmNlGAcgASgN",
            "EhgKEGZhbGxfcmFpbl9jaGFuY2UYCCABKA0SGAoQZmFsbF9zbm93X2NoYW5j",
            "ZRgJIAEoDRIZChFmYWxsX3N0b3JtX2NoYW5jZRgKIAEoDRIaChJ3aW50ZXJf",
            "cmFpbl9jaGFuY2UYCyABKA0SGgoSd2ludGVyX3Nub3dfY2hhbmNlGAwgASgN",
            "EhsKE3dpbnRlcl9zdG9ybV9jaGFuY2UYDSABKA0iUwoLR01TdWJTdXJ2ZXkS",
            "EAoIc3VydmV5SWQYASABKA0SEwoLc3Vic3VydmV5SWQYAiABKA0SDAoEcmFu",
            "axgDIAEoDRIPCgdjb21tZW50GAQgASgJImoKCEdNU3VydmV5EhAKCHN1cnZl",
            "eUlkGAEgASgNEgwKBGd1aWQYAiABKA0SEgoKbWFpblN1cnZleRgDIAEoDRIW",
            "Cg5vdmVyYWxsQ29tbWVudBgEIAEoCRISCgpjcmVhdGVUaW1lGAUgASgNIu8C",
            "CghHTVRpY2tldBIQCgh0aWNrZXRJZBgBIAEoDRIMCgRndWlkGAIgASgNEgwK",
            "BG5hbWUYAyABKAkSDwoHbWVzc2FnZRgEIAEoCRISCgpjcmVhdGVUaW1lGAUg",
            "ASgNEg0KBW1hcElkGAYgASgNEgwKBHBvc1gYByABKAISDAoEcG9zWRgIIAEo",
            "AhIMCgRwb3NaGAkgASgCEhgKEGxhc3RNb2RpZmllZFRpbWUYCiABKA0SEAoI",
            "Y2xvc2VkQnkYCyABKA0SEgoKYXNzaWduZWRUbxgMIAEoDRIPCgdjb21tZW50",
            "GA0gASgJEhAKCHJlc3BvbnNlGA4gASgJEhEKCWNvbXBsZXRlZBgPIAEoDRIR",
            "Cgllc2NhbGF0ZWQYECABKA0SDgoGdmlld2VkGBEgASgNEhIKCmhhdmVUaWNr",
            "ZXQYEiABKA0SEgoKdGlja2V0VHlwZRgTIAEoDRIWCg5zZWN1cml0eU5lZWRl",
            "ZBgUIAEoDSJCCgpHb3NzaXBNZW51Eg0KBWVudHJ5GAEgASgNEg8KB3RleHRf",
            "aWQYAiABKA0SFAoMY29uZGl0aW9uX2lkGAMgASgNIuACChBHb3NzaXBNZW51",
            "T3B0aW9uEg8KB21lbnVfaWQYASABKA0SCgoCaWQYAiABKA0SEwoLb3B0aW9u",
            "X2ljb24YAyABKA0SEwoLb3B0aW9uX3RleHQYBCABKAkSIAoYb3B0aW9uX2Jy",
            "b2FkY2FzdF90ZXh0X2lkGAUgASgNEhEKCW9wdGlvbl9pZBgGIAEoDRIaChJu",
            "cGNfb3B0aW9uX25wY2ZsYWcYByABKA0SFgoOYWN0aW9uX21lbnVfaWQYCCAB",
            "KAUSFQoNYWN0aW9uX3BvaV9pZBgJIAEoDRIYChBhY3Rpb25fc2NyaXB0X2lk",
            "GAogASgNEhEKCWJveF9jb2RlZBgLIAEoDRIRCglib3hfbW9uZXkYDCABKA0S",
            "EAoIYm94X3RleHQYDSABKAkSHQoVYm94X2Jyb2FkY2FzdF90ZXh0X2lkGA4g",
            "ASgNEhQKDGNvbmRpdGlvbl9pZBgPIAEoDSL3AgoMR29zc2lwU2NyaXB0EgoK",
            "AmlkGAEgASgNEg0KBWRlbGF5GAIgASgNEg8KB2NvbW1hbmQYAyABKA0SEAoI",
            "ZGF0YWxvbmcYBCABKA0SEQoJZGF0YWxvbmcyGAUgASgNEhEKCWRhdGFsb25n",
            "MxgGIAEoDRIRCglkYXRhbG9uZzQYByABKA0SFQoNdGFyZ2V0X3BhcmFtMRgI",
            "IAEoDRIVCg10YXJnZXRfcGFyYW0yGAkgASgNEhMKC3RhcmdldF90eXBlGAog",
            "ASgNEhIKCmRhdGFfZmxhZ3MYCyABKA0SDwoHZGF0YWludBgMIAEoBRIQCghk",
            "YXRhaW50MhgNIAEoBRIQCghkYXRhaW50MxgOIAEoBRIQCghkYXRhaW50NBgP",
            "IAEoBRIJCgF4GBAgASgCEgkKAXkYESABKAISCQoBehgSIAEoAhIJCgFvGBMg",
            "ASgCEhQKDGNvbmRpdGlvbl9pZBgUIAEoDRIQCghjb21tZW50cxgVIAEoCSJn",
            "ChNJbnN0YW5jZUJ1ZmZSZW1vdmFsEg4KBm1hcF9pZBgBIAEoDRIPCgdhdXJh",
            "X2lkGAIgASgNEg8KB2VuYWJsZWQYAyABKAgSDQoFZmxhZ3MYBCABKA0SDwoH",
            "Y29tbWVudBgFIAEoCSJjChVJbnN0YW5jZUNyZWF0dXJlS2lsbHMSDgoGbWFw",
            "X2lkGAEgASgNEhYKDmNyZWF0dXJlX2VudHJ5GAIgASgNEhMKC3NwZWxsX2Vu",
            "dHJ5GAMgASgNEg0KBWNvdW50GAQgASgNIjUKFUluc3RhbmNlQ3VzdG9tQ291",
            "bnRlchINCgVpbmRleBgBIAEoDRINCgVjb3VudBgCIAEoDSJFCgxJbnN0YW5j",
            "ZVdpcGUSDgoGbWFwX2lkGAEgASgNEhYKDmNyZWF0dXJlX2VudHJ5GAIgASgN",
            "Eg0KBWNvdW50GAMgASgNIjEKD0l0ZW1EaXNwbGF5SW5mbxIOCgZmaWVsZDAY",
            "ASABKAUSDgoGZmllbGQ1GAIgASgJIkYKF0l0ZW1FbmNoYW50bWVudFRlbXBs",
            "YXRlEg0KBWVudHJ5GAEgASgNEgwKBGVuY2gYAiABKA0SDgoGY2hhbmNlGAMg",
            "ASgCIsIBChBJdGVtTG9vdFRlbXBsYXRlEg0KBWVudHJ5GAEgASgNEgwKBGl0",
            "ZW0YAiABKA0SGwoTQ2hhbmNlT3JRdWVzdENoYW5jZRgDIAEoAhIPCgdncm91",
            "cGlkGAQgASgNEhUKDW1pbmNvdW50T3JSZWYYBSABKAUSEAoIbWF4Y291bnQY",
            "BiABKA0SFAoMY29uZGl0aW9uX2lkGAcgASgNEhEKCXBhdGNoX21pbhgIIAEo",
            "DRIRCglwYXRjaF9tYXgYCSABKA0iRgoSSXRlbVJlcXVpcmVkVGFyZ2V0Eg0K",
            "BWVudHJ5GAEgASgNEgwKBHR5cGUYAiABKA0SEwoLdGFyZ2V0RW50cnkYAyAB",
            "KA0i1AkKDEl0ZW1UZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRINCgVwYXRjaBgC",
            "IAEoDRINCgVjbGFzcxgDIAEoDRIQCghzdWJjbGFzcxgEIAEoDRIMCgRuYW1l",
            "GAUgASgJEhEKCWRpc3BsYXlpZBgGIAEoDRIPCgdxdWFsaXR5GAcgASgNEg0K",
            "BWZsYWdzGAggASgNEhAKCGJ1eUNvdW50GAkgASgNEhAKCGJ1eVByaWNlGAog",
            "ASgNEhEKCXNlbGxQcmljZRgLIAEoDRIVCg1pbnZlbnRvcnlUeXBlGAwgASgN",
            "EhYKDmFsbG93YWJsZUNsYXNzGA0gASgFEhUKDWFsbG93YWJsZVJhY2UYDiAB",
            "KAUSEQoJaXRlbUxldmVsGA8gASgNEhUKDXJlcXVpcmVkTGV2ZWwYECABKA0S",
            "FQoNcmVxdWlyZWRTa2lsbBgRIAEoDRIZChFyZXF1aXJlZFNraWxsUmFuaxgS",
            "IAEoDRIVCg1yZXF1aXJlZFNwZWxsGBMgASgNEhkKEXJlcXVpcmVkSG9ub3JS",
            "YW5rGBQgASgNEhgKEHJlcXVpcmVkQ2l0eVJhbmsYFSABKA0SIQoZcmVxdWly",
            "ZWRSZXB1dGF0aW9uRmFjdGlvbhgWIAEoDRIeChZyZXF1aXJlZFJlcHV0YXRp",
            "b25SYW5rGBcgASgNEhAKCG1heENvdW50GBggASgNEhEKCXN0YWNrYWJsZRgZ",
            "IAEoDRIWCg5jb250YWluZXJTbG90cxgaIAEoDRIdCgVzdGF0cxgbIAMoCzIO",
            "LmRhdGFiYXNlLlN0YXQSIQoHZGFtYWdlcxgcIAMoCzIQLmRhdGFiYXNlLkRh",
            "bWFnZRINCgVhcm1vchgdIAEoDRIpCgtyZXNpc3RhbmNlcxgeIAEoCzIULmRh",
            "dGFiYXNlLlJlc2lzdGFuY2USDQoFZGVsYXkYHyABKA0SEAoIYW1tb1R5cGUY",
            "ICABKA0SFgoOcmFuZ2VkTW9kUmFuZ2UYISABKA0SHwoGc3BlbGxzGCIgAygL",
            "Mg8uZGF0YWJhc2UuU3BlbGwSDwoHYm9uZGluZxgjIAEoDRITCgtkZXNjcmlw",
            "dGlvbhgkIAEoCRIQCghwYWdlVGV4dBglIAEoDRISCgpsYW5ndWFnZUlEGCYg",
            "ASgNEhQKDHBhZ2VNYXRlcmlhbBgnIAEoDRISCgpzdGFydFF1ZXN0GCggASgN",
            "Eg4KBmxvY2tJRBgpIAEoDRIQCghtYXRlcmlhbBgqIAEoBRIOCgZzaGVhdGgY",
            "KyABKA0SFgoOcmFuZG9tUHJvcGVydHkYLCABKA0SDQoFYmxvY2sYLSABKA0S",
            "DwoHaXRlbVNldBguIAEoDRIVCg1tYXhEdXJhYmlsaXR5GC8gASgNEgwKBGFy",
            "ZWEYMCABKA0SCwoDbWFwGDEgASgNEhEKCWJhZ0ZhbWlseRgyIAEoDRISCgpz",
            "Y3JpcHROYW1lGDMgASgJEhQKDGRpc2VuY2hhbnRJRBg0IAEoDRIQCghmb29k",
            "VHlwZRg1IAEoDRIUCgxtaW5Nb25leUxvb3QYNiABKA0SFAoMbWF4TW9uZXlM",
            "b290GDcgASgNEhAKCGR1cmF0aW9uGDggASgNEhIKCmV4dHJhRmxhZ3MYOSAB",
            "KA0SFgoOb3RoZXJUZWFtRW50cnkYOiABKA0iIwoEU3RhdBIMCgR0eXBlGAEg",
            "ASgNEg0KBXZhbHVlGAIgASgFIjAKBkRhbWFnZRILCgNtaW4YASABKAISCwoD",
            "bWF4GAIgASgCEgwKBHR5cGUYAyABKA0iZwoKUmVzaXN0YW5jZRIMCgRob2x5",
            "GAEgASgNEgwKBGZpcmUYAiABKA0SDgoGbmF0dXJlGAMgASgNEg0KBWZyb3N0",
            "GAQgASgNEg4KBnNoYWRvdxgFIAEoDRIOCgZhcmNhbmUYBiABKA0iiQEKBVNw",
            "ZWxsEg8KB3NwZWxsSUQYASABKA0SDwoHdHJpZ2dlchgCIAEoDRIPCgdjaGFy",
            "Z2VzGAMgASgFEg8KB3BwbVJhdGUYBCABKAISEAoIY29vbGRvd24YBSABKAUS",
            "EAoIY2F0ZWdvcnkYBiABKA0SGAoQY2F0ZWdvcnlDb29sZG93bhgHIAEoBSKs",
            "AQoLTG9jYWxlc0FyZWESDQoFZW50cnkYASABKA0SEAoIbmFtZUxvYzEYAiAB",
            "KAkSEAoIbmFtZUxvYzIYAyABKAkSEAoIbmFtZUxvYzMYBCABKAkSEAoIbmFt",
            "ZUxvYzQYBSABKAkSEAoIbmFtZUxvYzUYBiABKAkSEAoIbmFtZUxvYzYYByAB",
            "KAkSEAoIbmFtZUxvYzcYCCABKAkSEAoIbmFtZUxvYzgYCSABKAkiqQMKFExv",
            "Y2FsZXNCcm9hZGNhc3RUZXh0EgoKAmlkGAEgASgNEhQKDG1hbGVUZXh0TG9j",
            "MRgCIAEoCRIUCgxtYWxlVGV4dExvYzIYAyABKAkSFAoMbWFsZVRleHRMb2Mz",
            "GAQgASgJEhQKDG1hbGVUZXh0TG9jNBgFIAEoCRIUCgxtYWxlVGV4dExvYzUY",
            "BiABKAkSFAoMbWFsZVRleHRMb2M2GAcgASgJEhQKDG1hbGVUZXh0TG9jNxgI",
            "IAEoCRIUCgxtYWxlVGV4dExvYzgYCSABKAkSFgoOZmVtYWxlVGV4dExvYzEY",
            "CiABKAkSFgoOZmVtYWxlVGV4dExvYzIYCyABKAkSFgoOZmVtYWxlVGV4dExv",
            "YzMYDCABKAkSFgoOZmVtYWxlVGV4dExvYzQYDSABKAkSFgoOZmVtYWxlVGV4",
            "dExvYzUYDiABKAkSFgoOZmVtYWxlVGV4dExvYzYYDyABKAkSFgoOZmVtYWxl",
            "VGV4dExvYzcYECABKAkSFgoOZmVtYWxlVGV4dExvYzgYESABKAkSFQoNdmVy",
            "aWZpZWRCdWlsZBgSIAEoBSLoAgoPTG9jYWxlc0NyZWF0dXJlEg0KBWVudHJ5",
            "GAEgASgNEhEKCW5hbWVfbG9jMRgCIAEoCRIRCgluYW1lX2xvYzIYAyABKAkS",
            "EQoJbmFtZV9sb2MzGAQgASgJEhEKCW5hbWVfbG9jNBgFIAEoCRIRCgluYW1l",
            "X2xvYzUYBiABKAkSEQoJbmFtZV9sb2M2GAcgASgJEhEKCW5hbWVfbG9jNxgI",
            "IAEoCRIRCgluYW1lX2xvYzgYCSABKAkSFAoMc3VibmFtZV9sb2MxGAogASgJ",
            "EhQKDHN1Ym5hbWVfbG9jMhgLIAEoCRIUCgxzdWJuYW1lX2xvYzMYDCABKAkS",
            "FAoMc3VibmFtZV9sb2M0GA0gASgJEhQKDHN1Ym5hbWVfbG9jNRgOIAEoCRIU",
            "CgxzdWJuYW1lX2xvYzYYDyABKAkSFAoMc3VibmFtZV9sb2M3GBAgASgJEhQK",
            "DHN1Ym5hbWVfbG9jOBgRIAEoCSK6AQoRTG9jYWxlc0dhbWVPYmplY3QSDQoF",
            "ZW50cnkYASABKA0SEQoJbmFtZV9sb2MxGAIgASgJEhEKCW5hbWVfbG9jMhgD",
            "IAEoCRIRCgluYW1lX2xvYzMYBCABKAkSEQoJbmFtZV9sb2M0GAUgASgJEhEK",
            "CW5hbWVfbG9jNRgGIAEoCRIRCgluYW1lX2xvYzYYByABKAkSEQoJbmFtZV9s",
            "b2M3GAggASgJEhEKCW5hbWVfbG9jOBgJIAEoCSK+AwoXTG9jYWxlc0dvc3Np",
            "cE1lbnVPcHRpb24SDwoHbWVudV9pZBgBIAEoDRIKCgJpZBgCIAEoDRIYChBv",
            "cHRpb25fdGV4dF9sb2MxGAMgASgJEhgKEG9wdGlvbl90ZXh0X2xvYzIYBCAB",
            "KAkSGAoQb3B0aW9uX3RleHRfbG9jMxgFIAEoCRIYChBvcHRpb25fdGV4dF9s",
            "b2M0GAYgASgJEhgKEG9wdGlvbl90ZXh0X2xvYzUYByABKAkSGAoQb3B0aW9u",
            "X3RleHRfbG9jNhgIIAEoCRIYChBvcHRpb25fdGV4dF9sb2M3GAkgASgJEhgK",
            "EG9wdGlvbl90ZXh0X2xvYzgYCiABKAkSFQoNYm94X3RleHRfbG9jMRgLIAEo",
            "CRIVCg1ib3hfdGV4dF9sb2MyGAwgASgJEhUKDWJveF90ZXh0X2xvYzMYDSAB",
            "KAkSFQoNYm94X3RleHRfbG9jNBgOIAEoCRIVCg1ib3hfdGV4dF9sb2M1GA8g",
            "ASgJEhUKDWJveF90ZXh0X2xvYzYYECABKAkSFQoNYm94X3RleHRfbG9jNxgR",
            "IAEoCRIVCg1ib3hfdGV4dF9sb2M4GBIgASgJIoQDCgtMb2NhbGVzSXRlbRIN",
            "CgVlbnRyeRgBIAEoDRIRCgluYW1lX2xvYzEYAiABKAkSEQoJbmFtZV9sb2My",
            "GAMgASgJEhEKCW5hbWVfbG9jMxgEIAEoCRIRCgluYW1lX2xvYzQYBSABKAkS",
            "EQoJbmFtZV9sb2M1GAYgASgJEhEKCW5hbWVfbG9jNhgHIAEoCRIRCgluYW1l",
            "X2xvYzcYCCABKAkSEQoJbmFtZV9sb2M4GAkgASgJEhgKEGRlc2NyaXB0aW9u",
            "X2xvYzEYCiABKAkSGAoQZGVzY3JpcHRpb25fbG9jMhgLIAEoCRIYChBkZXNj",
            "cmlwdGlvbl9sb2MzGAwgASgJEhgKEGRlc2NyaXB0aW9uX2xvYzQYDSABKAkS",
            "GAoQZGVzY3JpcHRpb25fbG9jNRgOIAEoCRIYChBkZXNjcmlwdGlvbl9sb2M2",
            "GA8gASgJEhgKEGRlc2NyaXB0aW9uX2xvYzcYECABKAkSGAoQZGVzY3JpcHRp",
            "b25fbG9jOBgRIAEoCSK4AQoPTG9jYWxlc1BhZ2VUZXh0Eg0KBWVudHJ5GAEg",
            "ASgNEhEKCXRleHRfbG9jMRgCIAEoCRIRCgl0ZXh0X2xvYzIYAyABKAkSEQoJ",
            "dGV4dF9sb2MzGAQgASgJEhEKCXRleHRfbG9jNBgFIAEoCRIRCgl0ZXh0X2xv",
            "YzUYBiABKAkSEQoJdGV4dF9sb2M2GAcgASgJEhEKCXRleHRfbG9jNxgIIAEo",
            "CRIRCgl0ZXh0X2xvYzgYCSABKAki6AEKF0xvY2FsZXNQb2ludHNPZkludGVy",
            "ZXN0Eg0KBWVudHJ5GAEgASgNEhYKDmljb25fbmFtZV9sb2MxGAIgASgJEhYK",
            "Dmljb25fbmFtZV9sb2MyGAMgASgJEhYKDmljb25fbmFtZV9sb2MzGAQgASgJ",
            "EhYKDmljb25fbmFtZV9sb2M0GAUgASgJEhYKDmljb25fbmFtZV9sb2M1GAYg",
            "ASgJEhYKDmljb25fbmFtZV9sb2M2GAcgASgJEhYKDmljb25fbmFtZV9sb2M3",
            "GAggASgJEhYKDmljb25fbmFtZV9sb2M4GAkgASgJIu0QCgxMb2NhbGVzUXVl",
            "c3QSDQoFZW50cnkYASABKA0SEgoKVGl0bGVfbG9jMRgCIAEoCRISCgpUaXRs",
            "ZV9sb2MyGAMgASgJEhIKClRpdGxlX2xvYzMYBCABKAkSEgoKVGl0bGVfbG9j",
            "NBgFIAEoCRISCgpUaXRsZV9sb2M1GAYgASgJEhIKClRpdGxlX2xvYzYYByAB",
            "KAkSEgoKVGl0bGVfbG9jNxgIIAEoCRISCgpUaXRsZV9sb2M4GAkgASgJEhQK",
            "DERldGFpbHNfbG9jMRgKIAEoCRIUCgxEZXRhaWxzX2xvYzIYCyABKAkSFAoM",
            "RGV0YWlsc19sb2MzGAwgASgJEhQKDERldGFpbHNfbG9jNBgNIAEoCRIUCgxE",
            "ZXRhaWxzX2xvYzUYDiABKAkSFAoMRGV0YWlsc19sb2M2GA8gASgJEhQKDERl",
            "dGFpbHNfbG9jNxgQIAEoCRIUCgxEZXRhaWxzX2xvYzgYESABKAkSFwoPT2Jq",
            "ZWN0aXZlc19sb2MxGBIgASgJEhcKD09iamVjdGl2ZXNfbG9jMhgTIAEoCRIX",
            "Cg9PYmplY3RpdmVzX2xvYzMYFCABKAkSFwoPT2JqZWN0aXZlc19sb2M0GBUg",
            "ASgJEhcKD09iamVjdGl2ZXNfbG9jNRgWIAEoCRIXCg9PYmplY3RpdmVzX2xv",
            "YzYYFyABKAkSFwoPT2JqZWN0aXZlc19sb2M3GBggASgJEhcKD09iamVjdGl2",
            "ZXNfbG9jOBgZIAEoCRIcChRPZmZlclJld2FyZFRleHRfbG9jMRgaIAEoCRIc",
            "ChRPZmZlclJld2FyZFRleHRfbG9jMhgbIAEoCRIcChRPZmZlclJld2FyZFRl",
            "eHRfbG9jMxgcIAEoCRIcChRPZmZlclJld2FyZFRleHRfbG9jNBgdIAEoCRIc",
            "ChRPZmZlclJld2FyZFRleHRfbG9jNRgeIAEoCRIcChRPZmZlclJld2FyZFRl",
            "eHRfbG9jNhgfIAEoCRIcChRPZmZlclJld2FyZFRleHRfbG9jNxggIAEoCRIc",
            "ChRPZmZlclJld2FyZFRleHRfbG9jOBghIAEoCRIdChVSZXF1ZXN0SXRlbXNU",
            "ZXh0X2xvYzEYIiABKAkSHQoVUmVxdWVzdEl0ZW1zVGV4dF9sb2MyGCMgASgJ",
            "Eh0KFVJlcXVlc3RJdGVtc1RleHRfbG9jMxgkIAEoCRIdChVSZXF1ZXN0SXRl",
            "bXNUZXh0X2xvYzQYJSABKAkSHQoVUmVxdWVzdEl0ZW1zVGV4dF9sb2M1GCYg",
            "ASgJEh0KFVJlcXVlc3RJdGVtc1RleHRfbG9jNhgnIAEoCRIdChVSZXF1ZXN0",
            "SXRlbXNUZXh0X2xvYzcYKCABKAkSHQoVUmVxdWVzdEl0ZW1zVGV4dF9sb2M4",
            "GCkgASgJEhQKDEVuZFRleHRfbG9jMRgqIAEoCRIUCgxFbmRUZXh0X2xvYzIY",
            "KyABKAkSFAoMRW5kVGV4dF9sb2MzGCwgASgJEhQKDEVuZFRleHRfbG9jNBgt",
            "IAEoCRIUCgxFbmRUZXh0X2xvYzUYLiABKAkSFAoMRW5kVGV4dF9sb2M2GC8g",
            "ASgJEhQKDEVuZFRleHRfbG9jNxgwIAEoCRIUCgxFbmRUZXh0X2xvYzgYMSAB",
            "KAkSGwoTT2JqZWN0aXZlVGV4dDFfbG9jMRgyIAEoCRIbChNPYmplY3RpdmVU",
            "ZXh0MV9sb2MyGDMgASgJEhsKE09iamVjdGl2ZVRleHQxX2xvYzMYNCABKAkS",
            "GwoTT2JqZWN0aXZlVGV4dDFfbG9jNBg1IAEoCRIbChNPYmplY3RpdmVUZXh0",
            "MV9sb2M1GDYgASgJEhsKE09iamVjdGl2ZVRleHQxX2xvYzYYNyABKAkSGwoT",
            "T2JqZWN0aXZlVGV4dDFfbG9jNxg4IAEoCRIbChNPYmplY3RpdmVUZXh0MV9s",
            "b2M4GDkgASgJEhsKE09iamVjdGl2ZVRleHQyX2xvYzEYOiABKAkSGwoTT2Jq",
            "ZWN0aXZlVGV4dDJfbG9jMhg7IAEoCRIbChNPYmplY3RpdmVUZXh0Ml9sb2Mz",
            "GDwgASgJEhsKE09iamVjdGl2ZVRleHQyX2xvYzQYPSABKAkSGwoTT2JqZWN0",
            "aXZlVGV4dDJfbG9jNRg+IAEoCRIbChNPYmplY3RpdmVUZXh0Ml9sb2M2GD8g",
            "ASgJEhsKE09iamVjdGl2ZVRleHQyX2xvYzcYQCABKAkSGwoTT2JqZWN0aXZl",
            "VGV4dDJfbG9jOBhBIAEoCRIbChNPYmplY3RpdmVUZXh0M19sb2MxGEIgASgJ",
            "EhsKE09iamVjdGl2ZVRleHQzX2xvYzIYQyABKAkSGwoTT2JqZWN0aXZlVGV4",
            "dDNfbG9jMxhEIAEoCRIbChNPYmplY3RpdmVUZXh0M19sb2M0GEUgASgJEhsK",
            "E09iamVjdGl2ZVRleHQzX2xvYzUYRiABKAkSGwoTT2JqZWN0aXZlVGV4dDNf",
            "bG9jNhhHIAEoCRIbChNPYmplY3RpdmVUZXh0M19sb2M3GEggASgJEhsKE09i",
            "amVjdGl2ZVRleHQzX2xvYzgYSSABKAkSGwoTT2JqZWN0aXZlVGV4dDRfbG9j",
            "MRhKIAEoCRIbChNPYmplY3RpdmVUZXh0NF9sb2MyGEsgASgJEhsKE09iamVj",
            "dGl2ZVRleHQ0X2xvYzMYTCABKAkSGwoTT2JqZWN0aXZlVGV4dDRfbG9jNBhN",
            "IAEoCRIbChNPYmplY3RpdmVUZXh0NF9sb2M1GE4gASgJEhsKE09iamVjdGl2",
            "ZVRleHQ0X2xvYzYYTyABKAkSGwoTT2JqZWN0aXZlVGV4dDRfbG9jNxhQIAEo",
            "CRIbChNPYmplY3RpdmVUZXh0NF9sb2M4GFEgASgJIsIBChBNYWlsTG9vdFRl",
            "bXBsYXRlEg0KBWVudHJ5GAEgASgNEgwKBGl0ZW0YAiABKA0SGwoTQ2hhbmNl",
            "T3JRdWVzdENoYW5jZRgDIAEoAhIPCgdncm91cGlkGAQgASgNEhUKDW1pbmNv",
            "dW50T3JSZWYYBSABKAUSEAoIbWF4Y291bnQYBiABKA0SFAoMY29uZGl0aW9u",
            "X2lkGAcgASgNEhEKCXBhdGNoX21pbhgIIAEoDRIRCglwYXRjaF9tYXgYCSAB",
            "KA0i5gEKDE1hbmdvc1N0cmluZxINCgVlbnRyeRgBIAEoDRIXCg9jb250ZW50",
            "X2RlZmF1bHQYAiABKAkSFAoMY29udGVudF9sb2MxGAMgASgJEhQKDGNvbnRl",
            "bnRfbG9jMhgEIAEoCRIUCgxjb250ZW50X2xvYzMYBSABKAkSFAoMY29udGVu",
            "dF9sb2M0GAYgASgJEhQKDGNvbnRlbnRfbG9jNRgHIAEoCRIUCgxjb250ZW50",
            "X2xvYzYYCCABKAkSFAoMY29udGVudF9sb2M3GAkgASgJEhQKDGNvbnRlbnRf",
            "bG9jOBgKIAEoCSIxCg9NYXBMb290RGlzYWJsZWQSDQoFbWFwaWQYASABKA0S",
            "DwoHY29tbWVudBgCIAEoCSKbAgoLTWFwVGVtcGxhdGUSDQoFRW50cnkYASAB",
            "KA0SDQoFcGF0Y2gYAiABKA0SDgoGUGFyZW50GAMgASgNEg8KB01hcFR5cGUY",
            "BCABKA0SEgoKTGlua2VkWm9uZRgFIAEoDRIQCghMZXZlbE1pbhgGIAEoDRIQ",
            "CghMZXZlbE1heBgHIAEoDRISCgpNYXhQbGF5ZXJzGAggASgNEhIKClJlc2V0",
            "RGVsYXkYCSABKA0SGAoQR2hvc3RFbnRyYW5jZU1hcBgKIAEoBRIWCg5HaG9z",
            "dEVudHJhbmNlWBgLIAEoAhIWCg5HaG9zdEVudHJhbmNlWRgMIAEoAhIPCgdN",
            "YXBOYW1lGA0gASgJEhIKClNjcmlwdE5hbWUYDiABKAkiGAoKTWlncmF0aW9u",
            "cxIKCgJpZBgBIAEoCSItCglOcGNHb3NzaXASEAoIbnBjX2d1aWQYASABKA0S",
            "DgoGdGV4dGlkGAIgASgNIpUDCgdOcGNUZXh0EgoKAklEGAEgASgNEhgKEEJy",
            "b2FkY2FzdFRleHRJRDAYAiABKA0SFAoMUHJvYmFiaWxpdHkwGAMgASgCEhgK",
            "EEJyb2FkY2FzdFRleHRJRDEYBCABKA0SFAoMUHJvYmFiaWxpdHkxGAUgASgC",
            "EhgKEEJyb2FkY2FzdFRleHRJRDIYBiABKA0SFAoMUHJvYmFiaWxpdHkyGAcg",
            "ASgCEhgKEEJyb2FkY2FzdFRleHRJRDMYCCABKA0SFAoMUHJvYmFiaWxpdHkz",
            "GAkgASgCEhgKEEJyb2FkY2FzdFRleHRJRDQYCiABKA0SFAoMUHJvYmFiaWxp",
            "dHk0GAsgASgCEhgKEEJyb2FkY2FzdFRleHRJRDUYDCABKA0SFAoMUHJvYmFi",
            "aWxpdHk1GA0gASgCEhgKEEJyb2FkY2FzdFRleHRJRDYYDiABKA0SFAoMUHJv",
            "YmFiaWxpdHk2GA8gASgCEhgKEEJyb2FkY2FzdFRleHRJRDcYECABKA0SFAoM",
            "UHJvYmFiaWxpdHk3GBEgASgCIngKCk5wY1RyYWluZXISDQoFZW50cnkYASAB",
            "KA0SDQoFc3BlbGwYAiABKA0SEQoJc3BlbGxjb3N0GAMgASgNEhAKCHJlcXNr",
            "aWxsGAQgASgNEhUKDXJlcXNraWxsdmFsdWUYBSABKA0SEAoIcmVxbGV2ZWwY",
            "BiABKA0igAEKEk5wY1RyYWluZXJUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIN",
            "CgVzcGVsbBgCIAEoDRIRCglzcGVsbGNvc3QYAyABKA0SEAoIcmVxc2tpbGwY",
            "BCABKA0SFQoNcmVxc2tpbGx2YWx1ZRgFIAEoDRIQCghyZXFsZXZlbBgGIAEo",
            "DSJMCglOcGNWZW5kb3ISDQoFZW50cnkYASABKA0SDAoEaXRlbRgCIAEoDRIQ",
            "CghtYXhjb3VudBgDIAEoDRIQCghpbmNydGltZRgEIAEoDSJUChFOcGNWZW5k",
            "b3JUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIMCgRpdGVtGAIgASgNEhAKCG1h",
            "eGNvdW50GAMgASgNEhAKCGluY3J0aW1lGAQgASgNIjoKCFBhZ2VUZXh0Eg0K",
            "BWVudHJ5GAEgASgNEgwKBHRleHQYAiABKAkSEQoJbmV4dF9wYWdlGAMgASgN",
            "ImMKElBldENyZWF0ZUluZm9TcGVsbBINCgVlbnRyeRgBIAEoDRIOCgZTcGVs",
            "bDEYAiABKA0SDgoGU3BlbGwyGAMgASgNEg4KBlNwZWxsMxgEIAEoDRIOCgZT",
            "cGVsbDQYBSABKA0ioQEKDVBldExldmVsU3RhdHMSFgoOY3JlYXR1cmVfZW50",
            "cnkYASABKA0SDQoFbGV2ZWwYAiABKA0SCgoCaHAYAyABKA0SDAoEbWFuYRgE",
            "IAEoDRINCgVhcm1vchgFIAEoDRILCgNzdHIYBiABKA0SCwoDYWdpGAcgASgN",
            "EgsKA3N0YRgIIAEoDRIMCgRpbnRlGAkgASgNEgsKA3NwaRgKIAEoDSJKChFQ",
            "ZXROYW1lR2VuZXJhdGlvbhIKCgJpZBgBIAEoDRIMCgR3b3JkGAIgASgJEg0K",
            "BWVudHJ5GAMgASgNEgwKBGhhbGYYBCABKA0iywEKGVBpY2twb2NrZXRpbmdM",
            "b290VGVtcGxhdGUSDQoFZW50cnkYASABKA0SDAoEaXRlbRgCIAEoDRIbChND",
            "aGFuY2VPclF1ZXN0Q2hhbmNlGAMgASgCEg8KB2dyb3VwaWQYBCABKA0SFQoN",
            "bWluY291bnRPclJlZhgFIAEoDRIQCghtYXhjb3VudBgGIAEoDRIUCgxjb25k",
            "aXRpb25faWQYByABKA0SEQoJcGF0Y2hfbWluGAggASgNEhEKCXBhdGNoX21h",
            "eBgJIAEoDSI/CglQbGF5ZXJCb3QSEQoJY2hhcl9ndWlkGAEgASgEEg4KBmNo",
            "YW5jZRgCIAEoDRIPCgdjb21tZW50GAMgASgJIpsBChBQbGF5ZXJDcmVhdGVJ",
            "bmZvEgwKBHJhY2UYASABKA0SDQoFY2xhc3MYAiABKA0SCwoDbWFwGAMgASgN",
            "EgwKBHpvbmUYBCABKA0SEgoKcG9zaXRpb25feBgFIAEoAhISCgpwb3NpdGlv",
            "bl95GAYgASgCEhIKCnBvc2l0aW9uX3oYByABKAISEwoLb3JpZW50YXRpb24Y",
            "CCABKAIiYwoWUGxheWVyQ3JlYXRlSW5mb0FjdGlvbhIMCgRyYWNlGAEgASgN",
            "Eg0KBWNsYXNzGAIgASgNEg4KBmJ1dHRvbhgDIAEoDRIOCgZhY3Rpb24YBCAB",
            "KA0SDAoEdHlwZRgFIAEoDSJTChRQbGF5ZXJDcmVhdGVJbmZvSXRlbRIMCgRy",
            "YWNlGAEgASgNEg0KBWNsYXNzGAIgASgNEg4KBml0ZW1pZBgDIAEoDRIOCgZh",
            "bW91bnQYBCABKA0iUQoVUGxheWVyQ3JlYXRlSW5mb1NwZWxsEgwKBHJhY2UY",
            "ASABKA0SDQoFY2xhc3MYAiABKA0SDQoFU3BlbGwYAyABKA0SDAoETm90ZRgE",
            "IAEoCSJXChVQbGF5ZXJDbGFzc0xldmVsU3RhdHMSDQoFY2xhc3MYASABKA0S",
            "DQoFbGV2ZWwYAiABKA0SDgoGYmFzZWhwGAMgASgNEhAKCGJhc2VtYW5hGAQg",
            "ASgNIlIKGFBsYXllckZhY3Rpb25DaGFuZ2VJdGVtcxITCgthbGxpYW5jZV9p",
            "ZBgBIAEoBRIQCghob3JkZV9pZBgCIAEoBRIPCgdjb21tZW50GAMgASgJImEK",
            "GVBsYXllckZhY3Rpb25DaGFuZ2VNb3VudHMSDgoGUmFjZUlkGAEgASgFEhAK",
            "CE1vdW50TnVtGAIgASgFEhEKCUl0ZW1FbnRyeRgDIAEoBRIPCgdDb21tZW50",
            "GAQgASgJIlMKGVBsYXllckZhY3Rpb25DaGFuZ2VRdWVzdHMSEwoLYWxsaWFu",
            "Y2VfaWQYASABKAUSEAoIaG9yZGVfaWQYAiABKAUSDwoHY29tbWVudBgDIAEo",
            "CSJHCh5QbGF5ZXJGYWN0aW9uQ2hhbmdlUmVwdXRhdGlvbnMSEwoLYWxsaWFu",
            "Y2VfaWQYASABKAUSEAoIaG9yZGVfaWQYAiABKAUiUwoZUGxheWVyRmFjdGlv",
            "bkNoYW5nZVNwZWxscxITCgthbGxpYW5jZV9pZBgBIAEoBRIQCghob3JkZV9p",
            "ZBgCIAEoBRIPCgdjb21tZW50GAMgASgJIoABChBQbGF5ZXJMZXZlbFN0YXRz",
            "EgwKBHJhY2UYASABKA0SDQoFY2xhc3MYAiABKA0SDQoFbGV2ZWwYAyABKA0S",
            "CwoDc3RyGAQgASgNEgsKA2FnaRgFIAEoDRILCgNzdGEYBiABKA0SDAoEaW50",
            "ZRgHIAEoDRILCgNzcGkYCCABKA0iOgoQUGxheWVyWHBGb3JMZXZlbBILCgNs",
            "dmwYASABKA0SGQoReHBfZm9yX25leHRfbGV2ZWwYAiABKA0idQoQUG9pbnRz",
            "T2ZJbnRlcmVzdBINCgVlbnRyeRgBIAEoDRIJCgF4GAIgASgCEgkKAXkYAyAB",
            "KAISDAoEaWNvbhgEIAEoDRINCgVmbGFncxgFIAEoDRIMCgRkYXRhGAYgASgN",
            "EhEKCWljb25fbmFtZRgHIAEoCSKKAQoMUG9vbENyZWF0dXJlEgwKBGd1aWQY",
            "ASABKA0SEgoKcG9vbF9lbnRyeRgCIAEoDRIOCgZjaGFuY2UYAyABKAISEwoL",
            "ZGVzY3JpcHRpb24YBCABKAkSDQoFZmxhZ3MYBSABKA0SEQoJcGF0Y2hfbWlu",
            "GAYgASgNEhEKCXBhdGNoX21heBgHIAEoDSJqChRQb29sQ3JlYXR1cmVUZW1w",
            "bGF0ZRIKCgJpZBgBIAEoDRISCgpwb29sX2VudHJ5GAIgASgNEg4KBmNoYW5j",
            "ZRgDIAEoAhITCgtkZXNjcmlwdGlvbhgEIAEoCRINCgVmbGFncxgFIAEoDSKM",
            "AQoOUG9vbEdhbWVPYmplY3QSDAoEZ3VpZBgBIAEoDRISCgpwb29sX2VudHJ5",
            "GAIgASgNEg4KBmNoYW5jZRgDIAEoAhITCgtkZXNjcmlwdGlvbhgEIAEoCRIN",
            "CgVmbGFncxgFIAEoDRIRCglwYXRjaF9taW4YBiABKA0SEQoJcGF0Y2hfbWF4",
            "GAcgASgNImwKFlBvb2xHYW1lT2JqZWN0VGVtcGxhdGUSCgoCaWQYASABKA0S",
            "EgoKcG9vbF9lbnRyeRgCIAEoDRIOCgZjaGFuY2UYAyABKAISEwoLZGVzY3Jp",
            "cHRpb24YBCABKAkSDQoFZmxhZ3MYBSABKA0iZAoIUG9vbFBvb2wSDwoHcG9v",
            "bF9pZBgBIAEoDRITCgttb3RoZXJfcG9vbBgCIAEoDRIOCgZjaGFuY2UYAyAB",
            "KAISEwoLZGVzY3JpcHRpb24YBCABKAkSDQoFZmxhZ3MYBSABKA0ijAEKDFBv",
            "b2xUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIRCgltYXhfbGltaXQYAiABKA0S",
            "EwoLZGVzY3JpcHRpb24YAyABKAkSDQoFZmxhZ3MYBCABKA0SEAoIaW5zdGFu",
            "Y2UYBSABKA0SEQoJcGF0Y2hfbWluGAYgASgNEhEKCXBhdGNoX21heBgHIAEo",
            "DSL6AgoPUXVlc3RFbmRTY3JpcHRzEgoKAmlkGAEgASgNEg0KBWRlbGF5GAIg",
            "ASgNEg8KB2NvbW1hbmQYAyABKA0SEAoIZGF0YWxvbmcYBCABKA0SEQoJZGF0",
            "YWxvbmcyGAUgASgNEhEKCWRhdGFsb25nMxgGIAEoDRIRCglkYXRhbG9uZzQY",
            "ByABKA0SFQoNdGFyZ2V0X3BhcmFtMRgIIAEoDRIVCg10YXJnZXRfcGFyYW0y",
            "GAkgASgNEhMKC3RhcmdldF90eXBlGAogASgNEhIKCmRhdGFfZmxhZ3MYCyAB",
            "KA0SDwoHZGF0YWludBgMIAEoBRIQCghkYXRhaW50MhgNIAEoBRIQCghkYXRh",
            "aW50MxgOIAEoBRIQCghkYXRhaW50NBgPIAEoBRIJCgF4GBAgASgCEgkKAXkY",
            "ESABKAISCQoBehgSIAEoAhIJCgFvGBMgASgCEhQKDGNvbmRpdGlvbl9pZBgU",
            "IAEoDRIQCghjb21tZW50cxgVIAEoCSKZAgoNUXVlc3RHcmVldGluZxINCgVl",
            "bnRyeRgBIAEoDRIMCgR0eXBlGAIgASgNEhcKD2NvbnRlbnRfZGVmYXVsdBgD",
            "IAEoCRIUCgxjb250ZW50X2xvYzEYBCABKAkSFAoMY29udGVudF9sb2MyGAUg",
            "ASgJEhQKDGNvbnRlbnRfbG9jMxgGIAEoCRIUCgxjb250ZW50X2xvYzQYByAB",
            "KAkSFAoMY29udGVudF9sb2M1GAggASgJEhQKDGNvbnRlbnRfbG9jNhgJIAEo",
            "CRIUCgxjb250ZW50X2xvYzcYCiABKAkSFAoMY29udGVudF9sb2M4GAsgASgJ",
            "Eg0KBWVtb3RlGAwgASgNEhMKC2Vtb3RlX2RlbGF5GA0gASgNIvwCChFRdWVz",
            "dFN0YXJ0U2NyaXB0cxIKCgJpZBgBIAEoDRINCgVkZWxheRgCIAEoDRIPCgdj",
            "b21tYW5kGAMgASgNEhAKCGRhdGFsb25nGAQgASgNEhEKCWRhdGFsb25nMhgF",
            "IAEoDRIRCglkYXRhbG9uZzMYBiABKA0SEQoJZGF0YWxvbmc0GAcgASgNEhUK",
            "DXRhcmdldF9wYXJhbTEYCCABKA0SFQoNdGFyZ2V0X3BhcmFtMhgJIAEoDRIT",
            "Cgt0YXJnZXRfdHlwZRgKIAEoDRISCgpkYXRhX2ZsYWdzGAsgASgNEg8KB2Rh",
            "dGFpbnQYDCABKAUSEAoIZGF0YWludDIYDSABKAUSEAoIZGF0YWludDMYDiAB",
            "KAUSEAoIZGF0YWludDQYDyABKAUSCQoBeBgQIAEoAhIJCgF5GBEgASgCEgkK",
            "AXoYEiABKAISCQoBbxgTIAEoAhIUCgxjb25kaXRpb25faWQYFCABKA0SEAoI",
            "Y29tbWVudHMYFSABKAki4RkKDVF1ZXN0VGVtcGxhdGUSDQoFZW50cnkYASAB",
            "KA0SDQoFcGF0Y2gYAiABKA0SDgoGbWV0aG9kGAMgASgNEhQKDHpvbmVfb3Jf",
            "c29ydBgEIAEoBRIRCgltaW5fbGV2ZWwYBSABKA0SEQoJbWF4X2xldmVsGAYg",
            "ASgNEhMKC3F1ZXN0X2xldmVsGAcgASgNEgwKBHR5cGUYCCABKA0SGAoQcmVx",
            "dWlyZWRfY2xhc3NlcxgJIAEoDRIWCg5yZXF1aXJlZF9yYWNlcxgKIAEoDRIW",
            "Cg5yZXF1aXJlZF9za2lsbBgLIAEoDRIcChRyZXF1aXJlZF9za2lsbF92YWx1",
            "ZRgMIAEoDRIdChVyZXBfb2JqZWN0aXZlX2ZhY3Rpb24YDSABKA0SGwoTcmVw",
            "X29iamVjdGl2ZV92YWx1ZRgOIAEoBRIgChhyZXF1aXJlZF9taW5fcmVwX2Zh",
            "Y3Rpb24YDyABKA0SHgoWcmVxdWlyZWRfbWluX3JlcF92YWx1ZRgQIAEoBRIg",
            "ChhyZXF1aXJlZF9tYXhfcmVwX2ZhY3Rpb24YESABKA0SHgoWcmVxdWlyZWRf",
            "bWF4X3JlcF92YWx1ZRgSIAEoBRIZChFzdWdnZXN0ZWRfcGxheWVycxgTIAEo",
            "DRISCgpsaW1pdF90aW1lGBQgASgNEhMKC3F1ZXN0X2ZsYWdzGBUgASgNEhUK",
            "DXNwZWNpYWxfZmxhZ3MYFiABKA0SFQoNcHJldl9xdWVzdF9pZBgXIAEoBRIV",
            "Cg1uZXh0X3F1ZXN0X2lkGBggASgFEhcKD2V4Y2x1c2l2ZV9ncm91cBgZIAEo",
            "BRIbChNuZXh0X3F1ZXN0X2luX2NoYWluGBogASgNEhMKC3NyY19pdGVtX2lk",
            "GBsgASgNEhYKDnNyY19pdGVtX2NvdW50GBwgASgNEhEKCXNyY19zcGVsbBgd",
            "IAEoDRINCgV0aXRsZRgeIAEoCRIPCgdkZXRhaWxzGB8gASgJEhIKCm9iamVj",
            "dGl2ZXMYICABKAkSGQoRb2ZmZXJfcmV3YXJkX3RleHQYISABKAkSGgoScmVx",
            "dWVzdF9pdGVtc190ZXh0GCIgASgJEhAKCGVuZF90ZXh0GCMgASgJEhcKD29i",
            "amVjdGl2ZV90ZXh0MRgkIAEoCRIXCg9vYmplY3RpdmVfdGV4dDIYJSABKAkS",
            "FwoPb2JqZWN0aXZlX3RleHQzGCYgASgJEhcKD29iamVjdGl2ZV90ZXh0NBgn",
            "IAEoCRIUCgxyZXFfaXRlbV9pZDEYKCABKA0SFAoMcmVxX2l0ZW1faWQyGCkg",
            "ASgNEhQKDHJlcV9pdGVtX2lkMxgqIAEoDRIUCgxyZXFfaXRlbV9pZDQYKyAB",
            "KA0SFwoPcmVxX2l0ZW1fY291bnQxGCwgASgNEhcKD3JlcV9pdGVtX2NvdW50",
            "MhgtIAEoDRIXCg9yZXFfaXRlbV9jb3VudDMYLiABKA0SFwoPcmVxX2l0ZW1f",
            "Y291bnQ0GC8gASgNEhYKDnJlcV9zb3VyY2VfaWQxGDAgASgNEhYKDnJlcV9z",
            "b3VyY2VfaWQyGDEgASgNEhYKDnJlcV9zb3VyY2VfaWQzGDIgASgNEhYKDnJl",
            "cV9zb3VyY2VfaWQ0GDMgASgNEhkKEXJlcV9zb3VyY2VfY291bnQxGDQgASgN",
            "EhkKEXJlcV9zb3VyY2VfY291bnQyGDUgASgNEhkKEXJlcV9zb3VyY2VfY291",
            "bnQzGDYgASgNEhkKEXJlcV9zb3VyY2VfY291bnQ0GDcgASgNEh4KFnJlcV9j",
            "cmVhdHVyZV9vcl9nb19pZDEYOCABKAUSHgoWcmVxX2NyZWF0dXJlX29yX2dv",
            "X2lkMhg5IAEoBRIeChZyZXFfY3JlYXR1cmVfb3JfZ29faWQzGDogASgFEh4K",
            "FnJlcV9jcmVhdHVyZV9vcl9nb19pZDQYOyABKAUSIQoZcmVxX2NyZWF0dXJl",
            "X29yX2dvX2NvdW50MRg8IAEoDRIhChlyZXFfY3JlYXR1cmVfb3JfZ29fY291",
            "bnQyGD0gASgNEiEKGXJlcV9jcmVhdHVyZV9vcl9nb19jb3VudDMYPiABKA0S",
            "IQoZcmVxX2NyZWF0dXJlX29yX2dvX2NvdW50NBg/IAEoDRIXCg9yZXFfc3Bl",
            "bGxfY2FzdDEYQCABKA0SFwoPcmVxX3NwZWxsX2Nhc3QyGEEgASgNEhcKD3Jl",
            "cV9zcGVsbF9jYXN0MxhCIAEoDRIXCg9yZXFfc3BlbGxfY2FzdDQYQyABKA0S",
            "GwoTcmV3X2Nob2ljZV9pdGVtX2lkMRhEIAEoDRIbChNyZXdfY2hvaWNlX2l0",
            "ZW1faWQyGEUgASgNEhsKE3Jld19jaG9pY2VfaXRlbV9pZDMYRiABKA0SGwoT",
            "cmV3X2Nob2ljZV9pdGVtX2lkNBhHIAEoDRIbChNyZXdfY2hvaWNlX2l0ZW1f",
            "aWQ1GEggASgNEhsKE3Jld19jaG9pY2VfaXRlbV9pZDYYSSABKA0SHgoWcmV3",
            "X2Nob2ljZV9pdGVtX2NvdW50MRhKIAEoDRIeChZyZXdfY2hvaWNlX2l0ZW1f",
            "Y291bnQyGEsgASgNEh4KFnJld19jaG9pY2VfaXRlbV9jb3VudDMYTCABKA0S",
            "HgoWcmV3X2Nob2ljZV9pdGVtX2NvdW50NBhNIAEoDRIeChZyZXdfY2hvaWNl",
            "X2l0ZW1fY291bnQ1GE4gASgNEh4KFnJld19jaG9pY2VfaXRlbV9jb3VudDYY",
            "TyABKA0SFAoMcmV3X2l0ZW1faWQxGFAgASgNEhQKDHJld19pdGVtX2lkMhhR",
            "IAEoDRIUCgxyZXdfaXRlbV9pZDMYUiABKA0SFAoMcmV3X2l0ZW1faWQ0GFMg",
            "ASgNEhcKD3Jld19pdGVtX2NvdW50MRhUIAEoDRIXCg9yZXdfaXRlbV9jb3Vu",
            "dDIYVSABKA0SFwoPcmV3X2l0ZW1fY291bnQzGFYgASgNEhcKD3Jld19pdGVt",
            "X2NvdW50NBhXIAEoDRIYChByZXdfcmVwX2ZhY3Rpb24xGFggASgNEhgKEHJl",
            "d19yZXBfZmFjdGlvbjIYWSABKA0SGAoQcmV3X3JlcF9mYWN0aW9uMxhaIAEo",
            "DRIYChByZXdfcmVwX2ZhY3Rpb240GFsgASgNEhgKEHJld19yZXBfZmFjdGlv",
            "bjUYXCABKA0SFgoOcmV3X3JlcF92YWx1ZTEYXSABKAUSFgoOcmV3X3JlcF92",
            "YWx1ZTIYXiABKAUSFgoOcmV3X3JlcF92YWx1ZTMYXyABKAUSFgoOcmV3X3Jl",
            "cF92YWx1ZTQYYCABKAUSFgoOcmV3X3JlcF92YWx1ZTUYYSABKAUSGAoQcmV3",
            "X29yX3JlcV9tb25leRhiIAEoBRIbChNyZXdfbW9uZXlfbWF4X2xldmVsGGMg",
            "ASgNEhEKCXJld19zcGVsbBhkIAEoDRIWCg5yZXdfc3BlbGxfY2FzdBhlIAEo",
            "DRIcChRyZXdfbWFpbF90ZW1wbGF0ZV9pZBhmIAEoDRIbChNyZXdfbWFpbF9k",
            "ZWxheV9zZWNzGGcgASgNEhQKDHBvaW50X21hcF9pZBhoIAEoDRIPCgdwb2lu",
            "dF94GGkgASgCEg8KB3BvaW50X3kYaiABKAISEQoJcG9pbnRfb3B0GGsgASgN",
            "EhYKDmRldGFpbHNfZW1vdGUxGGwgASgNEhYKDmRldGFpbHNfZW1vdGUyGG0g",
            "ASgNEhYKDmRldGFpbHNfZW1vdGUzGG4gASgNEhYKDmRldGFpbHNfZW1vdGU0",
            "GG8gASgNEhwKFGRldGFpbHNfZW1vdGVfZGVsYXkxGHAgASgNEhwKFGRldGFp",
            "bHNfZW1vdGVfZGVsYXkyGHEgASgNEhwKFGRldGFpbHNfZW1vdGVfZGVsYXkz",
            "GHIgASgNEhwKFGRldGFpbHNfZW1vdGVfZGVsYXk0GHMgASgNEhgKEGluY29t",
            "cGxldGVfZW1vdGUYdCABKA0SFgoOY29tcGxldGVfZW1vdGUYdSABKA0SGwoT",
            "b2ZmZXJfcmV3YXJkX2Vtb3RlMRh2IAEoDRIbChNvZmZlcl9yZXdhcmRfZW1v",
            "dGUyGHcgASgNEhsKE29mZmVyX3Jld2FyZF9lbW90ZTMYeCABKA0SGwoTb2Zm",
            "ZXJfcmV3YXJkX2Vtb3RlNBh5IAEoDRIhChlvZmZlcl9yZXdhcmRfZW1vdGVf",
            "ZGVsYXkxGHogASgNEiEKGW9mZmVyX3Jld2FyZF9lbW90ZV9kZWxheTIYeyAB",
            "KA0SIQoZb2ZmZXJfcmV3YXJkX2Vtb3RlX2RlbGF5Mxh8IAEoDRIhChlvZmZl",
            "cl9yZXdhcmRfZW1vdGVfZGVsYXk0GH0gASgNEhQKDHN0YXJ0X3NjcmlwdBh+",
            "IAEoDRIXCg9jb21wbGV0ZV9zY3JpcHQYfyABKA0izwEKFVJlZmVyZW5jZUxv",
            "b3RUZW1wbGF0ZRINCgVlbnRyeRgBIAEoDRIMCgRpdGVtGAIgASgNEh4KFmNo",
            "YW5jZV9vcl9xdWVzdF9jaGFuY2UYAyABKAISEAoIZ3JvdXBfaWQYBCABKA0S",
            "GAoQbWluX2NvdW50X29yX3JlZhgFIAEoBRIRCgltYXhfY291bnQYBiABKA0S",
            "FAoMY29uZGl0aW9uX2lkGAcgASgNEhEKCXBhdGNoX21pbhgIIAEoDRIRCglw",
            "YXRjaF9tYXgYCSABKA0iZgoUUmVwdXRhdGlvblJld2FyZFJhdGUSDwoHZmFj",
            "dGlvbhgBIAEoDRISCgpxdWVzdF9yYXRlGAIgASgCEhUKDWNyZWF0dXJlX3Jh",
            "dGUYAyABKAISEgoKc3BlbGxfcmF0ZRgEIAEoAiL2AQobUmVwdXRhdGlvblNw",
            "aWxsb3ZlclRlbXBsYXRlEg8KB2ZhY3Rpb24YASABKA0SEAoIZmFjdGlvbjEY",
            "AiABKA0SDgoGcmF0ZV8xGAMgASgCEg4KBnJhbmtfMRgEIAEoDRIQCghmYWN0",
            "aW9uMhgFIAEoDRIOCgZyYXRlXzIYBiABKAISDgoGcmFua18yGAcgASgNEhAK",
            "CGZhY3Rpb24zGAggASgNEg4KBnJhdGVfMxgJIAEoAhIOCgZyYW5rXzMYCiAB",
            "KA0SEAoIZmFjdGlvbjQYCyABKA0SDgoGcmF0ZV80GAwgASgCEg4KBnJhbmtf",
            "NBgNIAEoDSIcCgxSZXNlcnZlZE5hbWUSDAoEbmFtZRgBIAEoCSI5ChNTY3Jp",
            "cHRlZEFyZWF0cmlnZ2VyEg0KBWVudHJ5GAEgASgNEhMKC3NjcmlwdF9uYW1l",
            "GAIgASgJIjIKD1NjcmlwdGVkRXZlbnRJZBIKCgJpZBgBIAEoDRITCgtzY3Jp",
            "cHRfbmFtZRgCIAEoCSJOChBTY3JpcHRFc2NvcnREYXRhEhMKC2NyZWF0dXJl",
            "X2lkGAEgASgNEg0KBXF1ZXN0GAIgASgNEhYKDmVzY29ydF9mYWN0aW9uGAMg",
            "ASgNIrMCCgpTY3JpcHRUZXh0Eg0KBWVudHJ5GAEgASgFEhcKD2NvbnRlbnRf",
            "ZGVmYXVsdBgCIAEoCRIUCgxjb250ZW50X2xvYzEYAyABKAkSFAoMY29udGVu",
            "dF9sb2MyGAQgASgJEhQKDGNvbnRlbnRfbG9jMxgFIAEoCRIUCgxjb250ZW50",
            "X2xvYzQYBiABKAkSFAoMY29udGVudF9sb2M1GAcgASgJEhQKDGNvbnRlbnRf",
            "bG9jNhgIIAEoCRIUCgxjb250ZW50X2xvYzcYCSABKAkSFAoMY29udGVudF9s",
            "b2M4GAogASgJEg0KBXNvdW5kGAsgASgNEgwKBHR5cGUYDCABKA0SEAoIbGFu",
            "Z3VhZ2UYDSABKA0SDQoFZW1vdGUYDiABKA0SDwoHY29tbWVudBgPIAEoCSKV",
            "AQoOU2NyaXB0V2F5cG9pbnQSDQoFZW50cnkYASABKA0SDwoHcG9pbnRpZBgC",
            "IAEoDRISCgpsb2NhdGlvbl94GAMgASgCEhIKCmxvY2F0aW9uX3kYBCABKAIS",
            "EgoKbG9jYXRpb25fehgFIAEoAhIQCgh3YWl0dGltZRgGIAEoDRIVCg1wb2lu",
            "dF9jb21tZW50GAcgASgJIk0KFlNraWxsRGlzY292ZXJ5VGVtcGxhdGUSEAoI",
            "c3BlbGxfaWQYASABKA0SEQoJcmVxX3NwZWxsGAIgASgNEg4KBmNoYW5jZRgD",
            "IAEoAiKJAQoWU2tpbGxFeHRyYUl0ZW1UZW1wbGF0ZRIQCghzcGVsbF9pZBgB",
            "IAEoDRIfChdyZXF1aXJlZF9zcGVjaWFsaXphdGlvbhgCIAEoDRIgChhhZGRp",
            "dGlvbmFsX2NyZWF0ZV9jaGFuY2UYAyABKAISGgoSYWRkaXRpb25hbF9tYXhf",
            "bnVtGAQgASgNIjUKFVNraWxsRmlzaGluZ0Jhc2VMZXZlbBINCgVlbnRyeRgB",
            "IAEoDRINCgVza2lsbBgCIAEoBSLOAQoUU2tpbm5pbmdMb290VGVtcGxhdGUS",
            "DQoFZW50cnkYASABKA0SDAoEaXRlbRgCIAEoDRIeChZjaGFuY2Vfb3JfcXVl",
            "c3RfY2hhbmNlGAMgASgCEhAKCGdyb3VwX2lkGAQgASgNEhgKEG1pbl9jb3Vu",
            "dF9vcl9yZWYYBSABKAUSEQoJbWF4X2NvdW50GAYgASgNEhQKDGNvbmRpdGlv",
            "bl9pZBgHIAEoDRIRCglwYXRjaF9taW4YCCABKA0SEQoJcGF0Y2hfbWF4GAkg",
            "ASgNIigKDFNvdW5kRW50cmllcxIKCgJpZBgBIAEoDRIMCgRuYW1lGAIgASgJ",
            "IkoKC1NwZWxsQWZmZWN0Eg0KBWVudHJ5GAEgASgNEhEKCWVmZmVjdF9pZBgC",
            "IAEoDRIZChFzcGVsbF9mYW1pbHlfbWFzaxgDIAEoBCK0AQoJU3BlbGxBcmVh",
            "Eg0KBXNwZWxsGAEgASgNEgwKBGFyZWEYAiABKA0SEwoLcXVlc3Rfc3RhcnQY",
            "AyABKA0SGgoScXVlc3Rfc3RhcnRfYWN0aXZlGAQgASgNEhEKCXF1ZXN0X2Vu",
            "ZBgFIAEoDRISCgphdXJhX3NwZWxsGAYgASgNEhAKCHJhY2VtYXNrGAcgASgN",
            "Eg4KBmdlbmRlchgIIAEoDRIQCghhdXRvY2FzdBgJIAEoDSKCAQoOU3BlbGxC",
            "b251c0RhdGESDQoFZW50cnkYASABKA0SFAoMZGlyZWN0X2JvbnVzGAIgASgC",
            "EhEKCWRvdF9ib251cxgDIAEoAhIQCghhcF9ib251cxgEIAEoAhIUCgxhcF9k",
            "b3RfYm9udXMYBSABKAISEAoIY29tbWVudHMYBiABKAkiaAoKU3BlbGxDaGFp",
            "bhIQCghzcGVsbF9pZBgBIAEoDRISCgpwcmV2X3NwZWxsGAIgASgNEhMKC2Zp",
            "cnN0X3NwZWxsGAMgASgNEgwKBHJhbmsYBCABKAUSEQoJcmVxX3NwZWxsGAUg",
            "ASgNIuUBCgpTcGVsbENoZWNrEg8KB3NwZWxsaWQYASABKA0SFwoPU3BlbGxG",
            "YW1pbHlOYW1lGAIgASgFEhcKD1NwZWxsRmFtaWx5TWFzaxgDIAEoAxIRCglT",
            "cGVsbEljb24YBCABKAUSEwoLU3BlbGxWaXN1YWwYBSABKAUSFQoNU3BlbGxD",
            "YXRlZ29yeRgGIAEoBRISCgpFZmZlY3RUeXBlGAcgASgFEhIKCkVmZmVjdEF1",
            "cmEYCCABKAUSEQoJRWZmZWN0SWR4GAkgASgFEgwKBE5hbWUYCiABKAkSDAoE",
            "Q29kZRgLIAEoCSIeCg1TcGVsbERpc2FibGVkEg0KBWVudHJ5GAEgASgNItIE",
            "Cg5TcGVsbEVmZmVjdE1vZBIKCgJpZBgBIAEoDRIUCgxlZmZlY3RfaW5kZXgY",
            "AiABKA0SDgoGZWZmZWN0GAMgASgFEhgKEGVmZmVjdF9kaWVfc2lkZXMYBCAB",
            "KAUSGAoQZWZmZWN0X2Jhc2VfZGljZRgFIAEoBRIdChVlZmZlY3RfZGljZV9w",
            "ZXJfbGV2ZWwYBiABKAISJAocZWZmZWN0X3JlYWxfcG9pbnRzX3Blcl9sZXZl",
            "bBgHIAEoAhIaChJlZmZlY3RfYmFzZV9wb2ludHMYCCABKAUSGAoQZWZmZWN0",
            "X2FtcGxpdHVkZRgJIAEoBRIlCh1lZmZlY3RfcG9pbnRzX3Blcl9jb21ib19w",
            "b2ludBgKIAEoAhIbChNlZmZlY3RfY2hhaW5fdGFyZ2V0GAsgASgFEh0KFWVm",
            "ZmVjdF9tdWx0aXBsZV92YWx1ZRgMIAEoAhIXCg9lZmZlY3RfbWVjaGFuaWMY",
            "DSABKAUSIAoYZWZmZWN0X2ltcGxpY2l0X3RhcmdldF9hGA4gASgFEiAKGGVm",
            "ZmVjdF9pbXBsaWNpdF90YXJnZXRfYhgPIAEoBRIbChNlZmZlY3RfcmFkaXVz",
            "X2luZGV4GBAgASgFEh4KFmVmZmVjdF9hcHBseV9hdXJhX25hbWUYESABKAUS",
            "GAoQZWZmZWN0X2l0ZW1fdHlwZRgSIAEoBRIZChFlZmZlY3RfbWlzY192YWx1",
            "ZRgTIAEoBRIcChRlZmZlY3RfdHJpZ2dlcl9zcGVsbBgUIAEoBRIPCgdjb21t",
            "ZW50GBUgASgJIioKC1NwZWxsRWxpeGlyEg0KBWVudHJ5GAEgASgNEgwKBG1h",
            "c2sYAiABKA0iNgoLU3BlbGxGYWNpbmcSDQoFZW50cnkYASABKA0SGAoQZmFj",
            "aW5nY2FzdGVyZmxhZxgCIAEoDSJICgpTcGVsbEdyb3VwEhAKCGdyb3VwX2lk",
            "GAEgASgNEhYKDmdyb3VwX3NwZWxsX2lkGAIgASgNEhAKCHNwZWxsX2lkGAMg",
            "ASgNIjwKFFNwZWxsR3JvdXBTdGFja1J1bGVzEhAKCGdyb3VwX2lkGAEgASgN",
            "EhIKCnN0YWNrX3J1bGUYAiABKA0iQgoPU3BlbGxMZWFyblNwZWxsEg0KBWVu",
            "dHJ5GAEgASgNEhAKCHNwZWxsX2lkGAIgASgNEg4KBmFjdGl2ZRgDIAEoDSKE",
            "BwoIU3BlbGxNb2QSCgoCaWQYASABKA0SEwoLcHJvY19jaGFuY2UYAiABKAUS",
            "EgoKcHJvY19mbGFncxgDIAEoBRIUCgxwcm9jX2NoYXJnZXMYBCABKAUSFgoO",
            "ZHVyYXRpb25faW5kZXgYBSABKAUSEAoIY2F0ZWdvcnkYBiABKAUSGgoSY2Fz",
            "dGluZ190aW1lX2luZGV4GAcgASgFEhQKDHN0YWNrX2Ftb3VudBgIIAEoBRIV",
            "Cg1zcGVsbF9pY29uX2lkGAkgASgFEhYKDmFjdGl2ZV9pY29uX2lkGAogASgF",
            "EhEKCW1hbmFfY29zdBgLIAEoBRISCgphdHRyaWJ1dGVzGAwgASgFEhUKDWF0",
            "dHJpYnV0ZXNfZXgYDSABKAUSFgoOYXR0cmlidXRlc19leDIYDiABKAUSFgoO",
            "YXR0cmlidXRlc19leDMYDyABKAUSFgoOYXR0cmlidXRlc19leDQYECABKAUS",
            "DgoGY3VzdG9tGBEgASgFEhcKD2ludGVycnVwdF9mbGFncxgSIAEoBRIcChRh",
            "dXJhX2ludGVycnVwdF9mbGFncxgTIAEoBRIfChdjaGFubmVsX2ludGVycnVw",
            "dF9mbGFncxgUIAEoBRIOCgZkaXNwZWwYFSABKAUSDwoHc3RhbmNlcxgWIAEo",
            "BRITCgtzdGFuY2VzX25vdBgXIAEoBRIUCgxzcGVsbF92aXN1YWwYGCABKAUS",
            "HAoUbWFuYV9jb3N0X3BlcmNlbnRhZ2UYGSABKAUSHwoXc3RhcnRfcmVjb3Zl",
            "cnlfY2F0ZWdvcnkYGiABKAUSGwoTc3RhcnRfcmVjb3ZlcnlfdGltZRgbIAEo",
            "BRIcChRtYXhfYWZmZWN0ZWRfdGFyZ2V0cxgcIAEoBRIYChBtYXhfdGFyZ2V0",
            "X2xldmVsGB0gASgFEhEKCWRtZ19jbGFzcxgeIAEoBRITCgtyYW5nZV9pbmRl",
            "eBgfIAEoBRIVCg1yZWNvdmVyeV90aW1lGCAgASgFEh4KFmNhdGVnb3J5X3Jl",
            "Y292ZXJ5X3RpbWUYISABKAUSGQoRc3BlbGxfZmFtaWx5X25hbWUYIiABKAUS",
            "GgoSc3BlbGxfZmFtaWx5X2ZsYWdzGCMgASgEEhAKCG1lY2hhbmljGCQgASgF",
            "EhsKE2VxdWlwcGVkX2l0ZW1fY2xhc3MYJSABKAUSDwoHY29tbWVudBgmIAEo",
            "CSI4CgxTcGVsbFBldEF1cmESDQoFc3BlbGwYASABKA0SCwoDcGV0GAIgASgN",
            "EgwKBGF1cmEYAyABKA0ihgIKDlNwZWxsUHJvY0V2ZW50Eg0KBWVudHJ5GAEg",
            "ASgNEhMKC3NjaG9vbF9tYXNrGAIgASgNEhkKEXNwZWxsX2ZhbWlseV9uYW1l",
            "GAMgASgNEhsKE3NwZWxsX2ZhbWlseV9tYXNrXzAYBCABKAQSGwoTc3BlbGxf",
            "ZmFtaWx5X21hc2tfMRgFIAEoBBIbChNzcGVsbF9mYW1pbHlfbWFza18yGAYg",
            "ASgEEhIKCnByb2NfZmxhZ3MYByABKA0SDwoHcHJvY19leBgIIAEoDRIQCghw",
            "cG1fcmF0ZRgJIAEoAhIVCg1jdXN0b21fY2hhbmNlGAogASgCEhAKCGNvb2xk",
            "b3duGAsgASgNIjcKFFNwZWxsUHJvY0l0ZW1FbmNoYW50Eg0KBWVudHJ5GAEg",
            "ASgNEhAKCHBwbV9yYXRlGAIgASgCIvYCCgtTcGVsbFNjcmlwdBIKCgJpZBgB",
            "IAEoDRINCgVkZWxheRgCIAEoDRIPCgdjb21tYW5kGAMgASgNEhAKCGRhdGFs",
            "b25nGAQgASgNEhEKCWRhdGFsb25nMhgFIAEoDRIRCglkYXRhbG9uZzMYBiAB",
            "KA0SEQoJZGF0YWxvbmc0GAcgASgNEhUKDXRhcmdldF9wYXJhbTEYCCABKA0S",
            "FQoNdGFyZ2V0X3BhcmFtMhgJIAEoDRITCgt0YXJnZXRfdHlwZRgKIAEoDRIS",
            "CgpkYXRhX2ZsYWdzGAsgASgNEg8KB2RhdGFpbnQYDCABKAUSEAoIZGF0YWlu",
            "dDIYDSABKAUSEAoIZGF0YWludDMYDiABKAUSEAoIZGF0YWludDQYDyABKAUS",
            "CQoBeBgQIAEoAhIJCgF5GBEgASgCEgkKAXoYEiABKAISCQoBbxgTIAEoAhIU",
            "Cgxjb25kaXRpb25faWQYFCABKA0SEAoIY29tbWVudHMYFSABKAkiRQoRU3Bl",
            "bGxTY3JpcHRUYXJnZXQSDQoFZW50cnkYASABKA0SDAoEdHlwZRgCIAEoDRIT",
            "Cgt0YXJnZXRFbnRyeRgDIAEoDSKiAQoTU3BlbGxUYXJnZXRQb3NpdGlvbhIK",
            "CgJpZBgBIAEoDRISCgp0YXJnZXRfbWFwGAIgASgNEhkKEXRhcmdldF9wb3Np",
            "dGlvbl94GAMgASgCEhkKEXRhcmdldF9wb3NpdGlvbl95GAQgASgCEhkKEXRh",
            "cmdldF9wb3NpdGlvbl96GAUgASgCEhoKEnRhcmdldF9vcmllbnRhdGlvbhgG",
            "IAEoAiLOIgoNU3BlbGxUZW1wbGF0ZRIKCgJpZBgBIAEoDRIOCgZzY2hvb2wY",
            "AiABKA0SEAoIY2F0ZWdvcnkYAyABKA0SDwoHY2FzdF91aRgEIAEoDRIOCgZk",
            "aXNwZWwYBSABKA0SEAoIbWVjaGFuaWMYBiABKA0SEgoKYXR0cmlidXRlcxgH",
            "IAEoBBIVCg1hdHRyaWJ1dGVzX2V4GAggASgNEhYKDmF0dHJpYnV0ZXNfZXgy",
            "GAkgASgNEhYKDmF0dHJpYnV0ZXNfZXgzGAogASgNEhYKDmF0dHJpYnV0ZXNf",
            "ZXg0GAsgASgNEg8KB3N0YW5jZXMYDCABKA0SEwoLc3RhbmNlc19ub3QYDSAB",
            "KA0SDwoHdGFyZ2V0cxgOIAEoDRIcChR0YXJnZXRfY3JlYXR1cmVfdHlwZRgP",
            "IAEoDRIcChRyZXF1aXJlc19zcGVsbF9mb2N1cxgQIAEoDRIZChFjYXN0ZXJf",
            "YXVyYV9zdGF0ZRgRIAEoDRIZChF0YXJnZXRfYXVyYV9zdGF0ZRgSIAEoDRIa",
            "ChJjYXN0aW5nX3RpbWVfaW5kZXgYEyABKA0SFQoNcmVjb3ZlcnlfdGltZRgU",
            "IAEoDRIeChZjYXRlZ29yeV9yZWNvdmVyeV90aW1lGBUgASgNEhcKD2ludGVy",
            "cnVwdF9mbGFncxgWIAEoDRIcChRhdXJhX2ludGVycnVwdF9mbGFncxgXIAEo",
            "DRIfChdjaGFubmVsX2ludGVycnVwdF9mbGFncxgYIAEoDRISCgpwcm9jX2Zs",
            "YWdzGBkgASgNEhMKC3Byb2NfY2hhbmNlGBogASgNEhQKDHByb2NfY2hhcmdl",
            "cxgbIAEoDRIRCgltYXhfbGV2ZWwYHCABKA0SEgoKYmFzZV9sZXZlbBgdIAEo",
            "DRITCgtzcGVsbF9sZXZlbBgeIAEoDRIWCg5kdXJhdGlvbl9pbmRleBgfIAEo",
            "DRISCgpwb3dlcl90eXBlGCAgASgNEhEKCW1hbmFfY29zdBghIAEoDRIbChNt",
            "YW5hX2Nvc3RfcGVyX2xldmVsGCIgASgNEhcKD21hbmFfcGVyX3NlY29uZBgj",
            "IAEoDRIhChltYW5hX3Blcl9zZWNvbmRfcGVyX2xldmVsGCQgASgNEhMKC3Jh",
            "bmdlX2luZGV4GCUgASgNEg0KBXNwZWVkGCYgASgCEhgKEG1vZGVsX25leHRf",
            "c3BlbGwYJyABKA0SFAoMc3RhY2tfYW1vdW50GCggASgNEg4KBnRvdGVtMRgp",
            "IAEoDRIOCgZ0b3RlbTIYKiABKA0SEAoIcmVhZ2VudDEYKyABKA0SEAoIcmVh",
            "Z2VudDIYLCABKA0SEAoIcmVhZ2VudDMYLSABKA0SEAoIcmVhZ2VudDQYLiAB",
            "KA0SEAoIcmVhZ2VudDUYLyABKA0SEAoIcmVhZ2VudDYYMCABKA0SEAoIcmVh",
            "Z2VudDcYMSABKA0SEAoIcmVhZ2VudDgYMiABKA0SFgoOcmVhZ2VudF9jb3Vu",
            "dDEYMyABKA0SFgoOcmVhZ2VudF9jb3VudDIYNCABKA0SFgoOcmVhZ2VudF9j",
            "b3VudDMYNSABKA0SFgoOcmVhZ2VudF9jb3VudDQYNiABKA0SFgoOcmVhZ2Vu",
            "dF9jb3VudDUYNyABKA0SFgoOcmVhZ2VudF9jb3VudDYYOCABKA0SFgoOcmVh",
            "Z2VudF9jb3VudDcYOSABKA0SFgoOcmVhZ2VudF9jb3VudDgYOiABKA0SGwoT",
            "ZXF1aXBwZWRfaXRlbV9jbGFzcxg7IAEoBRIkChxlcXVpcHBlZF9pdGVtX3N1",
            "Yl9jbGFzc19tYXNrGDwgASgFEikKIWVxdWlwcGVkX2l0ZW1faW52ZW50b3J5",
            "X3R5cGVfbWFzaxg9IAEoBRIPCgdlZmZlY3QxGD4gASgNEg8KB2VmZmVjdDIY",
            "PyABKA0SDwoHZWZmZWN0MxhAIAEoDRIZChFlZmZlY3RfZGllX3NpZGVzMRhB",
            "IAEoBRIZChFlZmZlY3RfZGllX3NpZGVzMhhCIAEoBRIZChFlZmZlY3RfZGll",
            "X3NpZGVzMxhDIAEoBRIZChFlZmZlY3RfYmFzZV9kaWNlMRhEIAEoBRIZChFl",
            "ZmZlY3RfYmFzZV9kaWNlMhhFIAEoBRIZChFlZmZlY3RfYmFzZV9kaWNlMxhG",
            "IAEoBRIeChZlZmZlY3RfZGljZV9wZXJfbGV2ZWwxGEcgASgCEh4KFmVmZmVj",
            "dF9kaWNlX3Blcl9sZXZlbDIYSCABKAISHgoWZWZmZWN0X2RpY2VfcGVyX2xl",
            "dmVsMxhJIAEoAhIlCh1lZmZlY3RfcmVhbF9wb2ludHNfcGVyX2xldmVsMRhK",
            "IAEoAhIlCh1lZmZlY3RfcmVhbF9wb2ludHNfcGVyX2xldmVsMhhLIAEoAhIl",
            "Ch1lZmZlY3RfcmVhbF9wb2ludHNfcGVyX2xldmVsMxhMIAEoAhIbChNlZmZl",
            "Y3RfYmFzZV9wb2ludHMxGE0gASgFEhsKE2VmZmVjdF9iYXNlX3BvaW50czIY",
            "TiABKAUSGwoTZWZmZWN0X2Jhc2VfcG9pbnRzMxhPIAEoBRIYChBlZmZlY3Rf",
            "bWVjaGFuaWMxGFAgASgNEhgKEGVmZmVjdF9tZWNoYW5pYzIYUSABKA0SGAoQ",
            "ZWZmZWN0X21lY2hhbmljMxhSIAEoDRIhChllZmZlY3RfaW1wbGljaXRfdGFy",
            "Z2V0X2ExGFMgASgNEiEKGWVmZmVjdF9pbXBsaWNpdF90YXJnZXRfYTIYVCAB",
            "KA0SIQoZZWZmZWN0X2ltcGxpY2l0X3RhcmdldF9hMxhVIAEoDRIhChllZmZl",
            "Y3RfaW1wbGljaXRfdGFyZ2V0X2IxGFYgASgNEiEKGWVmZmVjdF9pbXBsaWNp",
            "dF90YXJnZXRfYjIYVyABKA0SIQoZZWZmZWN0X2ltcGxpY2l0X3RhcmdldF9i",
            "MxhYIAEoDRIcChRlZmZlY3RfcmFkaXVzX2luZGV4MRhZIAEoDRIcChRlZmZl",
            "Y3RfcmFkaXVzX2luZGV4MhhaIAEoDRIcChRlZmZlY3RfcmFkaXVzX2luZGV4",
            "MxhbIAEoDRIfChdlZmZlY3RfYXBwbHlfYXVyYV9uYW1lMRhcIAEoDRIfChdl",
            "ZmZlY3RfYXBwbHlfYXVyYV9uYW1lMhhdIAEoDRIfChdlZmZlY3RfYXBwbHlf",
            "YXVyYV9uYW1lMxheIAEoDRIZChFlZmZlY3RfYW1wbGl0dWRlMRhfIAEoDRIZ",
            "ChFlZmZlY3RfYW1wbGl0dWRlMhhgIAEoDRIZChFlZmZlY3RfYW1wbGl0dWRl",
            "MxhhIAEoDRIeChZlZmZlY3RfbXVsdGlwbGVfdmFsdWUxGGIgASgCEh4KFmVm",
            "ZmVjdF9tdWx0aXBsZV92YWx1ZTIYYyABKAISHgoWZWZmZWN0X211bHRpcGxl",
            "X3ZhbHVlMxhkIAEoAhIcChRlZmZlY3RfY2hhaW5fdGFyZ2V0MRhlIAEoDRIc",
            "ChRlZmZlY3RfY2hhaW5fdGFyZ2V0MhhmIAEoDRIcChRlZmZlY3RfY2hhaW5f",
            "dGFyZ2V0MxhnIAEoDRIZChFlZmZlY3RfaXRlbV90eXBlMRhoIAEoDRIZChFl",
            "ZmZlY3RfaXRlbV90eXBlMhhpIAEoDRIZChFlZmZlY3RfaXRlbV90eXBlMxhq",
            "IAEoDRIaChJlZmZlY3RfbWlzY192YWx1ZTEYayABKAUSGgoSZWZmZWN0X21p",
            "c2NfdmFsdWUyGGwgASgFEhoKEmVmZmVjdF9taXNjX3ZhbHVlMxhtIAEoBRId",
            "ChVlZmZlY3RfdHJpZ2dlcl9zcGVsbDEYbiABKA0SHQoVZWZmZWN0X3RyaWdn",
            "ZXJfc3BlbGwyGG8gASgNEh0KFWVmZmVjdF90cmlnZ2VyX3NwZWxsMxhwIAEo",
            "DRImCh5lZmZlY3RfcG9pbnRzX3Blcl9jb21ib19wb2ludDEYcSABKAISJgoe",
            "ZWZmZWN0X3BvaW50c19wZXJfY29tYm9fcG9pbnQyGHIgASgCEiYKHmVmZmVj",
            "dF9wb2ludHNfcGVyX2NvbWJvX3BvaW50MxhzIAEoAhIVCg1zcGVsbF92aXN1",
            "YWwxGHQgASgNEhUKDXNwZWxsX3Zpc3VhbDIYdSABKA0SFQoNc3BlbGxfaWNv",
            "bl9pZBh2IAEoDRIWCg5hY3RpdmVfaWNvbl9pZBh3IAEoDRIWCg5zcGVsbF9w",
            "cmlvcml0eRh4IAEoDRINCgVuYW1lMRh5IAEoCRINCgVuYW1lMhh6IAEoCRIN",
            "CgVuYW1lMxh7IAEoCRINCgVuYW1lNBh8IAEoCRINCgVuYW1lNRh9IAEoCRIN",
            "CgVuYW1lNhh+IAEoCRINCgVuYW1lNxh/IAEoCRIOCgVuYW1lOBiAASABKAkS",
            "EwoKbmFtZV9mbGFncxiBASABKA0SFgoNbmFtZV9zdWJ0ZXh0MRiCASABKAkS",
            "FgoNbmFtZV9zdWJ0ZXh0MhiDASABKAkSFgoNbmFtZV9zdWJ0ZXh0MxiEASAB",
            "KAkSFgoNbmFtZV9zdWJ0ZXh0NBiFASABKAkSFgoNbmFtZV9zdWJ0ZXh0NRiG",
            "ASABKAkSFgoNbmFtZV9zdWJ0ZXh0NhiHASABKAkSFgoNbmFtZV9zdWJ0ZXh0",
            "NxiIASABKAkSFgoNbmFtZV9zdWJ0ZXh0OBiJASABKAkSGwoSbmFtZV9zdWJ0",
            "ZXh0X2ZsYWdzGIoBIAEoDRIVCgxkZXNjcmlwdGlvbjEYiwEgASgJEhUKDGRl",
            "c2NyaXB0aW9uMhiMASABKAkSFQoMZGVzY3JpcHRpb24zGI0BIAEoCRIVCgxk",
            "ZXNjcmlwdGlvbjQYjgEgASgJEhUKDGRlc2NyaXB0aW9uNRiPASABKAkSFQoM",
            "ZGVzY3JpcHRpb242GJABIAEoCRIVCgxkZXNjcmlwdGlvbjcYkQEgASgJEhUK",
            "DGRlc2NyaXB0aW9uOBiSASABKAkSGgoRZGVzY3JpcHRpb25fZmxhZ3MYkwEg",
            "ASgNEhoKEWF1cmFfZGVzY3JpcHRpb24xGJQBIAEoCRIaChFhdXJhX2Rlc2Ny",
            "aXB0aW9uMhiVASABKAkSGgoRYXVyYV9kZXNjcmlwdGlvbjMYlgEgASgJEhoK",
            "EWF1cmFfZGVzY3JpcHRpb240GJcBIAEoCRIaChFhdXJhX2Rlc2NyaXB0aW9u",
            "NRiYASABKAkSGgoRYXVyYV9kZXNjcmlwdGlvbjYYmQEgASgJEhoKEWF1cmFf",
            "ZGVzY3JpcHRpb243GJoBIAEoCRIaChFhdXJhX2Rlc2NyaXB0aW9uOBibASAB",
            "KAkSHwoWYXVyYV9kZXNjcmlwdGlvbl9mbGFncxicASABKA0SHQoUbWFuYV9j",
            "b3N0X3BlcmNlbnRhZ2UYnQEgASgNEiAKF3N0YXJ0X3JlY292ZXJ5X2NhdGVn",
            "b3J5GJ4BIAEoDRIcChNzdGFydF9yZWNvdmVyeV90aW1lGJ8BIAEoDRIZChBt",
            "YXhfdGFyZ2V0X2xldmVsGKABIAEoDRIaChFzcGVsbF9mYW1pbHlfbmFtZRih",
            "ASABKA0SGwoSc3BlbGxfZmFtaWx5X2ZsYWdzGKIBIAEoBBIdChRtYXhfYWZm",
            "ZWN0ZWRfdGFyZ2V0cxijASABKA0SEgoJZG1nX2NsYXNzGKQBIAEoDRIYCg9w",
            "cmV2ZW50aW9uX3R5cGUYpQEgASgNEhkKEHN0YW5jZV9iYXJfb3JkZXIYpgEg",
            "ASgFEhgKD2RtZ19tdWx0aXBsaWVyMRinASABKAISGAoPZG1nX211bHRpcGxp",
            "ZXIyGKgBIAEoAhIYCg9kbWdfbXVsdGlwbGllcjMYqQEgASgCEhcKDm1pbl9m",
            "YWN0aW9uX2lkGKoBIAEoDRIXCg5taW5fcmVwdXRhdGlvbhirASABKA0SHQoU",
            "cmVxdWlyZWRfYXVyYV92aXNpb24YrAEgASgNIlIKC1NwZWxsVGhyZWF0Eg0K",
            "BWVudHJ5GAEgASgNEg4KBnRocmVhdBgCIAEoBRISCgptdWx0aXBsaWVyGAMg",
            "ASgCEhAKCGFwX2JvbnVzGAQgASgCImsKElRheGlQYXRoVHJhbnNpdGlvbhIP",
            "Cgdpbl9wYXRoGAEgASgNEhAKCG91dF9wYXRoGAIgASgNEg8KB2luX25vZGUY",
            "AyABKA0SEAoIb3V0X25vZGUYBCABKA0SDwoHY29tbWVudBgFIAEoCSJGCglU",
            "cmFuc3BvcnQSDAoEZ3VpZBgBIAEoDRINCgVlbnRyeRgCIAEoDRIMCgRuYW1l",
            "GAMgASgJEg4KBnBlcmlvZBgEIAEoDSIpCglWYXJpYWJsZXMSDQoFaW5kZXgY",
            "ASABKA0SDQoFdmFsdWUYAiABKA0qjR8KCVRhYmxlTmFtZRIRCg1VTktOT1dO",
            "X1RBQkxFEAASHAoYQVJFQV9UUklHR0VSX0JHX0VOVFJBTkNFEAESIgoeQVJF",
            "QV9UUklHR0VSX0lOVk9MVkVEX1JFTEFUSU9OEAISFwoTQVJFQV9UUklHR0VS",
            "X1RBVkVSThADEhkKFUFSRUFfVFJJR0dFUl9URUxFUE9SVBAEEhEKDUFSRUFf",
            "VEVNUExBVEUQBRIVChFBVUNUSU9OX0hPVVNFX0JPVBAGEhIKDkFVVE9fQlJP",
            "QURDQVNUEAcSFgoSQkFUVExFR1JPVU5EX0VWRU5UEAgSGQoVQkFUVExFR1JP",
            "VU5EX1RFTVBMQVRFEAkSFgoSQkFUVExFTUFTVEVSX0VOVFJZEAoSEgoOQlJP",
            "QURDQVNUX1RFWFQQCxIWChJDSU5FTUFUSUNfV0FZUE9JTlQQDBILCgdDT01N",
            "QU5EEA0SDQoJQ09ORElUSU9OEA4SDAoIQ1JFQVRVUkUQDxISCg5DUkVBVFVS",
            "RV9BRERPThAQEhUKEUNSRUFUVVJFX0FJX0VWRU5UEBESFgoSQ1JFQVRVUkVf",
            "QUlfU0NSSVBUEBISGQoVQ1JFQVRVUkVfQkFUVExFR1JPVU5EEBMSGwoXQ1JF",
            "QVRVUkVfRVFVSVBfVEVNUExBVEUQFBIfChtDUkVBVFVSRV9FUVVJUF9URU1Q",
            "TEFURV9SQVcQFRISCg5DUkVBVFVSRV9HUk9VUBAWEh4KGkNSRUFUVVJFX0lO",
            "Vk9MVkVEX1JFTEFUSU9OEBcSFAoQQ1JFQVRVUkVfTElOS0lORxAYEh0KGUNS",
            "RUFUVVJFX0xJTktJTkdfVEVNUExBVEUQGRIaChZDUkVBVFVSRV9MT09UX1RF",
            "TVBMQVRFEBoSFwoTQ1JFQVRVUkVfTU9ERUxfSU5GTxAbEhUKEUNSRUFUVVJF",
            "X01PVkVNRU5UEBwSHAoYQ1JFQVRVUkVfTU9WRU1FTlRfU0NSSVBUEB0SHQoZ",
            "Q1JFQVRVUkVfTU9WRU1FTlRfU1BFQ0lBTBAeEh4KGkNSRUFUVVJFX01PVkVN",
            "RU5UX1RFTVBMQVRFEB8SHwobQ1JFQVRVUkVfT05fS0lMTF9SRVBVVEFUSU9O",
            "ECASGwoXQ1JFQVRVUkVfUVVFU1RfUkVMQVRJT04QIRISCg5DUkVBVFVSRV9T",
            "UEVMTBAiEhkKFUNSRUFUVVJFX1NQRUxMX1NDUklQVBAjEhUKEUNSRUFUVVJF",
            "X1RFTVBMQVRFECQSGwoXQ1JFQVRVUkVfVEVNUExBVEVfQURET04QJRIPCgtD",
            "VVNUT01fVEVYVBAmEhwKGERJU0VOQ0hBTlRfTE9PVF9URU1QTEFURRAnEhAK",
            "DEVWRU5UX1NDUklQVBAoEhcKE0VYUExPUkFUSU9OX0JBU0VfWFAQKRILCgdG",
            "QUNUSU9OECoSFAoQRkFDVElPTl9URU1QTEFURRArEhkKFUZJU0hJTkdfTE9P",
            "VF9URU1QTEFURRAsEhIKDkZPUkJJRERFTl9JVEVNEC0SDwoLR0FNRV9PQkpF",
            "Q1QQLhIcChhHQU1FX09CSkVDVF9CQVRUTEVHUk9VTkQQLxIhCh1HQU1FX09C",
            "SkVDVF9JTlZPTFZFRF9SRUxBVElPThAwEh0KGUdBTUVfT0JKRUNUX0xPT1Rf",
            "VEVNUExBVEUQMRIeChpHQU1FX09CSkVDVF9RVUVTVF9SRUxBVElPThAyEhsK",
            "F0dBTUVfT0JKRUNUX1JFUVVJUkVNRU5UEDMSFgoSR0FNRV9PQkpFQ1RfU0NS",
            "SVBUEDQSGAoUR0FNRV9PQkpFQ1RfVEVNUExBVEUQNRIOCgpHQU1FX0VWRU5U",
            "EDYSFwoTR0FNRV9FVkVOVF9DUkVBVFVSRRA3EhoKFkdBTUVfRVZFTlRfR0FN",
            "RV9PQkpFQ1QQOBITCg9HQU1FX0VWRU5UX01BSUwQORIUChBHQU1FX0VWRU5U",
            "X1FVRVNUEDoSFwoTR0FNRV9HUkFWRVlBUkRfWk9ORRA7Eg0KCUdBTUVfVEVM",
            "RRA8EhAKDEdBTUVfV0VBVEhFUhA9EhEKDUdNX1NVQl9TVVJWRVkQPhINCglH",
            "TV9TVVJWRVkQPxINCglHTV9USUNLRVQQQBIPCgtHT1NTSVBfTUVOVRBBEhYK",
            "EkdPU1NJUF9NRU5VX09QVElPThBCEhEKDUdPU1NJUF9TQ1JJUFQQQxIZChVJ",
            "TlNUQU5DRV9CVUZGX1JFTU9WQUwQRBIbChdJTlNUQU5DRV9DUkVBVFVSRV9L",
            "SUxMUxBFEhsKF0lOU1RBTkNFX0NVU1RPTV9DT1VOVEVSEEYSEQoNSU5TVEFO",
            "Q0VfV0lQRRBHEhUKEUlURU1fRElTUExBWV9JTkZPEEgSHQoZSVRFTV9FTkNI",
            "QU5UTUVOVF9URU1QTEFURRBJEhYKEklURU1fTE9PVF9URU1QTEFURRBKEhgK",
            "FElURU1fUkVRVUlSRURfVEFSR0VUEEsSEQoNSVRFTV9URU1QTEFURRBMEggK",
            "BFNUQVQQTRIKCgZEQU1BR0UQThIOCgpSRVNJU1RBTkNFEE8SCQoFU1BFTEwQ",
            "UBIQCgxMT0NBTEVTX0FSRUEQURIaChZMT0NBTEVTX0JST0FEQ0FTVF9URVhU",
            "EFISFAoQTE9DQUxFU19DUkVBVFVSRRBTEhcKE0xPQ0FMRVNfR0FNRV9PQkpF",
            "Q1QQVBIeChpMT0NBTEVTX0dPU1NJUF9NRU5VX09QVElPThBVEhAKDExPQ0FM",
            "RVNfSVRFTRBWEhUKEUxPQ0FMRVNfUEFHRV9URVhUEFcSHgoaTE9DQUxFU19Q",
            "T0lOVFNfT0ZfSU5URVJFU1QQWBIRCg1MT0NBTEVTX1FVRVNUEFkSFgoSTUFJ",
            "TF9MT09UX1RFTVBMQVRFEFoSEQoNTUFOR09TX1NUUklORxBbEhUKEU1BUF9M",
            "T09UX0RJU0FCTEVEEFwSEAoMTUFQX1RFTVBMQVRFEF0SDgoKTUlHUkFUSU9O",
            "UxBeEg4KCk5QQ19HT1NTSVAQXxIMCghOUENfVEVYVBBgEg8KC05QQ19UUkFJ",
            "TkVSEGESGAoUTlBDX1RSQUlORVJfVEVNUExBVEUQYhIOCgpOUENfVkVORE9S",
            "EGMSFwoTTlBDX1ZFTkRPUl9URU1QTEFURRBkEg0KCVBBR0VfVEVYVBBlEhkK",
            "FVBFVF9DUkVBVEVfSU5GT19TUEVMTBBmEhMKD1BFVF9MRVZFTF9TVEFUUxBn",
            "EhcKE1BFVF9OQU1FX0dFTkVSQVRJT04QaBIfChtQSUNLUE9DS0VUSU5HX0xP",
            "T1RfVEVNUExBVEUQaRIOCgpQTEFZRVJfQk9UEGoSFgoSUExBWUVSX0NSRUFU",
            "RV9JTkZPEGsSHQoZUExBWUVSX0NSRUFURV9JTkZPX0FDVElPThBsEhsKF1BM",
            "QVlFUl9DUkVBVEVfSU5GT19JVEVNEG0SHAoYUExBWUVSX0NSRUFURV9JTkZP",
            "X1NQRUxMEG4SHAoYUExBWUVSX0NMQVNTX0xFVkVMX1NUQVRTEG8SHwobUExB",
            "WUVSX0ZBQ1RJT05fQ0hBTkdFX0lURU1TEHASIAocUExBWUVSX0ZBQ1RJT05f",
            "Q0hBTkdFX01PVU5UUxBxEiAKHFBMQVlFUl9GQUNUSU9OX0NIQU5HRV9RVUVT",
            "VFMQchIlCiFQTEFZRVJfRkFDVElPTl9DSEFOR0VfUkVQVVRBVElPTlMQcxIg",
            "ChxQTEFZRVJfRkFDVElPTl9DSEFOR0VfU1BFTExTEHQSFgoSUExBWUVSX0xF",
            "VkVMX1NUQVRTEHUSFwoTUExBWUVSX1hQX0ZPUl9MRVZFTBB2EhYKElBPSU5U",
            "U19PRl9JTlRFUkVTVBB3EhEKDVBPT0xfQ1JFQVRVUkUQeBIaChZQT09MX0NS",
            "RUFUVVJFX1RFTVBMQVRFEHkSFAoQUE9PTF9HQU1FX09CSkVDVBB6Eh0KGVBP",
            "T0xfR0FNRV9PQkpFQ1RfVEVNUExBVEUQexINCglQT09MX1BPT0wQfBIRCg1Q",
            "T09MX1RFTVBMQVRFEH0SFQoRUVVFU1RfRU5EX1NDUklQVFMQfhISCg5RVUVT",
            "VF9HUkVFVElORxB/EhgKE1FVRVNUX1NUQVJUX1NDUklQVFMQgAESEwoOUVVF",
            "U1RfVEVNUExBVEUQgQESHAoXUkVGRVJFTkNFX0xPT1RfVEVNUExBVEUQggES",
            "GwoWUkVQVVRBVElPTl9SRVdBUkRfUkFURRCDARIiCh1SRVBVVEFUSU9OX1NQ",
            "SUxMT1ZFUl9URU1QTEFURRCEARISCg1SRVNFUlZFRF9OQU1FEIUBEhkKFFND",
            "UklQVEVEX0FSRUFUUklHR0VSEIYBEhYKEVNDUklQVEVEX0VWRU5UX0lEEIcB",
            "EhcKElNDUklQVF9FU0NPUlRfREFUQRCIARIQCgtTQ1JJUFRfVEVYVBCJARIU",
            "Cg9TQ1JJUFRfV0FZUE9JTlQQigESHQoYU0tJTExfRElTQ09WRVJZX1RFTVBM",
            "QVRFEIsBEh4KGVNLSUxMX0VYVFJBX0lURU1fVEVNUExBVEUQjAESHQoYU0tJ",
            "TExfRklTSElOR19CQVNFX0xFVkVMEI0BEhsKFlNLSU5OSU5HX0xPT1RfVEVN",
            "UExBVEUQjgESEgoNU09VTkRfRU5UUklFUxCPARIRCgxTUEVMTF9BRkZFQ1QQ",
            "kAESDwoKU1BFTExfQVJFQRCRARIVChBTUEVMTF9CT05VU19EQVRBEJIBEhAK",
            "C1NQRUxMX0NIQUlOEJMBEhAKC1NQRUxMX0NIRUNLEJQBEhMKDlNQRUxMX0RJ",
            "U0FCTEVEEJUBEhUKEFNQRUxMX0VGRkVDVF9NT0QQlgESEQoMU1BFTExfRUxJ",
            "WElSEJcBEhEKDFNQRUxMX0ZBQ0lORxCYARIQCgtTUEVMTF9HUk9VUBCZARIc",
            "ChdTUEVMTF9HUk9VUF9TVEFDS19SVUxFUxCaARIWChFTUEVMTF9MRUFSTl9T",
            "UEVMTBCbARIOCglTUEVMTF9NT0QQnAESEwoOU1BFTExfUEVUX0FVUkEQnQES",
            "FQoQU1BFTExfUFJPQ19FVkVOVBCeARIcChdTUEVMTF9QUk9DX0lURU1fRU5D",
            "SEFOVBCfARIRCgxTUEVMTF9TQ1JJUFQQoAESGAoTU1BFTExfU0NSSVBUX1RB",
            "UkdFVBChARIaChVTUEVMTF9UQVJHRVRfUE9TSVRJT04QogESEwoOU1BFTExf",
            "VEVNUExBVEUQowESEQoMU1BFTExfVEhSRUFUEKQBEhkKFFRBWElfUEFUSF9U",
            "UkFOU0lUSU9OEKUBEg4KCVRSQU5TUE9SVBCmARIOCglWQVJJQUJMRVMQpwFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Database.TableName), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.DatabaseRequest), global::Database.DatabaseRequest.Parser, new[]{ "TableName", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.DatabaseResponse), global::Database.DatabaseResponse.Parser, new[]{ "TableName", "Rows", "ErrorMessage" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Database.DatabaseResponse.Types.Row), global::Database.DatabaseResponse.Types.Row.Parser, new[]{ "Fields" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.KeyValue), global::Database.KeyValue.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AreaTriggerBgEntrance), global::Database.AreaTriggerBgEntrance.Parser, new[]{ "Id", "Name", "Team", "BgTemplate", "ExitMap", "ExitPositionX", "ExitPositionY", "ExitPositionZ", "ExitOrientation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AreaTriggerInvolvedRelation), global::Database.AreaTriggerInvolvedRelation.Parser, new[]{ "Id", "Quest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AreaTriggerTavern), global::Database.AreaTriggerTavern.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AreaTriggerTeleport), global::Database.AreaTriggerTeleport.Parser, new[]{ "Id", "Patch", "Name", "RequiredLevel", "RequiredItem", "RequiredItem2", "RequiredQuestDone", "RequiredEvent", "RequiredPvpRank", "RequiredTeam", "RequiredFailedText", "TargetMap", "TargetPositionX", "TargetPositionY", "TargetPositionZ", "TargetOrientation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AreaTemplate), global::Database.AreaTemplate.Parser, new[]{ "Entry", "MapId", "ZoneId", "ExploreFlag", "Flags", "AreaLevel", "Name", "Team", "LiquidTypeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AuctionHouseBot), global::Database.AuctionHouseBot.Parser, new[]{ "Item", "Stack", "Bid", "Buyout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.AutoBroadcast), global::Database.AutoBroadcast.Parser, new[]{ "Delay", "StringId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.BattlegroundEvent), global::Database.BattlegroundEvent.Parser, new[]{ "Map", "Event1", "Event2", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.BattlegroundTemplate), global::Database.BattlegroundTemplate.Parser, new[]{ "Id", "Patch", "MinPlayersPerTeam", "MaxPlayersPerTeam", "MinLvl", "MaxLvl", "AllianceWinSpell", "AllianceLoseSpell", "HordeWinSpell", "HordeLoseSpell", "AllianceStartLoc", "AllianceStartO", "HordeStartLoc", "HordeStartO" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.BattlemasterEntry), global::Database.BattlemasterEntry.Parser, new[]{ "Entry", "BgTemplate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.BroadcastText), global::Database.BroadcastText.Parser, new[]{ "Id", "MaleText", "FemaleText", "Sound", "Type", "Language", "EmoteId0", "EmoteId1", "EmoteId2", "EmoteDelay0", "EmoteDelay1", "EmoteDelay2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CinematicWaypoint), global::Database.CinematicWaypoint.Parser, new[]{ "Cinematic", "Timer", "Posx", "Posy", "Posz", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Command), global::Database.Command.Parser, new[]{ "Name", "Security", "Help", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Condition), global::Database.Condition.Parser, new[]{ "ConditionEntry", "Type", "Value1", "Value2", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Creature), global::Database.Creature.Parser, new[]{ "Guid", "Id", "Map", "Modelid", "EquipmentId", "PositionX", "PositionY", "PositionZ", "Orientation", "Spawntimesecsmin", "Spawntimesecsmax", "Spawndist", "Currentwaypoint", "Curhealth", "Curmana", "DeathState", "MovementType", "SpawnFlags", "Visibilitymod", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureAddon), global::Database.CreatureAddon.Parser, new[]{ "Guid", "Patch", "Mount", "Bytes1", "B20Sheath", "B21Flags", "Emote", "Moveflags", "Auras" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureAIEvent), global::Database.CreatureAIEvent.Parser, new[]{ "Id", "CreatureId", "ConditionId", "EventType", "EventInversePhaseMask", "EventChance", "EventFlags", "EventParam1", "EventParam2", "EventParam3", "EventParam4", "Action1Script", "Action2Script", "Action3Script", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureAIScript), global::Database.CreatureAIScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureBattleground), global::Database.CreatureBattleground.Parser, new[]{ "Guid", "Event1", "Event2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureEquipTemplate), global::Database.CreatureEquipTemplate.Parser, new[]{ "Entry", "Patch", "Equipentry1", "Equipentry2", "Equipentry3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureEquipTemplateRaw), global::Database.CreatureEquipTemplateRaw.Parser, new[]{ "Entry", "Patch", "Equipmodel1", "Equipmodel2", "Equipmodel3", "Equipinfo1", "Equipinfo2", "Equipinfo3", "Equipslot1", "Equipslot2", "Equipslot3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureGroup), global::Database.CreatureGroup.Parser, new[]{ "LeaderGUID", "MemberGUID", "Dist", "Angle", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureInvolvedRelation), global::Database.CreatureInvolvedRelation.Parser, new[]{ "Id", "Quest", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureLinking), global::Database.CreatureLinking.Parser, new[]{ "Guid", "MasterGuid", "Flag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureLinkingTemplate), global::Database.CreatureLinkingTemplate.Parser, new[]{ "Entry", "Map", "MasterEntry", "Flag", "SearchRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureLootTemplate), global::Database.CreatureLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureModelInfo), global::Database.CreatureModelInfo.Parser, new[]{ "Modelid", "BoundingRadius", "CombatReach", "Gender", "ModelidOtherGender", "ModelidOtherTeam" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureMovement), global::Database.CreatureMovement.Parser, new[]{ "Id", "Point", "PositionX", "PositionY", "PositionZ", "Waittime", "ScriptId", "Textid1", "Textid2", "Textid3", "Textid4", "Textid5", "Emote", "Spell", "Orientation", "Model1", "Model2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureMovementScript), global::Database.CreatureMovementScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureMovementSpecial), global::Database.CreatureMovementSpecial.Parser, new[]{ "Id", "Point", "PositionX", "PositionY", "PositionZ", "Waittime", "ScriptId", "Textid1", "Textid2", "Textid3", "Textid4", "Textid5", "Emote", "Spell", "Orientation", "Model1", "Model2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureMovementTemplate), global::Database.CreatureMovementTemplate.Parser, new[]{ "Entry", "Point", "PositionX", "PositionY", "PositionZ", "Waittime", "ScriptId", "Textid1", "Textid2", "Textid3", "Textid4", "Textid5", "Emote", "Spell", "Orientation", "Model1", "Model2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureOnKillReputation), global::Database.CreatureOnKillReputation.Parser, new[]{ "CreatureId", "RewOnKillRepFaction1", "RewOnKillRepFaction2", "MaxStanding1", "IsTeamAward1", "RewOnKillRepValue1", "MaxStanding2", "IsTeamAward2", "RewOnKillRepValue2", "TeamDependent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureQuestRelation), global::Database.CreatureQuestRelation.Parser, new[]{ "Id", "Quest", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureSpell), global::Database.CreatureSpell.Parser, new[]{ "Entry", "Name", "SpellId1", "Probability1", "CastTarget1", "TargetParam11", "TargetParam21", "CastFlags1", "DelayInitialMin1", "DelayInitialMax1", "DelayRepeatMin1", "DelayRepeatMax1", "ScriptId1", "SpellId2", "Probability2", "CastTarget2", "TargetParam12", "TargetParam22", "CastFlags2", "DelayInitialMin2", "DelayInitialMax2", "DelayRepeatMin2", "DelayRepeatMax2", "ScriptId2", "SpellId3", "Probability3", "CastTarget3", "TargetParam13", "TargetParam23", "CastFlags3", "DelayInitialMin3", "DelayInitialMax3", "DelayRepeatMin3", "DelayRepeatMax3", "ScriptId3", "SpellId4", "Probability4", "CastTarget4", "TargetParam14", "TargetParam24", "CastFlags4", "DelayInitialMin4", "DelayInitialMax4", "DelayRepeatMin4", "DelayRepeatMax4", "ScriptId4", "SpellId5", "Probability5", "CastTarget5", "TargetParam15", "TargetParam25", "CastFlags5", "DelayInitialMin5", "DelayInitialMax5", "DelayRepeatMin5", "DelayRepeatMax5", "ScriptId5", "SpellId6", "Probability6", "CastTarget6", "TargetParam16", "TargetParam26", "CastFlags6", "DelayInitialMin6", "DelayInitialMax6", "DelayRepeatMin6", "DelayRepeatMax6", "ScriptId6", "SpellId7", "Probability7", "CastTarget7", "TargetParam17", "TargetParam27", "CastFlags7", "DelayInitialMin7", "DelayInitialMax7", "DelayRepeatMin7", "DelayRepeatMax7", "ScriptId7", "SpellId8", "Probability8", "CastTarget8", "TargetParam18", "TargetParam28", "CastFlags8", "DelayInitialMin8", "DelayInitialMax8", "DelayRepeatMin8", "DelayRepeatMax8", "ScriptId8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureSpellScript), global::Database.CreatureSpellScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureTemplate), global::Database.CreatureTemplate.Parser, new[]{ "Entry", "Patch", "KillCredit1", "KillCredit2", "ModelId1", "ModelId2", "ModelId3", "ModelId4", "Name", "Subname", "GossipMenuId", "MinLevel", "MaxLevel", "MinHealth", "MaxHealth", "MinMana", "MaxMana", "Armor", "FactionA", "FactionH", "NpcFlag", "SpeedWalk", "SpeedRun", "Scale", "Rank", "MinDmg", "MaxDmg", "DmgSchool", "AttackPower", "DmgMultiplier", "BaseAttackTime", "RangeAttackTime", "UnitClass", "UnitFlags", "DynamicFlags", "Family", "TrainerType", "TrainerSpell", "TrainerClass", "TrainerRace", "MinRangedDmg", "MaxRangedDmg", "RangedAttackPower", "Type", "TypeFlags", "LootId", "PickpocketLoot", "SkinLoot", "Resistance1", "Resistance2", "Resistance3", "Resistance4", "Resistance5", "Resistance6", "Spell1", "Spell2", "Spell3", "Spell4", "SpellsTemplate", "PetSpellDataId", "MinGold", "MaxGold", "AiName", "MovementType", "InhabitType", "Civilian", "RacialLeader", "RegenHealth", "EquipmentId", "TrainerId", "VendorId", "MechanicImmuneMask", "SchoolImmuneMask", "FlagsExtra", "ScriptName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CreatureTemplateAddon), global::Database.CreatureTemplateAddon.Parser, new[]{ "Entry", "Patch", "Mount", "Bytes1", "B20Sheath", "B21Flags", "Emote", "Moveflags", "Auras" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.CustomText), global::Database.CustomText.Parser, new[]{ "Entry", "ContentDefault", "ContentLoc1", "ContentLoc2", "ContentLoc3", "ContentLoc4", "ContentLoc5", "ContentLoc6", "ContentLoc7", "ContentLoc8", "Sound", "Type", "Language", "Emote", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.DisenchantLootTemplate), global::Database.DisenchantLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.EventScript), global::Database.EventScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ExplorationBaseXP), global::Database.ExplorationBaseXP.Parser, new[]{ "Level", "Basexp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Faction), global::Database.Faction.Parser, new[]{ "Id", "ReputationListID", "BaseRepRaceMask1", "BaseRepRaceMask2", "BaseRepRaceMask3", "BaseRepRaceMask4", "BaseRepClassMask1", "BaseRepClassMask2", "BaseRepClassMask3", "BaseRepClassMask4", "BaseRepValue1", "BaseRepValue2", "BaseRepValue3", "BaseRepValue4", "ReputationFlags1", "ReputationFlags2", "ReputationFlags3", "ReputationFlags4", "Team", "Name1", "Name2", "Name3", "Name4", "Name5", "Name6", "Name7", "Name8", "Description1", "Description2", "Description3", "Description4", "Description5", "Description6", "Description7", "Description8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.FactionTemplate), global::Database.FactionTemplate.Parser, new[]{ "Id", "FactionId", "FactionFlags", "OurMask", "FriendlyMask", "HostileMask", "EnemyFaction1", "EnemyFaction2", "EnemyFaction3", "EnemyFaction4", "FriendFaction1", "FriendFaction2", "FriendFaction3", "FriendFaction4" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.FishingLootTemplate), global::Database.FishingLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "GroupId", "MinCountOrRef", "MaxCount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ForbiddenItem), global::Database.ForbiddenItem.Parser, new[]{ "Entry", "Patch", "AfterOrBefore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObject), global::Database.GameObject.Parser, new[]{ "Guid", "Id", "Map", "PositionX", "PositionY", "PositionZ", "Orientation", "Rotation0", "Rotation1", "Rotation2", "Rotation3", "Spawntimesecsmin", "Spawntimesecsmax", "Animprogress", "State", "SpawnFlags", "Visibilitymod", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectBattleground), global::Database.GameObjectBattleground.Parser, new[]{ "Guid", "Event1", "Event2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectInvolvedRelation), global::Database.GameObjectInvolvedRelation.Parser, new[]{ "Id", "Quest", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectLootTemplate), global::Database.GameObjectLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectQuestRelation), global::Database.GameObjectQuestRelation.Parser, new[]{ "Id", "Quest", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectRequirement), global::Database.GameObjectRequirement.Parser, new[]{ "Guid", "ReqType", "ReqGuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectScript), global::Database.GameObjectScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameObjectTemplate), global::Database.GameObjectTemplate.Parser, new[]{ "Entry", "Patch", "Type", "DisplayId", "Name", "Faction", "Flags", "Size", "Data", "Mingold", "Maxgold", "ScriptName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEvent), global::Database.GameEvent.Parser, new[]{ "Entry", "StartTime", "EndTime", "Occurrence", "Length", "Holiday", "Description", "Hardcoded", "Disabled", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEventCreature), global::Database.GameEventCreature.Parser, new[]{ "Guid", "Event" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEventCreatureData), global::Database.GameEventCreatureData.Parser, new[]{ "Guid", "EntryId", "Modelid", "EquipmentId", "SpellStart", "SpellEnd", "Event" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEventGameObject), global::Database.GameEventGameObject.Parser, new[]{ "Guid", "Event" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEventMail), global::Database.GameEventMail.Parser, new[]{ "Event", "RaceMask", "Quest", "MailTemplateId", "SenderEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameEventQuest), global::Database.GameEventQuest.Parser, new[]{ "Quest", "Event", "Patch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameGraveyardZone), global::Database.GameGraveyardZone.Parser, new[]{ "Id", "GhostZone", "Faction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameTele), global::Database.GameTele.Parser, new[]{ "Id", "PositionX", "PositionY", "PositionZ", "Orientation", "Map", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GameWeather), global::Database.GameWeather.Parser, new[]{ "Zone", "SpringRainChance", "SpringSnowChance", "SpringStormChance", "SummerRainChance", "SummerSnowChance", "SummerStormChance", "FallRainChance", "FallSnowChance", "FallStormChance", "WinterRainChance", "WinterSnowChance", "WinterStormChance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GMSubSurvey), global::Database.GMSubSurvey.Parser, new[]{ "SurveyId", "SubsurveyId", "Rank", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GMSurvey), global::Database.GMSurvey.Parser, new[]{ "SurveyId", "Guid", "MainSurvey", "OverallComment", "CreateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GMTicket), global::Database.GMTicket.Parser, new[]{ "TicketId", "Guid", "Name", "Message", "CreateTime", "MapId", "PosX", "PosY", "PosZ", "LastModifiedTime", "ClosedBy", "AssignedTo", "Comment", "Response", "Completed", "Escalated", "Viewed", "HaveTicket", "TicketType", "SecurityNeeded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GossipMenu), global::Database.GossipMenu.Parser, new[]{ "Entry", "TextId", "ConditionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GossipMenuOption), global::Database.GossipMenuOption.Parser, new[]{ "MenuId", "Id", "OptionIcon", "OptionText", "OptionBroadcastTextId", "OptionId", "NpcOptionNpcflag", "ActionMenuId", "ActionPoiId", "ActionScriptId", "BoxCoded", "BoxMoney", "BoxText", "BoxBroadcastTextId", "ConditionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.GossipScript), global::Database.GossipScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.InstanceBuffRemoval), global::Database.InstanceBuffRemoval.Parser, new[]{ "MapId", "AuraId", "Enabled", "Flags", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.InstanceCreatureKills), global::Database.InstanceCreatureKills.Parser, new[]{ "MapId", "CreatureEntry", "SpellEntry", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.InstanceCustomCounter), global::Database.InstanceCustomCounter.Parser, new[]{ "Index", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.InstanceWipe), global::Database.InstanceWipe.Parser, new[]{ "MapId", "CreatureEntry", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ItemDisplayInfo), global::Database.ItemDisplayInfo.Parser, new[]{ "Field0", "Field5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ItemEnchantmentTemplate), global::Database.ItemEnchantmentTemplate.Parser, new[]{ "Entry", "Ench", "Chance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ItemLootTemplate), global::Database.ItemLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ItemRequiredTarget), global::Database.ItemRequiredTarget.Parser, new[]{ "Entry", "Type", "TargetEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ItemTemplate), global::Database.ItemTemplate.Parser, new[]{ "Entry", "Patch", "Class", "Subclass", "Name", "Displayid", "Quality", "Flags", "BuyCount", "BuyPrice", "SellPrice", "InventoryType", "AllowableClass", "AllowableRace", "ItemLevel", "RequiredLevel", "RequiredSkill", "RequiredSkillRank", "RequiredSpell", "RequiredHonorRank", "RequiredCityRank", "RequiredReputationFaction", "RequiredReputationRank", "MaxCount", "Stackable", "ContainerSlots", "Stats", "Damages", "Armor", "Resistances", "Delay", "AmmoType", "RangedModRange", "Spells", "Bonding", "Description", "PageText", "LanguageID", "PageMaterial", "StartQuest", "LockID", "Material", "Sheath", "RandomProperty", "Block", "ItemSet", "MaxDurability", "Area", "Map", "BagFamily", "ScriptName", "DisenchantID", "FoodType", "MinMoneyLoot", "MaxMoneyLoot", "Duration", "ExtraFlags", "OtherTeamEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Stat), global::Database.Stat.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Damage), global::Database.Damage.Parser, new[]{ "Min", "Max", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Resistance), global::Database.Resistance.Parser, new[]{ "Holy", "Fire", "Nature", "Frost", "Shadow", "Arcane" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Spell), global::Database.Spell.Parser, new[]{ "SpellID", "Trigger", "Charges", "PpmRate", "Cooldown", "Category", "CategoryCooldown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesArea), global::Database.LocalesArea.Parser, new[]{ "Entry", "NameLoc1", "NameLoc2", "NameLoc3", "NameLoc4", "NameLoc5", "NameLoc6", "NameLoc7", "NameLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesBroadcastText), global::Database.LocalesBroadcastText.Parser, new[]{ "Id", "MaleTextLoc1", "MaleTextLoc2", "MaleTextLoc3", "MaleTextLoc4", "MaleTextLoc5", "MaleTextLoc6", "MaleTextLoc7", "MaleTextLoc8", "FemaleTextLoc1", "FemaleTextLoc2", "FemaleTextLoc3", "FemaleTextLoc4", "FemaleTextLoc5", "FemaleTextLoc6", "FemaleTextLoc7", "FemaleTextLoc8", "VerifiedBuild" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesCreature), global::Database.LocalesCreature.Parser, new[]{ "Entry", "NameLoc1", "NameLoc2", "NameLoc3", "NameLoc4", "NameLoc5", "NameLoc6", "NameLoc7", "NameLoc8", "SubnameLoc1", "SubnameLoc2", "SubnameLoc3", "SubnameLoc4", "SubnameLoc5", "SubnameLoc6", "SubnameLoc7", "SubnameLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesGameObject), global::Database.LocalesGameObject.Parser, new[]{ "Entry", "NameLoc1", "NameLoc2", "NameLoc3", "NameLoc4", "NameLoc5", "NameLoc6", "NameLoc7", "NameLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesGossipMenuOption), global::Database.LocalesGossipMenuOption.Parser, new[]{ "MenuId", "Id", "OptionTextLoc1", "OptionTextLoc2", "OptionTextLoc3", "OptionTextLoc4", "OptionTextLoc5", "OptionTextLoc6", "OptionTextLoc7", "OptionTextLoc8", "BoxTextLoc1", "BoxTextLoc2", "BoxTextLoc3", "BoxTextLoc4", "BoxTextLoc5", "BoxTextLoc6", "BoxTextLoc7", "BoxTextLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesItem), global::Database.LocalesItem.Parser, new[]{ "Entry", "NameLoc1", "NameLoc2", "NameLoc3", "NameLoc4", "NameLoc5", "NameLoc6", "NameLoc7", "NameLoc8", "DescriptionLoc1", "DescriptionLoc2", "DescriptionLoc3", "DescriptionLoc4", "DescriptionLoc5", "DescriptionLoc6", "DescriptionLoc7", "DescriptionLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesPageText), global::Database.LocalesPageText.Parser, new[]{ "Entry", "TextLoc1", "TextLoc2", "TextLoc3", "TextLoc4", "TextLoc5", "TextLoc6", "TextLoc7", "TextLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesPointsOfInterest), global::Database.LocalesPointsOfInterest.Parser, new[]{ "Entry", "IconNameLoc1", "IconNameLoc2", "IconNameLoc3", "IconNameLoc4", "IconNameLoc5", "IconNameLoc6", "IconNameLoc7", "IconNameLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.LocalesQuest), global::Database.LocalesQuest.Parser, new[]{ "Entry", "TitleLoc1", "TitleLoc2", "TitleLoc3", "TitleLoc4", "TitleLoc5", "TitleLoc6", "TitleLoc7", "TitleLoc8", "DetailsLoc1", "DetailsLoc2", "DetailsLoc3", "DetailsLoc4", "DetailsLoc5", "DetailsLoc6", "DetailsLoc7", "DetailsLoc8", "ObjectivesLoc1", "ObjectivesLoc2", "ObjectivesLoc3", "ObjectivesLoc4", "ObjectivesLoc5", "ObjectivesLoc6", "ObjectivesLoc7", "ObjectivesLoc8", "OfferRewardTextLoc1", "OfferRewardTextLoc2", "OfferRewardTextLoc3", "OfferRewardTextLoc4", "OfferRewardTextLoc5", "OfferRewardTextLoc6", "OfferRewardTextLoc7", "OfferRewardTextLoc8", "RequestItemsTextLoc1", "RequestItemsTextLoc2", "RequestItemsTextLoc3", "RequestItemsTextLoc4", "RequestItemsTextLoc5", "RequestItemsTextLoc6", "RequestItemsTextLoc7", "RequestItemsTextLoc8", "EndTextLoc1", "EndTextLoc2", "EndTextLoc3", "EndTextLoc4", "EndTextLoc5", "EndTextLoc6", "EndTextLoc7", "EndTextLoc8", "ObjectiveText1Loc1", "ObjectiveText1Loc2", "ObjectiveText1Loc3", "ObjectiveText1Loc4", "ObjectiveText1Loc5", "ObjectiveText1Loc6", "ObjectiveText1Loc7", "ObjectiveText1Loc8", "ObjectiveText2Loc1", "ObjectiveText2Loc2", "ObjectiveText2Loc3", "ObjectiveText2Loc4", "ObjectiveText2Loc5", "ObjectiveText2Loc6", "ObjectiveText2Loc7", "ObjectiveText2Loc8", "ObjectiveText3Loc1", "ObjectiveText3Loc2", "ObjectiveText3Loc3", "ObjectiveText3Loc4", "ObjectiveText3Loc5", "ObjectiveText3Loc6", "ObjectiveText3Loc7", "ObjectiveText3Loc8", "ObjectiveText4Loc1", "ObjectiveText4Loc2", "ObjectiveText4Loc3", "ObjectiveText4Loc4", "ObjectiveText4Loc5", "ObjectiveText4Loc6", "ObjectiveText4Loc7", "ObjectiveText4Loc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.MailLootTemplate), global::Database.MailLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.MangosString), global::Database.MangosString.Parser, new[]{ "Entry", "ContentDefault", "ContentLoc1", "ContentLoc2", "ContentLoc3", "ContentLoc4", "ContentLoc5", "ContentLoc6", "ContentLoc7", "ContentLoc8" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.MapLootDisabled), global::Database.MapLootDisabled.Parser, new[]{ "Mapid", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.MapTemplate), global::Database.MapTemplate.Parser, new[]{ "Entry", "Patch", "Parent", "MapType", "LinkedZone", "LevelMin", "LevelMax", "MaxPlayers", "ResetDelay", "GhostEntranceMap", "GhostEntranceX", "GhostEntranceY", "MapName", "ScriptName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Migrations), global::Database.Migrations.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcGossip), global::Database.NpcGossip.Parser, new[]{ "NpcGuid", "Textid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcText), global::Database.NpcText.Parser, new[]{ "ID", "BroadcastTextID0", "Probability0", "BroadcastTextID1", "Probability1", "BroadcastTextID2", "Probability2", "BroadcastTextID3", "Probability3", "BroadcastTextID4", "Probability4", "BroadcastTextID5", "Probability5", "BroadcastTextID6", "Probability6", "BroadcastTextID7", "Probability7" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcTrainer), global::Database.NpcTrainer.Parser, new[]{ "Entry", "Spell", "Spellcost", "Reqskill", "Reqskillvalue", "Reqlevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcTrainerTemplate), global::Database.NpcTrainerTemplate.Parser, new[]{ "Entry", "Spell", "Spellcost", "Reqskill", "Reqskillvalue", "Reqlevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcVendor), global::Database.NpcVendor.Parser, new[]{ "Entry", "Item", "Maxcount", "Incrtime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.NpcVendorTemplate), global::Database.NpcVendorTemplate.Parser, new[]{ "Entry", "Item", "Maxcount", "Incrtime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PageText), global::Database.PageText.Parser, new[]{ "Entry", "Text", "NextPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PetCreateInfoSpell), global::Database.PetCreateInfoSpell.Parser, new[]{ "Entry", "Spell1", "Spell2", "Spell3", "Spell4" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PetLevelStats), global::Database.PetLevelStats.Parser, new[]{ "CreatureEntry", "Level", "Hp", "Mana", "Armor", "Str", "Agi", "Sta", "Inte", "Spi" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PetNameGeneration), global::Database.PetNameGeneration.Parser, new[]{ "Id", "Word", "Entry", "Half" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PickpocketingLootTemplate), global::Database.PickpocketingLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "Groupid", "MincountOrRef", "Maxcount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerBot), global::Database.PlayerBot.Parser, new[]{ "CharGuid", "Chance", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerCreateInfo), global::Database.PlayerCreateInfo.Parser, new[]{ "Race", "Class", "Map", "Zone", "PositionX", "PositionY", "PositionZ", "Orientation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerCreateInfoAction), global::Database.PlayerCreateInfoAction.Parser, new[]{ "Race", "Class", "Button", "Action", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerCreateInfoItem), global::Database.PlayerCreateInfoItem.Parser, new[]{ "Race", "Class", "Itemid", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerCreateInfoSpell), global::Database.PlayerCreateInfoSpell.Parser, new[]{ "Race", "Class", "Spell", "Note" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerClassLevelStats), global::Database.PlayerClassLevelStats.Parser, new[]{ "Class", "Level", "Basehp", "Basemana" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerFactionChangeItems), global::Database.PlayerFactionChangeItems.Parser, new[]{ "AllianceId", "HordeId", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerFactionChangeMounts), global::Database.PlayerFactionChangeMounts.Parser, new[]{ "RaceId", "MountNum", "ItemEntry", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerFactionChangeQuests), global::Database.PlayerFactionChangeQuests.Parser, new[]{ "AllianceId", "HordeId", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerFactionChangeReputations), global::Database.PlayerFactionChangeReputations.Parser, new[]{ "AllianceId", "HordeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerFactionChangeSpells), global::Database.PlayerFactionChangeSpells.Parser, new[]{ "AllianceId", "HordeId", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerLevelStats), global::Database.PlayerLevelStats.Parser, new[]{ "Race", "Class", "Level", "Str", "Agi", "Sta", "Inte", "Spi" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PlayerXpForLevel), global::Database.PlayerXpForLevel.Parser, new[]{ "Lvl", "XpForNextLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PointsOfInterest), global::Database.PointsOfInterest.Parser, new[]{ "Entry", "X", "Y", "Icon", "Flags", "Data", "IconName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolCreature), global::Database.PoolCreature.Parser, new[]{ "Guid", "PoolEntry", "Chance", "Description", "Flags", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolCreatureTemplate), global::Database.PoolCreatureTemplate.Parser, new[]{ "Id", "PoolEntry", "Chance", "Description", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolGameObject), global::Database.PoolGameObject.Parser, new[]{ "Guid", "PoolEntry", "Chance", "Description", "Flags", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolGameObjectTemplate), global::Database.PoolGameObjectTemplate.Parser, new[]{ "Id", "PoolEntry", "Chance", "Description", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolPool), global::Database.PoolPool.Parser, new[]{ "PoolId", "MotherPool", "Chance", "Description", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.PoolTemplate), global::Database.PoolTemplate.Parser, new[]{ "Entry", "MaxLimit", "Description", "Flags", "Instance", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.QuestEndScripts), global::Database.QuestEndScripts.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.QuestGreeting), global::Database.QuestGreeting.Parser, new[]{ "Entry", "Type", "ContentDefault", "ContentLoc1", "ContentLoc2", "ContentLoc3", "ContentLoc4", "ContentLoc5", "ContentLoc6", "ContentLoc7", "ContentLoc8", "Emote", "EmoteDelay" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.QuestStartScripts), global::Database.QuestStartScripts.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.QuestTemplate), global::Database.QuestTemplate.Parser, new[]{ "Entry", "Patch", "Method", "ZoneOrSort", "MinLevel", "MaxLevel", "QuestLevel", "Type", "RequiredClasses", "RequiredRaces", "RequiredSkill", "RequiredSkillValue", "RepObjectiveFaction", "RepObjectiveValue", "RequiredMinRepFaction", "RequiredMinRepValue", "RequiredMaxRepFaction", "RequiredMaxRepValue", "SuggestedPlayers", "LimitTime", "QuestFlags", "SpecialFlags", "PrevQuestId", "NextQuestId", "ExclusiveGroup", "NextQuestInChain", "SrcItemId", "SrcItemCount", "SrcSpell", "Title", "Details", "Objectives", "OfferRewardText", "RequestItemsText", "EndText", "ObjectiveText1", "ObjectiveText2", "ObjectiveText3", "ObjectiveText4", "ReqItemId1", "ReqItemId2", "ReqItemId3", "ReqItemId4", "ReqItemCount1", "ReqItemCount2", "ReqItemCount3", "ReqItemCount4", "ReqSourceId1", "ReqSourceId2", "ReqSourceId3", "ReqSourceId4", "ReqSourceCount1", "ReqSourceCount2", "ReqSourceCount3", "ReqSourceCount4", "ReqCreatureOrGoId1", "ReqCreatureOrGoId2", "ReqCreatureOrGoId3", "ReqCreatureOrGoId4", "ReqCreatureOrGoCount1", "ReqCreatureOrGoCount2", "ReqCreatureOrGoCount3", "ReqCreatureOrGoCount4", "ReqSpellCast1", "ReqSpellCast2", "ReqSpellCast3", "ReqSpellCast4", "RewChoiceItemId1", "RewChoiceItemId2", "RewChoiceItemId3", "RewChoiceItemId4", "RewChoiceItemId5", "RewChoiceItemId6", "RewChoiceItemCount1", "RewChoiceItemCount2", "RewChoiceItemCount3", "RewChoiceItemCount4", "RewChoiceItemCount5", "RewChoiceItemCount6", "RewItemId1", "RewItemId2", "RewItemId3", "RewItemId4", "RewItemCount1", "RewItemCount2", "RewItemCount3", "RewItemCount4", "RewRepFaction1", "RewRepFaction2", "RewRepFaction3", "RewRepFaction4", "RewRepFaction5", "RewRepValue1", "RewRepValue2", "RewRepValue3", "RewRepValue4", "RewRepValue5", "RewOrReqMoney", "RewMoneyMaxLevel", "RewSpell", "RewSpellCast", "RewMailTemplateId", "RewMailDelaySecs", "PointMapId", "PointX", "PointY", "PointOpt", "DetailsEmote1", "DetailsEmote2", "DetailsEmote3", "DetailsEmote4", "DetailsEmoteDelay1", "DetailsEmoteDelay2", "DetailsEmoteDelay3", "DetailsEmoteDelay4", "IncompleteEmote", "CompleteEmote", "OfferRewardEmote1", "OfferRewardEmote2", "OfferRewardEmote3", "OfferRewardEmote4", "OfferRewardEmoteDelay1", "OfferRewardEmoteDelay2", "OfferRewardEmoteDelay3", "OfferRewardEmoteDelay4", "StartScript", "CompleteScript" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ReferenceLootTemplate), global::Database.ReferenceLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "GroupId", "MinCountOrRef", "MaxCount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ReputationRewardRate), global::Database.ReputationRewardRate.Parser, new[]{ "Faction", "QuestRate", "CreatureRate", "SpellRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ReputationSpilloverTemplate), global::Database.ReputationSpilloverTemplate.Parser, new[]{ "Faction", "Faction1", "Rate1", "Rank1", "Faction2", "Rate2", "Rank2", "Faction3", "Rate3", "Rank3", "Faction4", "Rate4", "Rank4" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ReservedName), global::Database.ReservedName.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ScriptedAreatrigger), global::Database.ScriptedAreatrigger.Parser, new[]{ "Entry", "ScriptName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ScriptedEventId), global::Database.ScriptedEventId.Parser, new[]{ "Id", "ScriptName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ScriptEscortData), global::Database.ScriptEscortData.Parser, new[]{ "CreatureId", "Quest", "EscortFaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ScriptText), global::Database.ScriptText.Parser, new[]{ "Entry", "ContentDefault", "ContentLoc1", "ContentLoc2", "ContentLoc3", "ContentLoc4", "ContentLoc5", "ContentLoc6", "ContentLoc7", "ContentLoc8", "Sound", "Type", "Language", "Emote", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.ScriptWaypoint), global::Database.ScriptWaypoint.Parser, new[]{ "Entry", "Pointid", "LocationX", "LocationY", "LocationZ", "Waittime", "PointComment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SkillDiscoveryTemplate), global::Database.SkillDiscoveryTemplate.Parser, new[]{ "SpellId", "ReqSpell", "Chance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SkillExtraItemTemplate), global::Database.SkillExtraItemTemplate.Parser, new[]{ "SpellId", "RequiredSpecialization", "AdditionalCreateChance", "AdditionalMaxNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SkillFishingBaseLevel), global::Database.SkillFishingBaseLevel.Parser, new[]{ "Entry", "Skill" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SkinningLootTemplate), global::Database.SkinningLootTemplate.Parser, new[]{ "Entry", "Item", "ChanceOrQuestChance", "GroupId", "MinCountOrRef", "MaxCount", "ConditionId", "PatchMin", "PatchMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SoundEntries), global::Database.SoundEntries.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellAffect), global::Database.SpellAffect.Parser, new[]{ "Entry", "EffectId", "SpellFamilyMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellArea), global::Database.SpellArea.Parser, new[]{ "Spell", "Area", "QuestStart", "QuestStartActive", "QuestEnd", "AuraSpell", "Racemask", "Gender", "Autocast" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellBonusData), global::Database.SpellBonusData.Parser, new[]{ "Entry", "DirectBonus", "DotBonus", "ApBonus", "ApDotBonus", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellChain), global::Database.SpellChain.Parser, new[]{ "SpellId", "PrevSpell", "FirstSpell", "Rank", "ReqSpell" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellCheck), global::Database.SpellCheck.Parser, new[]{ "Spellid", "SpellFamilyName", "SpellFamilyMask", "SpellIcon", "SpellVisual", "SpellCategory", "EffectType", "EffectAura", "EffectIdx", "Name", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellDisabled), global::Database.SpellDisabled.Parser, new[]{ "Entry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellEffectMod), global::Database.SpellEffectMod.Parser, new[]{ "Id", "EffectIndex", "Effect", "EffectDieSides", "EffectBaseDice", "EffectDicePerLevel", "EffectRealPointsPerLevel", "EffectBasePoints", "EffectAmplitude", "EffectPointsPerComboPoint", "EffectChainTarget", "EffectMultipleValue", "EffectMechanic", "EffectImplicitTargetA", "EffectImplicitTargetB", "EffectRadiusIndex", "EffectApplyAuraName", "EffectItemType", "EffectMiscValue", "EffectTriggerSpell", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellElixir), global::Database.SpellElixir.Parser, new[]{ "Entry", "Mask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellFacing), global::Database.SpellFacing.Parser, new[]{ "Entry", "Facingcasterflag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellGroup), global::Database.SpellGroup.Parser, new[]{ "GroupId", "GroupSpellId", "SpellId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellGroupStackRules), global::Database.SpellGroupStackRules.Parser, new[]{ "GroupId", "StackRule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellLearnSpell), global::Database.SpellLearnSpell.Parser, new[]{ "Entry", "SpellId", "Active" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellMod), global::Database.SpellMod.Parser, new[]{ "Id", "ProcChance", "ProcFlags", "ProcCharges", "DurationIndex", "Category", "CastingTimeIndex", "StackAmount", "SpellIconId", "ActiveIconId", "ManaCost", "Attributes", "AttributesEx", "AttributesEx2", "AttributesEx3", "AttributesEx4", "Custom", "InterruptFlags", "AuraInterruptFlags", "ChannelInterruptFlags", "Dispel", "Stances", "StancesNot", "SpellVisual", "ManaCostPercentage", "StartRecoveryCategory", "StartRecoveryTime", "MaxAffectedTargets", "MaxTargetLevel", "DmgClass", "RangeIndex", "RecoveryTime", "CategoryRecoveryTime", "SpellFamilyName", "SpellFamilyFlags", "Mechanic", "EquippedItemClass", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellPetAura), global::Database.SpellPetAura.Parser, new[]{ "Spell", "Pet", "Aura" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellProcEvent), global::Database.SpellProcEvent.Parser, new[]{ "Entry", "SchoolMask", "SpellFamilyName", "SpellFamilyMask0", "SpellFamilyMask1", "SpellFamilyMask2", "ProcFlags", "ProcEx", "PpmRate", "CustomChance", "Cooldown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellProcItemEnchant), global::Database.SpellProcItemEnchant.Parser, new[]{ "Entry", "PpmRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellScript), global::Database.SpellScript.Parser, new[]{ "Id", "Delay", "Command", "Datalong", "Datalong2", "Datalong3", "Datalong4", "TargetParam1", "TargetParam2", "TargetType", "DataFlags", "Dataint", "Dataint2", "Dataint3", "Dataint4", "X", "Y", "Z", "O", "ConditionId", "Comments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellScriptTarget), global::Database.SpellScriptTarget.Parser, new[]{ "Entry", "Type", "TargetEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellTargetPosition), global::Database.SpellTargetPosition.Parser, new[]{ "Id", "TargetMap", "TargetPositionX", "TargetPositionY", "TargetPositionZ", "TargetOrientation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellTemplate), global::Database.SpellTemplate.Parser, new[]{ "Id", "School", "Category", "CastUi", "Dispel", "Mechanic", "Attributes", "AttributesEx", "AttributesEx2", "AttributesEx3", "AttributesEx4", "Stances", "StancesNot", "Targets", "TargetCreatureType", "RequiresSpellFocus", "CasterAuraState", "TargetAuraState", "CastingTimeIndex", "RecoveryTime", "CategoryRecoveryTime", "InterruptFlags", "AuraInterruptFlags", "ChannelInterruptFlags", "ProcFlags", "ProcChance", "ProcCharges", "MaxLevel", "BaseLevel", "SpellLevel", "DurationIndex", "PowerType", "ManaCost", "ManaCostPerLevel", "ManaPerSecond", "ManaPerSecondPerLevel", "RangeIndex", "Speed", "ModelNextSpell", "StackAmount", "Totem1", "Totem2", "Reagent1", "Reagent2", "Reagent3", "Reagent4", "Reagent5", "Reagent6", "Reagent7", "Reagent8", "ReagentCount1", "ReagentCount2", "ReagentCount3", "ReagentCount4", "ReagentCount5", "ReagentCount6", "ReagentCount7", "ReagentCount8", "EquippedItemClass", "EquippedItemSubClassMask", "EquippedItemInventoryTypeMask", "Effect1", "Effect2", "Effect3", "EffectDieSides1", "EffectDieSides2", "EffectDieSides3", "EffectBaseDice1", "EffectBaseDice2", "EffectBaseDice3", "EffectDicePerLevel1", "EffectDicePerLevel2", "EffectDicePerLevel3", "EffectRealPointsPerLevel1", "EffectRealPointsPerLevel2", "EffectRealPointsPerLevel3", "EffectBasePoints1", "EffectBasePoints2", "EffectBasePoints3", "EffectMechanic1", "EffectMechanic2", "EffectMechanic3", "EffectImplicitTargetA1", "EffectImplicitTargetA2", "EffectImplicitTargetA3", "EffectImplicitTargetB1", "EffectImplicitTargetB2", "EffectImplicitTargetB3", "EffectRadiusIndex1", "EffectRadiusIndex2", "EffectRadiusIndex3", "EffectApplyAuraName1", "EffectApplyAuraName2", "EffectApplyAuraName3", "EffectAmplitude1", "EffectAmplitude2", "EffectAmplitude3", "EffectMultipleValue1", "EffectMultipleValue2", "EffectMultipleValue3", "EffectChainTarget1", "EffectChainTarget2", "EffectChainTarget3", "EffectItemType1", "EffectItemType2", "EffectItemType3", "EffectMiscValue1", "EffectMiscValue2", "EffectMiscValue3", "EffectTriggerSpell1", "EffectTriggerSpell2", "EffectTriggerSpell3", "EffectPointsPerComboPoint1", "EffectPointsPerComboPoint2", "EffectPointsPerComboPoint3", "SpellVisual1", "SpellVisual2", "SpellIconId", "ActiveIconId", "SpellPriority", "Name1", "Name2", "Name3", "Name4", "Name5", "Name6", "Name7", "Name8", "NameFlags", "NameSubtext1", "NameSubtext2", "NameSubtext3", "NameSubtext4", "NameSubtext5", "NameSubtext6", "NameSubtext7", "NameSubtext8", "NameSubtextFlags", "Description1", "Description2", "Description3", "Description4", "Description5", "Description6", "Description7", "Description8", "DescriptionFlags", "AuraDescription1", "AuraDescription2", "AuraDescription3", "AuraDescription4", "AuraDescription5", "AuraDescription6", "AuraDescription7", "AuraDescription8", "AuraDescriptionFlags", "ManaCostPercentage", "StartRecoveryCategory", "StartRecoveryTime", "MaxTargetLevel", "SpellFamilyName", "SpellFamilyFlags", "MaxAffectedTargets", "DmgClass", "PreventionType", "StanceBarOrder", "DmgMultiplier1", "DmgMultiplier2", "DmgMultiplier3", "MinFactionId", "MinReputation", "RequiredAuraVision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.SpellThreat), global::Database.SpellThreat.Parser, new[]{ "Entry", "Threat", "Multiplier", "ApBonus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.TaxiPathTransition), global::Database.TaxiPathTransition.Parser, new[]{ "InPath", "OutPath", "InNode", "OutNode", "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Transport), global::Database.Transport.Parser, new[]{ "Guid", "Entry", "Name", "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Database.Variables), global::Database.Variables.Parser, new[]{ "Index", "Value" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TableName {
    [pbr::OriginalName("UNKNOWN_TABLE")] UnknownTable = 0,
    [pbr::OriginalName("AREA_TRIGGER_BG_ENTRANCE")] AreaTriggerBgEntrance = 1,
    [pbr::OriginalName("AREA_TRIGGER_INVOLVED_RELATION")] AreaTriggerInvolvedRelation = 2,
    [pbr::OriginalName("AREA_TRIGGER_TAVERN")] AreaTriggerTavern = 3,
    [pbr::OriginalName("AREA_TRIGGER_TELEPORT")] AreaTriggerTeleport = 4,
    [pbr::OriginalName("AREA_TEMPLATE")] AreaTemplate = 5,
    [pbr::OriginalName("AUCTION_HOUSE_BOT")] AuctionHouseBot = 6,
    [pbr::OriginalName("AUTO_BROADCAST")] AutoBroadcast = 7,
    [pbr::OriginalName("BATTLEGROUND_EVENT")] BattlegroundEvent = 8,
    [pbr::OriginalName("BATTLEGROUND_TEMPLATE")] BattlegroundTemplate = 9,
    [pbr::OriginalName("BATTLEMASTER_ENTRY")] BattlemasterEntry = 10,
    [pbr::OriginalName("BROADCAST_TEXT")] BroadcastText = 11,
    [pbr::OriginalName("CINEMATIC_WAYPOINT")] CinematicWaypoint = 12,
    [pbr::OriginalName("COMMAND")] Command = 13,
    [pbr::OriginalName("CONDITION")] Condition = 14,
    [pbr::OriginalName("CREATURE")] Creature = 15,
    [pbr::OriginalName("CREATURE_ADDON")] CreatureAddon = 16,
    [pbr::OriginalName("CREATURE_AI_EVENT")] CreatureAiEvent = 17,
    [pbr::OriginalName("CREATURE_AI_SCRIPT")] CreatureAiScript = 18,
    [pbr::OriginalName("CREATURE_BATTLEGROUND")] CreatureBattleground = 19,
    [pbr::OriginalName("CREATURE_EQUIP_TEMPLATE")] CreatureEquipTemplate = 20,
    [pbr::OriginalName("CREATURE_EQUIP_TEMPLATE_RAW")] CreatureEquipTemplateRaw = 21,
    [pbr::OriginalName("CREATURE_GROUP")] CreatureGroup = 22,
    [pbr::OriginalName("CREATURE_INVOLVED_RELATION")] CreatureInvolvedRelation = 23,
    [pbr::OriginalName("CREATURE_LINKING")] CreatureLinking = 24,
    [pbr::OriginalName("CREATURE_LINKING_TEMPLATE")] CreatureLinkingTemplate = 25,
    [pbr::OriginalName("CREATURE_LOOT_TEMPLATE")] CreatureLootTemplate = 26,
    [pbr::OriginalName("CREATURE_MODEL_INFO")] CreatureModelInfo = 27,
    [pbr::OriginalName("CREATURE_MOVEMENT")] CreatureMovement = 28,
    [pbr::OriginalName("CREATURE_MOVEMENT_SCRIPT")] CreatureMovementScript = 29,
    [pbr::OriginalName("CREATURE_MOVEMENT_SPECIAL")] CreatureMovementSpecial = 30,
    [pbr::OriginalName("CREATURE_MOVEMENT_TEMPLATE")] CreatureMovementTemplate = 31,
    [pbr::OriginalName("CREATURE_ON_KILL_REPUTATION")] CreatureOnKillReputation = 32,
    [pbr::OriginalName("CREATURE_QUEST_RELATION")] CreatureQuestRelation = 33,
    [pbr::OriginalName("CREATURE_SPELL")] CreatureSpell = 34,
    [pbr::OriginalName("CREATURE_SPELL_SCRIPT")] CreatureSpellScript = 35,
    [pbr::OriginalName("CREATURE_TEMPLATE")] CreatureTemplate = 36,
    [pbr::OriginalName("CREATURE_TEMPLATE_ADDON")] CreatureTemplateAddon = 37,
    [pbr::OriginalName("CUSTOM_TEXT")] CustomText = 38,
    [pbr::OriginalName("DISENCHANT_LOOT_TEMPLATE")] DisenchantLootTemplate = 39,
    [pbr::OriginalName("EVENT_SCRIPT")] EventScript = 40,
    [pbr::OriginalName("EXPLORATION_BASE_XP")] ExplorationBaseXp = 41,
    [pbr::OriginalName("FACTION")] Faction = 42,
    [pbr::OriginalName("FACTION_TEMPLATE")] FactionTemplate = 43,
    [pbr::OriginalName("FISHING_LOOT_TEMPLATE")] FishingLootTemplate = 44,
    [pbr::OriginalName("FORBIDDEN_ITEM")] ForbiddenItem = 45,
    [pbr::OriginalName("GAME_OBJECT")] GameObject = 46,
    [pbr::OriginalName("GAME_OBJECT_BATTLEGROUND")] GameObjectBattleground = 47,
    [pbr::OriginalName("GAME_OBJECT_INVOLVED_RELATION")] GameObjectInvolvedRelation = 48,
    [pbr::OriginalName("GAME_OBJECT_LOOT_TEMPLATE")] GameObjectLootTemplate = 49,
    [pbr::OriginalName("GAME_OBJECT_QUEST_RELATION")] GameObjectQuestRelation = 50,
    [pbr::OriginalName("GAME_OBJECT_REQUIREMENT")] GameObjectRequirement = 51,
    [pbr::OriginalName("GAME_OBJECT_SCRIPT")] GameObjectScript = 52,
    [pbr::OriginalName("GAME_OBJECT_TEMPLATE")] GameObjectTemplate = 53,
    [pbr::OriginalName("GAME_EVENT")] GameEvent = 54,
    [pbr::OriginalName("GAME_EVENT_CREATURE")] GameEventCreature = 55,
    [pbr::OriginalName("GAME_EVENT_GAME_OBJECT")] GameEventGameObject = 56,
    [pbr::OriginalName("GAME_EVENT_MAIL")] GameEventMail = 57,
    [pbr::OriginalName("GAME_EVENT_QUEST")] GameEventQuest = 58,
    [pbr::OriginalName("GAME_GRAVEYARD_ZONE")] GameGraveyardZone = 59,
    [pbr::OriginalName("GAME_TELE")] GameTele = 60,
    [pbr::OriginalName("GAME_WEATHER")] GameWeather = 61,
    [pbr::OriginalName("GM_SUB_SURVEY")] GmSubSurvey = 62,
    [pbr::OriginalName("GM_SURVEY")] GmSurvey = 63,
    [pbr::OriginalName("GM_TICKET")] GmTicket = 64,
    [pbr::OriginalName("GOSSIP_MENU")] GossipMenu = 65,
    [pbr::OriginalName("GOSSIP_MENU_OPTION")] GossipMenuOption = 66,
    [pbr::OriginalName("GOSSIP_SCRIPT")] GossipScript = 67,
    [pbr::OriginalName("INSTANCE_BUFF_REMOVAL")] InstanceBuffRemoval = 68,
    [pbr::OriginalName("INSTANCE_CREATURE_KILLS")] InstanceCreatureKills = 69,
    [pbr::OriginalName("INSTANCE_CUSTOM_COUNTER")] InstanceCustomCounter = 70,
    [pbr::OriginalName("INSTANCE_WIPE")] InstanceWipe = 71,
    [pbr::OriginalName("ITEM_DISPLAY_INFO")] ItemDisplayInfo = 72,
    [pbr::OriginalName("ITEM_ENCHANTMENT_TEMPLATE")] ItemEnchantmentTemplate = 73,
    [pbr::OriginalName("ITEM_LOOT_TEMPLATE")] ItemLootTemplate = 74,
    [pbr::OriginalName("ITEM_REQUIRED_TARGET")] ItemRequiredTarget = 75,
    [pbr::OriginalName("ITEM_TEMPLATE")] ItemTemplate = 76,
    [pbr::OriginalName("STAT")] Stat = 77,
    [pbr::OriginalName("DAMAGE")] Damage = 78,
    [pbr::OriginalName("RESISTANCE")] Resistance = 79,
    [pbr::OriginalName("SPELL")] Spell = 80,
    [pbr::OriginalName("LOCALES_AREA")] LocalesArea = 81,
    [pbr::OriginalName("LOCALES_BROADCAST_TEXT")] LocalesBroadcastText = 82,
    [pbr::OriginalName("LOCALES_CREATURE")] LocalesCreature = 83,
    [pbr::OriginalName("LOCALES_GAME_OBJECT")] LocalesGameObject = 84,
    [pbr::OriginalName("LOCALES_GOSSIP_MENU_OPTION")] LocalesGossipMenuOption = 85,
    [pbr::OriginalName("LOCALES_ITEM")] LocalesItem = 86,
    [pbr::OriginalName("LOCALES_PAGE_TEXT")] LocalesPageText = 87,
    [pbr::OriginalName("LOCALES_POINTS_OF_INTEREST")] LocalesPointsOfInterest = 88,
    [pbr::OriginalName("LOCALES_QUEST")] LocalesQuest = 89,
    [pbr::OriginalName("MAIL_LOOT_TEMPLATE")] MailLootTemplate = 90,
    [pbr::OriginalName("MANGOS_STRING")] MangosString = 91,
    [pbr::OriginalName("MAP_LOOT_DISABLED")] MapLootDisabled = 92,
    [pbr::OriginalName("MAP_TEMPLATE")] MapTemplate = 93,
    [pbr::OriginalName("MIGRATIONS")] Migrations = 94,
    [pbr::OriginalName("NPC_GOSSIP")] NpcGossip = 95,
    [pbr::OriginalName("NPC_TEXT")] NpcText = 96,
    [pbr::OriginalName("NPC_TRAINER")] NpcTrainer = 97,
    [pbr::OriginalName("NPC_TRAINER_TEMPLATE")] NpcTrainerTemplate = 98,
    [pbr::OriginalName("NPC_VENDOR")] NpcVendor = 99,
    [pbr::OriginalName("NPC_VENDOR_TEMPLATE")] NpcVendorTemplate = 100,
    [pbr::OriginalName("PAGE_TEXT")] PageText = 101,
    [pbr::OriginalName("PET_CREATE_INFO_SPELL")] PetCreateInfoSpell = 102,
    [pbr::OriginalName("PET_LEVEL_STATS")] PetLevelStats = 103,
    [pbr::OriginalName("PET_NAME_GENERATION")] PetNameGeneration = 104,
    [pbr::OriginalName("PICKPOCKETING_LOOT_TEMPLATE")] PickpocketingLootTemplate = 105,
    [pbr::OriginalName("PLAYER_BOT")] PlayerBot = 106,
    [pbr::OriginalName("PLAYER_CREATE_INFO")] PlayerCreateInfo = 107,
    [pbr::OriginalName("PLAYER_CREATE_INFO_ACTION")] PlayerCreateInfoAction = 108,
    [pbr::OriginalName("PLAYER_CREATE_INFO_ITEM")] PlayerCreateInfoItem = 109,
    [pbr::OriginalName("PLAYER_CREATE_INFO_SPELL")] PlayerCreateInfoSpell = 110,
    [pbr::OriginalName("PLAYER_CLASS_LEVEL_STATS")] PlayerClassLevelStats = 111,
    [pbr::OriginalName("PLAYER_FACTION_CHANGE_ITEMS")] PlayerFactionChangeItems = 112,
    [pbr::OriginalName("PLAYER_FACTION_CHANGE_MOUNTS")] PlayerFactionChangeMounts = 113,
    [pbr::OriginalName("PLAYER_FACTION_CHANGE_QUESTS")] PlayerFactionChangeQuests = 114,
    [pbr::OriginalName("PLAYER_FACTION_CHANGE_REPUTATIONS")] PlayerFactionChangeReputations = 115,
    [pbr::OriginalName("PLAYER_FACTION_CHANGE_SPELLS")] PlayerFactionChangeSpells = 116,
    [pbr::OriginalName("PLAYER_LEVEL_STATS")] PlayerLevelStats = 117,
    [pbr::OriginalName("PLAYER_XP_FOR_LEVEL")] PlayerXpForLevel = 118,
    [pbr::OriginalName("POINTS_OF_INTEREST")] PointsOfInterest = 119,
    [pbr::OriginalName("POOL_CREATURE")] PoolCreature = 120,
    [pbr::OriginalName("POOL_CREATURE_TEMPLATE")] PoolCreatureTemplate = 121,
    [pbr::OriginalName("POOL_GAME_OBJECT")] PoolGameObject = 122,
    [pbr::OriginalName("POOL_GAME_OBJECT_TEMPLATE")] PoolGameObjectTemplate = 123,
    [pbr::OriginalName("POOL_POOL")] PoolPool = 124,
    [pbr::OriginalName("POOL_TEMPLATE")] PoolTemplate = 125,
    [pbr::OriginalName("QUEST_END_SCRIPTS")] QuestEndScripts = 126,
    [pbr::OriginalName("QUEST_GREETING")] QuestGreeting = 127,
    [pbr::OriginalName("QUEST_START_SCRIPTS")] QuestStartScripts = 128,
    [pbr::OriginalName("QUEST_TEMPLATE")] QuestTemplate = 129,
    [pbr::OriginalName("REFERENCE_LOOT_TEMPLATE")] ReferenceLootTemplate = 130,
    [pbr::OriginalName("REPUTATION_REWARD_RATE")] ReputationRewardRate = 131,
    [pbr::OriginalName("REPUTATION_SPILLOVER_TEMPLATE")] ReputationSpilloverTemplate = 132,
    [pbr::OriginalName("RESERVED_NAME")] ReservedName = 133,
    [pbr::OriginalName("SCRIPTED_AREATRIGGER")] ScriptedAreatrigger = 134,
    [pbr::OriginalName("SCRIPTED_EVENT_ID")] ScriptedEventId = 135,
    [pbr::OriginalName("SCRIPT_ESCORT_DATA")] ScriptEscortData = 136,
    [pbr::OriginalName("SCRIPT_TEXT")] ScriptText = 137,
    [pbr::OriginalName("SCRIPT_WAYPOINT")] ScriptWaypoint = 138,
    [pbr::OriginalName("SKILL_DISCOVERY_TEMPLATE")] SkillDiscoveryTemplate = 139,
    [pbr::OriginalName("SKILL_EXTRA_ITEM_TEMPLATE")] SkillExtraItemTemplate = 140,
    [pbr::OriginalName("SKILL_FISHING_BASE_LEVEL")] SkillFishingBaseLevel = 141,
    [pbr::OriginalName("SKINNING_LOOT_TEMPLATE")] SkinningLootTemplate = 142,
    [pbr::OriginalName("SOUND_ENTRIES")] SoundEntries = 143,
    [pbr::OriginalName("SPELL_AFFECT")] SpellAffect = 144,
    [pbr::OriginalName("SPELL_AREA")] SpellArea = 145,
    [pbr::OriginalName("SPELL_BONUS_DATA")] SpellBonusData = 146,
    [pbr::OriginalName("SPELL_CHAIN")] SpellChain = 147,
    [pbr::OriginalName("SPELL_CHECK")] SpellCheck = 148,
    [pbr::OriginalName("SPELL_DISABLED")] SpellDisabled = 149,
    [pbr::OriginalName("SPELL_EFFECT_MOD")] SpellEffectMod = 150,
    [pbr::OriginalName("SPELL_ELIXIR")] SpellElixir = 151,
    [pbr::OriginalName("SPELL_FACING")] SpellFacing = 152,
    [pbr::OriginalName("SPELL_GROUP")] SpellGroup = 153,
    [pbr::OriginalName("SPELL_GROUP_STACK_RULES")] SpellGroupStackRules = 154,
    [pbr::OriginalName("SPELL_LEARN_SPELL")] SpellLearnSpell = 155,
    [pbr::OriginalName("SPELL_MOD")] SpellMod = 156,
    [pbr::OriginalName("SPELL_PET_AURA")] SpellPetAura = 157,
    [pbr::OriginalName("SPELL_PROC_EVENT")] SpellProcEvent = 158,
    [pbr::OriginalName("SPELL_PROC_ITEM_ENCHANT")] SpellProcItemEnchant = 159,
    [pbr::OriginalName("SPELL_SCRIPT")] SpellScript = 160,
    [pbr::OriginalName("SPELL_SCRIPT_TARGET")] SpellScriptTarget = 161,
    [pbr::OriginalName("SPELL_TARGET_POSITION")] SpellTargetPosition = 162,
    [pbr::OriginalName("SPELL_TEMPLATE")] SpellTemplate = 163,
    [pbr::OriginalName("SPELL_THREAT")] SpellThreat = 164,
    [pbr::OriginalName("TAXI_PATH_TRANSITION")] TaxiPathTransition = 165,
    [pbr::OriginalName("TRANSPORT")] Transport = 166,
    [pbr::OriginalName("VARIABLES")] Variables = 167,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DatabaseRequest : pb::IMessage<DatabaseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatabaseRequest> _parser = new pb::MessageParser<DatabaseRequest>(() => new DatabaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DatabaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseRequest(DatabaseRequest other) : this() {
      tableName_ = other.tableName_;
      key_ = other.key_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseRequest Clone() {
      return new DatabaseRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private global::Database.TableName tableName_ = global::Database.TableName.UnknownTable;
    /// <summary>
    /// Enum for selecting the table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Database.TableName TableName {
      get { return tableName_; }
      set {
        tableName_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Database.KeyValue> _repeated_key_codec
        = pb::FieldCodec.ForMessage(18, global::Database.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Database.KeyValue> key_ = new pbc::RepeatedField<global::Database.KeyValue>();
    /// <summary>
    /// List of key fields for multi-field keys
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Database.KeyValue> Key {
      get { return key_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DatabaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DatabaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!key_.Equals(other.key_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName != global::Database.TableName.UnknownTable) hash ^= TableName.GetHashCode();
      hash ^= key_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName != global::Database.TableName.UnknownTable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableName);
      }
      key_.WriteTo(output, _repeated_key_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName != global::Database.TableName.UnknownTable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableName);
      }
      key_.WriteTo(ref output, _repeated_key_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TableName != global::Database.TableName.UnknownTable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableName);
      }
      size += key_.CalculateSize(_repeated_key_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DatabaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName != global::Database.TableName.UnknownTable) {
        TableName = other.TableName;
      }
      key_.Add(other.key_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableName = (global::Database.TableName) input.ReadEnum();
            break;
          }
          case 18: {
            key_.AddEntriesFrom(input, _repeated_key_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableName = (global::Database.TableName) input.ReadEnum();
            break;
          }
          case 18: {
            key_.AddEntriesFrom(ref input, _repeated_key_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DatabaseResponse : pb::IMessage<DatabaseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatabaseResponse> _parser = new pb::MessageParser<DatabaseResponse>(() => new DatabaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DatabaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseResponse(DatabaseResponse other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DatabaseResponse Clone() {
      return new DatabaseResponse(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private global::Database.TableName tableName_ = global::Database.TableName.UnknownTable;
    /// <summary>
    /// Enum indicating which table the response data is from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Database.TableName TableName {
      get { return tableName_; }
      set {
        tableName_ = value;
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Database.DatabaseResponse.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Database.DatabaseResponse.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Database.DatabaseResponse.Types.Row> rows_ = new pbc::RepeatedField<global::Database.DatabaseResponse.Types.Row>();
    /// <summary>
    /// List of rows, each represented as a map of key-value pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Database.DatabaseResponse.Types.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    /// Error message if the request failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DatabaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DatabaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName != global::Database.TableName.UnknownTable) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName != global::Database.TableName.UnknownTable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName != global::Database.TableName.UnknownTable) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableName);
      }
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TableName != global::Database.TableName.UnknownTable) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DatabaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.TableName != global::Database.TableName.UnknownTable) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableName = (global::Database.TableName) input.ReadEnum();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableName = (global::Database.TableName) input.ReadEnum();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DatabaseResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Row : pb::IMessage<Row>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Database.DatabaseResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row(Row other) : this() {
          fields_ = other.fields_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Row Clone() {
          return new Row(this);
        }

        /// <summary>Field number for the "fields" field.</summary>
        public const int FieldsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Database.KeyValue> _repeated_fields_codec
            = pb::FieldCodec.ForMessage(10, global::Database.KeyValue.Parser);
        private readonly pbc::RepeatedField<global::Database.KeyValue> fields_ = new pbc::RepeatedField<global::Database.KeyValue>();
        /// <summary>
        /// Each row consists of multiple key-value pairs (fields)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Database.KeyValue> Fields {
          get { return fields_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Row other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!fields_.Equals(other.fields_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= fields_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          fields_.WriteTo(output, _repeated_fields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          fields_.WriteTo(ref output, _repeated_fields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += fields_.CalculateSize(_repeated_fields_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Row other) {
          if (other == null) {
            return;
          }
          fields_.Add(other.fields_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                fields_.AddEntriesFrom(input, _repeated_fields_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class KeyValue : pb::IMessage<KeyValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// Field name (e.g., "spellId", "name")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// Field value as a string; can be converted based on field type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AreaTriggerBgEntrance : pb::IMessage<AreaTriggerBgEntrance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaTriggerBgEntrance> _parser = new pb::MessageParser<AreaTriggerBgEntrance>(() => new AreaTriggerBgEntrance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaTriggerBgEntrance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerBgEntrance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerBgEntrance(AreaTriggerBgEntrance other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      team_ = other.team_;
      bgTemplate_ = other.bgTemplate_;
      exitMap_ = other.exitMap_;
      exitPositionX_ = other.exitPositionX_;
      exitPositionY_ = other.exitPositionY_;
      exitPositionZ_ = other.exitPositionZ_;
      exitOrientation_ = other.exitOrientation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerBgEntrance Clone() {
      return new AreaTriggerBgEntrance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the area trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 3;
    private uint team_;
    /// <summary>
    /// Team identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "bg_template" field.</summary>
    public const int BgTemplateFieldNumber = 4;
    private uint bgTemplate_;
    /// <summary>
    /// Battleground template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BgTemplate {
      get { return bgTemplate_; }
      set {
        bgTemplate_ = value;
      }
    }

    /// <summary>Field number for the "exit_map" field.</summary>
    public const int ExitMapFieldNumber = 5;
    private float exitMap_;
    /// <summary>
    /// Exit map ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExitMap {
      get { return exitMap_; }
      set {
        exitMap_ = value;
      }
    }

    /// <summary>Field number for the "exit_position_x" field.</summary>
    public const int ExitPositionXFieldNumber = 6;
    private float exitPositionX_;
    /// <summary>
    /// Exit position X coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExitPositionX {
      get { return exitPositionX_; }
      set {
        exitPositionX_ = value;
      }
    }

    /// <summary>Field number for the "exit_position_y" field.</summary>
    public const int ExitPositionYFieldNumber = 7;
    private float exitPositionY_;
    /// <summary>
    /// Exit position Y coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExitPositionY {
      get { return exitPositionY_; }
      set {
        exitPositionY_ = value;
      }
    }

    /// <summary>Field number for the "exit_position_z" field.</summary>
    public const int ExitPositionZFieldNumber = 8;
    private float exitPositionZ_;
    /// <summary>
    /// Exit position Z coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExitPositionZ {
      get { return exitPositionZ_; }
      set {
        exitPositionZ_ = value;
      }
    }

    /// <summary>Field number for the "exit_orientation" field.</summary>
    public const int ExitOrientationFieldNumber = 9;
    private float exitOrientation_;
    /// <summary>
    /// Exit orientation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ExitOrientation {
      get { return exitOrientation_; }
      set {
        exitOrientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaTriggerBgEntrance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaTriggerBgEntrance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Team != other.Team) return false;
      if (BgTemplate != other.BgTemplate) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExitMap, other.ExitMap)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExitPositionX, other.ExitPositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExitPositionY, other.ExitPositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExitPositionZ, other.ExitPositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExitOrientation, other.ExitOrientation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Team != 0) hash ^= Team.GetHashCode();
      if (BgTemplate != 0) hash ^= BgTemplate.GetHashCode();
      if (ExitMap != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExitMap);
      if (ExitPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExitPositionX);
      if (ExitPositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExitPositionY);
      if (ExitPositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExitPositionZ);
      if (ExitOrientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExitOrientation);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Team != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Team);
      }
      if (BgTemplate != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BgTemplate);
      }
      if (ExitMap != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ExitMap);
      }
      if (ExitPositionX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ExitPositionX);
      }
      if (ExitPositionY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ExitPositionY);
      }
      if (ExitPositionZ != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(ExitPositionZ);
      }
      if (ExitOrientation != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(ExitOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Team != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Team);
      }
      if (BgTemplate != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BgTemplate);
      }
      if (ExitMap != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ExitMap);
      }
      if (ExitPositionX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ExitPositionX);
      }
      if (ExitPositionY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ExitPositionY);
      }
      if (ExitPositionZ != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(ExitPositionZ);
      }
      if (ExitOrientation != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(ExitOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Team != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Team);
      }
      if (BgTemplate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BgTemplate);
      }
      if (ExitMap != 0F) {
        size += 1 + 4;
      }
      if (ExitPositionX != 0F) {
        size += 1 + 4;
      }
      if (ExitPositionY != 0F) {
        size += 1 + 4;
      }
      if (ExitPositionZ != 0F) {
        size += 1 + 4;
      }
      if (ExitOrientation != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaTriggerBgEntrance other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
      if (other.BgTemplate != 0) {
        BgTemplate = other.BgTemplate;
      }
      if (other.ExitMap != 0F) {
        ExitMap = other.ExitMap;
      }
      if (other.ExitPositionX != 0F) {
        ExitPositionX = other.ExitPositionX;
      }
      if (other.ExitPositionY != 0F) {
        ExitPositionY = other.ExitPositionY;
      }
      if (other.ExitPositionZ != 0F) {
        ExitPositionZ = other.ExitPositionZ;
      }
      if (other.ExitOrientation != 0F) {
        ExitOrientation = other.ExitOrientation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Team = input.ReadUInt32();
            break;
          }
          case 32: {
            BgTemplate = input.ReadUInt32();
            break;
          }
          case 45: {
            ExitMap = input.ReadFloat();
            break;
          }
          case 53: {
            ExitPositionX = input.ReadFloat();
            break;
          }
          case 61: {
            ExitPositionY = input.ReadFloat();
            break;
          }
          case 69: {
            ExitPositionZ = input.ReadFloat();
            break;
          }
          case 77: {
            ExitOrientation = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Team = input.ReadUInt32();
            break;
          }
          case 32: {
            BgTemplate = input.ReadUInt32();
            break;
          }
          case 45: {
            ExitMap = input.ReadFloat();
            break;
          }
          case 53: {
            ExitPositionX = input.ReadFloat();
            break;
          }
          case 61: {
            ExitPositionY = input.ReadFloat();
            break;
          }
          case 69: {
            ExitPositionZ = input.ReadFloat();
            break;
          }
          case 77: {
            ExitOrientation = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AreaTriggerInvolvedRelation : pb::IMessage<AreaTriggerInvolvedRelation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaTriggerInvolvedRelation> _parser = new pb::MessageParser<AreaTriggerInvolvedRelation>(() => new AreaTriggerInvolvedRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaTriggerInvolvedRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerInvolvedRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerInvolvedRelation(AreaTriggerInvolvedRelation other) : this() {
      id_ = other.id_;
      quest_ = other.quest_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerInvolvedRelation Clone() {
      return new AreaTriggerInvolvedRelation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaTriggerInvolvedRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaTriggerInvolvedRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quest != other.Quest) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaTriggerInvolvedRelation other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AreaTriggerTavern : pb::IMessage<AreaTriggerTavern>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaTriggerTavern> _parser = new pb::MessageParser<AreaTriggerTavern>(() => new AreaTriggerTavern());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaTriggerTavern> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTavern() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTavern(AreaTriggerTavern other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTavern Clone() {
      return new AreaTriggerTavern(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Tavern name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaTriggerTavern);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaTriggerTavern other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaTriggerTavern other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AreaTriggerTeleport : pb::IMessage<AreaTriggerTeleport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaTriggerTeleport> _parser = new pb::MessageParser<AreaTriggerTeleport>(() => new AreaTriggerTeleport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaTriggerTeleport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTeleport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTeleport(AreaTriggerTeleport other) : this() {
      id_ = other.id_;
      patch_ = other.patch_;
      name_ = other.name_;
      requiredLevel_ = other.requiredLevel_;
      requiredItem_ = other.requiredItem_;
      requiredItem2_ = other.requiredItem2_;
      requiredQuestDone_ = other.requiredQuestDone_;
      requiredEvent_ = other.requiredEvent_;
      requiredPvpRank_ = other.requiredPvpRank_;
      requiredTeam_ = other.requiredTeam_;
      requiredFailedText_ = other.requiredFailedText_;
      targetMap_ = other.targetMap_;
      targetPositionX_ = other.targetPositionX_;
      targetPositionY_ = other.targetPositionY_;
      targetPositionZ_ = other.targetPositionZ_;
      targetOrientation_ = other.targetOrientation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTriggerTeleport Clone() {
      return new AreaTriggerTeleport(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Name of the teleport trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "required_level" field.</summary>
    public const int RequiredLevelFieldNumber = 4;
    private uint requiredLevel_;
    /// <summary>
    /// Required level for teleport
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredLevel {
      get { return requiredLevel_; }
      set {
        requiredLevel_ = value;
      }
    }

    /// <summary>Field number for the "required_item" field.</summary>
    public const int RequiredItemFieldNumber = 5;
    private uint requiredItem_;
    /// <summary>
    /// Required item 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredItem {
      get { return requiredItem_; }
      set {
        requiredItem_ = value;
      }
    }

    /// <summary>Field number for the "required_item2" field.</summary>
    public const int RequiredItem2FieldNumber = 6;
    private uint requiredItem2_;
    /// <summary>
    /// Required item 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredItem2 {
      get { return requiredItem2_; }
      set {
        requiredItem2_ = value;
      }
    }

    /// <summary>Field number for the "required_quest_done" field.</summary>
    public const int RequiredQuestDoneFieldNumber = 7;
    private uint requiredQuestDone_;
    /// <summary>
    /// Required quest completed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredQuestDone {
      get { return requiredQuestDone_; }
      set {
        requiredQuestDone_ = value;
      }
    }

    /// <summary>Field number for the "required_event" field.</summary>
    public const int RequiredEventFieldNumber = 8;
    private int requiredEvent_;
    /// <summary>
    /// Required event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredEvent {
      get { return requiredEvent_; }
      set {
        requiredEvent_ = value;
      }
    }

    /// <summary>Field number for the "required_pvp_rank" field.</summary>
    public const int RequiredPvpRankFieldNumber = 9;
    private uint requiredPvpRank_;
    /// <summary>
    /// Required PvP rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredPvpRank {
      get { return requiredPvpRank_; }
      set {
        requiredPvpRank_ = value;
      }
    }

    /// <summary>Field number for the "required_team" field.</summary>
    public const int RequiredTeamFieldNumber = 10;
    private uint requiredTeam_;
    /// <summary>
    /// Required team
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredTeam {
      get { return requiredTeam_; }
      set {
        requiredTeam_ = value;
      }
    }

    /// <summary>Field number for the "required_failed_text" field.</summary>
    public const int RequiredFailedTextFieldNumber = 11;
    private string requiredFailedText_ = "";
    /// <summary>
    /// Text for failed requirement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequiredFailedText {
      get { return requiredFailedText_; }
      set {
        requiredFailedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_map" field.</summary>
    public const int TargetMapFieldNumber = 12;
    private uint targetMap_;
    /// <summary>
    /// Target map ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetMap {
      get { return targetMap_; }
      set {
        targetMap_ = value;
      }
    }

    /// <summary>Field number for the "target_position_x" field.</summary>
    public const int TargetPositionXFieldNumber = 13;
    private float targetPositionX_;
    /// <summary>
    /// Target position X
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionX {
      get { return targetPositionX_; }
      set {
        targetPositionX_ = value;
      }
    }

    /// <summary>Field number for the "target_position_y" field.</summary>
    public const int TargetPositionYFieldNumber = 14;
    private float targetPositionY_;
    /// <summary>
    /// Target position Y
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionY {
      get { return targetPositionY_; }
      set {
        targetPositionY_ = value;
      }
    }

    /// <summary>Field number for the "target_position_z" field.</summary>
    public const int TargetPositionZFieldNumber = 15;
    private float targetPositionZ_;
    /// <summary>
    /// Target position Z
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionZ {
      get { return targetPositionZ_; }
      set {
        targetPositionZ_ = value;
      }
    }

    /// <summary>Field number for the "target_orientation" field.</summary>
    public const int TargetOrientationFieldNumber = 16;
    private float targetOrientation_;
    /// <summary>
    /// Target orientation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetOrientation {
      get { return targetOrientation_; }
      set {
        targetOrientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaTriggerTeleport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaTriggerTeleport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Patch != other.Patch) return false;
      if (Name != other.Name) return false;
      if (RequiredLevel != other.RequiredLevel) return false;
      if (RequiredItem != other.RequiredItem) return false;
      if (RequiredItem2 != other.RequiredItem2) return false;
      if (RequiredQuestDone != other.RequiredQuestDone) return false;
      if (RequiredEvent != other.RequiredEvent) return false;
      if (RequiredPvpRank != other.RequiredPvpRank) return false;
      if (RequiredTeam != other.RequiredTeam) return false;
      if (RequiredFailedText != other.RequiredFailedText) return false;
      if (TargetMap != other.TargetMap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionX, other.TargetPositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionY, other.TargetPositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionZ, other.TargetPositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetOrientation, other.TargetOrientation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RequiredLevel != 0) hash ^= RequiredLevel.GetHashCode();
      if (RequiredItem != 0) hash ^= RequiredItem.GetHashCode();
      if (RequiredItem2 != 0) hash ^= RequiredItem2.GetHashCode();
      if (RequiredQuestDone != 0) hash ^= RequiredQuestDone.GetHashCode();
      if (RequiredEvent != 0) hash ^= RequiredEvent.GetHashCode();
      if (RequiredPvpRank != 0) hash ^= RequiredPvpRank.GetHashCode();
      if (RequiredTeam != 0) hash ^= RequiredTeam.GetHashCode();
      if (RequiredFailedText.Length != 0) hash ^= RequiredFailedText.GetHashCode();
      if (TargetMap != 0) hash ^= TargetMap.GetHashCode();
      if (TargetPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionX);
      if (TargetPositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionY);
      if (TargetPositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionZ);
      if (TargetOrientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetOrientation);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RequiredLevel);
      }
      if (RequiredItem != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RequiredItem);
      }
      if (RequiredItem2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RequiredItem2);
      }
      if (RequiredQuestDone != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(RequiredQuestDone);
      }
      if (RequiredEvent != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RequiredEvent);
      }
      if (RequiredPvpRank != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RequiredPvpRank);
      }
      if (RequiredTeam != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RequiredTeam);
      }
      if (RequiredFailedText.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RequiredFailedText);
      }
      if (TargetMap != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TargetMap);
      }
      if (TargetPositionX != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(TargetPositionX);
      }
      if (TargetPositionY != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(TargetPositionY);
      }
      if (TargetPositionZ != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(TargetPositionZ);
      }
      if (TargetOrientation != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(TargetOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RequiredLevel);
      }
      if (RequiredItem != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RequiredItem);
      }
      if (RequiredItem2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RequiredItem2);
      }
      if (RequiredQuestDone != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(RequiredQuestDone);
      }
      if (RequiredEvent != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RequiredEvent);
      }
      if (RequiredPvpRank != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RequiredPvpRank);
      }
      if (RequiredTeam != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RequiredTeam);
      }
      if (RequiredFailedText.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RequiredFailedText);
      }
      if (TargetMap != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TargetMap);
      }
      if (TargetPositionX != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(TargetPositionX);
      }
      if (TargetPositionY != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(TargetPositionY);
      }
      if (TargetPositionZ != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(TargetPositionZ);
      }
      if (TargetOrientation != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(TargetOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RequiredLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredLevel);
      }
      if (RequiredItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredItem);
      }
      if (RequiredItem2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredItem2);
      }
      if (RequiredQuestDone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredQuestDone);
      }
      if (RequiredEvent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredEvent);
      }
      if (RequiredPvpRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredPvpRank);
      }
      if (RequiredTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredTeam);
      }
      if (RequiredFailedText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequiredFailedText);
      }
      if (TargetMap != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetMap);
      }
      if (TargetPositionX != 0F) {
        size += 1 + 4;
      }
      if (TargetPositionY != 0F) {
        size += 1 + 4;
      }
      if (TargetPositionZ != 0F) {
        size += 1 + 4;
      }
      if (TargetOrientation != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaTriggerTeleport other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RequiredLevel != 0) {
        RequiredLevel = other.RequiredLevel;
      }
      if (other.RequiredItem != 0) {
        RequiredItem = other.RequiredItem;
      }
      if (other.RequiredItem2 != 0) {
        RequiredItem2 = other.RequiredItem2;
      }
      if (other.RequiredQuestDone != 0) {
        RequiredQuestDone = other.RequiredQuestDone;
      }
      if (other.RequiredEvent != 0) {
        RequiredEvent = other.RequiredEvent;
      }
      if (other.RequiredPvpRank != 0) {
        RequiredPvpRank = other.RequiredPvpRank;
      }
      if (other.RequiredTeam != 0) {
        RequiredTeam = other.RequiredTeam;
      }
      if (other.RequiredFailedText.Length != 0) {
        RequiredFailedText = other.RequiredFailedText;
      }
      if (other.TargetMap != 0) {
        TargetMap = other.TargetMap;
      }
      if (other.TargetPositionX != 0F) {
        TargetPositionX = other.TargetPositionX;
      }
      if (other.TargetPositionY != 0F) {
        TargetPositionY = other.TargetPositionY;
      }
      if (other.TargetPositionZ != 0F) {
        TargetPositionZ = other.TargetPositionZ;
      }
      if (other.TargetOrientation != 0F) {
        TargetOrientation = other.TargetOrientation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RequiredLevel = input.ReadUInt32();
            break;
          }
          case 40: {
            RequiredItem = input.ReadUInt32();
            break;
          }
          case 48: {
            RequiredItem2 = input.ReadUInt32();
            break;
          }
          case 56: {
            RequiredQuestDone = input.ReadUInt32();
            break;
          }
          case 64: {
            RequiredEvent = input.ReadInt32();
            break;
          }
          case 72: {
            RequiredPvpRank = input.ReadUInt32();
            break;
          }
          case 80: {
            RequiredTeam = input.ReadUInt32();
            break;
          }
          case 90: {
            RequiredFailedText = input.ReadString();
            break;
          }
          case 96: {
            TargetMap = input.ReadUInt32();
            break;
          }
          case 109: {
            TargetPositionX = input.ReadFloat();
            break;
          }
          case 117: {
            TargetPositionY = input.ReadFloat();
            break;
          }
          case 125: {
            TargetPositionZ = input.ReadFloat();
            break;
          }
          case 133: {
            TargetOrientation = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RequiredLevel = input.ReadUInt32();
            break;
          }
          case 40: {
            RequiredItem = input.ReadUInt32();
            break;
          }
          case 48: {
            RequiredItem2 = input.ReadUInt32();
            break;
          }
          case 56: {
            RequiredQuestDone = input.ReadUInt32();
            break;
          }
          case 64: {
            RequiredEvent = input.ReadInt32();
            break;
          }
          case 72: {
            RequiredPvpRank = input.ReadUInt32();
            break;
          }
          case 80: {
            RequiredTeam = input.ReadUInt32();
            break;
          }
          case 90: {
            RequiredFailedText = input.ReadString();
            break;
          }
          case 96: {
            TargetMap = input.ReadUInt32();
            break;
          }
          case 109: {
            TargetPositionX = input.ReadFloat();
            break;
          }
          case 117: {
            TargetPositionY = input.ReadFloat();
            break;
          }
          case 125: {
            TargetPositionZ = input.ReadFloat();
            break;
          }
          case 133: {
            TargetOrientation = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AreaTemplate : pb::IMessage<AreaTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AreaTemplate> _parser = new pb::MessageParser<AreaTemplate>(() => new AreaTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AreaTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTemplate(AreaTemplate other) : this() {
      entry_ = other.entry_;
      mapId_ = other.mapId_;
      zoneId_ = other.zoneId_;
      exploreFlag_ = other.exploreFlag_;
      flags_ = other.flags_;
      areaLevel_ = other.areaLevel_;
      name_ = other.name_;
      team_ = other.team_;
      liquidTypeId_ = other.liquidTypeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AreaTemplate Clone() {
      return new AreaTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private uint mapId_;
    /// <summary>
    /// Map ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private uint zoneId_;
    /// <summary>
    /// Zone ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "explore_flag" field.</summary>
    public const int ExploreFlagFieldNumber = 4;
    private uint exploreFlag_;
    /// <summary>
    /// Exploration flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExploreFlag {
      get { return exploreFlag_; }
      set {
        exploreFlag_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Area flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "area_level" field.</summary>
    public const int AreaLevelFieldNumber = 6;
    private int areaLevel_;
    /// <summary>
    /// Area level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaLevel {
      get { return areaLevel_; }
      set {
        areaLevel_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// Area name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 8;
    private uint team_;
    /// <summary>
    /// Team ID (faction, alliance/horde)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "liquid_type_id" field.</summary>
    public const int LiquidTypeIdFieldNumber = 9;
    private uint liquidTypeId_;
    /// <summary>
    /// Liquid type ID (water, lava, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LiquidTypeId {
      get { return liquidTypeId_; }
      set {
        liquidTypeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AreaTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AreaTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (MapId != other.MapId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (ExploreFlag != other.ExploreFlag) return false;
      if (Flags != other.Flags) return false;
      if (AreaLevel != other.AreaLevel) return false;
      if (Name != other.Name) return false;
      if (Team != other.Team) return false;
      if (LiquidTypeId != other.LiquidTypeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (ExploreFlag != 0) hash ^= ExploreFlag.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (AreaLevel != 0) hash ^= AreaLevel.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Team != 0) hash ^= Team.GetHashCode();
      if (LiquidTypeId != 0) hash ^= LiquidTypeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ZoneId);
      }
      if (ExploreFlag != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExploreFlag);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (AreaLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AreaLevel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Team != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Team);
      }
      if (LiquidTypeId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LiquidTypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ZoneId);
      }
      if (ExploreFlag != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExploreFlag);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (AreaLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AreaLevel);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Team != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Team);
      }
      if (LiquidTypeId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(LiquidTypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ZoneId);
      }
      if (ExploreFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExploreFlag);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (AreaLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaLevel);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Team != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Team);
      }
      if (LiquidTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LiquidTypeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AreaTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.ExploreFlag != 0) {
        ExploreFlag = other.ExploreFlag;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.AreaLevel != 0) {
        AreaLevel = other.AreaLevel;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
      if (other.LiquidTypeId != 0) {
        LiquidTypeId = other.LiquidTypeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadUInt32();
            break;
          }
          case 32: {
            ExploreFlag = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            AreaLevel = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Team = input.ReadUInt32();
            break;
          }
          case 72: {
            LiquidTypeId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadUInt32();
            break;
          }
          case 32: {
            ExploreFlag = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            AreaLevel = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Team = input.ReadUInt32();
            break;
          }
          case 72: {
            LiquidTypeId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuctionHouseBot : pb::IMessage<AuctionHouseBot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuctionHouseBot> _parser = new pb::MessageParser<AuctionHouseBot>(() => new AuctionHouseBot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuctionHouseBot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionHouseBot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionHouseBot(AuctionHouseBot other) : this() {
      item_ = other.item_;
      stack_ = other.stack_;
      bid_ = other.bid_;
      buyout_ = other.buyout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuctionHouseBot Clone() {
      return new AuctionHouseBot(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private int item_;
    /// <summary>
    /// ID of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "stack" field.</summary>
    public const int StackFieldNumber = 2;
    private int stack_;
    /// <summary>
    /// Stack size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stack {
      get { return stack_; }
      set {
        stack_ = value;
      }
    }

    /// <summary>Field number for the "bid" field.</summary>
    public const int BidFieldNumber = 3;
    private int bid_;
    /// <summary>
    /// Bid price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Bid {
      get { return bid_; }
      set {
        bid_ = value;
      }
    }

    /// <summary>Field number for the "buyout" field.</summary>
    public const int BuyoutFieldNumber = 4;
    private int buyout_;
    /// <summary>
    /// Buyout price (immediate purchase)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Buyout {
      get { return buyout_; }
      set {
        buyout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuctionHouseBot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuctionHouseBot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Item != other.Item) return false;
      if (Stack != other.Stack) return false;
      if (Bid != other.Bid) return false;
      if (Buyout != other.Buyout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Item != 0) hash ^= Item.GetHashCode();
      if (Stack != 0) hash ^= Stack.GetHashCode();
      if (Bid != 0) hash ^= Bid.GetHashCode();
      if (Buyout != 0) hash ^= Buyout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Item != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Item);
      }
      if (Stack != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stack);
      }
      if (Bid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bid);
      }
      if (Buyout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Buyout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Item != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Item);
      }
      if (Stack != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stack);
      }
      if (Bid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bid);
      }
      if (Buyout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Buyout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Item);
      }
      if (Stack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stack);
      }
      if (Bid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bid);
      }
      if (Buyout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Buyout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuctionHouseBot other) {
      if (other == null) {
        return;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.Stack != 0) {
        Stack = other.Stack;
      }
      if (other.Bid != 0) {
        Bid = other.Bid;
      }
      if (other.Buyout != 0) {
        Buyout = other.Buyout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Item = input.ReadInt32();
            break;
          }
          case 16: {
            Stack = input.ReadInt32();
            break;
          }
          case 24: {
            Bid = input.ReadInt32();
            break;
          }
          case 32: {
            Buyout = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Item = input.ReadInt32();
            break;
          }
          case 16: {
            Stack = input.ReadInt32();
            break;
          }
          case 24: {
            Bid = input.ReadInt32();
            break;
          }
          case 32: {
            Buyout = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AutoBroadcast : pb::IMessage<AutoBroadcast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoBroadcast> _parser = new pb::MessageParser<AutoBroadcast>(() => new AutoBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoBroadcast(AutoBroadcast other) : this() {
      delay_ = other.delay_;
      stringId_ = other.stringId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoBroadcast Clone() {
      return new AutoBroadcast(this);
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 1;
    private int delay_;
    /// <summary>
    /// Delay between broadcasts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "stringId" field.</summary>
    public const int StringIdFieldNumber = 2;
    private int stringId_;
    /// <summary>
    /// ID of the string to broadcast
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StringId {
      get { return stringId_; }
      set {
        stringId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 3;
    private string comments_ = "";
    /// <summary>
    /// Optional comments
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Delay != other.Delay) return false;
      if (StringId != other.StringId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (StringId != 0) hash ^= StringId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Delay != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Delay);
      }
      if (StringId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StringId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Delay != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Delay);
      }
      if (StringId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StringId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delay);
      }
      if (StringId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StringId);
      }
      if (Comments.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.StringId != 0) {
        StringId = other.StringId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Delay = input.ReadInt32();
            break;
          }
          case 16: {
            StringId = input.ReadInt32();
            break;
          }
          case 26: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Delay = input.ReadInt32();
            break;
          }
          case 16: {
            StringId = input.ReadInt32();
            break;
          }
          case 26: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattlegroundEvent : pb::IMessage<BattlegroundEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlegroundEvent> _parser = new pb::MessageParser<BattlegroundEvent>(() => new BattlegroundEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlegroundEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundEvent(BattlegroundEvent other) : this() {
      map_ = other.map_;
      event1_ = other.event1_;
      event2_ = other.event2_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundEvent Clone() {
      return new BattlegroundEvent(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private int map_;
    /// <summary>
    /// Battleground map ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "event1" field.</summary>
    public const int Event1FieldNumber = 2;
    private uint event1_;
    /// <summary>
    /// First event ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event1 {
      get { return event1_; }
      set {
        event1_ = value;
      }
    }

    /// <summary>Field number for the "event2" field.</summary>
    public const int Event2FieldNumber = 3;
    private uint event2_;
    /// <summary>
    /// Second event ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event2 {
      get { return event2_; }
      set {
        event2_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlegroundEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlegroundEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Map != other.Map) return false;
      if (Event1 != other.Event1) return false;
      if (Event2 != other.Event2) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Map != 0) hash ^= Map.GetHashCode();
      if (Event1 != 0) hash ^= Event1.GetHashCode();
      if (Event2 != 0) hash ^= Event2.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Map != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Map);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Map != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Map);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Map);
      }
      if (Event1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event1);
      }
      if (Event2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event2);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlegroundEvent other) {
      if (other == null) {
        return;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.Event1 != 0) {
        Event1 = other.Event1;
      }
      if (other.Event2 != 0) {
        Event2 = other.Event2;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Map = input.ReadInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Map = input.ReadInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattlegroundTemplate : pb::IMessage<BattlegroundTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlegroundTemplate> _parser = new pb::MessageParser<BattlegroundTemplate>(() => new BattlegroundTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlegroundTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundTemplate(BattlegroundTemplate other) : this() {
      id_ = other.id_;
      patch_ = other.patch_;
      minPlayersPerTeam_ = other.minPlayersPerTeam_;
      maxPlayersPerTeam_ = other.maxPlayersPerTeam_;
      minLvl_ = other.minLvl_;
      maxLvl_ = other.maxLvl_;
      allianceWinSpell_ = other.allianceWinSpell_;
      allianceLoseSpell_ = other.allianceLoseSpell_;
      hordeWinSpell_ = other.hordeWinSpell_;
      hordeLoseSpell_ = other.hordeLoseSpell_;
      allianceStartLoc_ = other.allianceStartLoc_;
      allianceStartO_ = other.allianceStartO_;
      hordeStartLoc_ = other.hordeStartLoc_;
      hordeStartO_ = other.hordeStartO_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlegroundTemplate Clone() {
      return new BattlegroundTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "minPlayersPerTeam" field.</summary>
    public const int MinPlayersPerTeamFieldNumber = 3;
    private uint minPlayersPerTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinPlayersPerTeam {
      get { return minPlayersPerTeam_; }
      set {
        minPlayersPerTeam_ = value;
      }
    }

    /// <summary>Field number for the "maxPlayersPerTeam" field.</summary>
    public const int MaxPlayersPerTeamFieldNumber = 4;
    private uint maxPlayersPerTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPlayersPerTeam {
      get { return maxPlayersPerTeam_; }
      set {
        maxPlayersPerTeam_ = value;
      }
    }

    /// <summary>Field number for the "minLvl" field.</summary>
    public const int MinLvlFieldNumber = 5;
    private uint minLvl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinLvl {
      get { return minLvl_; }
      set {
        minLvl_ = value;
      }
    }

    /// <summary>Field number for the "maxLvl" field.</summary>
    public const int MaxLvlFieldNumber = 6;
    private uint maxLvl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLvl {
      get { return maxLvl_; }
      set {
        maxLvl_ = value;
      }
    }

    /// <summary>Field number for the "allianceWinSpell" field.</summary>
    public const int AllianceWinSpellFieldNumber = 7;
    private uint allianceWinSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AllianceWinSpell {
      get { return allianceWinSpell_; }
      set {
        allianceWinSpell_ = value;
      }
    }

    /// <summary>Field number for the "allianceLoseSpell" field.</summary>
    public const int AllianceLoseSpellFieldNumber = 8;
    private uint allianceLoseSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AllianceLoseSpell {
      get { return allianceLoseSpell_; }
      set {
        allianceLoseSpell_ = value;
      }
    }

    /// <summary>Field number for the "hordeWinSpell" field.</summary>
    public const int HordeWinSpellFieldNumber = 9;
    private uint hordeWinSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HordeWinSpell {
      get { return hordeWinSpell_; }
      set {
        hordeWinSpell_ = value;
      }
    }

    /// <summary>Field number for the "hordeLoseSpell" field.</summary>
    public const int HordeLoseSpellFieldNumber = 10;
    private uint hordeLoseSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HordeLoseSpell {
      get { return hordeLoseSpell_; }
      set {
        hordeLoseSpell_ = value;
      }
    }

    /// <summary>Field number for the "allianceStartLoc" field.</summary>
    public const int AllianceStartLocFieldNumber = 11;
    private uint allianceStartLoc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AllianceStartLoc {
      get { return allianceStartLoc_; }
      set {
        allianceStartLoc_ = value;
      }
    }

    /// <summary>Field number for the "allianceStartO" field.</summary>
    public const int AllianceStartOFieldNumber = 12;
    private float allianceStartO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AllianceStartO {
      get { return allianceStartO_; }
      set {
        allianceStartO_ = value;
      }
    }

    /// <summary>Field number for the "hordeStartLoc" field.</summary>
    public const int HordeStartLocFieldNumber = 13;
    private uint hordeStartLoc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HordeStartLoc {
      get { return hordeStartLoc_; }
      set {
        hordeStartLoc_ = value;
      }
    }

    /// <summary>Field number for the "hordeStartO" field.</summary>
    public const int HordeStartOFieldNumber = 14;
    private float hordeStartO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HordeStartO {
      get { return hordeStartO_; }
      set {
        hordeStartO_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlegroundTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlegroundTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Patch != other.Patch) return false;
      if (MinPlayersPerTeam != other.MinPlayersPerTeam) return false;
      if (MaxPlayersPerTeam != other.MaxPlayersPerTeam) return false;
      if (MinLvl != other.MinLvl) return false;
      if (MaxLvl != other.MaxLvl) return false;
      if (AllianceWinSpell != other.AllianceWinSpell) return false;
      if (AllianceLoseSpell != other.AllianceLoseSpell) return false;
      if (HordeWinSpell != other.HordeWinSpell) return false;
      if (HordeLoseSpell != other.HordeLoseSpell) return false;
      if (AllianceStartLoc != other.AllianceStartLoc) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AllianceStartO, other.AllianceStartO)) return false;
      if (HordeStartLoc != other.HordeStartLoc) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HordeStartO, other.HordeStartO)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (MinPlayersPerTeam != 0) hash ^= MinPlayersPerTeam.GetHashCode();
      if (MaxPlayersPerTeam != 0) hash ^= MaxPlayersPerTeam.GetHashCode();
      if (MinLvl != 0) hash ^= MinLvl.GetHashCode();
      if (MaxLvl != 0) hash ^= MaxLvl.GetHashCode();
      if (AllianceWinSpell != 0) hash ^= AllianceWinSpell.GetHashCode();
      if (AllianceLoseSpell != 0) hash ^= AllianceLoseSpell.GetHashCode();
      if (HordeWinSpell != 0) hash ^= HordeWinSpell.GetHashCode();
      if (HordeLoseSpell != 0) hash ^= HordeLoseSpell.GetHashCode();
      if (AllianceStartLoc != 0) hash ^= AllianceStartLoc.GetHashCode();
      if (AllianceStartO != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AllianceStartO);
      if (HordeStartLoc != 0) hash ^= HordeStartLoc.GetHashCode();
      if (HordeStartO != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HordeStartO);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (MinPlayersPerTeam != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MinPlayersPerTeam);
      }
      if (MaxPlayersPerTeam != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxPlayersPerTeam);
      }
      if (MinLvl != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinLvl);
      }
      if (MaxLvl != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxLvl);
      }
      if (AllianceWinSpell != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(AllianceWinSpell);
      }
      if (AllianceLoseSpell != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AllianceLoseSpell);
      }
      if (HordeWinSpell != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(HordeWinSpell);
      }
      if (HordeLoseSpell != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(HordeLoseSpell);
      }
      if (AllianceStartLoc != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AllianceStartLoc);
      }
      if (AllianceStartO != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(AllianceStartO);
      }
      if (HordeStartLoc != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(HordeStartLoc);
      }
      if (HordeStartO != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(HordeStartO);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (MinPlayersPerTeam != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MinPlayersPerTeam);
      }
      if (MaxPlayersPerTeam != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxPlayersPerTeam);
      }
      if (MinLvl != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinLvl);
      }
      if (MaxLvl != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxLvl);
      }
      if (AllianceWinSpell != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(AllianceWinSpell);
      }
      if (AllianceLoseSpell != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AllianceLoseSpell);
      }
      if (HordeWinSpell != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(HordeWinSpell);
      }
      if (HordeLoseSpell != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(HordeLoseSpell);
      }
      if (AllianceStartLoc != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AllianceStartLoc);
      }
      if (AllianceStartO != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(AllianceStartO);
      }
      if (HordeStartLoc != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(HordeStartLoc);
      }
      if (HordeStartO != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(HordeStartO);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (MinPlayersPerTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinPlayersPerTeam);
      }
      if (MaxPlayersPerTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPlayersPerTeam);
      }
      if (MinLvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinLvl);
      }
      if (MaxLvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLvl);
      }
      if (AllianceWinSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AllianceWinSpell);
      }
      if (AllianceLoseSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AllianceLoseSpell);
      }
      if (HordeWinSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HordeWinSpell);
      }
      if (HordeLoseSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HordeLoseSpell);
      }
      if (AllianceStartLoc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AllianceStartLoc);
      }
      if (AllianceStartO != 0F) {
        size += 1 + 4;
      }
      if (HordeStartLoc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HordeStartLoc);
      }
      if (HordeStartO != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlegroundTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.MinPlayersPerTeam != 0) {
        MinPlayersPerTeam = other.MinPlayersPerTeam;
      }
      if (other.MaxPlayersPerTeam != 0) {
        MaxPlayersPerTeam = other.MaxPlayersPerTeam;
      }
      if (other.MinLvl != 0) {
        MinLvl = other.MinLvl;
      }
      if (other.MaxLvl != 0) {
        MaxLvl = other.MaxLvl;
      }
      if (other.AllianceWinSpell != 0) {
        AllianceWinSpell = other.AllianceWinSpell;
      }
      if (other.AllianceLoseSpell != 0) {
        AllianceLoseSpell = other.AllianceLoseSpell;
      }
      if (other.HordeWinSpell != 0) {
        HordeWinSpell = other.HordeWinSpell;
      }
      if (other.HordeLoseSpell != 0) {
        HordeLoseSpell = other.HordeLoseSpell;
      }
      if (other.AllianceStartLoc != 0) {
        AllianceStartLoc = other.AllianceStartLoc;
      }
      if (other.AllianceStartO != 0F) {
        AllianceStartO = other.AllianceStartO;
      }
      if (other.HordeStartLoc != 0) {
        HordeStartLoc = other.HordeStartLoc;
      }
      if (other.HordeStartO != 0F) {
        HordeStartO = other.HordeStartO;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            MinPlayersPerTeam = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxPlayersPerTeam = input.ReadUInt32();
            break;
          }
          case 40: {
            MinLvl = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxLvl = input.ReadUInt32();
            break;
          }
          case 56: {
            AllianceWinSpell = input.ReadUInt32();
            break;
          }
          case 64: {
            AllianceLoseSpell = input.ReadUInt32();
            break;
          }
          case 72: {
            HordeWinSpell = input.ReadUInt32();
            break;
          }
          case 80: {
            HordeLoseSpell = input.ReadUInt32();
            break;
          }
          case 88: {
            AllianceStartLoc = input.ReadUInt32();
            break;
          }
          case 101: {
            AllianceStartO = input.ReadFloat();
            break;
          }
          case 104: {
            HordeStartLoc = input.ReadUInt32();
            break;
          }
          case 117: {
            HordeStartO = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            MinPlayersPerTeam = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxPlayersPerTeam = input.ReadUInt32();
            break;
          }
          case 40: {
            MinLvl = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxLvl = input.ReadUInt32();
            break;
          }
          case 56: {
            AllianceWinSpell = input.ReadUInt32();
            break;
          }
          case 64: {
            AllianceLoseSpell = input.ReadUInt32();
            break;
          }
          case 72: {
            HordeWinSpell = input.ReadUInt32();
            break;
          }
          case 80: {
            HordeLoseSpell = input.ReadUInt32();
            break;
          }
          case 88: {
            AllianceStartLoc = input.ReadUInt32();
            break;
          }
          case 101: {
            AllianceStartO = input.ReadFloat();
            break;
          }
          case 104: {
            HordeStartLoc = input.ReadUInt32();
            break;
          }
          case 117: {
            HordeStartO = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BattlemasterEntry : pb::IMessage<BattlemasterEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlemasterEntry> _parser = new pb::MessageParser<BattlemasterEntry>(() => new BattlemasterEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlemasterEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlemasterEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlemasterEntry(BattlemasterEntry other) : this() {
      entry_ = other.entry_;
      bgTemplate_ = other.bgTemplate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlemasterEntry Clone() {
      return new BattlemasterEntry(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry of a creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "bg_template" field.</summary>
    public const int BgTemplateFieldNumber = 2;
    private uint bgTemplate_;
    /// <summary>
    /// Battleground template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BgTemplate {
      get { return bgTemplate_; }
      set {
        bgTemplate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlemasterEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlemasterEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (BgTemplate != other.BgTemplate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (BgTemplate != 0) hash ^= BgTemplate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (BgTemplate != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BgTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (BgTemplate != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BgTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (BgTemplate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BgTemplate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlemasterEntry other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.BgTemplate != 0) {
        BgTemplate = other.BgTemplate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            BgTemplate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            BgTemplate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BroadcastText : pb::IMessage<BroadcastText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BroadcastText> _parser = new pb::MessageParser<BroadcastText>(() => new BroadcastText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BroadcastText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BroadcastText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BroadcastText(BroadcastText other) : this() {
      id_ = other.id_;
      maleText_ = other.maleText_;
      femaleText_ = other.femaleText_;
      sound_ = other.sound_;
      type_ = other.type_;
      language_ = other.language_;
      emoteId0_ = other.emoteId0_;
      emoteId1_ = other.emoteId1_;
      emoteId2_ = other.emoteId2_;
      emoteDelay0_ = other.emoteDelay0_;
      emoteDelay1_ = other.emoteDelay1_;
      emoteDelay2_ = other.emoteDelay2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BroadcastText Clone() {
      return new BroadcastText(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Broadcast text ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "maleText" field.</summary>
    public const int MaleTextFieldNumber = 2;
    private string maleText_ = "";
    /// <summary>
    /// Male text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleText {
      get { return maleText_; }
      set {
        maleText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleText" field.</summary>
    public const int FemaleTextFieldNumber = 3;
    private string femaleText_ = "";
    /// <summary>
    /// Female text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleText {
      get { return femaleText_; }
      set {
        femaleText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound" field.</summary>
    public const int SoundFieldNumber = 4;
    private uint sound_;
    /// <summary>
    /// Sound ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sound {
      get { return sound_; }
      set {
        sound_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private uint type_;
    /// <summary>
    /// Type of the broadcast
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 6;
    private uint language_;
    /// <summary>
    /// Language ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "emoteId0" field.</summary>
    public const int EmoteId0FieldNumber = 7;
    private uint emoteId0_;
    /// <summary>
    /// First emote ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteId0 {
      get { return emoteId0_; }
      set {
        emoteId0_ = value;
      }
    }

    /// <summary>Field number for the "emoteId1" field.</summary>
    public const int EmoteId1FieldNumber = 8;
    private uint emoteId1_;
    /// <summary>
    /// Second emote ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteId1 {
      get { return emoteId1_; }
      set {
        emoteId1_ = value;
      }
    }

    /// <summary>Field number for the "emoteId2" field.</summary>
    public const int EmoteId2FieldNumber = 9;
    private uint emoteId2_;
    /// <summary>
    /// Third emote ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteId2 {
      get { return emoteId2_; }
      set {
        emoteId2_ = value;
      }
    }

    /// <summary>Field number for the "emoteDelay0" field.</summary>
    public const int EmoteDelay0FieldNumber = 10;
    private uint emoteDelay0_;
    /// <summary>
    /// Delay for first emote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteDelay0 {
      get { return emoteDelay0_; }
      set {
        emoteDelay0_ = value;
      }
    }

    /// <summary>Field number for the "emoteDelay1" field.</summary>
    public const int EmoteDelay1FieldNumber = 11;
    private uint emoteDelay1_;
    /// <summary>
    /// Delay for second emote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteDelay1 {
      get { return emoteDelay1_; }
      set {
        emoteDelay1_ = value;
      }
    }

    /// <summary>Field number for the "emoteDelay2" field.</summary>
    public const int EmoteDelay2FieldNumber = 12;
    private uint emoteDelay2_;
    /// <summary>
    /// Delay for third emote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteDelay2 {
      get { return emoteDelay2_; }
      set {
        emoteDelay2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BroadcastText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BroadcastText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MaleText != other.MaleText) return false;
      if (FemaleText != other.FemaleText) return false;
      if (Sound != other.Sound) return false;
      if (Type != other.Type) return false;
      if (Language != other.Language) return false;
      if (EmoteId0 != other.EmoteId0) return false;
      if (EmoteId1 != other.EmoteId1) return false;
      if (EmoteId2 != other.EmoteId2) return false;
      if (EmoteDelay0 != other.EmoteDelay0) return false;
      if (EmoteDelay1 != other.EmoteDelay1) return false;
      if (EmoteDelay2 != other.EmoteDelay2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MaleText.Length != 0) hash ^= MaleText.GetHashCode();
      if (FemaleText.Length != 0) hash ^= FemaleText.GetHashCode();
      if (Sound != 0) hash ^= Sound.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Language != 0) hash ^= Language.GetHashCode();
      if (EmoteId0 != 0) hash ^= EmoteId0.GetHashCode();
      if (EmoteId1 != 0) hash ^= EmoteId1.GetHashCode();
      if (EmoteId2 != 0) hash ^= EmoteId2.GetHashCode();
      if (EmoteDelay0 != 0) hash ^= EmoteDelay0.GetHashCode();
      if (EmoteDelay1 != 0) hash ^= EmoteDelay1.GetHashCode();
      if (EmoteDelay2 != 0) hash ^= EmoteDelay2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MaleText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaleText);
      }
      if (FemaleText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FemaleText);
      }
      if (Sound != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Language);
      }
      if (EmoteId0 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EmoteId0);
      }
      if (EmoteId1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(EmoteId1);
      }
      if (EmoteId2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EmoteId2);
      }
      if (EmoteDelay0 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(EmoteDelay0);
      }
      if (EmoteDelay1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(EmoteDelay1);
      }
      if (EmoteDelay2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(EmoteDelay2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MaleText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaleText);
      }
      if (FemaleText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FemaleText);
      }
      if (Sound != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Language);
      }
      if (EmoteId0 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EmoteId0);
      }
      if (EmoteId1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(EmoteId1);
      }
      if (EmoteId2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EmoteId2);
      }
      if (EmoteDelay0 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(EmoteDelay0);
      }
      if (EmoteDelay1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(EmoteDelay1);
      }
      if (EmoteDelay2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(EmoteDelay2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (MaleText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleText);
      }
      if (FemaleText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleText);
      }
      if (Sound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sound);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Language != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Language);
      }
      if (EmoteId0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteId0);
      }
      if (EmoteId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteId1);
      }
      if (EmoteId2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteId2);
      }
      if (EmoteDelay0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteDelay0);
      }
      if (EmoteDelay1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteDelay1);
      }
      if (EmoteDelay2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteDelay2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BroadcastText other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MaleText.Length != 0) {
        MaleText = other.MaleText;
      }
      if (other.FemaleText.Length != 0) {
        FemaleText = other.FemaleText;
      }
      if (other.Sound != 0) {
        Sound = other.Sound;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Language != 0) {
        Language = other.Language;
      }
      if (other.EmoteId0 != 0) {
        EmoteId0 = other.EmoteId0;
      }
      if (other.EmoteId1 != 0) {
        EmoteId1 = other.EmoteId1;
      }
      if (other.EmoteId2 != 0) {
        EmoteId2 = other.EmoteId2;
      }
      if (other.EmoteDelay0 != 0) {
        EmoteDelay0 = other.EmoteDelay0;
      }
      if (other.EmoteDelay1 != 0) {
        EmoteDelay1 = other.EmoteDelay1;
      }
      if (other.EmoteDelay2 != 0) {
        EmoteDelay2 = other.EmoteDelay2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            MaleText = input.ReadString();
            break;
          }
          case 26: {
            FemaleText = input.ReadString();
            break;
          }
          case 32: {
            Sound = input.ReadUInt32();
            break;
          }
          case 40: {
            Type = input.ReadUInt32();
            break;
          }
          case 48: {
            Language = input.ReadUInt32();
            break;
          }
          case 56: {
            EmoteId0 = input.ReadUInt32();
            break;
          }
          case 64: {
            EmoteId1 = input.ReadUInt32();
            break;
          }
          case 72: {
            EmoteId2 = input.ReadUInt32();
            break;
          }
          case 80: {
            EmoteDelay0 = input.ReadUInt32();
            break;
          }
          case 88: {
            EmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 96: {
            EmoteDelay2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            MaleText = input.ReadString();
            break;
          }
          case 26: {
            FemaleText = input.ReadString();
            break;
          }
          case 32: {
            Sound = input.ReadUInt32();
            break;
          }
          case 40: {
            Type = input.ReadUInt32();
            break;
          }
          case 48: {
            Language = input.ReadUInt32();
            break;
          }
          case 56: {
            EmoteId0 = input.ReadUInt32();
            break;
          }
          case 64: {
            EmoteId1 = input.ReadUInt32();
            break;
          }
          case 72: {
            EmoteId2 = input.ReadUInt32();
            break;
          }
          case 80: {
            EmoteDelay0 = input.ReadUInt32();
            break;
          }
          case 88: {
            EmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 96: {
            EmoteDelay2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CinematicWaypoint : pb::IMessage<CinematicWaypoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CinematicWaypoint> _parser = new pb::MessageParser<CinematicWaypoint>(() => new CinematicWaypoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CinematicWaypoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CinematicWaypoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CinematicWaypoint(CinematicWaypoint other) : this() {
      cinematic_ = other.cinematic_;
      timer_ = other.timer_;
      posx_ = other.posx_;
      posy_ = other.posy_;
      posz_ = other.posz_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CinematicWaypoint Clone() {
      return new CinematicWaypoint(this);
    }

    /// <summary>Field number for the "cinematic" field.</summary>
    public const int CinematicFieldNumber = 1;
    private int cinematic_;
    /// <summary>
    /// Identifier for the cinematic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cinematic {
      get { return cinematic_; }
      set {
        cinematic_ = value;
      }
    }

    /// <summary>Field number for the "timer" field.</summary>
    public const int TimerFieldNumber = 2;
    private int timer_;
    /// <summary>
    /// Timer value associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timer {
      get { return timer_; }
      set {
        timer_ = value;
      }
    }

    /// <summary>Field number for the "posx" field.</summary>
    public const int PosxFieldNumber = 3;
    private float posx_;
    /// <summary>
    /// X position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Posx {
      get { return posx_; }
      set {
        posx_ = value;
      }
    }

    /// <summary>Field number for the "posy" field.</summary>
    public const int PosyFieldNumber = 4;
    private float posy_;
    /// <summary>
    /// Y position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Posy {
      get { return posy_; }
      set {
        posy_ = value;
      }
    }

    /// <summary>Field number for the "posz" field.</summary>
    public const int PoszFieldNumber = 5;
    private float posz_;
    /// <summary>
    /// Z position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Posz {
      get { return posz_; }
      set {
        posz_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 6;
    private string comment_ = "";
    /// <summary>
    /// Optional comment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CinematicWaypoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CinematicWaypoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cinematic != other.Cinematic) return false;
      if (Timer != other.Timer) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Posx, other.Posx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Posy, other.Posy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Posz, other.Posz)) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cinematic != 0) hash ^= Cinematic.GetHashCode();
      if (Timer != 0) hash ^= Timer.GetHashCode();
      if (Posx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Posx);
      if (Posy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Posy);
      if (Posz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Posz);
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cinematic != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cinematic);
      }
      if (Timer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timer);
      }
      if (Posx != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Posx);
      }
      if (Posy != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Posy);
      }
      if (Posz != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Posz);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cinematic != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cinematic);
      }
      if (Timer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timer);
      }
      if (Posx != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Posx);
      }
      if (Posy != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Posy);
      }
      if (Posz != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Posz);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cinematic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cinematic);
      }
      if (Timer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timer);
      }
      if (Posx != 0F) {
        size += 1 + 4;
      }
      if (Posy != 0F) {
        size += 1 + 4;
      }
      if (Posz != 0F) {
        size += 1 + 4;
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CinematicWaypoint other) {
      if (other == null) {
        return;
      }
      if (other.Cinematic != 0) {
        Cinematic = other.Cinematic;
      }
      if (other.Timer != 0) {
        Timer = other.Timer;
      }
      if (other.Posx != 0F) {
        Posx = other.Posx;
      }
      if (other.Posy != 0F) {
        Posy = other.Posy;
      }
      if (other.Posz != 0F) {
        Posz = other.Posz;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cinematic = input.ReadInt32();
            break;
          }
          case 16: {
            Timer = input.ReadInt32();
            break;
          }
          case 29: {
            Posx = input.ReadFloat();
            break;
          }
          case 37: {
            Posy = input.ReadFloat();
            break;
          }
          case 45: {
            Posz = input.ReadFloat();
            break;
          }
          case 50: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cinematic = input.ReadInt32();
            break;
          }
          case 16: {
            Timer = input.ReadInt32();
            break;
          }
          case 29: {
            Posx = input.ReadFloat();
            break;
          }
          case 37: {
            Posy = input.ReadFloat();
            break;
          }
          case 45: {
            Posz = input.ReadFloat();
            break;
          }
          case 50: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Command : pb::IMessage<Command>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command(Command other) : this() {
      name_ = other.name_;
      security_ = other.security_;
      help_ = other.help_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Command name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "security" field.</summary>
    public const int SecurityFieldNumber = 2;
    private uint security_;
    /// <summary>
    /// Security level required to use the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Security {
      get { return security_; }
      set {
        security_ = value;
      }
    }

    /// <summary>Field number for the "help" field.</summary>
    public const int HelpFieldNumber = 3;
    private string help_ = "";
    /// <summary>
    /// Help description for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Help {
      get { return help_; }
      set {
        help_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    private int flags_;
    /// <summary>
    /// Flags representing command-specific settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Security != other.Security) return false;
      if (Help != other.Help) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Security != 0) hash ^= Security.GetHashCode();
      if (Help.Length != 0) hash ^= Help.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Security != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Security);
      }
      if (Help.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Help);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Security != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Security);
      }
      if (Help.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Help);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Security != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Security);
      }
      if (Help.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Help);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Security != 0) {
        Security = other.Security;
      }
      if (other.Help.Length != 0) {
        Help = other.Help;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Security = input.ReadUInt32();
            break;
          }
          case 26: {
            Help = input.ReadString();
            break;
          }
          case 32: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Security = input.ReadUInt32();
            break;
          }
          case 26: {
            Help = input.ReadString();
            break;
          }
          case 32: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Condition : pb::IMessage<Condition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Condition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Condition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Condition(Condition other) : this() {
      conditionEntry_ = other.conditionEntry_;
      type_ = other.type_;
      value1_ = other.value1_;
      value2_ = other.value2_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Condition Clone() {
      return new Condition(this);
    }

    /// <summary>Field number for the "condition_entry" field.</summary>
    public const int ConditionEntryFieldNumber = 1;
    private uint conditionEntry_;
    /// <summary>
    /// Unique identifier for the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionEntry {
      get { return conditionEntry_; }
      set {
        conditionEntry_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    /// Type of the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value1" field.</summary>
    public const int Value1FieldNumber = 3;
    private uint value1_;
    /// <summary>
    /// Data field one for the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Value1 {
      get { return value1_; }
      set {
        value1_ = value;
      }
    }

    /// <summary>Field number for the "value2" field.</summary>
    public const int Value2FieldNumber = 4;
    private uint value2_;
    /// <summary>
    /// Data field two for the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Value2 {
      get { return value2_; }
      set {
        value2_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// General condition flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Condition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Condition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConditionEntry != other.ConditionEntry) return false;
      if (Type != other.Type) return false;
      if (Value1 != other.Value1) return false;
      if (Value2 != other.Value2) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ConditionEntry != 0) hash ^= ConditionEntry.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value1 != 0) hash ^= Value1.GetHashCode();
      if (Value2 != 0) hash ^= Value2.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConditionEntry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ConditionEntry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Value1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Value1);
      }
      if (Value2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Value2);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConditionEntry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ConditionEntry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Value1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Value1);
      }
      if (Value2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Value2);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ConditionEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionEntry);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Value1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value1);
      }
      if (Value2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value2);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Condition other) {
      if (other == null) {
        return;
      }
      if (other.ConditionEntry != 0) {
        ConditionEntry = other.ConditionEntry;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value1 != 0) {
        Value1 = other.Value1;
      }
      if (other.Value2 != 0) {
        Value2 = other.Value2;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConditionEntry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Value1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Value2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConditionEntry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Value1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Value2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Creature : pb::IMessage<Creature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Creature> _parser = new pb::MessageParser<Creature>(() => new Creature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Creature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Creature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Creature(Creature other) : this() {
      guid_ = other.guid_;
      id_ = other.id_;
      map_ = other.map_;
      modelid_ = other.modelid_;
      equipmentId_ = other.equipmentId_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      orientation_ = other.orientation_;
      spawntimesecsmin_ = other.spawntimesecsmin_;
      spawntimesecsmax_ = other.spawntimesecsmax_;
      spawndist_ = other.spawndist_;
      currentwaypoint_ = other.currentwaypoint_;
      curhealth_ = other.curhealth_;
      curmana_ = other.curmana_;
      deathState_ = other.deathState_;
      movementType_ = other.movementType_;
      spawnFlags_ = other.spawnFlags_;
      visibilitymod_ = other.visibilitymod_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Creature Clone() {
      return new Creature(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    /// <summary>
    /// Creature Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 3;
    private uint map_;
    /// <summary>
    /// Map Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "modelid" field.</summary>
    public const int ModelidFieldNumber = 4;
    private uint modelid_;
    /// <summary>
    /// Model Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modelid {
      get { return modelid_; }
      set {
        modelid_ = value;
      }
    }

    /// <summary>Field number for the "equipment_id" field.</summary>
    public const int EquipmentIdFieldNumber = 5;
    private uint equipmentId_;
    /// <summary>
    /// Equipment ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EquipmentId {
      get { return equipmentId_; }
      set {
        equipmentId_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 6;
    private float positionX_;
    /// <summary>
    /// X position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 7;
    private float positionY_;
    /// <summary>
    /// Y position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 8;
    private float positionZ_;
    /// <summary>
    /// Z position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 9;
    private float orientation_;
    /// <summary>
    /// Orientation in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "spawntimesecsmin" field.</summary>
    public const int SpawntimesecsminFieldNumber = 10;
    private uint spawntimesecsmin_;
    /// <summary>
    /// Min spawn time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spawntimesecsmin {
      get { return spawntimesecsmin_; }
      set {
        spawntimesecsmin_ = value;
      }
    }

    /// <summary>Field number for the "spawntimesecsmax" field.</summary>
    public const int SpawntimesecsmaxFieldNumber = 11;
    private uint spawntimesecsmax_;
    /// <summary>
    /// Max spawn time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spawntimesecsmax {
      get { return spawntimesecsmax_; }
      set {
        spawntimesecsmax_ = value;
      }
    }

    /// <summary>Field number for the "spawndist" field.</summary>
    public const int SpawndistFieldNumber = 12;
    private float spawndist_;
    /// <summary>
    /// Spawn distance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Spawndist {
      get { return spawndist_; }
      set {
        spawndist_ = value;
      }
    }

    /// <summary>Field number for the "currentwaypoint" field.</summary>
    public const int CurrentwaypointFieldNumber = 13;
    private uint currentwaypoint_;
    /// <summary>
    /// Current waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Currentwaypoint {
      get { return currentwaypoint_; }
      set {
        currentwaypoint_ = value;
      }
    }

    /// <summary>Field number for the "curhealth" field.</summary>
    public const int CurhealthFieldNumber = 14;
    private uint curhealth_;
    /// <summary>
    /// Current health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Curhealth {
      get { return curhealth_; }
      set {
        curhealth_ = value;
      }
    }

    /// <summary>Field number for the "curmana" field.</summary>
    public const int CurmanaFieldNumber = 15;
    private uint curmana_;
    /// <summary>
    /// Current mana
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Curmana {
      get { return curmana_; }
      set {
        curmana_ = value;
      }
    }

    /// <summary>Field number for the "deathState" field.</summary>
    public const int DeathStateFieldNumber = 16;
    private uint deathState_;
    /// <summary>
    /// Death state (alive/dead)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DeathState {
      get { return deathState_; }
      set {
        deathState_ = value;
      }
    }

    /// <summary>Field number for the "movementType" field.</summary>
    public const int MovementTypeFieldNumber = 17;
    private uint movementType_;
    /// <summary>
    /// Movement type (walking, running, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MovementType {
      get { return movementType_; }
      set {
        movementType_ = value;
      }
    }

    /// <summary>Field number for the "spawnFlags" field.</summary>
    public const int SpawnFlagsFieldNumber = 18;
    private uint spawnFlags_;
    /// <summary>
    /// Spawn flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpawnFlags {
      get { return spawnFlags_; }
      set {
        spawnFlags_ = value;
      }
    }

    /// <summary>Field number for the "visibilitymod" field.</summary>
    public const int VisibilitymodFieldNumber = 19;
    private float visibilitymod_;
    /// <summary>
    /// Visibility modifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Visibilitymod {
      get { return visibilitymod_; }
      set {
        visibilitymod_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 20;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 21;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Creature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Creature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (Map != other.Map) return false;
      if (Modelid != other.Modelid) return false;
      if (EquipmentId != other.EquipmentId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (Spawntimesecsmin != other.Spawntimesecsmin) return false;
      if (Spawntimesecsmax != other.Spawntimesecsmax) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Spawndist, other.Spawndist)) return false;
      if (Currentwaypoint != other.Currentwaypoint) return false;
      if (Curhealth != other.Curhealth) return false;
      if (Curmana != other.Curmana) return false;
      if (DeathState != other.DeathState) return false;
      if (MovementType != other.MovementType) return false;
      if (SpawnFlags != other.SpawnFlags) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Visibilitymod, other.Visibilitymod)) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Map != 0) hash ^= Map.GetHashCode();
      if (Modelid != 0) hash ^= Modelid.GetHashCode();
      if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Spawntimesecsmin != 0) hash ^= Spawntimesecsmin.GetHashCode();
      if (Spawntimesecsmax != 0) hash ^= Spawntimesecsmax.GetHashCode();
      if (Spawndist != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Spawndist);
      if (Currentwaypoint != 0) hash ^= Currentwaypoint.GetHashCode();
      if (Curhealth != 0) hash ^= Curhealth.GetHashCode();
      if (Curmana != 0) hash ^= Curmana.GetHashCode();
      if (DeathState != 0) hash ^= DeathState.GetHashCode();
      if (MovementType != 0) hash ^= MovementType.GetHashCode();
      if (SpawnFlags != 0) hash ^= SpawnFlags.GetHashCode();
      if (Visibilitymod != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Visibilitymod);
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (Modelid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modelid);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EquipmentId);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Orientation);
      }
      if (Spawntimesecsmin != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Spawntimesecsmax);
      }
      if (Spawndist != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Spawndist);
      }
      if (Currentwaypoint != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Currentwaypoint);
      }
      if (Curhealth != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Curhealth);
      }
      if (Curmana != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Curmana);
      }
      if (DeathState != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(DeathState);
      }
      if (MovementType != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MovementType);
      }
      if (SpawnFlags != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Visibilitymod);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (Modelid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Modelid);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EquipmentId);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Orientation);
      }
      if (Spawntimesecsmin != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Spawntimesecsmax);
      }
      if (Spawndist != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Spawndist);
      }
      if (Currentwaypoint != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Currentwaypoint);
      }
      if (Curhealth != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Curhealth);
      }
      if (Curmana != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Curmana);
      }
      if (DeathState != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(DeathState);
      }
      if (MovementType != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MovementType);
      }
      if (SpawnFlags != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(Visibilitymod);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (Modelid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modelid);
      }
      if (EquipmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquipmentId);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Spawntimesecsmin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawntimesecsmax);
      }
      if (Spawndist != 0F) {
        size += 1 + 4;
      }
      if (Currentwaypoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Currentwaypoint);
      }
      if (Curhealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Curhealth);
      }
      if (Curmana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Curmana);
      }
      if (DeathState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DeathState);
      }
      if (MovementType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MovementType);
      }
      if (SpawnFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        size += 2 + 4;
      }
      if (PatchMin != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Creature other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.Modelid != 0) {
        Modelid = other.Modelid;
      }
      if (other.EquipmentId != 0) {
        EquipmentId = other.EquipmentId;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Spawntimesecsmin != 0) {
        Spawntimesecsmin = other.Spawntimesecsmin;
      }
      if (other.Spawntimesecsmax != 0) {
        Spawntimesecsmax = other.Spawntimesecsmax;
      }
      if (other.Spawndist != 0F) {
        Spawndist = other.Spawndist;
      }
      if (other.Currentwaypoint != 0) {
        Currentwaypoint = other.Currentwaypoint;
      }
      if (other.Curhealth != 0) {
        Curhealth = other.Curhealth;
      }
      if (other.Curmana != 0) {
        Curmana = other.Curmana;
      }
      if (other.DeathState != 0) {
        DeathState = other.DeathState;
      }
      if (other.MovementType != 0) {
        MovementType = other.MovementType;
      }
      if (other.SpawnFlags != 0) {
        SpawnFlags = other.SpawnFlags;
      }
      if (other.Visibilitymod != 0F) {
        Visibilitymod = other.Visibilitymod;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 32: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 40: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 53: {
            PositionX = input.ReadFloat();
            break;
          }
          case 61: {
            PositionY = input.ReadFloat();
            break;
          }
          case 69: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 77: {
            Orientation = input.ReadFloat();
            break;
          }
          case 80: {
            Spawntimesecsmin = input.ReadUInt32();
            break;
          }
          case 88: {
            Spawntimesecsmax = input.ReadUInt32();
            break;
          }
          case 101: {
            Spawndist = input.ReadFloat();
            break;
          }
          case 104: {
            Currentwaypoint = input.ReadUInt32();
            break;
          }
          case 112: {
            Curhealth = input.ReadUInt32();
            break;
          }
          case 120: {
            Curmana = input.ReadUInt32();
            break;
          }
          case 128: {
            DeathState = input.ReadUInt32();
            break;
          }
          case 136: {
            MovementType = input.ReadUInt32();
            break;
          }
          case 144: {
            SpawnFlags = input.ReadUInt32();
            break;
          }
          case 157: {
            Visibilitymod = input.ReadFloat();
            break;
          }
          case 160: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 168: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 32: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 40: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 53: {
            PositionX = input.ReadFloat();
            break;
          }
          case 61: {
            PositionY = input.ReadFloat();
            break;
          }
          case 69: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 77: {
            Orientation = input.ReadFloat();
            break;
          }
          case 80: {
            Spawntimesecsmin = input.ReadUInt32();
            break;
          }
          case 88: {
            Spawntimesecsmax = input.ReadUInt32();
            break;
          }
          case 101: {
            Spawndist = input.ReadFloat();
            break;
          }
          case 104: {
            Currentwaypoint = input.ReadUInt32();
            break;
          }
          case 112: {
            Curhealth = input.ReadUInt32();
            break;
          }
          case 120: {
            Curmana = input.ReadUInt32();
            break;
          }
          case 128: {
            DeathState = input.ReadUInt32();
            break;
          }
          case 136: {
            MovementType = input.ReadUInt32();
            break;
          }
          case 144: {
            SpawnFlags = input.ReadUInt32();
            break;
          }
          case 157: {
            Visibilitymod = input.ReadFloat();
            break;
          }
          case 160: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 168: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureAddon : pb::IMessage<CreatureAddon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureAddon> _parser = new pb::MessageParser<CreatureAddon>(() => new CreatureAddon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureAddon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAddon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAddon(CreatureAddon other) : this() {
      guid_ = other.guid_;
      patch_ = other.patch_;
      mount_ = other.mount_;
      bytes1_ = other.bytes1_;
      b20Sheath_ = other.b20Sheath_;
      b21Flags_ = other.b21Flags_;
      emote_ = other.emote_;
      moveflags_ = other.moveflags_;
      auras_ = other.auras_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAddon Clone() {
      return new CreatureAddon(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "mount" field.</summary>
    public const int MountFieldNumber = 3;
    private uint mount_;
    /// <summary>
    /// Mount ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mount {
      get { return mount_; }
      set {
        mount_ = value;
      }
    }

    /// <summary>Field number for the "bytes1" field.</summary>
    public const int Bytes1FieldNumber = 4;
    private uint bytes1_;
    /// <summary>
    /// Miscellaneous byte flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bytes1 {
      get { return bytes1_; }
      set {
        bytes1_ = value;
      }
    }

    /// <summary>Field number for the "b2_0_sheath" field.</summary>
    public const int B20SheathFieldNumber = 5;
    private uint b20Sheath_;
    /// <summary>
    /// Sheath state (weapons equipped or not)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint B20Sheath {
      get { return b20Sheath_; }
      set {
        b20Sheath_ = value;
      }
    }

    /// <summary>Field number for the "b2_1_flags" field.</summary>
    public const int B21FlagsFieldNumber = 6;
    private uint b21Flags_;
    /// <summary>
    /// Additional creature flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint B21Flags {
      get { return b21Flags_; }
      set {
        b21Flags_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 7;
    private uint emote_;
    /// <summary>
    /// Current emote (e.g., waving, cheering)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "moveflags" field.</summary>
    public const int MoveflagsFieldNumber = 8;
    private uint moveflags_;
    /// <summary>
    /// Movement flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Moveflags {
      get { return moveflags_; }
      set {
        moveflags_ = value;
      }
    }

    /// <summary>Field number for the "auras" field.</summary>
    public const int AurasFieldNumber = 9;
    private string auras_ = "";
    /// <summary>
    /// Active auras (as a text field containing aura data)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Auras {
      get { return auras_; }
      set {
        auras_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureAddon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureAddon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Patch != other.Patch) return false;
      if (Mount != other.Mount) return false;
      if (Bytes1 != other.Bytes1) return false;
      if (B20Sheath != other.B20Sheath) return false;
      if (B21Flags != other.B21Flags) return false;
      if (Emote != other.Emote) return false;
      if (Moveflags != other.Moveflags) return false;
      if (Auras != other.Auras) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Mount != 0) hash ^= Mount.GetHashCode();
      if (Bytes1 != 0) hash ^= Bytes1.GetHashCode();
      if (B20Sheath != 0) hash ^= B20Sheath.GetHashCode();
      if (B21Flags != 0) hash ^= B21Flags.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Moveflags != 0) hash ^= Moveflags.GetHashCode();
      if (Auras.Length != 0) hash ^= Auras.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Mount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Mount);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Bytes1);
      }
      if (B20Sheath != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(B20Sheath);
      }
      if (B21Flags != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(B21Flags);
      }
      if (Emote != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Emote);
      }
      if (Moveflags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Moveflags);
      }
      if (Auras.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Auras);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Mount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Mount);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Bytes1);
      }
      if (B20Sheath != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(B20Sheath);
      }
      if (B21Flags != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(B21Flags);
      }
      if (Emote != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Emote);
      }
      if (Moveflags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Moveflags);
      }
      if (Auras.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Auras);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Mount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mount);
      }
      if (Bytes1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bytes1);
      }
      if (B20Sheath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B20Sheath);
      }
      if (B21Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B21Flags);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Moveflags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Moveflags);
      }
      if (Auras.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Auras);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureAddon other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Mount != 0) {
        Mount = other.Mount;
      }
      if (other.Bytes1 != 0) {
        Bytes1 = other.Bytes1;
      }
      if (other.B20Sheath != 0) {
        B20Sheath = other.B20Sheath;
      }
      if (other.B21Flags != 0) {
        B21Flags = other.B21Flags;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Moveflags != 0) {
        Moveflags = other.Moveflags;
      }
      if (other.Auras.Length != 0) {
        Auras = other.Auras;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Mount = input.ReadUInt32();
            break;
          }
          case 32: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 40: {
            B20Sheath = input.ReadUInt32();
            break;
          }
          case 48: {
            B21Flags = input.ReadUInt32();
            break;
          }
          case 56: {
            Emote = input.ReadUInt32();
            break;
          }
          case 64: {
            Moveflags = input.ReadUInt32();
            break;
          }
          case 74: {
            Auras = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Mount = input.ReadUInt32();
            break;
          }
          case 32: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 40: {
            B20Sheath = input.ReadUInt32();
            break;
          }
          case 48: {
            B21Flags = input.ReadUInt32();
            break;
          }
          case 56: {
            Emote = input.ReadUInt32();
            break;
          }
          case 64: {
            Moveflags = input.ReadUInt32();
            break;
          }
          case 74: {
            Auras = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureAIEvent : pb::IMessage<CreatureAIEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureAIEvent> _parser = new pb::MessageParser<CreatureAIEvent>(() => new CreatureAIEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureAIEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIEvent(CreatureAIEvent other) : this() {
      id_ = other.id_;
      creatureId_ = other.creatureId_;
      conditionId_ = other.conditionId_;
      eventType_ = other.eventType_;
      eventInversePhaseMask_ = other.eventInversePhaseMask_;
      eventChance_ = other.eventChance_;
      eventFlags_ = other.eventFlags_;
      eventParam1_ = other.eventParam1_;
      eventParam2_ = other.eventParam2_;
      eventParam3_ = other.eventParam3_;
      eventParam4_ = other.eventParam4_;
      action1Script_ = other.action1Script_;
      action2Script_ = other.action2Script_;
      action3Script_ = other.action3Script_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIEvent Clone() {
      return new CreatureAIEvent(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "creature_id" field.</summary>
    public const int CreatureIdFieldNumber = 2;
    private uint creatureId_;
    /// <summary>
    /// Creature Template Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureId {
      get { return creatureId_; }
      set {
        creatureId_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 3;
    private uint conditionId_;
    /// <summary>
    /// Condition ID from the conditions table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 4;
    private uint eventType_;
    /// <summary>
    /// Event Type (e.g., AI triggers)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "event_inverse_phase_mask" field.</summary>
    public const int EventInversePhaseMaskFieldNumber = 5;
    private uint eventInversePhaseMask_;
    /// <summary>
    /// Phases in which the event will not trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventInversePhaseMask {
      get { return eventInversePhaseMask_; }
      set {
        eventInversePhaseMask_ = value;
      }
    }

    /// <summary>Field number for the "event_chance" field.</summary>
    public const int EventChanceFieldNumber = 6;
    private uint eventChance_;
    /// <summary>
    /// Chance of the event triggering (0-100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventChance {
      get { return eventChance_; }
      set {
        eventChance_ = value;
      }
    }

    /// <summary>Field number for the "event_flags" field.</summary>
    public const int EventFlagsFieldNumber = 7;
    private uint eventFlags_;
    /// <summary>
    /// Flags that modify the event's behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EventFlags {
      get { return eventFlags_; }
      set {
        eventFlags_ = value;
      }
    }

    /// <summary>Field number for the "event_param1" field.</summary>
    public const int EventParam1FieldNumber = 8;
    private int eventParam1_;
    /// <summary>
    /// Event parameter 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventParam1 {
      get { return eventParam1_; }
      set {
        eventParam1_ = value;
      }
    }

    /// <summary>Field number for the "event_param2" field.</summary>
    public const int EventParam2FieldNumber = 9;
    private int eventParam2_;
    /// <summary>
    /// Event parameter 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventParam2 {
      get { return eventParam2_; }
      set {
        eventParam2_ = value;
      }
    }

    /// <summary>Field number for the "event_param3" field.</summary>
    public const int EventParam3FieldNumber = 10;
    private int eventParam3_;
    /// <summary>
    /// Event parameter 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventParam3 {
      get { return eventParam3_; }
      set {
        eventParam3_ = value;
      }
    }

    /// <summary>Field number for the "event_param4" field.</summary>
    public const int EventParam4FieldNumber = 11;
    private int eventParam4_;
    /// <summary>
    /// Event parameter 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventParam4 {
      get { return eventParam4_; }
      set {
        eventParam4_ = value;
      }
    }

    /// <summary>Field number for the "action1_script" field.</summary>
    public const int Action1ScriptFieldNumber = 12;
    private uint action1Script_;
    /// <summary>
    /// Script executed by action 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Action1Script {
      get { return action1Script_; }
      set {
        action1Script_ = value;
      }
    }

    /// <summary>Field number for the "action2_script" field.</summary>
    public const int Action2ScriptFieldNumber = 13;
    private uint action2Script_;
    /// <summary>
    /// Script executed by action 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Action2Script {
      get { return action2Script_; }
      set {
        action2Script_ = value;
      }
    }

    /// <summary>Field number for the "action3_script" field.</summary>
    public const int Action3ScriptFieldNumber = 14;
    private uint action3Script_;
    /// <summary>
    /// Script executed by action 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Action3Script {
      get { return action3Script_; }
      set {
        action3Script_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 15;
    private string comment_ = "";
    /// <summary>
    /// Description or comment about the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureAIEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureAIEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CreatureId != other.CreatureId) return false;
      if (ConditionId != other.ConditionId) return false;
      if (EventType != other.EventType) return false;
      if (EventInversePhaseMask != other.EventInversePhaseMask) return false;
      if (EventChance != other.EventChance) return false;
      if (EventFlags != other.EventFlags) return false;
      if (EventParam1 != other.EventParam1) return false;
      if (EventParam2 != other.EventParam2) return false;
      if (EventParam3 != other.EventParam3) return false;
      if (EventParam4 != other.EventParam4) return false;
      if (Action1Script != other.Action1Script) return false;
      if (Action2Script != other.Action2Script) return false;
      if (Action3Script != other.Action3Script) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CreatureId != 0) hash ^= CreatureId.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (EventInversePhaseMask != 0) hash ^= EventInversePhaseMask.GetHashCode();
      if (EventChance != 0) hash ^= EventChance.GetHashCode();
      if (EventFlags != 0) hash ^= EventFlags.GetHashCode();
      if (EventParam1 != 0) hash ^= EventParam1.GetHashCode();
      if (EventParam2 != 0) hash ^= EventParam2.GetHashCode();
      if (EventParam3 != 0) hash ^= EventParam3.GetHashCode();
      if (EventParam4 != 0) hash ^= EventParam4.GetHashCode();
      if (Action1Script != 0) hash ^= Action1Script.GetHashCode();
      if (Action2Script != 0) hash ^= Action2Script.GetHashCode();
      if (Action3Script != 0) hash ^= Action3Script.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (CreatureId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConditionId);
      }
      if (EventType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EventType);
      }
      if (EventInversePhaseMask != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EventInversePhaseMask);
      }
      if (EventChance != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(EventChance);
      }
      if (EventFlags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EventFlags);
      }
      if (EventParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventParam1);
      }
      if (EventParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EventParam2);
      }
      if (EventParam3 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EventParam3);
      }
      if (EventParam4 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(EventParam4);
      }
      if (Action1Script != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Action1Script);
      }
      if (Action2Script != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Action2Script);
      }
      if (Action3Script != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Action3Script);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (CreatureId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConditionId);
      }
      if (EventType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EventType);
      }
      if (EventInversePhaseMask != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(EventInversePhaseMask);
      }
      if (EventChance != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(EventChance);
      }
      if (EventFlags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EventFlags);
      }
      if (EventParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventParam1);
      }
      if (EventParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EventParam2);
      }
      if (EventParam3 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EventParam3);
      }
      if (EventParam4 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(EventParam4);
      }
      if (Action1Script != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Action1Script);
      }
      if (Action2Script != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Action2Script);
      }
      if (Action3Script != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Action3Script);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (CreatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureId);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventType);
      }
      if (EventInversePhaseMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventInversePhaseMask);
      }
      if (EventChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventChance);
      }
      if (EventFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventFlags);
      }
      if (EventParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventParam1);
      }
      if (EventParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventParam2);
      }
      if (EventParam3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventParam3);
      }
      if (EventParam4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventParam4);
      }
      if (Action1Script != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action1Script);
      }
      if (Action2Script != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action2Script);
      }
      if (Action3Script != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action3Script);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureAIEvent other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CreatureId != 0) {
        CreatureId = other.CreatureId;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.EventInversePhaseMask != 0) {
        EventInversePhaseMask = other.EventInversePhaseMask;
      }
      if (other.EventChance != 0) {
        EventChance = other.EventChance;
      }
      if (other.EventFlags != 0) {
        EventFlags = other.EventFlags;
      }
      if (other.EventParam1 != 0) {
        EventParam1 = other.EventParam1;
      }
      if (other.EventParam2 != 0) {
        EventParam2 = other.EventParam2;
      }
      if (other.EventParam3 != 0) {
        EventParam3 = other.EventParam3;
      }
      if (other.EventParam4 != 0) {
        EventParam4 = other.EventParam4;
      }
      if (other.Action1Script != 0) {
        Action1Script = other.Action1Script;
      }
      if (other.Action2Script != 0) {
        Action2Script = other.Action2Script;
      }
      if (other.Action3Script != 0) {
        Action3Script = other.Action3Script;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 24: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 32: {
            EventType = input.ReadUInt32();
            break;
          }
          case 40: {
            EventInversePhaseMask = input.ReadUInt32();
            break;
          }
          case 48: {
            EventChance = input.ReadUInt32();
            break;
          }
          case 56: {
            EventFlags = input.ReadUInt32();
            break;
          }
          case 64: {
            EventParam1 = input.ReadInt32();
            break;
          }
          case 72: {
            EventParam2 = input.ReadInt32();
            break;
          }
          case 80: {
            EventParam3 = input.ReadInt32();
            break;
          }
          case 88: {
            EventParam4 = input.ReadInt32();
            break;
          }
          case 96: {
            Action1Script = input.ReadUInt32();
            break;
          }
          case 104: {
            Action2Script = input.ReadUInt32();
            break;
          }
          case 112: {
            Action3Script = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 24: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 32: {
            EventType = input.ReadUInt32();
            break;
          }
          case 40: {
            EventInversePhaseMask = input.ReadUInt32();
            break;
          }
          case 48: {
            EventChance = input.ReadUInt32();
            break;
          }
          case 56: {
            EventFlags = input.ReadUInt32();
            break;
          }
          case 64: {
            EventParam1 = input.ReadInt32();
            break;
          }
          case 72: {
            EventParam2 = input.ReadInt32();
            break;
          }
          case 80: {
            EventParam3 = input.ReadInt32();
            break;
          }
          case 88: {
            EventParam4 = input.ReadInt32();
            break;
          }
          case 96: {
            Action1Script = input.ReadUInt32();
            break;
          }
          case 104: {
            Action2Script = input.ReadUInt32();
            break;
          }
          case 112: {
            Action3Script = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureAIScript : pb::IMessage<CreatureAIScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureAIScript> _parser = new pb::MessageParser<CreatureAIScript>(() => new CreatureAIScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureAIScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIScript(CreatureAIScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureAIScript Clone() {
      return new CreatureAIScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique Identifier for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before the command is executed (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// The command to execute (defined by the script system)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// General-purpose data field 1 for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// General-purpose data field 2 for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// General-purpose data field 3 for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// General-purpose data field 4 for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// Parameter 1 for targeting logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Parameter 2 for targeting logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Specifies the target type (self, player, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags that modify the command or data fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// General-purpose data field 1 for integers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// General-purpose data field 2 for integers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// General-purpose data field 3 for integers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// General-purpose data field 4 for integers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X-coordinate for positioning logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y-coordinate for positioning logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z-coordinate for positioning logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation angle for positioning logic
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID linked to the conditions table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments or description of the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureAIScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureAIScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureAIScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureBattleground : pb::IMessage<CreatureBattleground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureBattleground> _parser = new pb::MessageParser<CreatureBattleground>(() => new CreatureBattleground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureBattleground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureBattleground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureBattleground(CreatureBattleground other) : this() {
      guid_ = other.guid_;
      event1_ = other.event1_;
      event2_ = other.event2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureBattleground Clone() {
      return new CreatureBattleground(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Creature's Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "event1" field.</summary>
    public const int Event1FieldNumber = 2;
    private uint event1_;
    /// <summary>
    /// Main event identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event1 {
      get { return event1_; }
      set {
        event1_ = value;
      }
    }

    /// <summary>Field number for the "event2" field.</summary>
    public const int Event2FieldNumber = 3;
    private uint event2_;
    /// <summary>
    /// Sub-event identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event2 {
      get { return event2_; }
      set {
        event2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureBattleground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureBattleground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Event1 != other.Event1) return false;
      if (Event2 != other.Event2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Event1 != 0) hash ^= Event1.GetHashCode();
      if (Event2 != 0) hash ^= Event2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Event1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event1);
      }
      if (Event2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureBattleground other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Event1 != 0) {
        Event1 = other.Event1;
      }
      if (other.Event2 != 0) {
        Event2 = other.Event2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureEquipTemplate : pb::IMessage<CreatureEquipTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureEquipTemplate> _parser = new pb::MessageParser<CreatureEquipTemplate>(() => new CreatureEquipTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureEquipTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplate(CreatureEquipTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      equipentry1_ = other.equipentry1_;
      equipentry2_ = other.equipentry2_;
      equipentry3_ = other.equipentry3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplate Clone() {
      return new CreatureEquipTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version associated with this equipment template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "equipentry1" field.</summary>
    public const int Equipentry1FieldNumber = 3;
    private uint equipentry1_;
    /// <summary>
    /// First equipment entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipentry1 {
      get { return equipentry1_; }
      set {
        equipentry1_ = value;
      }
    }

    /// <summary>Field number for the "equipentry2" field.</summary>
    public const int Equipentry2FieldNumber = 4;
    private uint equipentry2_;
    /// <summary>
    /// Second equipment entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipentry2 {
      get { return equipentry2_; }
      set {
        equipentry2_ = value;
      }
    }

    /// <summary>Field number for the "equipentry3" field.</summary>
    public const int Equipentry3FieldNumber = 5;
    private uint equipentry3_;
    /// <summary>
    /// Third equipment entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipentry3 {
      get { return equipentry3_; }
      set {
        equipentry3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureEquipTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureEquipTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Equipentry1 != other.Equipentry1) return false;
      if (Equipentry2 != other.Equipentry2) return false;
      if (Equipentry3 != other.Equipentry3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Equipentry1 != 0) hash ^= Equipentry1.GetHashCode();
      if (Equipentry2 != 0) hash ^= Equipentry2.GetHashCode();
      if (Equipentry3 != 0) hash ^= Equipentry3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Equipentry1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Equipentry1);
      }
      if (Equipentry2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Equipentry2);
      }
      if (Equipentry3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Equipentry3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Equipentry1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Equipentry1);
      }
      if (Equipentry2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Equipentry2);
      }
      if (Equipentry3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Equipentry3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Equipentry1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipentry1);
      }
      if (Equipentry2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipentry2);
      }
      if (Equipentry3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipentry3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureEquipTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Equipentry1 != 0) {
        Equipentry1 = other.Equipentry1;
      }
      if (other.Equipentry2 != 0) {
        Equipentry2 = other.Equipentry2;
      }
      if (other.Equipentry3 != 0) {
        Equipentry3 = other.Equipentry3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Equipentry1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Equipentry2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Equipentry3 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Equipentry1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Equipentry2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Equipentry3 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureEquipTemplateRaw : pb::IMessage<CreatureEquipTemplateRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureEquipTemplateRaw> _parser = new pb::MessageParser<CreatureEquipTemplateRaw>(() => new CreatureEquipTemplateRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureEquipTemplateRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplateRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplateRaw(CreatureEquipTemplateRaw other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      equipmodel1_ = other.equipmodel1_;
      equipmodel2_ = other.equipmodel2_;
      equipmodel3_ = other.equipmodel3_;
      equipinfo1_ = other.equipinfo1_;
      equipinfo2_ = other.equipinfo2_;
      equipinfo3_ = other.equipinfo3_;
      equipslot1_ = other.equipslot1_;
      equipslot2_ = other.equipslot2_;
      equipslot3_ = other.equipslot3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureEquipTemplateRaw Clone() {
      return new CreatureEquipTemplateRaw(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version associated with this equipment template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "equipmodel1" field.</summary>
    public const int Equipmodel1FieldNumber = 3;
    private uint equipmodel1_;
    /// <summary>
    /// First equipment model entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipmodel1 {
      get { return equipmodel1_; }
      set {
        equipmodel1_ = value;
      }
    }

    /// <summary>Field number for the "equipmodel2" field.</summary>
    public const int Equipmodel2FieldNumber = 4;
    private uint equipmodel2_;
    /// <summary>
    /// Second equipment model entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipmodel2 {
      get { return equipmodel2_; }
      set {
        equipmodel2_ = value;
      }
    }

    /// <summary>Field number for the "equipmodel3" field.</summary>
    public const int Equipmodel3FieldNumber = 5;
    private uint equipmodel3_;
    /// <summary>
    /// Third equipment model entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipmodel3 {
      get { return equipmodel3_; }
      set {
        equipmodel3_ = value;
      }
    }

    /// <summary>Field number for the "equipinfo1" field.</summary>
    public const int Equipinfo1FieldNumber = 6;
    private uint equipinfo1_;
    /// <summary>
    /// Info related to the first equipment model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipinfo1 {
      get { return equipinfo1_; }
      set {
        equipinfo1_ = value;
      }
    }

    /// <summary>Field number for the "equipinfo2" field.</summary>
    public const int Equipinfo2FieldNumber = 7;
    private uint equipinfo2_;
    /// <summary>
    /// Info related to the second equipment model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipinfo2 {
      get { return equipinfo2_; }
      set {
        equipinfo2_ = value;
      }
    }

    /// <summary>Field number for the "equipinfo3" field.</summary>
    public const int Equipinfo3FieldNumber = 8;
    private uint equipinfo3_;
    /// <summary>
    /// Info related to the third equipment model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Equipinfo3 {
      get { return equipinfo3_; }
      set {
        equipinfo3_ = value;
      }
    }

    /// <summary>Field number for the "equipslot1" field.</summary>
    public const int Equipslot1FieldNumber = 9;
    private int equipslot1_;
    /// <summary>
    /// Slot for the first piece of equipment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Equipslot1 {
      get { return equipslot1_; }
      set {
        equipslot1_ = value;
      }
    }

    /// <summary>Field number for the "equipslot2" field.</summary>
    public const int Equipslot2FieldNumber = 10;
    private int equipslot2_;
    /// <summary>
    /// Slot for the second piece of equipment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Equipslot2 {
      get { return equipslot2_; }
      set {
        equipslot2_ = value;
      }
    }

    /// <summary>Field number for the "equipslot3" field.</summary>
    public const int Equipslot3FieldNumber = 11;
    private int equipslot3_;
    /// <summary>
    /// Slot for the third piece of equipment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Equipslot3 {
      get { return equipslot3_; }
      set {
        equipslot3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureEquipTemplateRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureEquipTemplateRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Equipmodel1 != other.Equipmodel1) return false;
      if (Equipmodel2 != other.Equipmodel2) return false;
      if (Equipmodel3 != other.Equipmodel3) return false;
      if (Equipinfo1 != other.Equipinfo1) return false;
      if (Equipinfo2 != other.Equipinfo2) return false;
      if (Equipinfo3 != other.Equipinfo3) return false;
      if (Equipslot1 != other.Equipslot1) return false;
      if (Equipslot2 != other.Equipslot2) return false;
      if (Equipslot3 != other.Equipslot3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Equipmodel1 != 0) hash ^= Equipmodel1.GetHashCode();
      if (Equipmodel2 != 0) hash ^= Equipmodel2.GetHashCode();
      if (Equipmodel3 != 0) hash ^= Equipmodel3.GetHashCode();
      if (Equipinfo1 != 0) hash ^= Equipinfo1.GetHashCode();
      if (Equipinfo2 != 0) hash ^= Equipinfo2.GetHashCode();
      if (Equipinfo3 != 0) hash ^= Equipinfo3.GetHashCode();
      if (Equipslot1 != 0) hash ^= Equipslot1.GetHashCode();
      if (Equipslot2 != 0) hash ^= Equipslot2.GetHashCode();
      if (Equipslot3 != 0) hash ^= Equipslot3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Equipmodel1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Equipmodel1);
      }
      if (Equipmodel2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Equipmodel2);
      }
      if (Equipmodel3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Equipmodel3);
      }
      if (Equipinfo1 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Equipinfo1);
      }
      if (Equipinfo2 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Equipinfo2);
      }
      if (Equipinfo3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Equipinfo3);
      }
      if (Equipslot1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Equipslot1);
      }
      if (Equipslot2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Equipslot2);
      }
      if (Equipslot3 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Equipslot3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Equipmodel1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Equipmodel1);
      }
      if (Equipmodel2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Equipmodel2);
      }
      if (Equipmodel3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Equipmodel3);
      }
      if (Equipinfo1 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Equipinfo1);
      }
      if (Equipinfo2 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Equipinfo2);
      }
      if (Equipinfo3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Equipinfo3);
      }
      if (Equipslot1 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Equipslot1);
      }
      if (Equipslot2 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Equipslot2);
      }
      if (Equipslot3 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Equipslot3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Equipmodel1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipmodel1);
      }
      if (Equipmodel2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipmodel2);
      }
      if (Equipmodel3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipmodel3);
      }
      if (Equipinfo1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipinfo1);
      }
      if (Equipinfo2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipinfo2);
      }
      if (Equipinfo3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Equipinfo3);
      }
      if (Equipslot1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Equipslot1);
      }
      if (Equipslot2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Equipslot2);
      }
      if (Equipslot3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Equipslot3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureEquipTemplateRaw other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Equipmodel1 != 0) {
        Equipmodel1 = other.Equipmodel1;
      }
      if (other.Equipmodel2 != 0) {
        Equipmodel2 = other.Equipmodel2;
      }
      if (other.Equipmodel3 != 0) {
        Equipmodel3 = other.Equipmodel3;
      }
      if (other.Equipinfo1 != 0) {
        Equipinfo1 = other.Equipinfo1;
      }
      if (other.Equipinfo2 != 0) {
        Equipinfo2 = other.Equipinfo2;
      }
      if (other.Equipinfo3 != 0) {
        Equipinfo3 = other.Equipinfo3;
      }
      if (other.Equipslot1 != 0) {
        Equipslot1 = other.Equipslot1;
      }
      if (other.Equipslot2 != 0) {
        Equipslot2 = other.Equipslot2;
      }
      if (other.Equipslot3 != 0) {
        Equipslot3 = other.Equipslot3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Equipmodel1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Equipmodel2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Equipmodel3 = input.ReadUInt32();
            break;
          }
          case 48: {
            Equipinfo1 = input.ReadUInt32();
            break;
          }
          case 56: {
            Equipinfo2 = input.ReadUInt32();
            break;
          }
          case 64: {
            Equipinfo3 = input.ReadUInt32();
            break;
          }
          case 72: {
            Equipslot1 = input.ReadInt32();
            break;
          }
          case 80: {
            Equipslot2 = input.ReadInt32();
            break;
          }
          case 88: {
            Equipslot3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Equipmodel1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Equipmodel2 = input.ReadUInt32();
            break;
          }
          case 40: {
            Equipmodel3 = input.ReadUInt32();
            break;
          }
          case 48: {
            Equipinfo1 = input.ReadUInt32();
            break;
          }
          case 56: {
            Equipinfo2 = input.ReadUInt32();
            break;
          }
          case 64: {
            Equipinfo3 = input.ReadUInt32();
            break;
          }
          case 72: {
            Equipslot1 = input.ReadInt32();
            break;
          }
          case 80: {
            Equipslot2 = input.ReadInt32();
            break;
          }
          case 88: {
            Equipslot3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureGroup : pb::IMessage<CreatureGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureGroup> _parser = new pb::MessageParser<CreatureGroup>(() => new CreatureGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureGroup(CreatureGroup other) : this() {
      leaderGUID_ = other.leaderGUID_;
      memberGUID_ = other.memberGUID_;
      dist_ = other.dist_;
      angle_ = other.angle_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureGroup Clone() {
      return new CreatureGroup(this);
    }

    /// <summary>Field number for the "leaderGUID" field.</summary>
    public const int LeaderGUIDFieldNumber = 1;
    private uint leaderGUID_;
    /// <summary>
    /// Leader's Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LeaderGUID {
      get { return leaderGUID_; }
      set {
        leaderGUID_ = value;
      }
    }

    /// <summary>Field number for the "memberGUID" field.</summary>
    public const int MemberGUIDFieldNumber = 2;
    private uint memberGUID_;
    /// <summary>
    /// Member's Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MemberGUID {
      get { return memberGUID_; }
      set {
        memberGUID_ = value;
      }
    }

    /// <summary>Field number for the "dist" field.</summary>
    public const int DistFieldNumber = 3;
    private float dist_;
    /// <summary>
    /// Distance from the leader
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Dist {
      get { return dist_; }
      set {
        dist_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 4;
    private float angle_;
    /// <summary>
    /// Angle relative to the leader
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Group-specific flags for this member
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaderGUID != other.LeaderGUID) return false;
      if (MemberGUID != other.MemberGUID) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dist, other.Dist)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaderGUID != 0) hash ^= LeaderGUID.GetHashCode();
      if (MemberGUID != 0) hash ^= MemberGUID.GetHashCode();
      if (Dist != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dist);
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LeaderGUID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LeaderGUID);
      }
      if (MemberGUID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MemberGUID);
      }
      if (Dist != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Dist);
      }
      if (Angle != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Angle);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LeaderGUID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LeaderGUID);
      }
      if (MemberGUID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MemberGUID);
      }
      if (Dist != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Dist);
      }
      if (Angle != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Angle);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LeaderGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderGUID);
      }
      if (MemberGUID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MemberGUID);
      }
      if (Dist != 0F) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureGroup other) {
      if (other == null) {
        return;
      }
      if (other.LeaderGUID != 0) {
        LeaderGUID = other.LeaderGUID;
      }
      if (other.MemberGUID != 0) {
        MemberGUID = other.MemberGUID;
      }
      if (other.Dist != 0F) {
        Dist = other.Dist;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeaderGUID = input.ReadUInt32();
            break;
          }
          case 16: {
            MemberGUID = input.ReadUInt32();
            break;
          }
          case 29: {
            Dist = input.ReadFloat();
            break;
          }
          case 37: {
            Angle = input.ReadFloat();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeaderGUID = input.ReadUInt32();
            break;
          }
          case 16: {
            MemberGUID = input.ReadUInt32();
            break;
          }
          case 29: {
            Dist = input.ReadFloat();
            break;
          }
          case 37: {
            Angle = input.ReadFloat();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureInvolvedRelation : pb::IMessage<CreatureInvolvedRelation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureInvolvedRelation> _parser = new pb::MessageParser<CreatureInvolvedRelation>(() => new CreatureInvolvedRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureInvolvedRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureInvolvedRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureInvolvedRelation(CreatureInvolvedRelation other) : this() {
      id_ = other.id_;
      quest_ = other.quest_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureInvolvedRelation Clone() {
      return new CreatureInvolvedRelation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest Identifier the creature is involved with
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    /// <summary>
    /// Patch version for the creature relation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureInvolvedRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureInvolvedRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quest != other.Quest) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureInvolvedRelation other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureLinking : pb::IMessage<CreatureLinking>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureLinking> _parser = new pb::MessageParser<CreatureLinking>(() => new CreatureLinking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureLinking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinking(CreatureLinking other) : this() {
      guid_ = other.guid_;
      masterGuid_ = other.masterGuid_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinking Clone() {
      return new CreatureLinking(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// GUID of the linked (slave) creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "master_guid" field.</summary>
    public const int MasterGuidFieldNumber = 2;
    private uint masterGuid_;
    /// <summary>
    /// GUID of the master creature that triggers events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MasterGuid {
      get { return masterGuid_; }
      set {
        masterGuid_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 3;
    private uint flag_;
    /// <summary>
    /// Describes the linking behavior (what should happen when)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureLinking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureLinking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (MasterGuid != other.MasterGuid) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (MasterGuid != 0) hash ^= MasterGuid.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (MasterGuid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MasterGuid);
      }
      if (Flag != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (MasterGuid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MasterGuid);
      }
      if (Flag != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (MasterGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MasterGuid);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureLinking other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.MasterGuid != 0) {
        MasterGuid = other.MasterGuid;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            MasterGuid = input.ReadUInt32();
            break;
          }
          case 24: {
            Flag = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            MasterGuid = input.ReadUInt32();
            break;
          }
          case 24: {
            Flag = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureLinkingTemplate : pb::IMessage<CreatureLinkingTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureLinkingTemplate> _parser = new pb::MessageParser<CreatureLinkingTemplate>(() => new CreatureLinkingTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureLinkingTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinkingTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinkingTemplate(CreatureLinkingTemplate other) : this() {
      entry_ = other.entry_;
      map_ = other.map_;
      masterEntry_ = other.masterEntry_;
      flag_ = other.flag_;
      searchRange_ = other.searchRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLinkingTemplate Clone() {
      return new CreatureLinkingTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry of the slave creature (creature_template.entry)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 2;
    private uint map_;
    /// <summary>
    /// Map ID where the creatures are located
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "master_entry" field.</summary>
    public const int MasterEntryFieldNumber = 3;
    private uint masterEntry_;
    /// <summary>
    /// Entry of the master creature (creature_template.entry)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MasterEntry {
      get { return masterEntry_; }
      set {
        masterEntry_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 4;
    private uint flag_;
    /// <summary>
    /// Describes what events should be triggered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    /// <summary>Field number for the "search_range" field.</summary>
    public const int SearchRangeFieldNumber = 5;
    private uint searchRange_;
    /// <summary>
    /// Range in which master and slave are linked (based on spawn coordinates)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SearchRange {
      get { return searchRange_; }
      set {
        searchRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureLinkingTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureLinkingTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Map != other.Map) return false;
      if (MasterEntry != other.MasterEntry) return false;
      if (Flag != other.Flag) return false;
      if (SearchRange != other.SearchRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Map != 0) hash ^= Map.GetHashCode();
      if (MasterEntry != 0) hash ^= MasterEntry.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (SearchRange != 0) hash ^= SearchRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Map != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Map);
      }
      if (MasterEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MasterEntry);
      }
      if (Flag != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flag);
      }
      if (SearchRange != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SearchRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Map != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Map);
      }
      if (MasterEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MasterEntry);
      }
      if (Flag != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flag);
      }
      if (SearchRange != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SearchRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (MasterEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MasterEntry);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flag);
      }
      if (SearchRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SearchRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureLinkingTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.MasterEntry != 0) {
        MasterEntry = other.MasterEntry;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      if (other.SearchRange != 0) {
        SearchRange = other.SearchRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Map = input.ReadUInt32();
            break;
          }
          case 24: {
            MasterEntry = input.ReadUInt32();
            break;
          }
          case 32: {
            Flag = input.ReadUInt32();
            break;
          }
          case 40: {
            SearchRange = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Map = input.ReadUInt32();
            break;
          }
          case 24: {
            MasterEntry = input.ReadUInt32();
            break;
          }
          case 32: {
            Flag = input.ReadUInt32();
            break;
          }
          case 40: {
            SearchRange = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureLootTemplate : pb::IMessage<CreatureLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureLootTemplate> _parser = new pb::MessageParser<CreatureLootTemplate>(() => new CreatureLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLootTemplate(CreatureLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureLootTemplate Clone() {
      return new CreatureLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry 0 used for player insignia loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item ID for the loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chance_or_quest_chance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance or quest-specific chance (as a percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID for categorizing loot groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincount_or_ref" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private int mincountOrRef_;
    /// <summary>
    /// Minimum count or reference to another template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum number of items in the loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for when this loot applies
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureModelInfo : pb::IMessage<CreatureModelInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureModelInfo> _parser = new pb::MessageParser<CreatureModelInfo>(() => new CreatureModelInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureModelInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureModelInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureModelInfo(CreatureModelInfo other) : this() {
      modelid_ = other.modelid_;
      boundingRadius_ = other.boundingRadius_;
      combatReach_ = other.combatReach_;
      gender_ = other.gender_;
      modelidOtherGender_ = other.modelidOtherGender_;
      modelidOtherTeam_ = other.modelidOtherTeam_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureModelInfo Clone() {
      return new CreatureModelInfo(this);
    }

    /// <summary>Field number for the "modelid" field.</summary>
    public const int ModelidFieldNumber = 1;
    private uint modelid_;
    /// <summary>
    /// Model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modelid {
      get { return modelid_; }
      set {
        modelid_ = value;
      }
    }

    /// <summary>Field number for the "bounding_radius" field.</summary>
    public const int BoundingRadiusFieldNumber = 2;
    private float boundingRadius_;
    /// <summary>
    /// Bounding radius for the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BoundingRadius {
      get { return boundingRadius_; }
      set {
        boundingRadius_ = value;
      }
    }

    /// <summary>Field number for the "combat_reach" field.</summary>
    public const int CombatReachFieldNumber = 3;
    private float combatReach_;
    /// <summary>
    /// Combat reach (distance to hit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CombatReach {
      get { return combatReach_; }
      set {
        combatReach_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 4;
    private uint gender_;
    /// <summary>
    /// Gender of the model (0: male, 1: female, 2: neutral/unknown)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "modelid_other_gender" field.</summary>
    public const int ModelidOtherGenderFieldNumber = 5;
    private uint modelidOtherGender_;
    /// <summary>
    /// Model ID for the other gender
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelidOtherGender {
      get { return modelidOtherGender_; }
      set {
        modelidOtherGender_ = value;
      }
    }

    /// <summary>Field number for the "modelid_other_team" field.</summary>
    public const int ModelidOtherTeamFieldNumber = 6;
    private uint modelidOtherTeam_;
    /// <summary>
    /// Model ID for the other faction/team
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelidOtherTeam {
      get { return modelidOtherTeam_; }
      set {
        modelidOtherTeam_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureModelInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureModelInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Modelid != other.Modelid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BoundingRadius, other.BoundingRadius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CombatReach, other.CombatReach)) return false;
      if (Gender != other.Gender) return false;
      if (ModelidOtherGender != other.ModelidOtherGender) return false;
      if (ModelidOtherTeam != other.ModelidOtherTeam) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Modelid != 0) hash ^= Modelid.GetHashCode();
      if (BoundingRadius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BoundingRadius);
      if (CombatReach != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CombatReach);
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (ModelidOtherGender != 0) hash ^= ModelidOtherGender.GetHashCode();
      if (ModelidOtherTeam != 0) hash ^= ModelidOtherTeam.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Modelid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Modelid);
      }
      if (BoundingRadius != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(BoundingRadius);
      }
      if (CombatReach != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CombatReach);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (ModelidOtherGender != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModelidOtherGender);
      }
      if (ModelidOtherTeam != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ModelidOtherTeam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Modelid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Modelid);
      }
      if (BoundingRadius != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(BoundingRadius);
      }
      if (CombatReach != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CombatReach);
      }
      if (Gender != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Gender);
      }
      if (ModelidOtherGender != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModelidOtherGender);
      }
      if (ModelidOtherTeam != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ModelidOtherTeam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Modelid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modelid);
      }
      if (BoundingRadius != 0F) {
        size += 1 + 4;
      }
      if (CombatReach != 0F) {
        size += 1 + 4;
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gender);
      }
      if (ModelidOtherGender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelidOtherGender);
      }
      if (ModelidOtherTeam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelidOtherTeam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureModelInfo other) {
      if (other == null) {
        return;
      }
      if (other.Modelid != 0) {
        Modelid = other.Modelid;
      }
      if (other.BoundingRadius != 0F) {
        BoundingRadius = other.BoundingRadius;
      }
      if (other.CombatReach != 0F) {
        CombatReach = other.CombatReach;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.ModelidOtherGender != 0) {
        ModelidOtherGender = other.ModelidOtherGender;
      }
      if (other.ModelidOtherTeam != 0) {
        ModelidOtherTeam = other.ModelidOtherTeam;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 21: {
            BoundingRadius = input.ReadFloat();
            break;
          }
          case 29: {
            CombatReach = input.ReadFloat();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelidOtherGender = input.ReadUInt32();
            break;
          }
          case 48: {
            ModelidOtherTeam = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 21: {
            BoundingRadius = input.ReadFloat();
            break;
          }
          case 29: {
            CombatReach = input.ReadFloat();
            break;
          }
          case 32: {
            Gender = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelidOtherGender = input.ReadUInt32();
            break;
          }
          case 48: {
            ModelidOtherTeam = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureMovement : pb::IMessage<CreatureMovement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureMovement> _parser = new pb::MessageParser<CreatureMovement>(() => new CreatureMovement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureMovement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovement(CreatureMovement other) : this() {
      id_ = other.id_;
      point_ = other.point_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      waittime_ = other.waittime_;
      scriptId_ = other.scriptId_;
      textid1_ = other.textid1_;
      textid2_ = other.textid2_;
      textid3_ = other.textid3_;
      textid4_ = other.textid4_;
      textid5_ = other.textid5_;
      emote_ = other.emote_;
      spell_ = other.spell_;
      orientation_ = other.orientation_;
      model1_ = other.model1_;
      model2_ = other.model2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovement Clone() {
      return new CreatureMovement(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Creature GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 2;
    private uint point_;
    /// <summary>
    /// Movement waypoint index
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 3;
    private float positionX_;
    /// <summary>
    /// X coordinate for the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 4;
    private float positionY_;
    /// <summary>
    /// Y coordinate for the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 5;
    private float positionZ_;
    /// <summary>
    /// Z coordinate for the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "waittime" field.</summary>
    public const int WaittimeFieldNumber = 6;
    private uint waittime_;
    /// <summary>
    /// Wait time at the waypoint (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Waittime {
      get { return waittime_; }
      set {
        waittime_ = value;
      }
    }

    /// <summary>Field number for the "script_id" field.</summary>
    public const int ScriptIdFieldNumber = 7;
    private uint scriptId_;
    /// <summary>
    /// Script ID associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId {
      get { return scriptId_; }
      set {
        scriptId_ = value;
      }
    }

    /// <summary>Field number for the "textid1" field.</summary>
    public const int Textid1FieldNumber = 8;
    private int textid1_;
    /// <summary>
    /// Text ID 1 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Textid1 {
      get { return textid1_; }
      set {
        textid1_ = value;
      }
    }

    /// <summary>Field number for the "textid2" field.</summary>
    public const int Textid2FieldNumber = 9;
    private int textid2_;
    /// <summary>
    /// Text ID 2 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Textid2 {
      get { return textid2_; }
      set {
        textid2_ = value;
      }
    }

    /// <summary>Field number for the "textid3" field.</summary>
    public const int Textid3FieldNumber = 10;
    private int textid3_;
    /// <summary>
    /// Text ID 3 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Textid3 {
      get { return textid3_; }
      set {
        textid3_ = value;
      }
    }

    /// <summary>Field number for the "textid4" field.</summary>
    public const int Textid4FieldNumber = 11;
    private int textid4_;
    /// <summary>
    /// Text ID 4 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Textid4 {
      get { return textid4_; }
      set {
        textid4_ = value;
      }
    }

    /// <summary>Field number for the "textid5" field.</summary>
    public const int Textid5FieldNumber = 12;
    private int textid5_;
    /// <summary>
    /// Text ID 5 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Textid5 {
      get { return textid5_; }
      set {
        textid5_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 13;
    private uint emote_;
    /// <summary>
    /// Emote ID to perform at the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 14;
    private uint spell_;
    /// <summary>
    /// Spell ID to cast at the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 15;
    private float orientation_;
    /// <summary>
    /// Orientation (facing direction) at the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "model1" field.</summary>
    public const int Model1FieldNumber = 16;
    private uint model1_;
    /// <summary>
    /// Model ID 1 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model1 {
      get { return model1_; }
      set {
        model1_ = value;
      }
    }

    /// <summary>Field number for the "model2" field.</summary>
    public const int Model2FieldNumber = 17;
    private uint model2_;
    /// <summary>
    /// Model ID 2 associated with the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model2 {
      get { return model2_; }
      set {
        model2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureMovement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureMovement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Point != other.Point) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (Waittime != other.Waittime) return false;
      if (ScriptId != other.ScriptId) return false;
      if (Textid1 != other.Textid1) return false;
      if (Textid2 != other.Textid2) return false;
      if (Textid3 != other.Textid3) return false;
      if (Textid4 != other.Textid4) return false;
      if (Textid5 != other.Textid5) return false;
      if (Emote != other.Emote) return false;
      if (Spell != other.Spell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (Model1 != other.Model1) return false;
      if (Model2 != other.Model2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Point != 0) hash ^= Point.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Waittime != 0) hash ^= Waittime.GetHashCode();
      if (ScriptId != 0) hash ^= ScriptId.GetHashCode();
      if (Textid1 != 0) hash ^= Textid1.GetHashCode();
      if (Textid2 != 0) hash ^= Textid2.GetHashCode();
      if (Textid3 != 0) hash ^= Textid3.GetHashCode();
      if (Textid4 != 0) hash ^= Textid4.GetHashCode();
      if (Textid5 != 0) hash ^= Textid5.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Model1 != 0) hash ^= Model1.GetHashCode();
      if (Model2 != 0) hash ^= Model2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Point != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Point);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Waittime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Waittime);
      }
      if (ScriptId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId);
      }
      if (Textid1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Textid1);
      }
      if (Textid2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Textid2);
      }
      if (Textid3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Textid3);
      }
      if (Textid4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Textid4);
      }
      if (Textid5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Textid5);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Model1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model1);
      }
      if (Model2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureMovement other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Point != 0) {
        Point = other.Point;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Waittime != 0) {
        Waittime = other.Waittime;
      }
      if (other.ScriptId != 0) {
        ScriptId = other.ScriptId;
      }
      if (other.Textid1 != 0) {
        Textid1 = other.Textid1;
      }
      if (other.Textid2 != 0) {
        Textid2 = other.Textid2;
      }
      if (other.Textid3 != 0) {
        Textid3 = other.Textid3;
      }
      if (other.Textid4 != 0) {
        Textid4 = other.Textid4;
      }
      if (other.Textid5 != 0) {
        Textid5 = other.Textid5;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Model1 != 0) {
        Model1 = other.Model1;
      }
      if (other.Model2 != 0) {
        Model2 = other.Model2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureMovementScript : pb::IMessage<CreatureMovementScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureMovementScript> _parser = new pb::MessageParser<CreatureMovementScript>(() => new CreatureMovementScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureMovementScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementScript(CreatureMovementScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementScript Clone() {
      return new CreatureMovementScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before executing the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command type (movement, action, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// First data parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Second data parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Third data parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Fourth data parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// First target parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Second target parameter for the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Type of target for the command (creature, player, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags for additional data modifiers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// First integer data for command behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Second integer data for command behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Third integer data for command behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Fourth integer data for command behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate for movement or action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate for movement or action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate for movement or action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation (facing direction)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID from conditions table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comment or description for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureMovementScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureMovementScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureMovementScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureMovementSpecial : pb::IMessage<CreatureMovementSpecial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureMovementSpecial> _parser = new pb::MessageParser<CreatureMovementSpecial>(() => new CreatureMovementSpecial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureMovementSpecial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementSpecial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementSpecial(CreatureMovementSpecial other) : this() {
      id_ = other.id_;
      point_ = other.point_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      waittime_ = other.waittime_;
      scriptId_ = other.scriptId_;
      textid1_ = other.textid1_;
      textid2_ = other.textid2_;
      textid3_ = other.textid3_;
      textid4_ = other.textid4_;
      textid5_ = other.textid5_;
      emote_ = other.emote_;
      spell_ = other.spell_;
      orientation_ = other.orientation_;
      model1_ = other.model1_;
      model2_ = other.model2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementSpecial Clone() {
      return new CreatureMovementSpecial(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Creature's unique identifier (GUID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 2;
    private uint point_;
    /// <summary>
    /// Point in the movement path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 3;
    private float positionX_;
    /// <summary>
    /// X coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 4;
    private float positionY_;
    /// <summary>
    /// Y coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 5;
    private float positionZ_;
    /// <summary>
    /// Z coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "waittime" field.</summary>
    public const int WaittimeFieldNumber = 6;
    private uint waittime_;
    /// <summary>
    /// Time to wait before the next movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Waittime {
      get { return waittime_; }
      set {
        waittime_ = value;
      }
    }

    /// <summary>Field number for the "script_id" field.</summary>
    public const int ScriptIdFieldNumber = 7;
    private uint scriptId_;
    /// <summary>
    /// Script ID linked to movement events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId {
      get { return scriptId_; }
      set {
        scriptId_ = value;
      }
    }

    /// <summary>Field number for the "textid1" field.</summary>
    public const int Textid1FieldNumber = 8;
    private uint textid1_;
    /// <summary>
    /// First text ID for scripted events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid1 {
      get { return textid1_; }
      set {
        textid1_ = value;
      }
    }

    /// <summary>Field number for the "textid2" field.</summary>
    public const int Textid2FieldNumber = 9;
    private uint textid2_;
    /// <summary>
    /// Second text ID for scripted events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid2 {
      get { return textid2_; }
      set {
        textid2_ = value;
      }
    }

    /// <summary>Field number for the "textid3" field.</summary>
    public const int Textid3FieldNumber = 10;
    private uint textid3_;
    /// <summary>
    /// Third text ID for scripted events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid3 {
      get { return textid3_; }
      set {
        textid3_ = value;
      }
    }

    /// <summary>Field number for the "textid4" field.</summary>
    public const int Textid4FieldNumber = 11;
    private uint textid4_;
    /// <summary>
    /// Fourth text ID for scripted events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid4 {
      get { return textid4_; }
      set {
        textid4_ = value;
      }
    }

    /// <summary>Field number for the "textid5" field.</summary>
    public const int Textid5FieldNumber = 12;
    private uint textid5_;
    /// <summary>
    /// Fifth text ID for scripted events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid5 {
      get { return textid5_; }
      set {
        textid5_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 13;
    private uint emote_;
    /// <summary>
    /// Emote ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 14;
    private uint spell_;
    /// <summary>
    /// Spell ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 15;
    private float orientation_;
    /// <summary>
    /// Orientation (facing) of the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "model1" field.</summary>
    public const int Model1FieldNumber = 16;
    private uint model1_;
    /// <summary>
    /// First model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model1 {
      get { return model1_; }
      set {
        model1_ = value;
      }
    }

    /// <summary>Field number for the "model2" field.</summary>
    public const int Model2FieldNumber = 17;
    private uint model2_;
    /// <summary>
    /// Second model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model2 {
      get { return model2_; }
      set {
        model2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureMovementSpecial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureMovementSpecial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Point != other.Point) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (Waittime != other.Waittime) return false;
      if (ScriptId != other.ScriptId) return false;
      if (Textid1 != other.Textid1) return false;
      if (Textid2 != other.Textid2) return false;
      if (Textid3 != other.Textid3) return false;
      if (Textid4 != other.Textid4) return false;
      if (Textid5 != other.Textid5) return false;
      if (Emote != other.Emote) return false;
      if (Spell != other.Spell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (Model1 != other.Model1) return false;
      if (Model2 != other.Model2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Point != 0) hash ^= Point.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Waittime != 0) hash ^= Waittime.GetHashCode();
      if (ScriptId != 0) hash ^= ScriptId.GetHashCode();
      if (Textid1 != 0) hash ^= Textid1.GetHashCode();
      if (Textid2 != 0) hash ^= Textid2.GetHashCode();
      if (Textid3 != 0) hash ^= Textid3.GetHashCode();
      if (Textid4 != 0) hash ^= Textid4.GetHashCode();
      if (Textid5 != 0) hash ^= Textid5.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Model1 != 0) hash ^= Model1.GetHashCode();
      if (Model2 != 0) hash ^= Model2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Point != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Point);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Waittime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Waittime);
      }
      if (ScriptId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId);
      }
      if (Textid1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid1);
      }
      if (Textid2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid2);
      }
      if (Textid3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid3);
      }
      if (Textid4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid4);
      }
      if (Textid5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid5);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Model1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model1);
      }
      if (Model2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureMovementSpecial other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Point != 0) {
        Point = other.Point;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Waittime != 0) {
        Waittime = other.Waittime;
      }
      if (other.ScriptId != 0) {
        ScriptId = other.ScriptId;
      }
      if (other.Textid1 != 0) {
        Textid1 = other.Textid1;
      }
      if (other.Textid2 != 0) {
        Textid2 = other.Textid2;
      }
      if (other.Textid3 != 0) {
        Textid3 = other.Textid3;
      }
      if (other.Textid4 != 0) {
        Textid4 = other.Textid4;
      }
      if (other.Textid5 != 0) {
        Textid5 = other.Textid5;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Model1 != 0) {
        Model1 = other.Model1;
      }
      if (other.Model2 != 0) {
        Model2 = other.Model2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadUInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadUInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureMovementTemplate : pb::IMessage<CreatureMovementTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureMovementTemplate> _parser = new pb::MessageParser<CreatureMovementTemplate>(() => new CreatureMovementTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureMovementTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementTemplate(CreatureMovementTemplate other) : this() {
      entry_ = other.entry_;
      point_ = other.point_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      waittime_ = other.waittime_;
      scriptId_ = other.scriptId_;
      textid1_ = other.textid1_;
      textid2_ = other.textid2_;
      textid3_ = other.textid3_;
      textid4_ = other.textid4_;
      textid5_ = other.textid5_;
      emote_ = other.emote_;
      spell_ = other.spell_;
      orientation_ = other.orientation_;
      model1_ = other.model1_;
      model2_ = other.model2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureMovementTemplate Clone() {
      return new CreatureMovementTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Creature entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 2;
    private uint point_;
    /// <summary>
    /// Point in the movement path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 3;
    private float positionX_;
    /// <summary>
    /// X coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 4;
    private float positionY_;
    /// <summary>
    /// Y coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 5;
    private float positionZ_;
    /// <summary>
    /// Z coordinate of the creature's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "waittime" field.</summary>
    public const int WaittimeFieldNumber = 6;
    private uint waittime_;
    /// <summary>
    /// Time to wait before moving to the next point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Waittime {
      get { return waittime_; }
      set {
        waittime_ = value;
      }
    }

    /// <summary>Field number for the "script_id" field.</summary>
    public const int ScriptIdFieldNumber = 7;
    private uint scriptId_;
    /// <summary>
    /// Script ID associated with this movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId {
      get { return scriptId_; }
      set {
        scriptId_ = value;
      }
    }

    /// <summary>Field number for the "textid1" field.</summary>
    public const int Textid1FieldNumber = 8;
    private uint textid1_;
    /// <summary>
    /// First text event ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid1 {
      get { return textid1_; }
      set {
        textid1_ = value;
      }
    }

    /// <summary>Field number for the "textid2" field.</summary>
    public const int Textid2FieldNumber = 9;
    private uint textid2_;
    /// <summary>
    /// Second text event ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid2 {
      get { return textid2_; }
      set {
        textid2_ = value;
      }
    }

    /// <summary>Field number for the "textid3" field.</summary>
    public const int Textid3FieldNumber = 10;
    private uint textid3_;
    /// <summary>
    /// Third text event ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid3 {
      get { return textid3_; }
      set {
        textid3_ = value;
      }
    }

    /// <summary>Field number for the "textid4" field.</summary>
    public const int Textid4FieldNumber = 11;
    private uint textid4_;
    /// <summary>
    /// Fourth text event ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid4 {
      get { return textid4_; }
      set {
        textid4_ = value;
      }
    }

    /// <summary>Field number for the "textid5" field.</summary>
    public const int Textid5FieldNumber = 12;
    private uint textid5_;
    /// <summary>
    /// Fifth text event ID associated with the movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid5 {
      get { return textid5_; }
      set {
        textid5_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 13;
    private uint emote_;
    /// <summary>
    /// Emote ID for the creature at this point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 14;
    private uint spell_;
    /// <summary>
    /// Spell ID associated with this movement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 15;
    private float orientation_;
    /// <summary>
    /// Orientation of the creature (facing direction in radians)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "model1" field.</summary>
    public const int Model1FieldNumber = 16;
    private uint model1_;
    /// <summary>
    /// First model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model1 {
      get { return model1_; }
      set {
        model1_ = value;
      }
    }

    /// <summary>Field number for the "model2" field.</summary>
    public const int Model2FieldNumber = 17;
    private uint model2_;
    /// <summary>
    /// Second model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Model2 {
      get { return model2_; }
      set {
        model2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureMovementTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureMovementTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Point != other.Point) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (Waittime != other.Waittime) return false;
      if (ScriptId != other.ScriptId) return false;
      if (Textid1 != other.Textid1) return false;
      if (Textid2 != other.Textid2) return false;
      if (Textid3 != other.Textid3) return false;
      if (Textid4 != other.Textid4) return false;
      if (Textid5 != other.Textid5) return false;
      if (Emote != other.Emote) return false;
      if (Spell != other.Spell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (Model1 != other.Model1) return false;
      if (Model2 != other.Model2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Point != 0) hash ^= Point.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Waittime != 0) hash ^= Waittime.GetHashCode();
      if (ScriptId != 0) hash ^= ScriptId.GetHashCode();
      if (Textid1 != 0) hash ^= Textid1.GetHashCode();
      if (Textid2 != 0) hash ^= Textid2.GetHashCode();
      if (Textid3 != 0) hash ^= Textid3.GetHashCode();
      if (Textid4 != 0) hash ^= Textid4.GetHashCode();
      if (Textid5 != 0) hash ^= Textid5.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Model1 != 0) hash ^= Model1.GetHashCode();
      if (Model2 != 0) hash ^= Model2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Point != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Point);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (ScriptId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ScriptId);
      }
      if (Textid1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Textid1);
      }
      if (Textid2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Textid2);
      }
      if (Textid3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Textid3);
      }
      if (Textid4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Textid4);
      }
      if (Textid5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Textid5);
      }
      if (Emote != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Emote);
      }
      if (Spell != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Spell);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Orientation);
      }
      if (Model1 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Model1);
      }
      if (Model2 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Model2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Point != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Point);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Waittime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Waittime);
      }
      if (ScriptId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId);
      }
      if (Textid1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid1);
      }
      if (Textid2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid2);
      }
      if (Textid3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid3);
      }
      if (Textid4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid4);
      }
      if (Textid5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid5);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Model1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model1);
      }
      if (Model2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Model2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureMovementTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Point != 0) {
        Point = other.Point;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Waittime != 0) {
        Waittime = other.Waittime;
      }
      if (other.ScriptId != 0) {
        ScriptId = other.ScriptId;
      }
      if (other.Textid1 != 0) {
        Textid1 = other.Textid1;
      }
      if (other.Textid2 != 0) {
        Textid2 = other.Textid2;
      }
      if (other.Textid3 != 0) {
        Textid3 = other.Textid3;
      }
      if (other.Textid4 != 0) {
        Textid4 = other.Textid4;
      }
      if (other.Textid5 != 0) {
        Textid5 = other.Textid5;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Model1 != 0) {
        Model1 = other.Model1;
      }
      if (other.Model2 != 0) {
        Model2 = other.Model2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadUInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Point = input.ReadUInt32();
            break;
          }
          case 29: {
            PositionX = input.ReadFloat();
            break;
          }
          case 37: {
            PositionY = input.ReadFloat();
            break;
          }
          case 45: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 56: {
            ScriptId = input.ReadUInt32();
            break;
          }
          case 64: {
            Textid1 = input.ReadUInt32();
            break;
          }
          case 72: {
            Textid2 = input.ReadUInt32();
            break;
          }
          case 80: {
            Textid3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Textid4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Textid5 = input.ReadUInt32();
            break;
          }
          case 104: {
            Emote = input.ReadUInt32();
            break;
          }
          case 112: {
            Spell = input.ReadUInt32();
            break;
          }
          case 125: {
            Orientation = input.ReadFloat();
            break;
          }
          case 128: {
            Model1 = input.ReadUInt32();
            break;
          }
          case 136: {
            Model2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureOnKillReputation : pb::IMessage<CreatureOnKillReputation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureOnKillReputation> _parser = new pb::MessageParser<CreatureOnKillReputation>(() => new CreatureOnKillReputation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureOnKillReputation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureOnKillReputation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureOnKillReputation(CreatureOnKillReputation other) : this() {
      creatureId_ = other.creatureId_;
      rewOnKillRepFaction1_ = other.rewOnKillRepFaction1_;
      rewOnKillRepFaction2_ = other.rewOnKillRepFaction2_;
      maxStanding1_ = other.maxStanding1_;
      isTeamAward1_ = other.isTeamAward1_;
      rewOnKillRepValue1_ = other.rewOnKillRepValue1_;
      maxStanding2_ = other.maxStanding2_;
      isTeamAward2_ = other.isTeamAward2_;
      rewOnKillRepValue2_ = other.rewOnKillRepValue2_;
      teamDependent_ = other.teamDependent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureOnKillReputation Clone() {
      return new CreatureOnKillReputation(this);
    }

    /// <summary>Field number for the "creature_id" field.</summary>
    public const int CreatureIdFieldNumber = 1;
    private uint creatureId_;
    /// <summary>
    /// Creature Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureId {
      get { return creatureId_; }
      set {
        creatureId_ = value;
      }
    }

    /// <summary>Field number for the "RewOnKillRepFaction1" field.</summary>
    public const int RewOnKillRepFaction1FieldNumber = 2;
    private int rewOnKillRepFaction1_;
    /// <summary>
    /// Reputation Faction 1 on kill
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewOnKillRepFaction1 {
      get { return rewOnKillRepFaction1_; }
      set {
        rewOnKillRepFaction1_ = value;
      }
    }

    /// <summary>Field number for the "RewOnKillRepFaction2" field.</summary>
    public const int RewOnKillRepFaction2FieldNumber = 3;
    private int rewOnKillRepFaction2_;
    /// <summary>
    /// Reputation Faction 2 on kill
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewOnKillRepFaction2 {
      get { return rewOnKillRepFaction2_; }
      set {
        rewOnKillRepFaction2_ = value;
      }
    }

    /// <summary>Field number for the "MaxStanding1" field.</summary>
    public const int MaxStanding1FieldNumber = 4;
    private int maxStanding1_;
    /// <summary>
    /// Max Standing for Faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxStanding1 {
      get { return maxStanding1_; }
      set {
        maxStanding1_ = value;
      }
    }

    /// <summary>Field number for the "IsTeamAward1" field.</summary>
    public const int IsTeamAward1FieldNumber = 5;
    private bool isTeamAward1_;
    /// <summary>
    /// Is this a team-wide award for Faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTeamAward1 {
      get { return isTeamAward1_; }
      set {
        isTeamAward1_ = value;
      }
    }

    /// <summary>Field number for the "RewOnKillRepValue1" field.</summary>
    public const int RewOnKillRepValue1FieldNumber = 6;
    private int rewOnKillRepValue1_;
    /// <summary>
    /// Reputation value awarded for Faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewOnKillRepValue1 {
      get { return rewOnKillRepValue1_; }
      set {
        rewOnKillRepValue1_ = value;
      }
    }

    /// <summary>Field number for the "MaxStanding2" field.</summary>
    public const int MaxStanding2FieldNumber = 7;
    private int maxStanding2_;
    /// <summary>
    /// Max Standing for Faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxStanding2 {
      get { return maxStanding2_; }
      set {
        maxStanding2_ = value;
      }
    }

    /// <summary>Field number for the "IsTeamAward2" field.</summary>
    public const int IsTeamAward2FieldNumber = 8;
    private bool isTeamAward2_;
    /// <summary>
    /// Is this a team-wide award for Faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTeamAward2 {
      get { return isTeamAward2_; }
      set {
        isTeamAward2_ = value;
      }
    }

    /// <summary>Field number for the "RewOnKillRepValue2" field.</summary>
    public const int RewOnKillRepValue2FieldNumber = 9;
    private int rewOnKillRepValue2_;
    /// <summary>
    /// Reputation value awarded for Faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewOnKillRepValue2 {
      get { return rewOnKillRepValue2_; }
      set {
        rewOnKillRepValue2_ = value;
      }
    }

    /// <summary>Field number for the "TeamDependent" field.</summary>
    public const int TeamDependentFieldNumber = 10;
    private bool teamDependent_;
    /// <summary>
    /// Is reputation award team dependent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TeamDependent {
      get { return teamDependent_; }
      set {
        teamDependent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureOnKillReputation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureOnKillReputation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreatureId != other.CreatureId) return false;
      if (RewOnKillRepFaction1 != other.RewOnKillRepFaction1) return false;
      if (RewOnKillRepFaction2 != other.RewOnKillRepFaction2) return false;
      if (MaxStanding1 != other.MaxStanding1) return false;
      if (IsTeamAward1 != other.IsTeamAward1) return false;
      if (RewOnKillRepValue1 != other.RewOnKillRepValue1) return false;
      if (MaxStanding2 != other.MaxStanding2) return false;
      if (IsTeamAward2 != other.IsTeamAward2) return false;
      if (RewOnKillRepValue2 != other.RewOnKillRepValue2) return false;
      if (TeamDependent != other.TeamDependent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CreatureId != 0) hash ^= CreatureId.GetHashCode();
      if (RewOnKillRepFaction1 != 0) hash ^= RewOnKillRepFaction1.GetHashCode();
      if (RewOnKillRepFaction2 != 0) hash ^= RewOnKillRepFaction2.GetHashCode();
      if (MaxStanding1 != 0) hash ^= MaxStanding1.GetHashCode();
      if (IsTeamAward1 != false) hash ^= IsTeamAward1.GetHashCode();
      if (RewOnKillRepValue1 != 0) hash ^= RewOnKillRepValue1.GetHashCode();
      if (MaxStanding2 != 0) hash ^= MaxStanding2.GetHashCode();
      if (IsTeamAward2 != false) hash ^= IsTeamAward2.GetHashCode();
      if (RewOnKillRepValue2 != 0) hash ^= RewOnKillRepValue2.GetHashCode();
      if (TeamDependent != false) hash ^= TeamDependent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CreatureId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureId);
      }
      if (RewOnKillRepFaction1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewOnKillRepFaction1);
      }
      if (RewOnKillRepFaction2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewOnKillRepFaction2);
      }
      if (MaxStanding1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxStanding1);
      }
      if (IsTeamAward1 != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsTeamAward1);
      }
      if (RewOnKillRepValue1 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RewOnKillRepValue1);
      }
      if (MaxStanding2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxStanding2);
      }
      if (IsTeamAward2 != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsTeamAward2);
      }
      if (RewOnKillRepValue2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RewOnKillRepValue2);
      }
      if (TeamDependent != false) {
        output.WriteRawTag(80);
        output.WriteBool(TeamDependent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CreatureId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureId);
      }
      if (RewOnKillRepFaction1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewOnKillRepFaction1);
      }
      if (RewOnKillRepFaction2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewOnKillRepFaction2);
      }
      if (MaxStanding1 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxStanding1);
      }
      if (IsTeamAward1 != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsTeamAward1);
      }
      if (RewOnKillRepValue1 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RewOnKillRepValue1);
      }
      if (MaxStanding2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxStanding2);
      }
      if (IsTeamAward2 != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsTeamAward2);
      }
      if (RewOnKillRepValue2 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RewOnKillRepValue2);
      }
      if (TeamDependent != false) {
        output.WriteRawTag(80);
        output.WriteBool(TeamDependent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CreatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureId);
      }
      if (RewOnKillRepFaction1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewOnKillRepFaction1);
      }
      if (RewOnKillRepFaction2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewOnKillRepFaction2);
      }
      if (MaxStanding1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStanding1);
      }
      if (IsTeamAward1 != false) {
        size += 1 + 1;
      }
      if (RewOnKillRepValue1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewOnKillRepValue1);
      }
      if (MaxStanding2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStanding2);
      }
      if (IsTeamAward2 != false) {
        size += 1 + 1;
      }
      if (RewOnKillRepValue2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewOnKillRepValue2);
      }
      if (TeamDependent != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureOnKillReputation other) {
      if (other == null) {
        return;
      }
      if (other.CreatureId != 0) {
        CreatureId = other.CreatureId;
      }
      if (other.RewOnKillRepFaction1 != 0) {
        RewOnKillRepFaction1 = other.RewOnKillRepFaction1;
      }
      if (other.RewOnKillRepFaction2 != 0) {
        RewOnKillRepFaction2 = other.RewOnKillRepFaction2;
      }
      if (other.MaxStanding1 != 0) {
        MaxStanding1 = other.MaxStanding1;
      }
      if (other.IsTeamAward1 != false) {
        IsTeamAward1 = other.IsTeamAward1;
      }
      if (other.RewOnKillRepValue1 != 0) {
        RewOnKillRepValue1 = other.RewOnKillRepValue1;
      }
      if (other.MaxStanding2 != 0) {
        MaxStanding2 = other.MaxStanding2;
      }
      if (other.IsTeamAward2 != false) {
        IsTeamAward2 = other.IsTeamAward2;
      }
      if (other.RewOnKillRepValue2 != 0) {
        RewOnKillRepValue2 = other.RewOnKillRepValue2;
      }
      if (other.TeamDependent != false) {
        TeamDependent = other.TeamDependent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 16: {
            RewOnKillRepFaction1 = input.ReadInt32();
            break;
          }
          case 24: {
            RewOnKillRepFaction2 = input.ReadInt32();
            break;
          }
          case 32: {
            MaxStanding1 = input.ReadInt32();
            break;
          }
          case 40: {
            IsTeamAward1 = input.ReadBool();
            break;
          }
          case 48: {
            RewOnKillRepValue1 = input.ReadInt32();
            break;
          }
          case 56: {
            MaxStanding2 = input.ReadInt32();
            break;
          }
          case 64: {
            IsTeamAward2 = input.ReadBool();
            break;
          }
          case 72: {
            RewOnKillRepValue2 = input.ReadInt32();
            break;
          }
          case 80: {
            TeamDependent = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 16: {
            RewOnKillRepFaction1 = input.ReadInt32();
            break;
          }
          case 24: {
            RewOnKillRepFaction2 = input.ReadInt32();
            break;
          }
          case 32: {
            MaxStanding1 = input.ReadInt32();
            break;
          }
          case 40: {
            IsTeamAward1 = input.ReadBool();
            break;
          }
          case 48: {
            RewOnKillRepValue1 = input.ReadInt32();
            break;
          }
          case 56: {
            MaxStanding2 = input.ReadInt32();
            break;
          }
          case 64: {
            IsTeamAward2 = input.ReadBool();
            break;
          }
          case 72: {
            RewOnKillRepValue2 = input.ReadInt32();
            break;
          }
          case 80: {
            TeamDependent = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureQuestRelation : pb::IMessage<CreatureQuestRelation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureQuestRelation> _parser = new pb::MessageParser<CreatureQuestRelation>(() => new CreatureQuestRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureQuestRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureQuestRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureQuestRelation(CreatureQuestRelation other) : this() {
      id_ = other.id_;
      quest_ = other.quest_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureQuestRelation Clone() {
      return new CreatureQuestRelation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    /// <summary>
    /// Patch version for this relation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureQuestRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureQuestRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quest != other.Quest) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureQuestRelation other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureSpell : pb::IMessage<CreatureSpell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureSpell> _parser = new pb::MessageParser<CreatureSpell>(() => new CreatureSpell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureSpell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpell(CreatureSpell other) : this() {
      entry_ = other.entry_;
      name_ = other.name_;
      spellId1_ = other.spellId1_;
      probability1_ = other.probability1_;
      castTarget1_ = other.castTarget1_;
      targetParam11_ = other.targetParam11_;
      targetParam21_ = other.targetParam21_;
      castFlags1_ = other.castFlags1_;
      delayInitialMin1_ = other.delayInitialMin1_;
      delayInitialMax1_ = other.delayInitialMax1_;
      delayRepeatMin1_ = other.delayRepeatMin1_;
      delayRepeatMax1_ = other.delayRepeatMax1_;
      scriptId1_ = other.scriptId1_;
      spellId2_ = other.spellId2_;
      probability2_ = other.probability2_;
      castTarget2_ = other.castTarget2_;
      targetParam12_ = other.targetParam12_;
      targetParam22_ = other.targetParam22_;
      castFlags2_ = other.castFlags2_;
      delayInitialMin2_ = other.delayInitialMin2_;
      delayInitialMax2_ = other.delayInitialMax2_;
      delayRepeatMin2_ = other.delayRepeatMin2_;
      delayRepeatMax2_ = other.delayRepeatMax2_;
      scriptId2_ = other.scriptId2_;
      spellId3_ = other.spellId3_;
      probability3_ = other.probability3_;
      castTarget3_ = other.castTarget3_;
      targetParam13_ = other.targetParam13_;
      targetParam23_ = other.targetParam23_;
      castFlags3_ = other.castFlags3_;
      delayInitialMin3_ = other.delayInitialMin3_;
      delayInitialMax3_ = other.delayInitialMax3_;
      delayRepeatMin3_ = other.delayRepeatMin3_;
      delayRepeatMax3_ = other.delayRepeatMax3_;
      scriptId3_ = other.scriptId3_;
      spellId4_ = other.spellId4_;
      probability4_ = other.probability4_;
      castTarget4_ = other.castTarget4_;
      targetParam14_ = other.targetParam14_;
      targetParam24_ = other.targetParam24_;
      castFlags4_ = other.castFlags4_;
      delayInitialMin4_ = other.delayInitialMin4_;
      delayInitialMax4_ = other.delayInitialMax4_;
      delayRepeatMin4_ = other.delayRepeatMin4_;
      delayRepeatMax4_ = other.delayRepeatMax4_;
      scriptId4_ = other.scriptId4_;
      spellId5_ = other.spellId5_;
      probability5_ = other.probability5_;
      castTarget5_ = other.castTarget5_;
      targetParam15_ = other.targetParam15_;
      targetParam25_ = other.targetParam25_;
      castFlags5_ = other.castFlags5_;
      delayInitialMin5_ = other.delayInitialMin5_;
      delayInitialMax5_ = other.delayInitialMax5_;
      delayRepeatMin5_ = other.delayRepeatMin5_;
      delayRepeatMax5_ = other.delayRepeatMax5_;
      scriptId5_ = other.scriptId5_;
      spellId6_ = other.spellId6_;
      probability6_ = other.probability6_;
      castTarget6_ = other.castTarget6_;
      targetParam16_ = other.targetParam16_;
      targetParam26_ = other.targetParam26_;
      castFlags6_ = other.castFlags6_;
      delayInitialMin6_ = other.delayInitialMin6_;
      delayInitialMax6_ = other.delayInitialMax6_;
      delayRepeatMin6_ = other.delayRepeatMin6_;
      delayRepeatMax6_ = other.delayRepeatMax6_;
      scriptId6_ = other.scriptId6_;
      spellId7_ = other.spellId7_;
      probability7_ = other.probability7_;
      castTarget7_ = other.castTarget7_;
      targetParam17_ = other.targetParam17_;
      targetParam27_ = other.targetParam27_;
      castFlags7_ = other.castFlags7_;
      delayInitialMin7_ = other.delayInitialMin7_;
      delayInitialMax7_ = other.delayInitialMax7_;
      delayRepeatMin7_ = other.delayRepeatMin7_;
      delayRepeatMax7_ = other.delayRepeatMax7_;
      scriptId7_ = other.scriptId7_;
      spellId8_ = other.spellId8_;
      probability8_ = other.probability8_;
      castTarget8_ = other.castTarget8_;
      targetParam18_ = other.targetParam18_;
      targetParam28_ = other.targetParam28_;
      castFlags8_ = other.castFlags8_;
      delayInitialMin8_ = other.delayInitialMin8_;
      delayInitialMax8_ = other.delayInitialMax8_;
      delayRepeatMin8_ = other.delayRepeatMin8_;
      delayRepeatMax8_ = other.delayRepeatMax8_;
      scriptId8_ = other.scriptId8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpell Clone() {
      return new CreatureSpell(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spellId_1" field.</summary>
    public const int SpellId1FieldNumber = 3;
    private uint spellId1_;
    /// <summary>
    /// First spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId1 {
      get { return spellId1_; }
      set {
        spellId1_ = value;
      }
    }

    /// <summary>Field number for the "probability_1" field.</summary>
    public const int Probability1FieldNumber = 4;
    private uint probability1_;
    /// <summary>
    /// Probability for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability1 {
      get { return probability1_; }
      set {
        probability1_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_1" field.</summary>
    public const int CastTarget1FieldNumber = 5;
    private uint castTarget1_;
    /// <summary>
    /// Cast target for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget1 {
      get { return castTarget1_; }
      set {
        castTarget1_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_1" field.</summary>
    public const int TargetParam11FieldNumber = 6;
    private uint targetParam11_;
    /// <summary>
    /// Target parameter 1 for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam11 {
      get { return targetParam11_; }
      set {
        targetParam11_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_1" field.</summary>
    public const int TargetParam21FieldNumber = 7;
    private uint targetParam21_;
    /// <summary>
    /// Target parameter 2 for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam21 {
      get { return targetParam21_; }
      set {
        targetParam21_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_1" field.</summary>
    public const int CastFlags1FieldNumber = 8;
    private uint castFlags1_;
    /// <summary>
    /// Cast flags for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags1 {
      get { return castFlags1_; }
      set {
        castFlags1_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_1" field.</summary>
    public const int DelayInitialMin1FieldNumber = 9;
    private uint delayInitialMin1_;
    /// <summary>
    /// Initial minimum delay for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin1 {
      get { return delayInitialMin1_; }
      set {
        delayInitialMin1_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_1" field.</summary>
    public const int DelayInitialMax1FieldNumber = 10;
    private uint delayInitialMax1_;
    /// <summary>
    /// Initial maximum delay for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax1 {
      get { return delayInitialMax1_; }
      set {
        delayInitialMax1_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_1" field.</summary>
    public const int DelayRepeatMin1FieldNumber = 11;
    private uint delayRepeatMin1_;
    /// <summary>
    /// Repeat minimum delay for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin1 {
      get { return delayRepeatMin1_; }
      set {
        delayRepeatMin1_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_1" field.</summary>
    public const int DelayRepeatMax1FieldNumber = 12;
    private uint delayRepeatMax1_;
    /// <summary>
    /// Repeat maximum delay for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax1 {
      get { return delayRepeatMax1_; }
      set {
        delayRepeatMax1_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_1" field.</summary>
    public const int ScriptId1FieldNumber = 13;
    private uint scriptId1_;
    /// <summary>
    /// Script ID for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId1 {
      get { return scriptId1_; }
      set {
        scriptId1_ = value;
      }
    }

    /// <summary>Field number for the "spellId_2" field.</summary>
    public const int SpellId2FieldNumber = 14;
    private uint spellId2_;
    /// <summary>
    /// Repeat the fields for additional spells (spell 2 through 8)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId2 {
      get { return spellId2_; }
      set {
        spellId2_ = value;
      }
    }

    /// <summary>Field number for the "probability_2" field.</summary>
    public const int Probability2FieldNumber = 15;
    private uint probability2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability2 {
      get { return probability2_; }
      set {
        probability2_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_2" field.</summary>
    public const int CastTarget2FieldNumber = 16;
    private uint castTarget2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget2 {
      get { return castTarget2_; }
      set {
        castTarget2_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_2" field.</summary>
    public const int TargetParam12FieldNumber = 17;
    private uint targetParam12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam12 {
      get { return targetParam12_; }
      set {
        targetParam12_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_2" field.</summary>
    public const int TargetParam22FieldNumber = 18;
    private uint targetParam22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam22 {
      get { return targetParam22_; }
      set {
        targetParam22_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_2" field.</summary>
    public const int CastFlags2FieldNumber = 19;
    private uint castFlags2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags2 {
      get { return castFlags2_; }
      set {
        castFlags2_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_2" field.</summary>
    public const int DelayInitialMin2FieldNumber = 20;
    private uint delayInitialMin2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin2 {
      get { return delayInitialMin2_; }
      set {
        delayInitialMin2_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_2" field.</summary>
    public const int DelayInitialMax2FieldNumber = 21;
    private uint delayInitialMax2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax2 {
      get { return delayInitialMax2_; }
      set {
        delayInitialMax2_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_2" field.</summary>
    public const int DelayRepeatMin2FieldNumber = 22;
    private uint delayRepeatMin2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin2 {
      get { return delayRepeatMin2_; }
      set {
        delayRepeatMin2_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_2" field.</summary>
    public const int DelayRepeatMax2FieldNumber = 23;
    private uint delayRepeatMax2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax2 {
      get { return delayRepeatMax2_; }
      set {
        delayRepeatMax2_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_2" field.</summary>
    public const int ScriptId2FieldNumber = 24;
    private uint scriptId2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId2 {
      get { return scriptId2_; }
      set {
        scriptId2_ = value;
      }
    }

    /// <summary>Field number for the "spellId_3" field.</summary>
    public const int SpellId3FieldNumber = 25;
    private uint spellId3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId3 {
      get { return spellId3_; }
      set {
        spellId3_ = value;
      }
    }

    /// <summary>Field number for the "probability_3" field.</summary>
    public const int Probability3FieldNumber = 26;
    private uint probability3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability3 {
      get { return probability3_; }
      set {
        probability3_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_3" field.</summary>
    public const int CastTarget3FieldNumber = 27;
    private uint castTarget3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget3 {
      get { return castTarget3_; }
      set {
        castTarget3_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_3" field.</summary>
    public const int TargetParam13FieldNumber = 28;
    private uint targetParam13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam13 {
      get { return targetParam13_; }
      set {
        targetParam13_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_3" field.</summary>
    public const int TargetParam23FieldNumber = 29;
    private uint targetParam23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam23 {
      get { return targetParam23_; }
      set {
        targetParam23_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_3" field.</summary>
    public const int CastFlags3FieldNumber = 30;
    private uint castFlags3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags3 {
      get { return castFlags3_; }
      set {
        castFlags3_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_3" field.</summary>
    public const int DelayInitialMin3FieldNumber = 31;
    private uint delayInitialMin3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin3 {
      get { return delayInitialMin3_; }
      set {
        delayInitialMin3_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_3" field.</summary>
    public const int DelayInitialMax3FieldNumber = 32;
    private uint delayInitialMax3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax3 {
      get { return delayInitialMax3_; }
      set {
        delayInitialMax3_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_3" field.</summary>
    public const int DelayRepeatMin3FieldNumber = 33;
    private uint delayRepeatMin3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin3 {
      get { return delayRepeatMin3_; }
      set {
        delayRepeatMin3_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_3" field.</summary>
    public const int DelayRepeatMax3FieldNumber = 34;
    private uint delayRepeatMax3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax3 {
      get { return delayRepeatMax3_; }
      set {
        delayRepeatMax3_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_3" field.</summary>
    public const int ScriptId3FieldNumber = 35;
    private uint scriptId3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId3 {
      get { return scriptId3_; }
      set {
        scriptId3_ = value;
      }
    }

    /// <summary>Field number for the "spellId_4" field.</summary>
    public const int SpellId4FieldNumber = 36;
    private uint spellId4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId4 {
      get { return spellId4_; }
      set {
        spellId4_ = value;
      }
    }

    /// <summary>Field number for the "probability_4" field.</summary>
    public const int Probability4FieldNumber = 37;
    private uint probability4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability4 {
      get { return probability4_; }
      set {
        probability4_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_4" field.</summary>
    public const int CastTarget4FieldNumber = 38;
    private uint castTarget4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget4 {
      get { return castTarget4_; }
      set {
        castTarget4_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_4" field.</summary>
    public const int TargetParam14FieldNumber = 39;
    private uint targetParam14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam14 {
      get { return targetParam14_; }
      set {
        targetParam14_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_4" field.</summary>
    public const int TargetParam24FieldNumber = 40;
    private uint targetParam24_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam24 {
      get { return targetParam24_; }
      set {
        targetParam24_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_4" field.</summary>
    public const int CastFlags4FieldNumber = 41;
    private uint castFlags4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags4 {
      get { return castFlags4_; }
      set {
        castFlags4_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_4" field.</summary>
    public const int DelayInitialMin4FieldNumber = 42;
    private uint delayInitialMin4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin4 {
      get { return delayInitialMin4_; }
      set {
        delayInitialMin4_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_4" field.</summary>
    public const int DelayInitialMax4FieldNumber = 43;
    private uint delayInitialMax4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax4 {
      get { return delayInitialMax4_; }
      set {
        delayInitialMax4_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_4" field.</summary>
    public const int DelayRepeatMin4FieldNumber = 44;
    private uint delayRepeatMin4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin4 {
      get { return delayRepeatMin4_; }
      set {
        delayRepeatMin4_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_4" field.</summary>
    public const int DelayRepeatMax4FieldNumber = 45;
    private uint delayRepeatMax4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax4 {
      get { return delayRepeatMax4_; }
      set {
        delayRepeatMax4_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_4" field.</summary>
    public const int ScriptId4FieldNumber = 46;
    private uint scriptId4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId4 {
      get { return scriptId4_; }
      set {
        scriptId4_ = value;
      }
    }

    /// <summary>Field number for the "spellId_5" field.</summary>
    public const int SpellId5FieldNumber = 47;
    private uint spellId5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId5 {
      get { return spellId5_; }
      set {
        spellId5_ = value;
      }
    }

    /// <summary>Field number for the "probability_5" field.</summary>
    public const int Probability5FieldNumber = 48;
    private uint probability5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability5 {
      get { return probability5_; }
      set {
        probability5_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_5" field.</summary>
    public const int CastTarget5FieldNumber = 49;
    private uint castTarget5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget5 {
      get { return castTarget5_; }
      set {
        castTarget5_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_5" field.</summary>
    public const int TargetParam15FieldNumber = 50;
    private uint targetParam15_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam15 {
      get { return targetParam15_; }
      set {
        targetParam15_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_5" field.</summary>
    public const int TargetParam25FieldNumber = 51;
    private uint targetParam25_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam25 {
      get { return targetParam25_; }
      set {
        targetParam25_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_5" field.</summary>
    public const int CastFlags5FieldNumber = 52;
    private uint castFlags5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags5 {
      get { return castFlags5_; }
      set {
        castFlags5_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_5" field.</summary>
    public const int DelayInitialMin5FieldNumber = 53;
    private uint delayInitialMin5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin5 {
      get { return delayInitialMin5_; }
      set {
        delayInitialMin5_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_5" field.</summary>
    public const int DelayInitialMax5FieldNumber = 54;
    private uint delayInitialMax5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax5 {
      get { return delayInitialMax5_; }
      set {
        delayInitialMax5_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_5" field.</summary>
    public const int DelayRepeatMin5FieldNumber = 55;
    private uint delayRepeatMin5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin5 {
      get { return delayRepeatMin5_; }
      set {
        delayRepeatMin5_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_5" field.</summary>
    public const int DelayRepeatMax5FieldNumber = 56;
    private uint delayRepeatMax5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax5 {
      get { return delayRepeatMax5_; }
      set {
        delayRepeatMax5_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_5" field.</summary>
    public const int ScriptId5FieldNumber = 57;
    private uint scriptId5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId5 {
      get { return scriptId5_; }
      set {
        scriptId5_ = value;
      }
    }

    /// <summary>Field number for the "spellId_6" field.</summary>
    public const int SpellId6FieldNumber = 58;
    private uint spellId6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId6 {
      get { return spellId6_; }
      set {
        spellId6_ = value;
      }
    }

    /// <summary>Field number for the "probability_6" field.</summary>
    public const int Probability6FieldNumber = 59;
    private uint probability6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability6 {
      get { return probability6_; }
      set {
        probability6_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_6" field.</summary>
    public const int CastTarget6FieldNumber = 60;
    private uint castTarget6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget6 {
      get { return castTarget6_; }
      set {
        castTarget6_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_6" field.</summary>
    public const int TargetParam16FieldNumber = 61;
    private uint targetParam16_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam16 {
      get { return targetParam16_; }
      set {
        targetParam16_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_6" field.</summary>
    public const int TargetParam26FieldNumber = 62;
    private uint targetParam26_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam26 {
      get { return targetParam26_; }
      set {
        targetParam26_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_6" field.</summary>
    public const int CastFlags6FieldNumber = 63;
    private uint castFlags6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags6 {
      get { return castFlags6_; }
      set {
        castFlags6_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_6" field.</summary>
    public const int DelayInitialMin6FieldNumber = 64;
    private uint delayInitialMin6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin6 {
      get { return delayInitialMin6_; }
      set {
        delayInitialMin6_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_6" field.</summary>
    public const int DelayInitialMax6FieldNumber = 65;
    private uint delayInitialMax6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax6 {
      get { return delayInitialMax6_; }
      set {
        delayInitialMax6_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_6" field.</summary>
    public const int DelayRepeatMin6FieldNumber = 66;
    private uint delayRepeatMin6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin6 {
      get { return delayRepeatMin6_; }
      set {
        delayRepeatMin6_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_6" field.</summary>
    public const int DelayRepeatMax6FieldNumber = 67;
    private uint delayRepeatMax6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax6 {
      get { return delayRepeatMax6_; }
      set {
        delayRepeatMax6_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_6" field.</summary>
    public const int ScriptId6FieldNumber = 68;
    private uint scriptId6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId6 {
      get { return scriptId6_; }
      set {
        scriptId6_ = value;
      }
    }

    /// <summary>Field number for the "spellId_7" field.</summary>
    public const int SpellId7FieldNumber = 69;
    private uint spellId7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId7 {
      get { return spellId7_; }
      set {
        spellId7_ = value;
      }
    }

    /// <summary>Field number for the "probability_7" field.</summary>
    public const int Probability7FieldNumber = 70;
    private uint probability7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability7 {
      get { return probability7_; }
      set {
        probability7_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_7" field.</summary>
    public const int CastTarget7FieldNumber = 71;
    private uint castTarget7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget7 {
      get { return castTarget7_; }
      set {
        castTarget7_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_7" field.</summary>
    public const int TargetParam17FieldNumber = 72;
    private uint targetParam17_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam17 {
      get { return targetParam17_; }
      set {
        targetParam17_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_7" field.</summary>
    public const int TargetParam27FieldNumber = 73;
    private uint targetParam27_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam27 {
      get { return targetParam27_; }
      set {
        targetParam27_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_7" field.</summary>
    public const int CastFlags7FieldNumber = 74;
    private uint castFlags7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags7 {
      get { return castFlags7_; }
      set {
        castFlags7_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_7" field.</summary>
    public const int DelayInitialMin7FieldNumber = 75;
    private uint delayInitialMin7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin7 {
      get { return delayInitialMin7_; }
      set {
        delayInitialMin7_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_7" field.</summary>
    public const int DelayInitialMax7FieldNumber = 76;
    private uint delayInitialMax7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax7 {
      get { return delayInitialMax7_; }
      set {
        delayInitialMax7_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_7" field.</summary>
    public const int DelayRepeatMin7FieldNumber = 77;
    private uint delayRepeatMin7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin7 {
      get { return delayRepeatMin7_; }
      set {
        delayRepeatMin7_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_7" field.</summary>
    public const int DelayRepeatMax7FieldNumber = 78;
    private uint delayRepeatMax7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax7 {
      get { return delayRepeatMax7_; }
      set {
        delayRepeatMax7_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_7" field.</summary>
    public const int ScriptId7FieldNumber = 79;
    private uint scriptId7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId7 {
      get { return scriptId7_; }
      set {
        scriptId7_ = value;
      }
    }

    /// <summary>Field number for the "spellId_8" field.</summary>
    public const int SpellId8FieldNumber = 80;
    private uint spellId8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId8 {
      get { return spellId8_; }
      set {
        spellId8_ = value;
      }
    }

    /// <summary>Field number for the "probability_8" field.</summary>
    public const int Probability8FieldNumber = 81;
    private uint probability8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Probability8 {
      get { return probability8_; }
      set {
        probability8_ = value;
      }
    }

    /// <summary>Field number for the "castTarget_8" field.</summary>
    public const int CastTarget8FieldNumber = 82;
    private uint castTarget8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastTarget8 {
      get { return castTarget8_; }
      set {
        castTarget8_ = value;
      }
    }

    /// <summary>Field number for the "targetParam1_8" field.</summary>
    public const int TargetParam18FieldNumber = 83;
    private uint targetParam18_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam18 {
      get { return targetParam18_; }
      set {
        targetParam18_ = value;
      }
    }

    /// <summary>Field number for the "targetParam2_8" field.</summary>
    public const int TargetParam28FieldNumber = 84;
    private uint targetParam28_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam28 {
      get { return targetParam28_; }
      set {
        targetParam28_ = value;
      }
    }

    /// <summary>Field number for the "castFlags_8" field.</summary>
    public const int CastFlags8FieldNumber = 85;
    private uint castFlags8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastFlags8 {
      get { return castFlags8_; }
      set {
        castFlags8_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMin_8" field.</summary>
    public const int DelayInitialMin8FieldNumber = 86;
    private uint delayInitialMin8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMin8 {
      get { return delayInitialMin8_; }
      set {
        delayInitialMin8_ = value;
      }
    }

    /// <summary>Field number for the "delayInitialMax_8" field.</summary>
    public const int DelayInitialMax8FieldNumber = 87;
    private uint delayInitialMax8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayInitialMax8 {
      get { return delayInitialMax8_; }
      set {
        delayInitialMax8_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMin_8" field.</summary>
    public const int DelayRepeatMin8FieldNumber = 88;
    private uint delayRepeatMin8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMin8 {
      get { return delayRepeatMin8_; }
      set {
        delayRepeatMin8_ = value;
      }
    }

    /// <summary>Field number for the "delayRepeatMax_8" field.</summary>
    public const int DelayRepeatMax8FieldNumber = 89;
    private uint delayRepeatMax8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DelayRepeatMax8 {
      get { return delayRepeatMax8_; }
      set {
        delayRepeatMax8_ = value;
      }
    }

    /// <summary>Field number for the "scriptId_8" field.</summary>
    public const int ScriptId8FieldNumber = 90;
    private uint scriptId8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScriptId8 {
      get { return scriptId8_; }
      set {
        scriptId8_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureSpell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureSpell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Name != other.Name) return false;
      if (SpellId1 != other.SpellId1) return false;
      if (Probability1 != other.Probability1) return false;
      if (CastTarget1 != other.CastTarget1) return false;
      if (TargetParam11 != other.TargetParam11) return false;
      if (TargetParam21 != other.TargetParam21) return false;
      if (CastFlags1 != other.CastFlags1) return false;
      if (DelayInitialMin1 != other.DelayInitialMin1) return false;
      if (DelayInitialMax1 != other.DelayInitialMax1) return false;
      if (DelayRepeatMin1 != other.DelayRepeatMin1) return false;
      if (DelayRepeatMax1 != other.DelayRepeatMax1) return false;
      if (ScriptId1 != other.ScriptId1) return false;
      if (SpellId2 != other.SpellId2) return false;
      if (Probability2 != other.Probability2) return false;
      if (CastTarget2 != other.CastTarget2) return false;
      if (TargetParam12 != other.TargetParam12) return false;
      if (TargetParam22 != other.TargetParam22) return false;
      if (CastFlags2 != other.CastFlags2) return false;
      if (DelayInitialMin2 != other.DelayInitialMin2) return false;
      if (DelayInitialMax2 != other.DelayInitialMax2) return false;
      if (DelayRepeatMin2 != other.DelayRepeatMin2) return false;
      if (DelayRepeatMax2 != other.DelayRepeatMax2) return false;
      if (ScriptId2 != other.ScriptId2) return false;
      if (SpellId3 != other.SpellId3) return false;
      if (Probability3 != other.Probability3) return false;
      if (CastTarget3 != other.CastTarget3) return false;
      if (TargetParam13 != other.TargetParam13) return false;
      if (TargetParam23 != other.TargetParam23) return false;
      if (CastFlags3 != other.CastFlags3) return false;
      if (DelayInitialMin3 != other.DelayInitialMin3) return false;
      if (DelayInitialMax3 != other.DelayInitialMax3) return false;
      if (DelayRepeatMin3 != other.DelayRepeatMin3) return false;
      if (DelayRepeatMax3 != other.DelayRepeatMax3) return false;
      if (ScriptId3 != other.ScriptId3) return false;
      if (SpellId4 != other.SpellId4) return false;
      if (Probability4 != other.Probability4) return false;
      if (CastTarget4 != other.CastTarget4) return false;
      if (TargetParam14 != other.TargetParam14) return false;
      if (TargetParam24 != other.TargetParam24) return false;
      if (CastFlags4 != other.CastFlags4) return false;
      if (DelayInitialMin4 != other.DelayInitialMin4) return false;
      if (DelayInitialMax4 != other.DelayInitialMax4) return false;
      if (DelayRepeatMin4 != other.DelayRepeatMin4) return false;
      if (DelayRepeatMax4 != other.DelayRepeatMax4) return false;
      if (ScriptId4 != other.ScriptId4) return false;
      if (SpellId5 != other.SpellId5) return false;
      if (Probability5 != other.Probability5) return false;
      if (CastTarget5 != other.CastTarget5) return false;
      if (TargetParam15 != other.TargetParam15) return false;
      if (TargetParam25 != other.TargetParam25) return false;
      if (CastFlags5 != other.CastFlags5) return false;
      if (DelayInitialMin5 != other.DelayInitialMin5) return false;
      if (DelayInitialMax5 != other.DelayInitialMax5) return false;
      if (DelayRepeatMin5 != other.DelayRepeatMin5) return false;
      if (DelayRepeatMax5 != other.DelayRepeatMax5) return false;
      if (ScriptId5 != other.ScriptId5) return false;
      if (SpellId6 != other.SpellId6) return false;
      if (Probability6 != other.Probability6) return false;
      if (CastTarget6 != other.CastTarget6) return false;
      if (TargetParam16 != other.TargetParam16) return false;
      if (TargetParam26 != other.TargetParam26) return false;
      if (CastFlags6 != other.CastFlags6) return false;
      if (DelayInitialMin6 != other.DelayInitialMin6) return false;
      if (DelayInitialMax6 != other.DelayInitialMax6) return false;
      if (DelayRepeatMin6 != other.DelayRepeatMin6) return false;
      if (DelayRepeatMax6 != other.DelayRepeatMax6) return false;
      if (ScriptId6 != other.ScriptId6) return false;
      if (SpellId7 != other.SpellId7) return false;
      if (Probability7 != other.Probability7) return false;
      if (CastTarget7 != other.CastTarget7) return false;
      if (TargetParam17 != other.TargetParam17) return false;
      if (TargetParam27 != other.TargetParam27) return false;
      if (CastFlags7 != other.CastFlags7) return false;
      if (DelayInitialMin7 != other.DelayInitialMin7) return false;
      if (DelayInitialMax7 != other.DelayInitialMax7) return false;
      if (DelayRepeatMin7 != other.DelayRepeatMin7) return false;
      if (DelayRepeatMax7 != other.DelayRepeatMax7) return false;
      if (ScriptId7 != other.ScriptId7) return false;
      if (SpellId8 != other.SpellId8) return false;
      if (Probability8 != other.Probability8) return false;
      if (CastTarget8 != other.CastTarget8) return false;
      if (TargetParam18 != other.TargetParam18) return false;
      if (TargetParam28 != other.TargetParam28) return false;
      if (CastFlags8 != other.CastFlags8) return false;
      if (DelayInitialMin8 != other.DelayInitialMin8) return false;
      if (DelayInitialMax8 != other.DelayInitialMax8) return false;
      if (DelayRepeatMin8 != other.DelayRepeatMin8) return false;
      if (DelayRepeatMax8 != other.DelayRepeatMax8) return false;
      if (ScriptId8 != other.ScriptId8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SpellId1 != 0) hash ^= SpellId1.GetHashCode();
      if (Probability1 != 0) hash ^= Probability1.GetHashCode();
      if (CastTarget1 != 0) hash ^= CastTarget1.GetHashCode();
      if (TargetParam11 != 0) hash ^= TargetParam11.GetHashCode();
      if (TargetParam21 != 0) hash ^= TargetParam21.GetHashCode();
      if (CastFlags1 != 0) hash ^= CastFlags1.GetHashCode();
      if (DelayInitialMin1 != 0) hash ^= DelayInitialMin1.GetHashCode();
      if (DelayInitialMax1 != 0) hash ^= DelayInitialMax1.GetHashCode();
      if (DelayRepeatMin1 != 0) hash ^= DelayRepeatMin1.GetHashCode();
      if (DelayRepeatMax1 != 0) hash ^= DelayRepeatMax1.GetHashCode();
      if (ScriptId1 != 0) hash ^= ScriptId1.GetHashCode();
      if (SpellId2 != 0) hash ^= SpellId2.GetHashCode();
      if (Probability2 != 0) hash ^= Probability2.GetHashCode();
      if (CastTarget2 != 0) hash ^= CastTarget2.GetHashCode();
      if (TargetParam12 != 0) hash ^= TargetParam12.GetHashCode();
      if (TargetParam22 != 0) hash ^= TargetParam22.GetHashCode();
      if (CastFlags2 != 0) hash ^= CastFlags2.GetHashCode();
      if (DelayInitialMin2 != 0) hash ^= DelayInitialMin2.GetHashCode();
      if (DelayInitialMax2 != 0) hash ^= DelayInitialMax2.GetHashCode();
      if (DelayRepeatMin2 != 0) hash ^= DelayRepeatMin2.GetHashCode();
      if (DelayRepeatMax2 != 0) hash ^= DelayRepeatMax2.GetHashCode();
      if (ScriptId2 != 0) hash ^= ScriptId2.GetHashCode();
      if (SpellId3 != 0) hash ^= SpellId3.GetHashCode();
      if (Probability3 != 0) hash ^= Probability3.GetHashCode();
      if (CastTarget3 != 0) hash ^= CastTarget3.GetHashCode();
      if (TargetParam13 != 0) hash ^= TargetParam13.GetHashCode();
      if (TargetParam23 != 0) hash ^= TargetParam23.GetHashCode();
      if (CastFlags3 != 0) hash ^= CastFlags3.GetHashCode();
      if (DelayInitialMin3 != 0) hash ^= DelayInitialMin3.GetHashCode();
      if (DelayInitialMax3 != 0) hash ^= DelayInitialMax3.GetHashCode();
      if (DelayRepeatMin3 != 0) hash ^= DelayRepeatMin3.GetHashCode();
      if (DelayRepeatMax3 != 0) hash ^= DelayRepeatMax3.GetHashCode();
      if (ScriptId3 != 0) hash ^= ScriptId3.GetHashCode();
      if (SpellId4 != 0) hash ^= SpellId4.GetHashCode();
      if (Probability4 != 0) hash ^= Probability4.GetHashCode();
      if (CastTarget4 != 0) hash ^= CastTarget4.GetHashCode();
      if (TargetParam14 != 0) hash ^= TargetParam14.GetHashCode();
      if (TargetParam24 != 0) hash ^= TargetParam24.GetHashCode();
      if (CastFlags4 != 0) hash ^= CastFlags4.GetHashCode();
      if (DelayInitialMin4 != 0) hash ^= DelayInitialMin4.GetHashCode();
      if (DelayInitialMax4 != 0) hash ^= DelayInitialMax4.GetHashCode();
      if (DelayRepeatMin4 != 0) hash ^= DelayRepeatMin4.GetHashCode();
      if (DelayRepeatMax4 != 0) hash ^= DelayRepeatMax4.GetHashCode();
      if (ScriptId4 != 0) hash ^= ScriptId4.GetHashCode();
      if (SpellId5 != 0) hash ^= SpellId5.GetHashCode();
      if (Probability5 != 0) hash ^= Probability5.GetHashCode();
      if (CastTarget5 != 0) hash ^= CastTarget5.GetHashCode();
      if (TargetParam15 != 0) hash ^= TargetParam15.GetHashCode();
      if (TargetParam25 != 0) hash ^= TargetParam25.GetHashCode();
      if (CastFlags5 != 0) hash ^= CastFlags5.GetHashCode();
      if (DelayInitialMin5 != 0) hash ^= DelayInitialMin5.GetHashCode();
      if (DelayInitialMax5 != 0) hash ^= DelayInitialMax5.GetHashCode();
      if (DelayRepeatMin5 != 0) hash ^= DelayRepeatMin5.GetHashCode();
      if (DelayRepeatMax5 != 0) hash ^= DelayRepeatMax5.GetHashCode();
      if (ScriptId5 != 0) hash ^= ScriptId5.GetHashCode();
      if (SpellId6 != 0) hash ^= SpellId6.GetHashCode();
      if (Probability6 != 0) hash ^= Probability6.GetHashCode();
      if (CastTarget6 != 0) hash ^= CastTarget6.GetHashCode();
      if (TargetParam16 != 0) hash ^= TargetParam16.GetHashCode();
      if (TargetParam26 != 0) hash ^= TargetParam26.GetHashCode();
      if (CastFlags6 != 0) hash ^= CastFlags6.GetHashCode();
      if (DelayInitialMin6 != 0) hash ^= DelayInitialMin6.GetHashCode();
      if (DelayInitialMax6 != 0) hash ^= DelayInitialMax6.GetHashCode();
      if (DelayRepeatMin6 != 0) hash ^= DelayRepeatMin6.GetHashCode();
      if (DelayRepeatMax6 != 0) hash ^= DelayRepeatMax6.GetHashCode();
      if (ScriptId6 != 0) hash ^= ScriptId6.GetHashCode();
      if (SpellId7 != 0) hash ^= SpellId7.GetHashCode();
      if (Probability7 != 0) hash ^= Probability7.GetHashCode();
      if (CastTarget7 != 0) hash ^= CastTarget7.GetHashCode();
      if (TargetParam17 != 0) hash ^= TargetParam17.GetHashCode();
      if (TargetParam27 != 0) hash ^= TargetParam27.GetHashCode();
      if (CastFlags7 != 0) hash ^= CastFlags7.GetHashCode();
      if (DelayInitialMin7 != 0) hash ^= DelayInitialMin7.GetHashCode();
      if (DelayInitialMax7 != 0) hash ^= DelayInitialMax7.GetHashCode();
      if (DelayRepeatMin7 != 0) hash ^= DelayRepeatMin7.GetHashCode();
      if (DelayRepeatMax7 != 0) hash ^= DelayRepeatMax7.GetHashCode();
      if (ScriptId7 != 0) hash ^= ScriptId7.GetHashCode();
      if (SpellId8 != 0) hash ^= SpellId8.GetHashCode();
      if (Probability8 != 0) hash ^= Probability8.GetHashCode();
      if (CastTarget8 != 0) hash ^= CastTarget8.GetHashCode();
      if (TargetParam18 != 0) hash ^= TargetParam18.GetHashCode();
      if (TargetParam28 != 0) hash ^= TargetParam28.GetHashCode();
      if (CastFlags8 != 0) hash ^= CastFlags8.GetHashCode();
      if (DelayInitialMin8 != 0) hash ^= DelayInitialMin8.GetHashCode();
      if (DelayInitialMax8 != 0) hash ^= DelayInitialMax8.GetHashCode();
      if (DelayRepeatMin8 != 0) hash ^= DelayRepeatMin8.GetHashCode();
      if (DelayRepeatMax8 != 0) hash ^= DelayRepeatMax8.GetHashCode();
      if (ScriptId8 != 0) hash ^= ScriptId8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SpellId1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellId1);
      }
      if (Probability1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Probability1);
      }
      if (CastTarget1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CastTarget1);
      }
      if (TargetParam11 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TargetParam11);
      }
      if (TargetParam21 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TargetParam21);
      }
      if (CastFlags1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(CastFlags1);
      }
      if (DelayInitialMin1 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(DelayInitialMin1);
      }
      if (DelayInitialMax1 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(DelayInitialMax1);
      }
      if (DelayRepeatMin1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DelayRepeatMin1);
      }
      if (DelayRepeatMax1 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(DelayRepeatMax1);
      }
      if (ScriptId1 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ScriptId1);
      }
      if (SpellId2 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(SpellId2);
      }
      if (Probability2 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Probability2);
      }
      if (CastTarget2 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(CastTarget2);
      }
      if (TargetParam12 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(TargetParam12);
      }
      if (TargetParam22 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(TargetParam22);
      }
      if (CastFlags2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CastFlags2);
      }
      if (DelayInitialMin2 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(DelayInitialMin2);
      }
      if (DelayInitialMax2 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(DelayInitialMax2);
      }
      if (DelayRepeatMin2 != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(DelayRepeatMin2);
      }
      if (DelayRepeatMax2 != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(DelayRepeatMax2);
      }
      if (ScriptId2 != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ScriptId2);
      }
      if (SpellId3 != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(SpellId3);
      }
      if (Probability3 != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(Probability3);
      }
      if (CastTarget3 != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(CastTarget3);
      }
      if (TargetParam13 != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(TargetParam13);
      }
      if (TargetParam23 != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(TargetParam23);
      }
      if (CastFlags3 != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(CastFlags3);
      }
      if (DelayInitialMin3 != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(DelayInitialMin3);
      }
      if (DelayInitialMax3 != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(DelayInitialMax3);
      }
      if (DelayRepeatMin3 != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(DelayRepeatMin3);
      }
      if (DelayRepeatMax3 != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(DelayRepeatMax3);
      }
      if (ScriptId3 != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(ScriptId3);
      }
      if (SpellId4 != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(SpellId4);
      }
      if (Probability4 != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(Probability4);
      }
      if (CastTarget4 != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(CastTarget4);
      }
      if (TargetParam14 != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(TargetParam14);
      }
      if (TargetParam24 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(TargetParam24);
      }
      if (CastFlags4 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(CastFlags4);
      }
      if (DelayInitialMin4 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(DelayInitialMin4);
      }
      if (DelayInitialMax4 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(DelayInitialMax4);
      }
      if (DelayRepeatMin4 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(DelayRepeatMin4);
      }
      if (DelayRepeatMax4 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(DelayRepeatMax4);
      }
      if (ScriptId4 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ScriptId4);
      }
      if (SpellId5 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(SpellId5);
      }
      if (Probability5 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Probability5);
      }
      if (CastTarget5 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(CastTarget5);
      }
      if (TargetParam15 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(TargetParam15);
      }
      if (TargetParam25 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(TargetParam25);
      }
      if (CastFlags5 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(CastFlags5);
      }
      if (DelayInitialMin5 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(DelayInitialMin5);
      }
      if (DelayInitialMax5 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(DelayInitialMax5);
      }
      if (DelayRepeatMin5 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(DelayRepeatMin5);
      }
      if (DelayRepeatMax5 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(DelayRepeatMax5);
      }
      if (ScriptId5 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ScriptId5);
      }
      if (SpellId6 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(SpellId6);
      }
      if (Probability6 != 0) {
        output.WriteRawTag(216, 3);
        output.WriteUInt32(Probability6);
      }
      if (CastTarget6 != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(CastTarget6);
      }
      if (TargetParam16 != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(TargetParam16);
      }
      if (TargetParam26 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(TargetParam26);
      }
      if (CastFlags6 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(CastFlags6);
      }
      if (DelayInitialMin6 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(DelayInitialMin6);
      }
      if (DelayInitialMax6 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(DelayInitialMax6);
      }
      if (DelayRepeatMin6 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(DelayRepeatMin6);
      }
      if (DelayRepeatMax6 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(DelayRepeatMax6);
      }
      if (ScriptId6 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(ScriptId6);
      }
      if (SpellId7 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(SpellId7);
      }
      if (Probability7 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(Probability7);
      }
      if (CastTarget7 != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(CastTarget7);
      }
      if (TargetParam17 != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(TargetParam17);
      }
      if (TargetParam27 != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(TargetParam27);
      }
      if (CastFlags7 != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(CastFlags7);
      }
      if (DelayInitialMin7 != 0) {
        output.WriteRawTag(216, 4);
        output.WriteUInt32(DelayInitialMin7);
      }
      if (DelayInitialMax7 != 0) {
        output.WriteRawTag(224, 4);
        output.WriteUInt32(DelayInitialMax7);
      }
      if (DelayRepeatMin7 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteUInt32(DelayRepeatMin7);
      }
      if (DelayRepeatMax7 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteUInt32(DelayRepeatMax7);
      }
      if (ScriptId7 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteUInt32(ScriptId7);
      }
      if (SpellId8 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(SpellId8);
      }
      if (Probability8 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(Probability8);
      }
      if (CastTarget8 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(CastTarget8);
      }
      if (TargetParam18 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(TargetParam18);
      }
      if (TargetParam28 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(TargetParam28);
      }
      if (CastFlags8 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(CastFlags8);
      }
      if (DelayInitialMin8 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(DelayInitialMin8);
      }
      if (DelayInitialMax8 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(DelayInitialMax8);
      }
      if (DelayRepeatMin8 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(DelayRepeatMin8);
      }
      if (DelayRepeatMax8 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(DelayRepeatMax8);
      }
      if (ScriptId8 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(ScriptId8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SpellId1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellId1);
      }
      if (Probability1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Probability1);
      }
      if (CastTarget1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CastTarget1);
      }
      if (TargetParam11 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TargetParam11);
      }
      if (TargetParam21 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TargetParam21);
      }
      if (CastFlags1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(CastFlags1);
      }
      if (DelayInitialMin1 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(DelayInitialMin1);
      }
      if (DelayInitialMax1 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(DelayInitialMax1);
      }
      if (DelayRepeatMin1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DelayRepeatMin1);
      }
      if (DelayRepeatMax1 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(DelayRepeatMax1);
      }
      if (ScriptId1 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ScriptId1);
      }
      if (SpellId2 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(SpellId2);
      }
      if (Probability2 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Probability2);
      }
      if (CastTarget2 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(CastTarget2);
      }
      if (TargetParam12 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(TargetParam12);
      }
      if (TargetParam22 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(TargetParam22);
      }
      if (CastFlags2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CastFlags2);
      }
      if (DelayInitialMin2 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(DelayInitialMin2);
      }
      if (DelayInitialMax2 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(DelayInitialMax2);
      }
      if (DelayRepeatMin2 != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(DelayRepeatMin2);
      }
      if (DelayRepeatMax2 != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(DelayRepeatMax2);
      }
      if (ScriptId2 != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ScriptId2);
      }
      if (SpellId3 != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(SpellId3);
      }
      if (Probability3 != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(Probability3);
      }
      if (CastTarget3 != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(CastTarget3);
      }
      if (TargetParam13 != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(TargetParam13);
      }
      if (TargetParam23 != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(TargetParam23);
      }
      if (CastFlags3 != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(CastFlags3);
      }
      if (DelayInitialMin3 != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(DelayInitialMin3);
      }
      if (DelayInitialMax3 != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(DelayInitialMax3);
      }
      if (DelayRepeatMin3 != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(DelayRepeatMin3);
      }
      if (DelayRepeatMax3 != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(DelayRepeatMax3);
      }
      if (ScriptId3 != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(ScriptId3);
      }
      if (SpellId4 != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(SpellId4);
      }
      if (Probability4 != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(Probability4);
      }
      if (CastTarget4 != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(CastTarget4);
      }
      if (TargetParam14 != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(TargetParam14);
      }
      if (TargetParam24 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(TargetParam24);
      }
      if (CastFlags4 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(CastFlags4);
      }
      if (DelayInitialMin4 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(DelayInitialMin4);
      }
      if (DelayInitialMax4 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(DelayInitialMax4);
      }
      if (DelayRepeatMin4 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(DelayRepeatMin4);
      }
      if (DelayRepeatMax4 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(DelayRepeatMax4);
      }
      if (ScriptId4 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ScriptId4);
      }
      if (SpellId5 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(SpellId5);
      }
      if (Probability5 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Probability5);
      }
      if (CastTarget5 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(CastTarget5);
      }
      if (TargetParam15 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(TargetParam15);
      }
      if (TargetParam25 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(TargetParam25);
      }
      if (CastFlags5 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(CastFlags5);
      }
      if (DelayInitialMin5 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(DelayInitialMin5);
      }
      if (DelayInitialMax5 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(DelayInitialMax5);
      }
      if (DelayRepeatMin5 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(DelayRepeatMin5);
      }
      if (DelayRepeatMax5 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(DelayRepeatMax5);
      }
      if (ScriptId5 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ScriptId5);
      }
      if (SpellId6 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(SpellId6);
      }
      if (Probability6 != 0) {
        output.WriteRawTag(216, 3);
        output.WriteUInt32(Probability6);
      }
      if (CastTarget6 != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(CastTarget6);
      }
      if (TargetParam16 != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(TargetParam16);
      }
      if (TargetParam26 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(TargetParam26);
      }
      if (CastFlags6 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(CastFlags6);
      }
      if (DelayInitialMin6 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(DelayInitialMin6);
      }
      if (DelayInitialMax6 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(DelayInitialMax6);
      }
      if (DelayRepeatMin6 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(DelayRepeatMin6);
      }
      if (DelayRepeatMax6 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(DelayRepeatMax6);
      }
      if (ScriptId6 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(ScriptId6);
      }
      if (SpellId7 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(SpellId7);
      }
      if (Probability7 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(Probability7);
      }
      if (CastTarget7 != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(CastTarget7);
      }
      if (TargetParam17 != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(TargetParam17);
      }
      if (TargetParam27 != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(TargetParam27);
      }
      if (CastFlags7 != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(CastFlags7);
      }
      if (DelayInitialMin7 != 0) {
        output.WriteRawTag(216, 4);
        output.WriteUInt32(DelayInitialMin7);
      }
      if (DelayInitialMax7 != 0) {
        output.WriteRawTag(224, 4);
        output.WriteUInt32(DelayInitialMax7);
      }
      if (DelayRepeatMin7 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteUInt32(DelayRepeatMin7);
      }
      if (DelayRepeatMax7 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteUInt32(DelayRepeatMax7);
      }
      if (ScriptId7 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteUInt32(ScriptId7);
      }
      if (SpellId8 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(SpellId8);
      }
      if (Probability8 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(Probability8);
      }
      if (CastTarget8 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(CastTarget8);
      }
      if (TargetParam18 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(TargetParam18);
      }
      if (TargetParam28 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(TargetParam28);
      }
      if (CastFlags8 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(CastFlags8);
      }
      if (DelayInitialMin8 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(DelayInitialMin8);
      }
      if (DelayInitialMax8 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(DelayInitialMax8);
      }
      if (DelayRepeatMin8 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(DelayRepeatMin8);
      }
      if (DelayRepeatMax8 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(DelayRepeatMax8);
      }
      if (ScriptId8 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(ScriptId8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SpellId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId1);
      }
      if (Probability1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Probability1);
      }
      if (CastTarget1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget1);
      }
      if (TargetParam11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam11);
      }
      if (TargetParam21 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam21);
      }
      if (CastFlags1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags1);
      }
      if (DelayInitialMin1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin1);
      }
      if (DelayInitialMax1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax1);
      }
      if (DelayRepeatMin1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin1);
      }
      if (DelayRepeatMax1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax1);
      }
      if (ScriptId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId1);
      }
      if (SpellId2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId2);
      }
      if (Probability2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Probability2);
      }
      if (CastTarget2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget2);
      }
      if (TargetParam12 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam12);
      }
      if (TargetParam22 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam22);
      }
      if (CastFlags2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags2);
      }
      if (DelayInitialMin2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin2);
      }
      if (DelayInitialMax2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax2);
      }
      if (DelayRepeatMin2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin2);
      }
      if (DelayRepeatMax2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax2);
      }
      if (ScriptId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId2);
      }
      if (SpellId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId3);
      }
      if (Probability3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability3);
      }
      if (CastTarget3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget3);
      }
      if (TargetParam13 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam13);
      }
      if (TargetParam23 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam23);
      }
      if (CastFlags3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags3);
      }
      if (DelayInitialMin3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin3);
      }
      if (DelayInitialMax3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax3);
      }
      if (DelayRepeatMin3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin3);
      }
      if (DelayRepeatMax3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax3);
      }
      if (ScriptId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId3);
      }
      if (SpellId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId4);
      }
      if (Probability4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability4);
      }
      if (CastTarget4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget4);
      }
      if (TargetParam14 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam14);
      }
      if (TargetParam24 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam24);
      }
      if (CastFlags4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags4);
      }
      if (DelayInitialMin4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin4);
      }
      if (DelayInitialMax4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax4);
      }
      if (DelayRepeatMin4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin4);
      }
      if (DelayRepeatMax4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax4);
      }
      if (ScriptId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId4);
      }
      if (SpellId5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId5);
      }
      if (Probability5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability5);
      }
      if (CastTarget5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget5);
      }
      if (TargetParam15 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam15);
      }
      if (TargetParam25 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam25);
      }
      if (CastFlags5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags5);
      }
      if (DelayInitialMin5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin5);
      }
      if (DelayInitialMax5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax5);
      }
      if (DelayRepeatMin5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin5);
      }
      if (DelayRepeatMax5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax5);
      }
      if (ScriptId5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId5);
      }
      if (SpellId6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId6);
      }
      if (Probability6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability6);
      }
      if (CastTarget6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget6);
      }
      if (TargetParam16 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam16);
      }
      if (TargetParam26 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam26);
      }
      if (CastFlags6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags6);
      }
      if (DelayInitialMin6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin6);
      }
      if (DelayInitialMax6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax6);
      }
      if (DelayRepeatMin6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin6);
      }
      if (DelayRepeatMax6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax6);
      }
      if (ScriptId6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId6);
      }
      if (SpellId7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId7);
      }
      if (Probability7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability7);
      }
      if (CastTarget7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget7);
      }
      if (TargetParam17 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam17);
      }
      if (TargetParam27 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam27);
      }
      if (CastFlags7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags7);
      }
      if (DelayInitialMin7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin7);
      }
      if (DelayInitialMax7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax7);
      }
      if (DelayRepeatMin7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin7);
      }
      if (DelayRepeatMax7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax7);
      }
      if (ScriptId7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId7);
      }
      if (SpellId8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellId8);
      }
      if (Probability8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Probability8);
      }
      if (CastTarget8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastTarget8);
      }
      if (TargetParam18 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam18);
      }
      if (TargetParam28 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam28);
      }
      if (CastFlags8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastFlags8);
      }
      if (DelayInitialMin8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMin8);
      }
      if (DelayInitialMax8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayInitialMax8);
      }
      if (DelayRepeatMin8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMin8);
      }
      if (DelayRepeatMax8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DelayRepeatMax8);
      }
      if (ScriptId8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ScriptId8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureSpell other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SpellId1 != 0) {
        SpellId1 = other.SpellId1;
      }
      if (other.Probability1 != 0) {
        Probability1 = other.Probability1;
      }
      if (other.CastTarget1 != 0) {
        CastTarget1 = other.CastTarget1;
      }
      if (other.TargetParam11 != 0) {
        TargetParam11 = other.TargetParam11;
      }
      if (other.TargetParam21 != 0) {
        TargetParam21 = other.TargetParam21;
      }
      if (other.CastFlags1 != 0) {
        CastFlags1 = other.CastFlags1;
      }
      if (other.DelayInitialMin1 != 0) {
        DelayInitialMin1 = other.DelayInitialMin1;
      }
      if (other.DelayInitialMax1 != 0) {
        DelayInitialMax1 = other.DelayInitialMax1;
      }
      if (other.DelayRepeatMin1 != 0) {
        DelayRepeatMin1 = other.DelayRepeatMin1;
      }
      if (other.DelayRepeatMax1 != 0) {
        DelayRepeatMax1 = other.DelayRepeatMax1;
      }
      if (other.ScriptId1 != 0) {
        ScriptId1 = other.ScriptId1;
      }
      if (other.SpellId2 != 0) {
        SpellId2 = other.SpellId2;
      }
      if (other.Probability2 != 0) {
        Probability2 = other.Probability2;
      }
      if (other.CastTarget2 != 0) {
        CastTarget2 = other.CastTarget2;
      }
      if (other.TargetParam12 != 0) {
        TargetParam12 = other.TargetParam12;
      }
      if (other.TargetParam22 != 0) {
        TargetParam22 = other.TargetParam22;
      }
      if (other.CastFlags2 != 0) {
        CastFlags2 = other.CastFlags2;
      }
      if (other.DelayInitialMin2 != 0) {
        DelayInitialMin2 = other.DelayInitialMin2;
      }
      if (other.DelayInitialMax2 != 0) {
        DelayInitialMax2 = other.DelayInitialMax2;
      }
      if (other.DelayRepeatMin2 != 0) {
        DelayRepeatMin2 = other.DelayRepeatMin2;
      }
      if (other.DelayRepeatMax2 != 0) {
        DelayRepeatMax2 = other.DelayRepeatMax2;
      }
      if (other.ScriptId2 != 0) {
        ScriptId2 = other.ScriptId2;
      }
      if (other.SpellId3 != 0) {
        SpellId3 = other.SpellId3;
      }
      if (other.Probability3 != 0) {
        Probability3 = other.Probability3;
      }
      if (other.CastTarget3 != 0) {
        CastTarget3 = other.CastTarget3;
      }
      if (other.TargetParam13 != 0) {
        TargetParam13 = other.TargetParam13;
      }
      if (other.TargetParam23 != 0) {
        TargetParam23 = other.TargetParam23;
      }
      if (other.CastFlags3 != 0) {
        CastFlags3 = other.CastFlags3;
      }
      if (other.DelayInitialMin3 != 0) {
        DelayInitialMin3 = other.DelayInitialMin3;
      }
      if (other.DelayInitialMax3 != 0) {
        DelayInitialMax3 = other.DelayInitialMax3;
      }
      if (other.DelayRepeatMin3 != 0) {
        DelayRepeatMin3 = other.DelayRepeatMin3;
      }
      if (other.DelayRepeatMax3 != 0) {
        DelayRepeatMax3 = other.DelayRepeatMax3;
      }
      if (other.ScriptId3 != 0) {
        ScriptId3 = other.ScriptId3;
      }
      if (other.SpellId4 != 0) {
        SpellId4 = other.SpellId4;
      }
      if (other.Probability4 != 0) {
        Probability4 = other.Probability4;
      }
      if (other.CastTarget4 != 0) {
        CastTarget4 = other.CastTarget4;
      }
      if (other.TargetParam14 != 0) {
        TargetParam14 = other.TargetParam14;
      }
      if (other.TargetParam24 != 0) {
        TargetParam24 = other.TargetParam24;
      }
      if (other.CastFlags4 != 0) {
        CastFlags4 = other.CastFlags4;
      }
      if (other.DelayInitialMin4 != 0) {
        DelayInitialMin4 = other.DelayInitialMin4;
      }
      if (other.DelayInitialMax4 != 0) {
        DelayInitialMax4 = other.DelayInitialMax4;
      }
      if (other.DelayRepeatMin4 != 0) {
        DelayRepeatMin4 = other.DelayRepeatMin4;
      }
      if (other.DelayRepeatMax4 != 0) {
        DelayRepeatMax4 = other.DelayRepeatMax4;
      }
      if (other.ScriptId4 != 0) {
        ScriptId4 = other.ScriptId4;
      }
      if (other.SpellId5 != 0) {
        SpellId5 = other.SpellId5;
      }
      if (other.Probability5 != 0) {
        Probability5 = other.Probability5;
      }
      if (other.CastTarget5 != 0) {
        CastTarget5 = other.CastTarget5;
      }
      if (other.TargetParam15 != 0) {
        TargetParam15 = other.TargetParam15;
      }
      if (other.TargetParam25 != 0) {
        TargetParam25 = other.TargetParam25;
      }
      if (other.CastFlags5 != 0) {
        CastFlags5 = other.CastFlags5;
      }
      if (other.DelayInitialMin5 != 0) {
        DelayInitialMin5 = other.DelayInitialMin5;
      }
      if (other.DelayInitialMax5 != 0) {
        DelayInitialMax5 = other.DelayInitialMax5;
      }
      if (other.DelayRepeatMin5 != 0) {
        DelayRepeatMin5 = other.DelayRepeatMin5;
      }
      if (other.DelayRepeatMax5 != 0) {
        DelayRepeatMax5 = other.DelayRepeatMax5;
      }
      if (other.ScriptId5 != 0) {
        ScriptId5 = other.ScriptId5;
      }
      if (other.SpellId6 != 0) {
        SpellId6 = other.SpellId6;
      }
      if (other.Probability6 != 0) {
        Probability6 = other.Probability6;
      }
      if (other.CastTarget6 != 0) {
        CastTarget6 = other.CastTarget6;
      }
      if (other.TargetParam16 != 0) {
        TargetParam16 = other.TargetParam16;
      }
      if (other.TargetParam26 != 0) {
        TargetParam26 = other.TargetParam26;
      }
      if (other.CastFlags6 != 0) {
        CastFlags6 = other.CastFlags6;
      }
      if (other.DelayInitialMin6 != 0) {
        DelayInitialMin6 = other.DelayInitialMin6;
      }
      if (other.DelayInitialMax6 != 0) {
        DelayInitialMax6 = other.DelayInitialMax6;
      }
      if (other.DelayRepeatMin6 != 0) {
        DelayRepeatMin6 = other.DelayRepeatMin6;
      }
      if (other.DelayRepeatMax6 != 0) {
        DelayRepeatMax6 = other.DelayRepeatMax6;
      }
      if (other.ScriptId6 != 0) {
        ScriptId6 = other.ScriptId6;
      }
      if (other.SpellId7 != 0) {
        SpellId7 = other.SpellId7;
      }
      if (other.Probability7 != 0) {
        Probability7 = other.Probability7;
      }
      if (other.CastTarget7 != 0) {
        CastTarget7 = other.CastTarget7;
      }
      if (other.TargetParam17 != 0) {
        TargetParam17 = other.TargetParam17;
      }
      if (other.TargetParam27 != 0) {
        TargetParam27 = other.TargetParam27;
      }
      if (other.CastFlags7 != 0) {
        CastFlags7 = other.CastFlags7;
      }
      if (other.DelayInitialMin7 != 0) {
        DelayInitialMin7 = other.DelayInitialMin7;
      }
      if (other.DelayInitialMax7 != 0) {
        DelayInitialMax7 = other.DelayInitialMax7;
      }
      if (other.DelayRepeatMin7 != 0) {
        DelayRepeatMin7 = other.DelayRepeatMin7;
      }
      if (other.DelayRepeatMax7 != 0) {
        DelayRepeatMax7 = other.DelayRepeatMax7;
      }
      if (other.ScriptId7 != 0) {
        ScriptId7 = other.ScriptId7;
      }
      if (other.SpellId8 != 0) {
        SpellId8 = other.SpellId8;
      }
      if (other.Probability8 != 0) {
        Probability8 = other.Probability8;
      }
      if (other.CastTarget8 != 0) {
        CastTarget8 = other.CastTarget8;
      }
      if (other.TargetParam18 != 0) {
        TargetParam18 = other.TargetParam18;
      }
      if (other.TargetParam28 != 0) {
        TargetParam28 = other.TargetParam28;
      }
      if (other.CastFlags8 != 0) {
        CastFlags8 = other.CastFlags8;
      }
      if (other.DelayInitialMin8 != 0) {
        DelayInitialMin8 = other.DelayInitialMin8;
      }
      if (other.DelayInitialMax8 != 0) {
        DelayInitialMax8 = other.DelayInitialMax8;
      }
      if (other.DelayRepeatMin8 != 0) {
        DelayRepeatMin8 = other.DelayRepeatMin8;
      }
      if (other.DelayRepeatMax8 != 0) {
        DelayRepeatMax8 = other.DelayRepeatMax8;
      }
      if (other.ScriptId8 != 0) {
        ScriptId8 = other.ScriptId8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SpellId1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Probability1 = input.ReadUInt32();
            break;
          }
          case 40: {
            CastTarget1 = input.ReadUInt32();
            break;
          }
          case 48: {
            TargetParam11 = input.ReadUInt32();
            break;
          }
          case 56: {
            TargetParam21 = input.ReadUInt32();
            break;
          }
          case 64: {
            CastFlags1 = input.ReadUInt32();
            break;
          }
          case 72: {
            DelayInitialMin1 = input.ReadUInt32();
            break;
          }
          case 80: {
            DelayInitialMax1 = input.ReadUInt32();
            break;
          }
          case 88: {
            DelayRepeatMin1 = input.ReadUInt32();
            break;
          }
          case 96: {
            DelayRepeatMax1 = input.ReadUInt32();
            break;
          }
          case 104: {
            ScriptId1 = input.ReadUInt32();
            break;
          }
          case 112: {
            SpellId2 = input.ReadUInt32();
            break;
          }
          case 120: {
            Probability2 = input.ReadUInt32();
            break;
          }
          case 128: {
            CastTarget2 = input.ReadUInt32();
            break;
          }
          case 136: {
            TargetParam12 = input.ReadUInt32();
            break;
          }
          case 144: {
            TargetParam22 = input.ReadUInt32();
            break;
          }
          case 152: {
            CastFlags2 = input.ReadUInt32();
            break;
          }
          case 160: {
            DelayInitialMin2 = input.ReadUInt32();
            break;
          }
          case 168: {
            DelayInitialMax2 = input.ReadUInt32();
            break;
          }
          case 176: {
            DelayRepeatMin2 = input.ReadUInt32();
            break;
          }
          case 184: {
            DelayRepeatMax2 = input.ReadUInt32();
            break;
          }
          case 192: {
            ScriptId2 = input.ReadUInt32();
            break;
          }
          case 200: {
            SpellId3 = input.ReadUInt32();
            break;
          }
          case 208: {
            Probability3 = input.ReadUInt32();
            break;
          }
          case 216: {
            CastTarget3 = input.ReadUInt32();
            break;
          }
          case 224: {
            TargetParam13 = input.ReadUInt32();
            break;
          }
          case 232: {
            TargetParam23 = input.ReadUInt32();
            break;
          }
          case 240: {
            CastFlags3 = input.ReadUInt32();
            break;
          }
          case 248: {
            DelayInitialMin3 = input.ReadUInt32();
            break;
          }
          case 256: {
            DelayInitialMax3 = input.ReadUInt32();
            break;
          }
          case 264: {
            DelayRepeatMin3 = input.ReadUInt32();
            break;
          }
          case 272: {
            DelayRepeatMax3 = input.ReadUInt32();
            break;
          }
          case 280: {
            ScriptId3 = input.ReadUInt32();
            break;
          }
          case 288: {
            SpellId4 = input.ReadUInt32();
            break;
          }
          case 296: {
            Probability4 = input.ReadUInt32();
            break;
          }
          case 304: {
            CastTarget4 = input.ReadUInt32();
            break;
          }
          case 312: {
            TargetParam14 = input.ReadUInt32();
            break;
          }
          case 320: {
            TargetParam24 = input.ReadUInt32();
            break;
          }
          case 328: {
            CastFlags4 = input.ReadUInt32();
            break;
          }
          case 336: {
            DelayInitialMin4 = input.ReadUInt32();
            break;
          }
          case 344: {
            DelayInitialMax4 = input.ReadUInt32();
            break;
          }
          case 352: {
            DelayRepeatMin4 = input.ReadUInt32();
            break;
          }
          case 360: {
            DelayRepeatMax4 = input.ReadUInt32();
            break;
          }
          case 368: {
            ScriptId4 = input.ReadUInt32();
            break;
          }
          case 376: {
            SpellId5 = input.ReadUInt32();
            break;
          }
          case 384: {
            Probability5 = input.ReadUInt32();
            break;
          }
          case 392: {
            CastTarget5 = input.ReadUInt32();
            break;
          }
          case 400: {
            TargetParam15 = input.ReadUInt32();
            break;
          }
          case 408: {
            TargetParam25 = input.ReadUInt32();
            break;
          }
          case 416: {
            CastFlags5 = input.ReadUInt32();
            break;
          }
          case 424: {
            DelayInitialMin5 = input.ReadUInt32();
            break;
          }
          case 432: {
            DelayInitialMax5 = input.ReadUInt32();
            break;
          }
          case 440: {
            DelayRepeatMin5 = input.ReadUInt32();
            break;
          }
          case 448: {
            DelayRepeatMax5 = input.ReadUInt32();
            break;
          }
          case 456: {
            ScriptId5 = input.ReadUInt32();
            break;
          }
          case 464: {
            SpellId6 = input.ReadUInt32();
            break;
          }
          case 472: {
            Probability6 = input.ReadUInt32();
            break;
          }
          case 480: {
            CastTarget6 = input.ReadUInt32();
            break;
          }
          case 488: {
            TargetParam16 = input.ReadUInt32();
            break;
          }
          case 496: {
            TargetParam26 = input.ReadUInt32();
            break;
          }
          case 504: {
            CastFlags6 = input.ReadUInt32();
            break;
          }
          case 512: {
            DelayInitialMin6 = input.ReadUInt32();
            break;
          }
          case 520: {
            DelayInitialMax6 = input.ReadUInt32();
            break;
          }
          case 528: {
            DelayRepeatMin6 = input.ReadUInt32();
            break;
          }
          case 536: {
            DelayRepeatMax6 = input.ReadUInt32();
            break;
          }
          case 544: {
            ScriptId6 = input.ReadUInt32();
            break;
          }
          case 552: {
            SpellId7 = input.ReadUInt32();
            break;
          }
          case 560: {
            Probability7 = input.ReadUInt32();
            break;
          }
          case 568: {
            CastTarget7 = input.ReadUInt32();
            break;
          }
          case 576: {
            TargetParam17 = input.ReadUInt32();
            break;
          }
          case 584: {
            TargetParam27 = input.ReadUInt32();
            break;
          }
          case 592: {
            CastFlags7 = input.ReadUInt32();
            break;
          }
          case 600: {
            DelayInitialMin7 = input.ReadUInt32();
            break;
          }
          case 608: {
            DelayInitialMax7 = input.ReadUInt32();
            break;
          }
          case 616: {
            DelayRepeatMin7 = input.ReadUInt32();
            break;
          }
          case 624: {
            DelayRepeatMax7 = input.ReadUInt32();
            break;
          }
          case 632: {
            ScriptId7 = input.ReadUInt32();
            break;
          }
          case 640: {
            SpellId8 = input.ReadUInt32();
            break;
          }
          case 648: {
            Probability8 = input.ReadUInt32();
            break;
          }
          case 656: {
            CastTarget8 = input.ReadUInt32();
            break;
          }
          case 664: {
            TargetParam18 = input.ReadUInt32();
            break;
          }
          case 672: {
            TargetParam28 = input.ReadUInt32();
            break;
          }
          case 680: {
            CastFlags8 = input.ReadUInt32();
            break;
          }
          case 688: {
            DelayInitialMin8 = input.ReadUInt32();
            break;
          }
          case 696: {
            DelayInitialMax8 = input.ReadUInt32();
            break;
          }
          case 704: {
            DelayRepeatMin8 = input.ReadUInt32();
            break;
          }
          case 712: {
            DelayRepeatMax8 = input.ReadUInt32();
            break;
          }
          case 720: {
            ScriptId8 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SpellId1 = input.ReadUInt32();
            break;
          }
          case 32: {
            Probability1 = input.ReadUInt32();
            break;
          }
          case 40: {
            CastTarget1 = input.ReadUInt32();
            break;
          }
          case 48: {
            TargetParam11 = input.ReadUInt32();
            break;
          }
          case 56: {
            TargetParam21 = input.ReadUInt32();
            break;
          }
          case 64: {
            CastFlags1 = input.ReadUInt32();
            break;
          }
          case 72: {
            DelayInitialMin1 = input.ReadUInt32();
            break;
          }
          case 80: {
            DelayInitialMax1 = input.ReadUInt32();
            break;
          }
          case 88: {
            DelayRepeatMin1 = input.ReadUInt32();
            break;
          }
          case 96: {
            DelayRepeatMax1 = input.ReadUInt32();
            break;
          }
          case 104: {
            ScriptId1 = input.ReadUInt32();
            break;
          }
          case 112: {
            SpellId2 = input.ReadUInt32();
            break;
          }
          case 120: {
            Probability2 = input.ReadUInt32();
            break;
          }
          case 128: {
            CastTarget2 = input.ReadUInt32();
            break;
          }
          case 136: {
            TargetParam12 = input.ReadUInt32();
            break;
          }
          case 144: {
            TargetParam22 = input.ReadUInt32();
            break;
          }
          case 152: {
            CastFlags2 = input.ReadUInt32();
            break;
          }
          case 160: {
            DelayInitialMin2 = input.ReadUInt32();
            break;
          }
          case 168: {
            DelayInitialMax2 = input.ReadUInt32();
            break;
          }
          case 176: {
            DelayRepeatMin2 = input.ReadUInt32();
            break;
          }
          case 184: {
            DelayRepeatMax2 = input.ReadUInt32();
            break;
          }
          case 192: {
            ScriptId2 = input.ReadUInt32();
            break;
          }
          case 200: {
            SpellId3 = input.ReadUInt32();
            break;
          }
          case 208: {
            Probability3 = input.ReadUInt32();
            break;
          }
          case 216: {
            CastTarget3 = input.ReadUInt32();
            break;
          }
          case 224: {
            TargetParam13 = input.ReadUInt32();
            break;
          }
          case 232: {
            TargetParam23 = input.ReadUInt32();
            break;
          }
          case 240: {
            CastFlags3 = input.ReadUInt32();
            break;
          }
          case 248: {
            DelayInitialMin3 = input.ReadUInt32();
            break;
          }
          case 256: {
            DelayInitialMax3 = input.ReadUInt32();
            break;
          }
          case 264: {
            DelayRepeatMin3 = input.ReadUInt32();
            break;
          }
          case 272: {
            DelayRepeatMax3 = input.ReadUInt32();
            break;
          }
          case 280: {
            ScriptId3 = input.ReadUInt32();
            break;
          }
          case 288: {
            SpellId4 = input.ReadUInt32();
            break;
          }
          case 296: {
            Probability4 = input.ReadUInt32();
            break;
          }
          case 304: {
            CastTarget4 = input.ReadUInt32();
            break;
          }
          case 312: {
            TargetParam14 = input.ReadUInt32();
            break;
          }
          case 320: {
            TargetParam24 = input.ReadUInt32();
            break;
          }
          case 328: {
            CastFlags4 = input.ReadUInt32();
            break;
          }
          case 336: {
            DelayInitialMin4 = input.ReadUInt32();
            break;
          }
          case 344: {
            DelayInitialMax4 = input.ReadUInt32();
            break;
          }
          case 352: {
            DelayRepeatMin4 = input.ReadUInt32();
            break;
          }
          case 360: {
            DelayRepeatMax4 = input.ReadUInt32();
            break;
          }
          case 368: {
            ScriptId4 = input.ReadUInt32();
            break;
          }
          case 376: {
            SpellId5 = input.ReadUInt32();
            break;
          }
          case 384: {
            Probability5 = input.ReadUInt32();
            break;
          }
          case 392: {
            CastTarget5 = input.ReadUInt32();
            break;
          }
          case 400: {
            TargetParam15 = input.ReadUInt32();
            break;
          }
          case 408: {
            TargetParam25 = input.ReadUInt32();
            break;
          }
          case 416: {
            CastFlags5 = input.ReadUInt32();
            break;
          }
          case 424: {
            DelayInitialMin5 = input.ReadUInt32();
            break;
          }
          case 432: {
            DelayInitialMax5 = input.ReadUInt32();
            break;
          }
          case 440: {
            DelayRepeatMin5 = input.ReadUInt32();
            break;
          }
          case 448: {
            DelayRepeatMax5 = input.ReadUInt32();
            break;
          }
          case 456: {
            ScriptId5 = input.ReadUInt32();
            break;
          }
          case 464: {
            SpellId6 = input.ReadUInt32();
            break;
          }
          case 472: {
            Probability6 = input.ReadUInt32();
            break;
          }
          case 480: {
            CastTarget6 = input.ReadUInt32();
            break;
          }
          case 488: {
            TargetParam16 = input.ReadUInt32();
            break;
          }
          case 496: {
            TargetParam26 = input.ReadUInt32();
            break;
          }
          case 504: {
            CastFlags6 = input.ReadUInt32();
            break;
          }
          case 512: {
            DelayInitialMin6 = input.ReadUInt32();
            break;
          }
          case 520: {
            DelayInitialMax6 = input.ReadUInt32();
            break;
          }
          case 528: {
            DelayRepeatMin6 = input.ReadUInt32();
            break;
          }
          case 536: {
            DelayRepeatMax6 = input.ReadUInt32();
            break;
          }
          case 544: {
            ScriptId6 = input.ReadUInt32();
            break;
          }
          case 552: {
            SpellId7 = input.ReadUInt32();
            break;
          }
          case 560: {
            Probability7 = input.ReadUInt32();
            break;
          }
          case 568: {
            CastTarget7 = input.ReadUInt32();
            break;
          }
          case 576: {
            TargetParam17 = input.ReadUInt32();
            break;
          }
          case 584: {
            TargetParam27 = input.ReadUInt32();
            break;
          }
          case 592: {
            CastFlags7 = input.ReadUInt32();
            break;
          }
          case 600: {
            DelayInitialMin7 = input.ReadUInt32();
            break;
          }
          case 608: {
            DelayInitialMax7 = input.ReadUInt32();
            break;
          }
          case 616: {
            DelayRepeatMin7 = input.ReadUInt32();
            break;
          }
          case 624: {
            DelayRepeatMax7 = input.ReadUInt32();
            break;
          }
          case 632: {
            ScriptId7 = input.ReadUInt32();
            break;
          }
          case 640: {
            SpellId8 = input.ReadUInt32();
            break;
          }
          case 648: {
            Probability8 = input.ReadUInt32();
            break;
          }
          case 656: {
            CastTarget8 = input.ReadUInt32();
            break;
          }
          case 664: {
            TargetParam18 = input.ReadUInt32();
            break;
          }
          case 672: {
            TargetParam28 = input.ReadUInt32();
            break;
          }
          case 680: {
            CastFlags8 = input.ReadUInt32();
            break;
          }
          case 688: {
            DelayInitialMin8 = input.ReadUInt32();
            break;
          }
          case 696: {
            DelayInitialMax8 = input.ReadUInt32();
            break;
          }
          case 704: {
            DelayRepeatMin8 = input.ReadUInt32();
            break;
          }
          case 712: {
            DelayRepeatMax8 = input.ReadUInt32();
            break;
          }
          case 720: {
            ScriptId8 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureSpellScript : pb::IMessage<CreatureSpellScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureSpellScript> _parser = new pb::MessageParser<CreatureSpellScript>(() => new CreatureSpellScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureSpellScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpellScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpellScript(CreatureSpellScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureSpellScript Clone() {
      return new CreatureSpellScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Script ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay in milliseconds before the command executes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command type identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// General data field (long format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Additional data field (long format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Additional data field (long format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Additional data field (long format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// Target parameter 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Target parameter 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Target type identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Data flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// General data field (integer format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Additional data field (integer format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Additional data field (integer format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Additional data field (integer format)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z position coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation of the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID from conditions table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments related to the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureSpellScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureSpellScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureSpellScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureTemplate : pb::IMessage<CreatureTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureTemplate> _parser = new pb::MessageParser<CreatureTemplate>(() => new CreatureTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplate(CreatureTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      killCredit1_ = other.killCredit1_;
      killCredit2_ = other.killCredit2_;
      modelId1_ = other.modelId1_;
      modelId2_ = other.modelId2_;
      modelId3_ = other.modelId3_;
      modelId4_ = other.modelId4_;
      name_ = other.name_;
      subname_ = other.subname_;
      gossipMenuId_ = other.gossipMenuId_;
      minLevel_ = other.minLevel_;
      maxLevel_ = other.maxLevel_;
      minHealth_ = other.minHealth_;
      maxHealth_ = other.maxHealth_;
      minMana_ = other.minMana_;
      maxMana_ = other.maxMana_;
      armor_ = other.armor_;
      factionA_ = other.factionA_;
      factionH_ = other.factionH_;
      npcFlag_ = other.npcFlag_;
      speedWalk_ = other.speedWalk_;
      speedRun_ = other.speedRun_;
      scale_ = other.scale_;
      rank_ = other.rank_;
      minDmg_ = other.minDmg_;
      maxDmg_ = other.maxDmg_;
      dmgSchool_ = other.dmgSchool_;
      attackPower_ = other.attackPower_;
      dmgMultiplier_ = other.dmgMultiplier_;
      baseAttackTime_ = other.baseAttackTime_;
      rangeAttackTime_ = other.rangeAttackTime_;
      unitClass_ = other.unitClass_;
      unitFlags_ = other.unitFlags_;
      dynamicFlags_ = other.dynamicFlags_;
      family_ = other.family_;
      trainerType_ = other.trainerType_;
      trainerSpell_ = other.trainerSpell_;
      trainerClass_ = other.trainerClass_;
      trainerRace_ = other.trainerRace_;
      minRangedDmg_ = other.minRangedDmg_;
      maxRangedDmg_ = other.maxRangedDmg_;
      rangedAttackPower_ = other.rangedAttackPower_;
      type_ = other.type_;
      typeFlags_ = other.typeFlags_;
      lootId_ = other.lootId_;
      pickpocketLoot_ = other.pickpocketLoot_;
      skinLoot_ = other.skinLoot_;
      resistance1_ = other.resistance1_;
      resistance2_ = other.resistance2_;
      resistance3_ = other.resistance3_;
      resistance4_ = other.resistance4_;
      resistance5_ = other.resistance5_;
      resistance6_ = other.resistance6_;
      spell1_ = other.spell1_;
      spell2_ = other.spell2_;
      spell3_ = other.spell3_;
      spell4_ = other.spell4_;
      spellsTemplate_ = other.spellsTemplate_;
      petSpellDataId_ = other.petSpellDataId_;
      minGold_ = other.minGold_;
      maxGold_ = other.maxGold_;
      aiName_ = other.aiName_;
      movementType_ = other.movementType_;
      inhabitType_ = other.inhabitType_;
      civilian_ = other.civilian_;
      racialLeader_ = other.racialLeader_;
      regenHealth_ = other.regenHealth_;
      equipmentId_ = other.equipmentId_;
      trainerId_ = other.trainerId_;
      vendorId_ = other.vendorId_;
      mechanicImmuneMask_ = other.mechanicImmuneMask_;
      schoolImmuneMask_ = other.schoolImmuneMask_;
      flagsExtra_ = other.flagsExtra_;
      scriptName_ = other.scriptName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplate Clone() {
      return new CreatureTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "kill_credit_1" field.</summary>
    public const int KillCredit1FieldNumber = 3;
    private uint killCredit1_;
    /// <summary>
    /// First kill credit identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KillCredit1 {
      get { return killCredit1_; }
      set {
        killCredit1_ = value;
      }
    }

    /// <summary>Field number for the "kill_credit_2" field.</summary>
    public const int KillCredit2FieldNumber = 4;
    private uint killCredit2_;
    /// <summary>
    /// Second kill credit identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KillCredit2 {
      get { return killCredit2_; }
      set {
        killCredit2_ = value;
      }
    }

    /// <summary>Field number for the "model_id_1" field.</summary>
    public const int ModelId1FieldNumber = 5;
    private uint modelId1_;
    /// <summary>
    /// First model ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelId1 {
      get { return modelId1_; }
      set {
        modelId1_ = value;
      }
    }

    /// <summary>Field number for the "model_id_2" field.</summary>
    public const int ModelId2FieldNumber = 6;
    private uint modelId2_;
    /// <summary>
    /// Second model ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelId2 {
      get { return modelId2_; }
      set {
        modelId2_ = value;
      }
    }

    /// <summary>Field number for the "model_id_3" field.</summary>
    public const int ModelId3FieldNumber = 7;
    private uint modelId3_;
    /// <summary>
    /// Third model ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelId3 {
      get { return modelId3_; }
      set {
        modelId3_ = value;
      }
    }

    /// <summary>Field number for the "model_id_4" field.</summary>
    public const int ModelId4FieldNumber = 8;
    private uint modelId4_;
    /// <summary>
    /// Fourth model ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelId4 {
      get { return modelId4_; }
      set {
        modelId4_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 9;
    private string name_ = "";
    /// <summary>
    /// Creature name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname" field.</summary>
    public const int SubnameFieldNumber = 10;
    private string subname_ = "";
    /// <summary>
    /// Creature subname
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subname {
      get { return subname_; }
      set {
        subname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gossip_menu_id" field.</summary>
    public const int GossipMenuIdFieldNumber = 11;
    private uint gossipMenuId_;
    /// <summary>
    /// Gossip menu ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GossipMenuId {
      get { return gossipMenuId_; }
      set {
        gossipMenuId_ = value;
      }
    }

    /// <summary>Field number for the "min_level" field.</summary>
    public const int MinLevelFieldNumber = 12;
    private uint minLevel_;
    /// <summary>
    /// Minimum level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinLevel {
      get { return minLevel_; }
      set {
        minLevel_ = value;
      }
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 13;
    private uint maxLevel_;
    /// <summary>
    /// Maximum level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "min_health" field.</summary>
    public const int MinHealthFieldNumber = 14;
    private uint minHealth_;
    /// <summary>
    /// Minimum health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinHealth {
      get { return minHealth_; }
      set {
        minHealth_ = value;
      }
    }

    /// <summary>Field number for the "max_health" field.</summary>
    public const int MaxHealthFieldNumber = 15;
    private uint maxHealth_;
    /// <summary>
    /// Maximum health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "min_mana" field.</summary>
    public const int MinManaFieldNumber = 16;
    private uint minMana_;
    /// <summary>
    /// Minimum mana
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinMana {
      get { return minMana_; }
      set {
        minMana_ = value;
      }
    }

    /// <summary>Field number for the "max_mana" field.</summary>
    public const int MaxManaFieldNumber = 17;
    private uint maxMana_;
    /// <summary>
    /// Maximum mana
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxMana {
      get { return maxMana_; }
      set {
        maxMana_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 18;
    private uint armor_;
    /// <summary>
    /// Armor value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "faction_A" field.</summary>
    public const int FactionAFieldNumber = 19;
    private uint factionA_;
    /// <summary>
    /// Faction ID for Alliance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionA {
      get { return factionA_; }
      set {
        factionA_ = value;
      }
    }

    /// <summary>Field number for the "faction_H" field.</summary>
    public const int FactionHFieldNumber = 20;
    private uint factionH_;
    /// <summary>
    /// Faction ID for Horde
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionH {
      get { return factionH_; }
      set {
        factionH_ = value;
      }
    }

    /// <summary>Field number for the "npc_flag" field.</summary>
    public const int NpcFlagFieldNumber = 21;
    private uint npcFlag_;
    /// <summary>
    /// NPC flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NpcFlag {
      get { return npcFlag_; }
      set {
        npcFlag_ = value;
      }
    }

    /// <summary>Field number for the "speed_walk" field.</summary>
    public const int SpeedWalkFieldNumber = 22;
    private float speedWalk_;
    /// <summary>
    /// Walking speed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpeedWalk {
      get { return speedWalk_; }
      set {
        speedWalk_ = value;
      }
    }

    /// <summary>Field number for the "speed_run" field.</summary>
    public const int SpeedRunFieldNumber = 23;
    private float speedRun_;
    /// <summary>
    /// Running speed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpeedRun {
      get { return speedRun_; }
      set {
        speedRun_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 24;
    private float scale_;
    /// <summary>
    /// Scale value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 25;
    private uint rank_;
    /// <summary>
    /// Creature rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "min_dmg" field.</summary>
    public const int MinDmgFieldNumber = 26;
    private float minDmg_;
    /// <summary>
    /// Minimum damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinDmg {
      get { return minDmg_; }
      set {
        minDmg_ = value;
      }
    }

    /// <summary>Field number for the "max_dmg" field.</summary>
    public const int MaxDmgFieldNumber = 27;
    private float maxDmg_;
    /// <summary>
    /// Maximum damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxDmg {
      get { return maxDmg_; }
      set {
        maxDmg_ = value;
      }
    }

    /// <summary>Field number for the "dmg_school" field.</summary>
    public const int DmgSchoolFieldNumber = 28;
    private uint dmgSchool_;
    /// <summary>
    /// Damage school type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DmgSchool {
      get { return dmgSchool_; }
      set {
        dmgSchool_ = value;
      }
    }

    /// <summary>Field number for the "attack_power" field.</summary>
    public const int AttackPowerFieldNumber = 29;
    private uint attackPower_;
    /// <summary>
    /// Attack power
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttackPower {
      get { return attackPower_; }
      set {
        attackPower_ = value;
      }
    }

    /// <summary>Field number for the "dmg_multiplier" field.</summary>
    public const int DmgMultiplierFieldNumber = 30;
    private float dmgMultiplier_;
    /// <summary>
    /// Damage multiplier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DmgMultiplier {
      get { return dmgMultiplier_; }
      set {
        dmgMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "base_attack_time" field.</summary>
    public const int BaseAttackTimeFieldNumber = 31;
    private uint baseAttackTime_;
    /// <summary>
    /// Base attack time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseAttackTime {
      get { return baseAttackTime_; }
      set {
        baseAttackTime_ = value;
      }
    }

    /// <summary>Field number for the "range_attack_time" field.</summary>
    public const int RangeAttackTimeFieldNumber = 32;
    private uint rangeAttackTime_;
    /// <summary>
    /// Range attack time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RangeAttackTime {
      get { return rangeAttackTime_; }
      set {
        rangeAttackTime_ = value;
      }
    }

    /// <summary>Field number for the "unit_class" field.</summary>
    public const int UnitClassFieldNumber = 33;
    private uint unitClass_;
    /// <summary>
    /// Unit class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitClass {
      get { return unitClass_; }
      set {
        unitClass_ = value;
      }
    }

    /// <summary>Field number for the "unit_flags" field.</summary>
    public const int UnitFlagsFieldNumber = 34;
    private uint unitFlags_;
    /// <summary>
    /// Unit flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitFlags {
      get { return unitFlags_; }
      set {
        unitFlags_ = value;
      }
    }

    /// <summary>Field number for the "dynamic_flags" field.</summary>
    public const int DynamicFlagsFieldNumber = 35;
    private uint dynamicFlags_;
    /// <summary>
    /// Dynamic flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DynamicFlags {
      get { return dynamicFlags_; }
      set {
        dynamicFlags_ = value;
      }
    }

    /// <summary>Field number for the "family" field.</summary>
    public const int FamilyFieldNumber = 36;
    private uint family_;
    /// <summary>
    /// Creature family
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Family {
      get { return family_; }
      set {
        family_ = value;
      }
    }

    /// <summary>Field number for the "trainer_type" field.</summary>
    public const int TrainerTypeFieldNumber = 37;
    private uint trainerType_;
    /// <summary>
    /// Trainer type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrainerType {
      get { return trainerType_; }
      set {
        trainerType_ = value;
      }
    }

    /// <summary>Field number for the "trainer_spell" field.</summary>
    public const int TrainerSpellFieldNumber = 38;
    private uint trainerSpell_;
    /// <summary>
    /// Trainer spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrainerSpell {
      get { return trainerSpell_; }
      set {
        trainerSpell_ = value;
      }
    }

    /// <summary>Field number for the "trainer_class" field.</summary>
    public const int TrainerClassFieldNumber = 39;
    private uint trainerClass_;
    /// <summary>
    /// Trainer class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrainerClass {
      get { return trainerClass_; }
      set {
        trainerClass_ = value;
      }
    }

    /// <summary>Field number for the "trainer_race" field.</summary>
    public const int TrainerRaceFieldNumber = 40;
    private uint trainerRace_;
    /// <summary>
    /// Trainer race
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrainerRace {
      get { return trainerRace_; }
      set {
        trainerRace_ = value;
      }
    }

    /// <summary>Field number for the "min_ranged_dmg" field.</summary>
    public const int MinRangedDmgFieldNumber = 41;
    private float minRangedDmg_;
    /// <summary>
    /// Minimum ranged damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinRangedDmg {
      get { return minRangedDmg_; }
      set {
        minRangedDmg_ = value;
      }
    }

    /// <summary>Field number for the "max_ranged_dmg" field.</summary>
    public const int MaxRangedDmgFieldNumber = 42;
    private float maxRangedDmg_;
    /// <summary>
    /// Maximum ranged damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxRangedDmg {
      get { return maxRangedDmg_; }
      set {
        maxRangedDmg_ = value;
      }
    }

    /// <summary>Field number for the "ranged_attack_power" field.</summary>
    public const int RangedAttackPowerFieldNumber = 43;
    private uint rangedAttackPower_;
    /// <summary>
    /// Ranged attack power
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RangedAttackPower {
      get { return rangedAttackPower_; }
      set {
        rangedAttackPower_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 44;
    private uint type_;
    /// <summary>
    /// Creature type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "type_flags" field.</summary>
    public const int TypeFlagsFieldNumber = 45;
    private uint typeFlags_;
    /// <summary>
    /// Type flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TypeFlags {
      get { return typeFlags_; }
      set {
        typeFlags_ = value;
      }
    }

    /// <summary>Field number for the "loot_id" field.</summary>
    public const int LootIdFieldNumber = 46;
    private uint lootId_;
    /// <summary>
    /// Loot template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LootId {
      get { return lootId_; }
      set {
        lootId_ = value;
      }
    }

    /// <summary>Field number for the "pickpocket_loot" field.</summary>
    public const int PickpocketLootFieldNumber = 47;
    private uint pickpocketLoot_;
    /// <summary>
    /// Pickpocket loot ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PickpocketLoot {
      get { return pickpocketLoot_; }
      set {
        pickpocketLoot_ = value;
      }
    }

    /// <summary>Field number for the "skin_loot" field.</summary>
    public const int SkinLootFieldNumber = 48;
    private uint skinLoot_;
    /// <summary>
    /// Skinning loot ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SkinLoot {
      get { return skinLoot_; }
      set {
        skinLoot_ = value;
      }
    }

    /// <summary>Field number for the "resistance_1" field.</summary>
    public const int Resistance1FieldNumber = 49;
    private int resistance1_;
    /// <summary>
    /// Resistance 1 (Physical)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance1 {
      get { return resistance1_; }
      set {
        resistance1_ = value;
      }
    }

    /// <summary>Field number for the "resistance_2" field.</summary>
    public const int Resistance2FieldNumber = 50;
    private int resistance2_;
    /// <summary>
    /// Resistance 2 (Holy)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance2 {
      get { return resistance2_; }
      set {
        resistance2_ = value;
      }
    }

    /// <summary>Field number for the "resistance_3" field.</summary>
    public const int Resistance3FieldNumber = 51;
    private int resistance3_;
    /// <summary>
    /// Resistance 3 (Fire)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance3 {
      get { return resistance3_; }
      set {
        resistance3_ = value;
      }
    }

    /// <summary>Field number for the "resistance_4" field.</summary>
    public const int Resistance4FieldNumber = 52;
    private int resistance4_;
    /// <summary>
    /// Resistance 4 (Nature)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance4 {
      get { return resistance4_; }
      set {
        resistance4_ = value;
      }
    }

    /// <summary>Field number for the "resistance_5" field.</summary>
    public const int Resistance5FieldNumber = 53;
    private int resistance5_;
    /// <summary>
    /// Resistance 5 (Frost)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance5 {
      get { return resistance5_; }
      set {
        resistance5_ = value;
      }
    }

    /// <summary>Field number for the "resistance_6" field.</summary>
    public const int Resistance6FieldNumber = 54;
    private int resistance6_;
    /// <summary>
    /// Resistance 6 (Shadow)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Resistance6 {
      get { return resistance6_; }
      set {
        resistance6_ = value;
      }
    }

    /// <summary>Field number for the "spell_1" field.</summary>
    public const int Spell1FieldNumber = 55;
    private uint spell1_;
    /// <summary>
    /// First spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell1 {
      get { return spell1_; }
      set {
        spell1_ = value;
      }
    }

    /// <summary>Field number for the "spell_2" field.</summary>
    public const int Spell2FieldNumber = 56;
    private uint spell2_;
    /// <summary>
    /// Second spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell2 {
      get { return spell2_; }
      set {
        spell2_ = value;
      }
    }

    /// <summary>Field number for the "spell_3" field.</summary>
    public const int Spell3FieldNumber = 57;
    private uint spell3_;
    /// <summary>
    /// Third spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell3 {
      get { return spell3_; }
      set {
        spell3_ = value;
      }
    }

    /// <summary>Field number for the "spell_4" field.</summary>
    public const int Spell4FieldNumber = 58;
    private uint spell4_;
    /// <summary>
    /// Fourth spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell4 {
      get { return spell4_; }
      set {
        spell4_ = value;
      }
    }

    /// <summary>Field number for the "spells_template" field.</summary>
    public const int SpellsTemplateFieldNumber = 59;
    private uint spellsTemplate_;
    /// <summary>
    /// Spell template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellsTemplate {
      get { return spellsTemplate_; }
      set {
        spellsTemplate_ = value;
      }
    }

    /// <summary>Field number for the "pet_spell_data_id" field.</summary>
    public const int PetSpellDataIdFieldNumber = 60;
    private uint petSpellDataId_;
    /// <summary>
    /// Pet spell data ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PetSpellDataId {
      get { return petSpellDataId_; }
      set {
        petSpellDataId_ = value;
      }
    }

    /// <summary>Field number for the "min_gold" field.</summary>
    public const int MinGoldFieldNumber = 61;
    private uint minGold_;
    /// <summary>
    /// Minimum gold drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinGold {
      get { return minGold_; }
      set {
        minGold_ = value;
      }
    }

    /// <summary>Field number for the "max_gold" field.</summary>
    public const int MaxGoldFieldNumber = 62;
    private uint maxGold_;
    /// <summary>
    /// Maximum gold drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxGold {
      get { return maxGold_; }
      set {
        maxGold_ = value;
      }
    }

    /// <summary>Field number for the "ai_name" field.</summary>
    public const int AiNameFieldNumber = 63;
    private string aiName_ = "";
    /// <summary>
    /// AI name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AiName {
      get { return aiName_; }
      set {
        aiName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "movement_type" field.</summary>
    public const int MovementTypeFieldNumber = 64;
    private uint movementType_;
    /// <summary>
    /// Movement type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MovementType {
      get { return movementType_; }
      set {
        movementType_ = value;
      }
    }

    /// <summary>Field number for the "inhabit_type" field.</summary>
    public const int InhabitTypeFieldNumber = 65;
    private uint inhabitType_;
    /// <summary>
    /// Inhabit type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InhabitType {
      get { return inhabitType_; }
      set {
        inhabitType_ = value;
      }
    }

    /// <summary>Field number for the "civilian" field.</summary>
    public const int CivilianFieldNumber = 66;
    private uint civilian_;
    /// <summary>
    /// Civilian flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Civilian {
      get { return civilian_; }
      set {
        civilian_ = value;
      }
    }

    /// <summary>Field number for the "racial_leader" field.</summary>
    public const int RacialLeaderFieldNumber = 67;
    private uint racialLeader_;
    /// <summary>
    /// Racial leader flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RacialLeader {
      get { return racialLeader_; }
      set {
        racialLeader_ = value;
      }
    }

    /// <summary>Field number for the "regen_health" field.</summary>
    public const int RegenHealthFieldNumber = 68;
    private uint regenHealth_;
    /// <summary>
    /// Regeneration health flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RegenHealth {
      get { return regenHealth_; }
      set {
        regenHealth_ = value;
      }
    }

    /// <summary>Field number for the "equipment_id" field.</summary>
    public const int EquipmentIdFieldNumber = 69;
    private uint equipmentId_;
    /// <summary>
    /// Equipment template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EquipmentId {
      get { return equipmentId_; }
      set {
        equipmentId_ = value;
      }
    }

    /// <summary>Field number for the "trainer_id" field.</summary>
    public const int TrainerIdFieldNumber = 70;
    private uint trainerId_;
    /// <summary>
    /// Trainer ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrainerId {
      get { return trainerId_; }
      set {
        trainerId_ = value;
      }
    }

    /// <summary>Field number for the "vendor_id" field.</summary>
    public const int VendorIdFieldNumber = 71;
    private uint vendorId_;
    /// <summary>
    /// Vendor ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VendorId {
      get { return vendorId_; }
      set {
        vendorId_ = value;
      }
    }

    /// <summary>Field number for the "mechanic_immune_mask" field.</summary>
    public const int MechanicImmuneMaskFieldNumber = 72;
    private uint mechanicImmuneMask_;
    /// <summary>
    /// Mechanic immune mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MechanicImmuneMask {
      get { return mechanicImmuneMask_; }
      set {
        mechanicImmuneMask_ = value;
      }
    }

    /// <summary>Field number for the "school_immune_mask" field.</summary>
    public const int SchoolImmuneMaskFieldNumber = 73;
    private uint schoolImmuneMask_;
    /// <summary>
    /// School immune mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SchoolImmuneMask {
      get { return schoolImmuneMask_; }
      set {
        schoolImmuneMask_ = value;
      }
    }

    /// <summary>Field number for the "flags_extra" field.</summary>
    public const int FlagsExtraFieldNumber = 74;
    private uint flagsExtra_;
    /// <summary>
    /// Extra flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FlagsExtra {
      get { return flagsExtra_; }
      set {
        flagsExtra_ = value;
      }
    }

    /// <summary>Field number for the "script_name" field.</summary>
    public const int ScriptNameFieldNumber = 75;
    private string scriptName_ = "";
    /// <summary>
    /// Script name for custom behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (KillCredit1 != other.KillCredit1) return false;
      if (KillCredit2 != other.KillCredit2) return false;
      if (ModelId1 != other.ModelId1) return false;
      if (ModelId2 != other.ModelId2) return false;
      if (ModelId3 != other.ModelId3) return false;
      if (ModelId4 != other.ModelId4) return false;
      if (Name != other.Name) return false;
      if (Subname != other.Subname) return false;
      if (GossipMenuId != other.GossipMenuId) return false;
      if (MinLevel != other.MinLevel) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (MinHealth != other.MinHealth) return false;
      if (MaxHealth != other.MaxHealth) return false;
      if (MinMana != other.MinMana) return false;
      if (MaxMana != other.MaxMana) return false;
      if (Armor != other.Armor) return false;
      if (FactionA != other.FactionA) return false;
      if (FactionH != other.FactionH) return false;
      if (NpcFlag != other.NpcFlag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedWalk, other.SpeedWalk)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedRun, other.SpeedRun)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      if (Rank != other.Rank) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinDmg, other.MinDmg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxDmg, other.MaxDmg)) return false;
      if (DmgSchool != other.DmgSchool) return false;
      if (AttackPower != other.AttackPower) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgMultiplier, other.DmgMultiplier)) return false;
      if (BaseAttackTime != other.BaseAttackTime) return false;
      if (RangeAttackTime != other.RangeAttackTime) return false;
      if (UnitClass != other.UnitClass) return false;
      if (UnitFlags != other.UnitFlags) return false;
      if (DynamicFlags != other.DynamicFlags) return false;
      if (Family != other.Family) return false;
      if (TrainerType != other.TrainerType) return false;
      if (TrainerSpell != other.TrainerSpell) return false;
      if (TrainerClass != other.TrainerClass) return false;
      if (TrainerRace != other.TrainerRace) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinRangedDmg, other.MinRangedDmg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxRangedDmg, other.MaxRangedDmg)) return false;
      if (RangedAttackPower != other.RangedAttackPower) return false;
      if (Type != other.Type) return false;
      if (TypeFlags != other.TypeFlags) return false;
      if (LootId != other.LootId) return false;
      if (PickpocketLoot != other.PickpocketLoot) return false;
      if (SkinLoot != other.SkinLoot) return false;
      if (Resistance1 != other.Resistance1) return false;
      if (Resistance2 != other.Resistance2) return false;
      if (Resistance3 != other.Resistance3) return false;
      if (Resistance4 != other.Resistance4) return false;
      if (Resistance5 != other.Resistance5) return false;
      if (Resistance6 != other.Resistance6) return false;
      if (Spell1 != other.Spell1) return false;
      if (Spell2 != other.Spell2) return false;
      if (Spell3 != other.Spell3) return false;
      if (Spell4 != other.Spell4) return false;
      if (SpellsTemplate != other.SpellsTemplate) return false;
      if (PetSpellDataId != other.PetSpellDataId) return false;
      if (MinGold != other.MinGold) return false;
      if (MaxGold != other.MaxGold) return false;
      if (AiName != other.AiName) return false;
      if (MovementType != other.MovementType) return false;
      if (InhabitType != other.InhabitType) return false;
      if (Civilian != other.Civilian) return false;
      if (RacialLeader != other.RacialLeader) return false;
      if (RegenHealth != other.RegenHealth) return false;
      if (EquipmentId != other.EquipmentId) return false;
      if (TrainerId != other.TrainerId) return false;
      if (VendorId != other.VendorId) return false;
      if (MechanicImmuneMask != other.MechanicImmuneMask) return false;
      if (SchoolImmuneMask != other.SchoolImmuneMask) return false;
      if (FlagsExtra != other.FlagsExtra) return false;
      if (ScriptName != other.ScriptName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (KillCredit1 != 0) hash ^= KillCredit1.GetHashCode();
      if (KillCredit2 != 0) hash ^= KillCredit2.GetHashCode();
      if (ModelId1 != 0) hash ^= ModelId1.GetHashCode();
      if (ModelId2 != 0) hash ^= ModelId2.GetHashCode();
      if (ModelId3 != 0) hash ^= ModelId3.GetHashCode();
      if (ModelId4 != 0) hash ^= ModelId4.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Subname.Length != 0) hash ^= Subname.GetHashCode();
      if (GossipMenuId != 0) hash ^= GossipMenuId.GetHashCode();
      if (MinLevel != 0) hash ^= MinLevel.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (MinHealth != 0) hash ^= MinHealth.GetHashCode();
      if (MaxHealth != 0) hash ^= MaxHealth.GetHashCode();
      if (MinMana != 0) hash ^= MinMana.GetHashCode();
      if (MaxMana != 0) hash ^= MaxMana.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (FactionA != 0) hash ^= FactionA.GetHashCode();
      if (FactionH != 0) hash ^= FactionH.GetHashCode();
      if (NpcFlag != 0) hash ^= NpcFlag.GetHashCode();
      if (SpeedWalk != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedWalk);
      if (SpeedRun != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedRun);
      if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (MinDmg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinDmg);
      if (MaxDmg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxDmg);
      if (DmgSchool != 0) hash ^= DmgSchool.GetHashCode();
      if (AttackPower != 0) hash ^= AttackPower.GetHashCode();
      if (DmgMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgMultiplier);
      if (BaseAttackTime != 0) hash ^= BaseAttackTime.GetHashCode();
      if (RangeAttackTime != 0) hash ^= RangeAttackTime.GetHashCode();
      if (UnitClass != 0) hash ^= UnitClass.GetHashCode();
      if (UnitFlags != 0) hash ^= UnitFlags.GetHashCode();
      if (DynamicFlags != 0) hash ^= DynamicFlags.GetHashCode();
      if (Family != 0) hash ^= Family.GetHashCode();
      if (TrainerType != 0) hash ^= TrainerType.GetHashCode();
      if (TrainerSpell != 0) hash ^= TrainerSpell.GetHashCode();
      if (TrainerClass != 0) hash ^= TrainerClass.GetHashCode();
      if (TrainerRace != 0) hash ^= TrainerRace.GetHashCode();
      if (MinRangedDmg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinRangedDmg);
      if (MaxRangedDmg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxRangedDmg);
      if (RangedAttackPower != 0) hash ^= RangedAttackPower.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TypeFlags != 0) hash ^= TypeFlags.GetHashCode();
      if (LootId != 0) hash ^= LootId.GetHashCode();
      if (PickpocketLoot != 0) hash ^= PickpocketLoot.GetHashCode();
      if (SkinLoot != 0) hash ^= SkinLoot.GetHashCode();
      if (Resistance1 != 0) hash ^= Resistance1.GetHashCode();
      if (Resistance2 != 0) hash ^= Resistance2.GetHashCode();
      if (Resistance3 != 0) hash ^= Resistance3.GetHashCode();
      if (Resistance4 != 0) hash ^= Resistance4.GetHashCode();
      if (Resistance5 != 0) hash ^= Resistance5.GetHashCode();
      if (Resistance6 != 0) hash ^= Resistance6.GetHashCode();
      if (Spell1 != 0) hash ^= Spell1.GetHashCode();
      if (Spell2 != 0) hash ^= Spell2.GetHashCode();
      if (Spell3 != 0) hash ^= Spell3.GetHashCode();
      if (Spell4 != 0) hash ^= Spell4.GetHashCode();
      if (SpellsTemplate != 0) hash ^= SpellsTemplate.GetHashCode();
      if (PetSpellDataId != 0) hash ^= PetSpellDataId.GetHashCode();
      if (MinGold != 0) hash ^= MinGold.GetHashCode();
      if (MaxGold != 0) hash ^= MaxGold.GetHashCode();
      if (AiName.Length != 0) hash ^= AiName.GetHashCode();
      if (MovementType != 0) hash ^= MovementType.GetHashCode();
      if (InhabitType != 0) hash ^= InhabitType.GetHashCode();
      if (Civilian != 0) hash ^= Civilian.GetHashCode();
      if (RacialLeader != 0) hash ^= RacialLeader.GetHashCode();
      if (RegenHealth != 0) hash ^= RegenHealth.GetHashCode();
      if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
      if (TrainerId != 0) hash ^= TrainerId.GetHashCode();
      if (VendorId != 0) hash ^= VendorId.GetHashCode();
      if (MechanicImmuneMask != 0) hash ^= MechanicImmuneMask.GetHashCode();
      if (SchoolImmuneMask != 0) hash ^= SchoolImmuneMask.GetHashCode();
      if (FlagsExtra != 0) hash ^= FlagsExtra.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (KillCredit1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(KillCredit1);
      }
      if (KillCredit2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(KillCredit2);
      }
      if (ModelId1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModelId1);
      }
      if (ModelId2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ModelId2);
      }
      if (ModelId3 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ModelId3);
      }
      if (ModelId4 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ModelId4);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (Subname.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Subname);
      }
      if (GossipMenuId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GossipMenuId);
      }
      if (MinLevel != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MinLevel);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MaxLevel);
      }
      if (MinHealth != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MinHealth);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxHealth);
      }
      if (MinMana != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(MinMana);
      }
      if (MaxMana != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MaxMana);
      }
      if (Armor != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(Armor);
      }
      if (FactionA != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(FactionA);
      }
      if (FactionH != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(FactionH);
      }
      if (NpcFlag != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(NpcFlag);
      }
      if (SpeedWalk != 0F) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(SpeedWalk);
      }
      if (SpeedRun != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(SpeedRun);
      }
      if (Scale != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(Scale);
      }
      if (Rank != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Rank);
      }
      if (MinDmg != 0F) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(MinDmg);
      }
      if (MaxDmg != 0F) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(MaxDmg);
      }
      if (DmgSchool != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(DmgSchool);
      }
      if (AttackPower != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(AttackPower);
      }
      if (DmgMultiplier != 0F) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(DmgMultiplier);
      }
      if (BaseAttackTime != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(BaseAttackTime);
      }
      if (RangeAttackTime != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(RangeAttackTime);
      }
      if (UnitClass != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(UnitClass);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(UnitFlags);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(DynamicFlags);
      }
      if (Family != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(Family);
      }
      if (TrainerType != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(TrainerType);
      }
      if (TrainerSpell != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(TrainerSpell);
      }
      if (TrainerClass != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(TrainerClass);
      }
      if (TrainerRace != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(TrainerRace);
      }
      if (MinRangedDmg != 0F) {
        output.WriteRawTag(205, 2);
        output.WriteFloat(MinRangedDmg);
      }
      if (MaxRangedDmg != 0F) {
        output.WriteRawTag(213, 2);
        output.WriteFloat(MaxRangedDmg);
      }
      if (RangedAttackPower != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(RangedAttackPower);
      }
      if (Type != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(Type);
      }
      if (TypeFlags != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(TypeFlags);
      }
      if (LootId != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(LootId);
      }
      if (PickpocketLoot != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(PickpocketLoot);
      }
      if (SkinLoot != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(SkinLoot);
      }
      if (Resistance1 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(Resistance1);
      }
      if (Resistance2 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(Resistance2);
      }
      if (Resistance3 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(Resistance3);
      }
      if (Resistance4 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(Resistance4);
      }
      if (Resistance5 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(Resistance5);
      }
      if (Resistance6 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(Resistance6);
      }
      if (Spell1 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(Spell1);
      }
      if (Spell2 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(Spell2);
      }
      if (Spell3 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(Spell3);
      }
      if (Spell4 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(Spell4);
      }
      if (SpellsTemplate != 0) {
        output.WriteRawTag(216, 3);
        output.WriteUInt32(SpellsTemplate);
      }
      if (PetSpellDataId != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(PetSpellDataId);
      }
      if (MinGold != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(MinGold);
      }
      if (MaxGold != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(MaxGold);
      }
      if (AiName.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(AiName);
      }
      if (MovementType != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(MovementType);
      }
      if (InhabitType != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(InhabitType);
      }
      if (Civilian != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(Civilian);
      }
      if (RacialLeader != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(RacialLeader);
      }
      if (RegenHealth != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(RegenHealth);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(EquipmentId);
      }
      if (TrainerId != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(TrainerId);
      }
      if (VendorId != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(VendorId);
      }
      if (MechanicImmuneMask != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(MechanicImmuneMask);
      }
      if (SchoolImmuneMask != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(SchoolImmuneMask);
      }
      if (FlagsExtra != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(FlagsExtra);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (KillCredit1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(KillCredit1);
      }
      if (KillCredit2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(KillCredit2);
      }
      if (ModelId1 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ModelId1);
      }
      if (ModelId2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ModelId2);
      }
      if (ModelId3 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ModelId3);
      }
      if (ModelId4 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ModelId4);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (Subname.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Subname);
      }
      if (GossipMenuId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GossipMenuId);
      }
      if (MinLevel != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MinLevel);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MaxLevel);
      }
      if (MinHealth != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MinHealth);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxHealth);
      }
      if (MinMana != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(MinMana);
      }
      if (MaxMana != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MaxMana);
      }
      if (Armor != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(Armor);
      }
      if (FactionA != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(FactionA);
      }
      if (FactionH != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(FactionH);
      }
      if (NpcFlag != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(NpcFlag);
      }
      if (SpeedWalk != 0F) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(SpeedWalk);
      }
      if (SpeedRun != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(SpeedRun);
      }
      if (Scale != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(Scale);
      }
      if (Rank != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Rank);
      }
      if (MinDmg != 0F) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(MinDmg);
      }
      if (MaxDmg != 0F) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(MaxDmg);
      }
      if (DmgSchool != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(DmgSchool);
      }
      if (AttackPower != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(AttackPower);
      }
      if (DmgMultiplier != 0F) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(DmgMultiplier);
      }
      if (BaseAttackTime != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(BaseAttackTime);
      }
      if (RangeAttackTime != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(RangeAttackTime);
      }
      if (UnitClass != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(UnitClass);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(UnitFlags);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(DynamicFlags);
      }
      if (Family != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(Family);
      }
      if (TrainerType != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(TrainerType);
      }
      if (TrainerSpell != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(TrainerSpell);
      }
      if (TrainerClass != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(TrainerClass);
      }
      if (TrainerRace != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(TrainerRace);
      }
      if (MinRangedDmg != 0F) {
        output.WriteRawTag(205, 2);
        output.WriteFloat(MinRangedDmg);
      }
      if (MaxRangedDmg != 0F) {
        output.WriteRawTag(213, 2);
        output.WriteFloat(MaxRangedDmg);
      }
      if (RangedAttackPower != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(RangedAttackPower);
      }
      if (Type != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(Type);
      }
      if (TypeFlags != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(TypeFlags);
      }
      if (LootId != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(LootId);
      }
      if (PickpocketLoot != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(PickpocketLoot);
      }
      if (SkinLoot != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(SkinLoot);
      }
      if (Resistance1 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(Resistance1);
      }
      if (Resistance2 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(Resistance2);
      }
      if (Resistance3 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(Resistance3);
      }
      if (Resistance4 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(Resistance4);
      }
      if (Resistance5 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(Resistance5);
      }
      if (Resistance6 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(Resistance6);
      }
      if (Spell1 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(Spell1);
      }
      if (Spell2 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(Spell2);
      }
      if (Spell3 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(Spell3);
      }
      if (Spell4 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(Spell4);
      }
      if (SpellsTemplate != 0) {
        output.WriteRawTag(216, 3);
        output.WriteUInt32(SpellsTemplate);
      }
      if (PetSpellDataId != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(PetSpellDataId);
      }
      if (MinGold != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(MinGold);
      }
      if (MaxGold != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(MaxGold);
      }
      if (AiName.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(AiName);
      }
      if (MovementType != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(MovementType);
      }
      if (InhabitType != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(InhabitType);
      }
      if (Civilian != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(Civilian);
      }
      if (RacialLeader != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(RacialLeader);
      }
      if (RegenHealth != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(RegenHealth);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(EquipmentId);
      }
      if (TrainerId != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(TrainerId);
      }
      if (VendorId != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(VendorId);
      }
      if (MechanicImmuneMask != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(MechanicImmuneMask);
      }
      if (SchoolImmuneMask != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(SchoolImmuneMask);
      }
      if (FlagsExtra != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(FlagsExtra);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (KillCredit1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KillCredit1);
      }
      if (KillCredit2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KillCredit2);
      }
      if (ModelId1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelId1);
      }
      if (ModelId2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelId2);
      }
      if (ModelId3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelId3);
      }
      if (ModelId4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModelId4);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Subname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subname);
      }
      if (GossipMenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GossipMenuId);
      }
      if (MinLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinLevel);
      }
      if (MaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLevel);
      }
      if (MinHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinHealth);
      }
      if (MaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxHealth);
      }
      if (MinMana != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MinMana);
      }
      if (MaxMana != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxMana);
      }
      if (Armor != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Armor);
      }
      if (FactionA != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FactionA);
      }
      if (FactionH != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FactionH);
      }
      if (NpcFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NpcFlag);
      }
      if (SpeedWalk != 0F) {
        size += 2 + 4;
      }
      if (SpeedRun != 0F) {
        size += 2 + 4;
      }
      if (Scale != 0F) {
        size += 2 + 4;
      }
      if (Rank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Rank);
      }
      if (MinDmg != 0F) {
        size += 2 + 4;
      }
      if (MaxDmg != 0F) {
        size += 2 + 4;
      }
      if (DmgSchool != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DmgSchool);
      }
      if (AttackPower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AttackPower);
      }
      if (DmgMultiplier != 0F) {
        size += 2 + 4;
      }
      if (BaseAttackTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BaseAttackTime);
      }
      if (RangeAttackTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RangeAttackTime);
      }
      if (UnitClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnitClass);
      }
      if (UnitFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnitFlags);
      }
      if (DynamicFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DynamicFlags);
      }
      if (Family != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Family);
      }
      if (TrainerType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrainerType);
      }
      if (TrainerSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrainerSpell);
      }
      if (TrainerClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrainerClass);
      }
      if (TrainerRace != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrainerRace);
      }
      if (MinRangedDmg != 0F) {
        size += 2 + 4;
      }
      if (MaxRangedDmg != 0F) {
        size += 2 + 4;
      }
      if (RangedAttackPower != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RangedAttackPower);
      }
      if (Type != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (TypeFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TypeFlags);
      }
      if (LootId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LootId);
      }
      if (PickpocketLoot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PickpocketLoot);
      }
      if (SkinLoot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SkinLoot);
      }
      if (Resistance1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance1);
      }
      if (Resistance2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance2);
      }
      if (Resistance3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance3);
      }
      if (Resistance4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance4);
      }
      if (Resistance5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance5);
      }
      if (Resistance6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Resistance6);
      }
      if (Spell1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Spell1);
      }
      if (Spell2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Spell2);
      }
      if (Spell3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Spell3);
      }
      if (Spell4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Spell4);
      }
      if (SpellsTemplate != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellsTemplate);
      }
      if (PetSpellDataId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PetSpellDataId);
      }
      if (MinGold != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MinGold);
      }
      if (MaxGold != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxGold);
      }
      if (AiName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AiName);
      }
      if (MovementType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MovementType);
      }
      if (InhabitType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(InhabitType);
      }
      if (Civilian != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Civilian);
      }
      if (RacialLeader != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RacialLeader);
      }
      if (RegenHealth != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RegenHealth);
      }
      if (EquipmentId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EquipmentId);
      }
      if (TrainerId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrainerId);
      }
      if (VendorId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VendorId);
      }
      if (MechanicImmuneMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MechanicImmuneMask);
      }
      if (SchoolImmuneMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SchoolImmuneMask);
      }
      if (FlagsExtra != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FlagsExtra);
      }
      if (ScriptName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.KillCredit1 != 0) {
        KillCredit1 = other.KillCredit1;
      }
      if (other.KillCredit2 != 0) {
        KillCredit2 = other.KillCredit2;
      }
      if (other.ModelId1 != 0) {
        ModelId1 = other.ModelId1;
      }
      if (other.ModelId2 != 0) {
        ModelId2 = other.ModelId2;
      }
      if (other.ModelId3 != 0) {
        ModelId3 = other.ModelId3;
      }
      if (other.ModelId4 != 0) {
        ModelId4 = other.ModelId4;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Subname.Length != 0) {
        Subname = other.Subname;
      }
      if (other.GossipMenuId != 0) {
        GossipMenuId = other.GossipMenuId;
      }
      if (other.MinLevel != 0) {
        MinLevel = other.MinLevel;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.MinHealth != 0) {
        MinHealth = other.MinHealth;
      }
      if (other.MaxHealth != 0) {
        MaxHealth = other.MaxHealth;
      }
      if (other.MinMana != 0) {
        MinMana = other.MinMana;
      }
      if (other.MaxMana != 0) {
        MaxMana = other.MaxMana;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.FactionA != 0) {
        FactionA = other.FactionA;
      }
      if (other.FactionH != 0) {
        FactionH = other.FactionH;
      }
      if (other.NpcFlag != 0) {
        NpcFlag = other.NpcFlag;
      }
      if (other.SpeedWalk != 0F) {
        SpeedWalk = other.SpeedWalk;
      }
      if (other.SpeedRun != 0F) {
        SpeedRun = other.SpeedRun;
      }
      if (other.Scale != 0F) {
        Scale = other.Scale;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.MinDmg != 0F) {
        MinDmg = other.MinDmg;
      }
      if (other.MaxDmg != 0F) {
        MaxDmg = other.MaxDmg;
      }
      if (other.DmgSchool != 0) {
        DmgSchool = other.DmgSchool;
      }
      if (other.AttackPower != 0) {
        AttackPower = other.AttackPower;
      }
      if (other.DmgMultiplier != 0F) {
        DmgMultiplier = other.DmgMultiplier;
      }
      if (other.BaseAttackTime != 0) {
        BaseAttackTime = other.BaseAttackTime;
      }
      if (other.RangeAttackTime != 0) {
        RangeAttackTime = other.RangeAttackTime;
      }
      if (other.UnitClass != 0) {
        UnitClass = other.UnitClass;
      }
      if (other.UnitFlags != 0) {
        UnitFlags = other.UnitFlags;
      }
      if (other.DynamicFlags != 0) {
        DynamicFlags = other.DynamicFlags;
      }
      if (other.Family != 0) {
        Family = other.Family;
      }
      if (other.TrainerType != 0) {
        TrainerType = other.TrainerType;
      }
      if (other.TrainerSpell != 0) {
        TrainerSpell = other.TrainerSpell;
      }
      if (other.TrainerClass != 0) {
        TrainerClass = other.TrainerClass;
      }
      if (other.TrainerRace != 0) {
        TrainerRace = other.TrainerRace;
      }
      if (other.MinRangedDmg != 0F) {
        MinRangedDmg = other.MinRangedDmg;
      }
      if (other.MaxRangedDmg != 0F) {
        MaxRangedDmg = other.MaxRangedDmg;
      }
      if (other.RangedAttackPower != 0) {
        RangedAttackPower = other.RangedAttackPower;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TypeFlags != 0) {
        TypeFlags = other.TypeFlags;
      }
      if (other.LootId != 0) {
        LootId = other.LootId;
      }
      if (other.PickpocketLoot != 0) {
        PickpocketLoot = other.PickpocketLoot;
      }
      if (other.SkinLoot != 0) {
        SkinLoot = other.SkinLoot;
      }
      if (other.Resistance1 != 0) {
        Resistance1 = other.Resistance1;
      }
      if (other.Resistance2 != 0) {
        Resistance2 = other.Resistance2;
      }
      if (other.Resistance3 != 0) {
        Resistance3 = other.Resistance3;
      }
      if (other.Resistance4 != 0) {
        Resistance4 = other.Resistance4;
      }
      if (other.Resistance5 != 0) {
        Resistance5 = other.Resistance5;
      }
      if (other.Resistance6 != 0) {
        Resistance6 = other.Resistance6;
      }
      if (other.Spell1 != 0) {
        Spell1 = other.Spell1;
      }
      if (other.Spell2 != 0) {
        Spell2 = other.Spell2;
      }
      if (other.Spell3 != 0) {
        Spell3 = other.Spell3;
      }
      if (other.Spell4 != 0) {
        Spell4 = other.Spell4;
      }
      if (other.SpellsTemplate != 0) {
        SpellsTemplate = other.SpellsTemplate;
      }
      if (other.PetSpellDataId != 0) {
        PetSpellDataId = other.PetSpellDataId;
      }
      if (other.MinGold != 0) {
        MinGold = other.MinGold;
      }
      if (other.MaxGold != 0) {
        MaxGold = other.MaxGold;
      }
      if (other.AiName.Length != 0) {
        AiName = other.AiName;
      }
      if (other.MovementType != 0) {
        MovementType = other.MovementType;
      }
      if (other.InhabitType != 0) {
        InhabitType = other.InhabitType;
      }
      if (other.Civilian != 0) {
        Civilian = other.Civilian;
      }
      if (other.RacialLeader != 0) {
        RacialLeader = other.RacialLeader;
      }
      if (other.RegenHealth != 0) {
        RegenHealth = other.RegenHealth;
      }
      if (other.EquipmentId != 0) {
        EquipmentId = other.EquipmentId;
      }
      if (other.TrainerId != 0) {
        TrainerId = other.TrainerId;
      }
      if (other.VendorId != 0) {
        VendorId = other.VendorId;
      }
      if (other.MechanicImmuneMask != 0) {
        MechanicImmuneMask = other.MechanicImmuneMask;
      }
      if (other.SchoolImmuneMask != 0) {
        SchoolImmuneMask = other.SchoolImmuneMask;
      }
      if (other.FlagsExtra != 0) {
        FlagsExtra = other.FlagsExtra;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            KillCredit1 = input.ReadUInt32();
            break;
          }
          case 32: {
            KillCredit2 = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelId1 = input.ReadUInt32();
            break;
          }
          case 48: {
            ModelId2 = input.ReadUInt32();
            break;
          }
          case 56: {
            ModelId3 = input.ReadUInt32();
            break;
          }
          case 64: {
            ModelId4 = input.ReadUInt32();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            Subname = input.ReadString();
            break;
          }
          case 88: {
            GossipMenuId = input.ReadUInt32();
            break;
          }
          case 96: {
            MinLevel = input.ReadUInt32();
            break;
          }
          case 104: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 112: {
            MinHealth = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 128: {
            MinMana = input.ReadUInt32();
            break;
          }
          case 136: {
            MaxMana = input.ReadUInt32();
            break;
          }
          case 144: {
            Armor = input.ReadUInt32();
            break;
          }
          case 152: {
            FactionA = input.ReadUInt32();
            break;
          }
          case 160: {
            FactionH = input.ReadUInt32();
            break;
          }
          case 168: {
            NpcFlag = input.ReadUInt32();
            break;
          }
          case 181: {
            SpeedWalk = input.ReadFloat();
            break;
          }
          case 189: {
            SpeedRun = input.ReadFloat();
            break;
          }
          case 197: {
            Scale = input.ReadFloat();
            break;
          }
          case 200: {
            Rank = input.ReadUInt32();
            break;
          }
          case 213: {
            MinDmg = input.ReadFloat();
            break;
          }
          case 221: {
            MaxDmg = input.ReadFloat();
            break;
          }
          case 224: {
            DmgSchool = input.ReadUInt32();
            break;
          }
          case 232: {
            AttackPower = input.ReadUInt32();
            break;
          }
          case 245: {
            DmgMultiplier = input.ReadFloat();
            break;
          }
          case 248: {
            BaseAttackTime = input.ReadUInt32();
            break;
          }
          case 256: {
            RangeAttackTime = input.ReadUInt32();
            break;
          }
          case 264: {
            UnitClass = input.ReadUInt32();
            break;
          }
          case 272: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 280: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 288: {
            Family = input.ReadUInt32();
            break;
          }
          case 296: {
            TrainerType = input.ReadUInt32();
            break;
          }
          case 304: {
            TrainerSpell = input.ReadUInt32();
            break;
          }
          case 312: {
            TrainerClass = input.ReadUInt32();
            break;
          }
          case 320: {
            TrainerRace = input.ReadUInt32();
            break;
          }
          case 333: {
            MinRangedDmg = input.ReadFloat();
            break;
          }
          case 341: {
            MaxRangedDmg = input.ReadFloat();
            break;
          }
          case 344: {
            RangedAttackPower = input.ReadUInt32();
            break;
          }
          case 352: {
            Type = input.ReadUInt32();
            break;
          }
          case 360: {
            TypeFlags = input.ReadUInt32();
            break;
          }
          case 368: {
            LootId = input.ReadUInt32();
            break;
          }
          case 376: {
            PickpocketLoot = input.ReadUInt32();
            break;
          }
          case 384: {
            SkinLoot = input.ReadUInt32();
            break;
          }
          case 392: {
            Resistance1 = input.ReadInt32();
            break;
          }
          case 400: {
            Resistance2 = input.ReadInt32();
            break;
          }
          case 408: {
            Resistance3 = input.ReadInt32();
            break;
          }
          case 416: {
            Resistance4 = input.ReadInt32();
            break;
          }
          case 424: {
            Resistance5 = input.ReadInt32();
            break;
          }
          case 432: {
            Resistance6 = input.ReadInt32();
            break;
          }
          case 440: {
            Spell1 = input.ReadUInt32();
            break;
          }
          case 448: {
            Spell2 = input.ReadUInt32();
            break;
          }
          case 456: {
            Spell3 = input.ReadUInt32();
            break;
          }
          case 464: {
            Spell4 = input.ReadUInt32();
            break;
          }
          case 472: {
            SpellsTemplate = input.ReadUInt32();
            break;
          }
          case 480: {
            PetSpellDataId = input.ReadUInt32();
            break;
          }
          case 488: {
            MinGold = input.ReadUInt32();
            break;
          }
          case 496: {
            MaxGold = input.ReadUInt32();
            break;
          }
          case 506: {
            AiName = input.ReadString();
            break;
          }
          case 512: {
            MovementType = input.ReadUInt32();
            break;
          }
          case 520: {
            InhabitType = input.ReadUInt32();
            break;
          }
          case 528: {
            Civilian = input.ReadUInt32();
            break;
          }
          case 536: {
            RacialLeader = input.ReadUInt32();
            break;
          }
          case 544: {
            RegenHealth = input.ReadUInt32();
            break;
          }
          case 552: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 560: {
            TrainerId = input.ReadUInt32();
            break;
          }
          case 568: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 576: {
            MechanicImmuneMask = input.ReadUInt32();
            break;
          }
          case 584: {
            SchoolImmuneMask = input.ReadUInt32();
            break;
          }
          case 592: {
            FlagsExtra = input.ReadUInt32();
            break;
          }
          case 602: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            KillCredit1 = input.ReadUInt32();
            break;
          }
          case 32: {
            KillCredit2 = input.ReadUInt32();
            break;
          }
          case 40: {
            ModelId1 = input.ReadUInt32();
            break;
          }
          case 48: {
            ModelId2 = input.ReadUInt32();
            break;
          }
          case 56: {
            ModelId3 = input.ReadUInt32();
            break;
          }
          case 64: {
            ModelId4 = input.ReadUInt32();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            Subname = input.ReadString();
            break;
          }
          case 88: {
            GossipMenuId = input.ReadUInt32();
            break;
          }
          case 96: {
            MinLevel = input.ReadUInt32();
            break;
          }
          case 104: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 112: {
            MinHealth = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 128: {
            MinMana = input.ReadUInt32();
            break;
          }
          case 136: {
            MaxMana = input.ReadUInt32();
            break;
          }
          case 144: {
            Armor = input.ReadUInt32();
            break;
          }
          case 152: {
            FactionA = input.ReadUInt32();
            break;
          }
          case 160: {
            FactionH = input.ReadUInt32();
            break;
          }
          case 168: {
            NpcFlag = input.ReadUInt32();
            break;
          }
          case 181: {
            SpeedWalk = input.ReadFloat();
            break;
          }
          case 189: {
            SpeedRun = input.ReadFloat();
            break;
          }
          case 197: {
            Scale = input.ReadFloat();
            break;
          }
          case 200: {
            Rank = input.ReadUInt32();
            break;
          }
          case 213: {
            MinDmg = input.ReadFloat();
            break;
          }
          case 221: {
            MaxDmg = input.ReadFloat();
            break;
          }
          case 224: {
            DmgSchool = input.ReadUInt32();
            break;
          }
          case 232: {
            AttackPower = input.ReadUInt32();
            break;
          }
          case 245: {
            DmgMultiplier = input.ReadFloat();
            break;
          }
          case 248: {
            BaseAttackTime = input.ReadUInt32();
            break;
          }
          case 256: {
            RangeAttackTime = input.ReadUInt32();
            break;
          }
          case 264: {
            UnitClass = input.ReadUInt32();
            break;
          }
          case 272: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 280: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 288: {
            Family = input.ReadUInt32();
            break;
          }
          case 296: {
            TrainerType = input.ReadUInt32();
            break;
          }
          case 304: {
            TrainerSpell = input.ReadUInt32();
            break;
          }
          case 312: {
            TrainerClass = input.ReadUInt32();
            break;
          }
          case 320: {
            TrainerRace = input.ReadUInt32();
            break;
          }
          case 333: {
            MinRangedDmg = input.ReadFloat();
            break;
          }
          case 341: {
            MaxRangedDmg = input.ReadFloat();
            break;
          }
          case 344: {
            RangedAttackPower = input.ReadUInt32();
            break;
          }
          case 352: {
            Type = input.ReadUInt32();
            break;
          }
          case 360: {
            TypeFlags = input.ReadUInt32();
            break;
          }
          case 368: {
            LootId = input.ReadUInt32();
            break;
          }
          case 376: {
            PickpocketLoot = input.ReadUInt32();
            break;
          }
          case 384: {
            SkinLoot = input.ReadUInt32();
            break;
          }
          case 392: {
            Resistance1 = input.ReadInt32();
            break;
          }
          case 400: {
            Resistance2 = input.ReadInt32();
            break;
          }
          case 408: {
            Resistance3 = input.ReadInt32();
            break;
          }
          case 416: {
            Resistance4 = input.ReadInt32();
            break;
          }
          case 424: {
            Resistance5 = input.ReadInt32();
            break;
          }
          case 432: {
            Resistance6 = input.ReadInt32();
            break;
          }
          case 440: {
            Spell1 = input.ReadUInt32();
            break;
          }
          case 448: {
            Spell2 = input.ReadUInt32();
            break;
          }
          case 456: {
            Spell3 = input.ReadUInt32();
            break;
          }
          case 464: {
            Spell4 = input.ReadUInt32();
            break;
          }
          case 472: {
            SpellsTemplate = input.ReadUInt32();
            break;
          }
          case 480: {
            PetSpellDataId = input.ReadUInt32();
            break;
          }
          case 488: {
            MinGold = input.ReadUInt32();
            break;
          }
          case 496: {
            MaxGold = input.ReadUInt32();
            break;
          }
          case 506: {
            AiName = input.ReadString();
            break;
          }
          case 512: {
            MovementType = input.ReadUInt32();
            break;
          }
          case 520: {
            InhabitType = input.ReadUInt32();
            break;
          }
          case 528: {
            Civilian = input.ReadUInt32();
            break;
          }
          case 536: {
            RacialLeader = input.ReadUInt32();
            break;
          }
          case 544: {
            RegenHealth = input.ReadUInt32();
            break;
          }
          case 552: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 560: {
            TrainerId = input.ReadUInt32();
            break;
          }
          case 568: {
            VendorId = input.ReadUInt32();
            break;
          }
          case 576: {
            MechanicImmuneMask = input.ReadUInt32();
            break;
          }
          case 584: {
            SchoolImmuneMask = input.ReadUInt32();
            break;
          }
          case 592: {
            FlagsExtra = input.ReadUInt32();
            break;
          }
          case 602: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreatureTemplateAddon : pb::IMessage<CreatureTemplateAddon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatureTemplateAddon> _parser = new pb::MessageParser<CreatureTemplateAddon>(() => new CreatureTemplateAddon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatureTemplateAddon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplateAddon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplateAddon(CreatureTemplateAddon other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      mount_ = other.mount_;
      bytes1_ = other.bytes1_;
      b20Sheath_ = other.b20Sheath_;
      b21Flags_ = other.b21Flags_;
      emote_ = other.emote_;
      moveflags_ = other.moveflags_;
      auras_ = other.auras_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatureTemplateAddon Clone() {
      return new CreatureTemplateAddon(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Creature entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "mount" field.</summary>
    public const int MountFieldNumber = 3;
    private uint mount_;
    /// <summary>
    /// Mount ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mount {
      get { return mount_; }
      set {
        mount_ = value;
      }
    }

    /// <summary>Field number for the "bytes1" field.</summary>
    public const int Bytes1FieldNumber = 4;
    private uint bytes1_;
    /// <summary>
    /// Bytes1 field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bytes1 {
      get { return bytes1_; }
      set {
        bytes1_ = value;
      }
    }

    /// <summary>Field number for the "b2_0_sheath" field.</summary>
    public const int B20SheathFieldNumber = 5;
    private uint b20Sheath_;
    /// <summary>
    /// Sheath state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint B20Sheath {
      get { return b20Sheath_; }
      set {
        b20Sheath_ = value;
      }
    }

    /// <summary>Field number for the "b2_1_flags" field.</summary>
    public const int B21FlagsFieldNumber = 6;
    private uint b21Flags_;
    /// <summary>
    /// Flags associated with the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint B21Flags {
      get { return b21Flags_; }
      set {
        b21Flags_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 7;
    private uint emote_;
    /// <summary>
    /// Emote ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "moveflags" field.</summary>
    public const int MoveflagsFieldNumber = 8;
    private uint moveflags_;
    /// <summary>
    /// Movement flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Moveflags {
      get { return moveflags_; }
      set {
        moveflags_ = value;
      }
    }

    /// <summary>Field number for the "auras" field.</summary>
    public const int AurasFieldNumber = 9;
    private string auras_ = "";
    /// <summary>
    /// Auras applied to the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Auras {
      get { return auras_; }
      set {
        auras_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatureTemplateAddon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatureTemplateAddon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Mount != other.Mount) return false;
      if (Bytes1 != other.Bytes1) return false;
      if (B20Sheath != other.B20Sheath) return false;
      if (B21Flags != other.B21Flags) return false;
      if (Emote != other.Emote) return false;
      if (Moveflags != other.Moveflags) return false;
      if (Auras != other.Auras) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Mount != 0) hash ^= Mount.GetHashCode();
      if (Bytes1 != 0) hash ^= Bytes1.GetHashCode();
      if (B20Sheath != 0) hash ^= B20Sheath.GetHashCode();
      if (B21Flags != 0) hash ^= B21Flags.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Moveflags != 0) hash ^= Moveflags.GetHashCode();
      if (Auras.Length != 0) hash ^= Auras.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Mount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Mount);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Bytes1);
      }
      if (B20Sheath != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(B20Sheath);
      }
      if (B21Flags != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(B21Flags);
      }
      if (Emote != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Emote);
      }
      if (Moveflags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Moveflags);
      }
      if (Auras.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Auras);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Mount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Mount);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Bytes1);
      }
      if (B20Sheath != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(B20Sheath);
      }
      if (B21Flags != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(B21Flags);
      }
      if (Emote != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Emote);
      }
      if (Moveflags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Moveflags);
      }
      if (Auras.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Auras);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Mount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mount);
      }
      if (Bytes1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bytes1);
      }
      if (B20Sheath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B20Sheath);
      }
      if (B21Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B21Flags);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Moveflags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Moveflags);
      }
      if (Auras.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Auras);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatureTemplateAddon other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Mount != 0) {
        Mount = other.Mount;
      }
      if (other.Bytes1 != 0) {
        Bytes1 = other.Bytes1;
      }
      if (other.B20Sheath != 0) {
        B20Sheath = other.B20Sheath;
      }
      if (other.B21Flags != 0) {
        B21Flags = other.B21Flags;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Moveflags != 0) {
        Moveflags = other.Moveflags;
      }
      if (other.Auras.Length != 0) {
        Auras = other.Auras;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Mount = input.ReadUInt32();
            break;
          }
          case 32: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 40: {
            B20Sheath = input.ReadUInt32();
            break;
          }
          case 48: {
            B21Flags = input.ReadUInt32();
            break;
          }
          case 56: {
            Emote = input.ReadUInt32();
            break;
          }
          case 64: {
            Moveflags = input.ReadUInt32();
            break;
          }
          case 74: {
            Auras = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Mount = input.ReadUInt32();
            break;
          }
          case 32: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 40: {
            B20Sheath = input.ReadUInt32();
            break;
          }
          case 48: {
            B21Flags = input.ReadUInt32();
            break;
          }
          case 56: {
            Emote = input.ReadUInt32();
            break;
          }
          case 64: {
            Moveflags = input.ReadUInt32();
            break;
          }
          case 74: {
            Auras = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CustomText : pb::IMessage<CustomText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomText> _parser = new pb::MessageParser<CustomText>(() => new CustomText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomText(CustomText other) : this() {
      entry_ = other.entry_;
      contentDefault_ = other.contentDefault_;
      contentLoc1_ = other.contentLoc1_;
      contentLoc2_ = other.contentLoc2_;
      contentLoc3_ = other.contentLoc3_;
      contentLoc4_ = other.contentLoc4_;
      contentLoc5_ = other.contentLoc5_;
      contentLoc6_ = other.contentLoc6_;
      contentLoc7_ = other.contentLoc7_;
      contentLoc8_ = other.contentLoc8_;
      sound_ = other.sound_;
      type_ = other.type_;
      language_ = other.language_;
      emote_ = other.emote_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomText Clone() {
      return new CustomText(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID for the custom text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "content_default" field.</summary>
    public const int ContentDefaultFieldNumber = 2;
    private string contentDefault_ = "";
    /// <summary>
    /// Default content (text)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentDefault {
      get { return contentDefault_; }
      set {
        contentDefault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc1" field.</summary>
    public const int ContentLoc1FieldNumber = 3;
    private string contentLoc1_ = "";
    /// <summary>
    /// Localized content (language 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc1 {
      get { return contentLoc1_; }
      set {
        contentLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc2" field.</summary>
    public const int ContentLoc2FieldNumber = 4;
    private string contentLoc2_ = "";
    /// <summary>
    /// Localized content (language 2)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc2 {
      get { return contentLoc2_; }
      set {
        contentLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc3" field.</summary>
    public const int ContentLoc3FieldNumber = 5;
    private string contentLoc3_ = "";
    /// <summary>
    /// Localized content (language 3)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc3 {
      get { return contentLoc3_; }
      set {
        contentLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc4" field.</summary>
    public const int ContentLoc4FieldNumber = 6;
    private string contentLoc4_ = "";
    /// <summary>
    /// Localized content (language 4)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc4 {
      get { return contentLoc4_; }
      set {
        contentLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc5" field.</summary>
    public const int ContentLoc5FieldNumber = 7;
    private string contentLoc5_ = "";
    /// <summary>
    /// Localized content (language 5)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc5 {
      get { return contentLoc5_; }
      set {
        contentLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc6" field.</summary>
    public const int ContentLoc6FieldNumber = 8;
    private string contentLoc6_ = "";
    /// <summary>
    /// Localized content (language 6)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc6 {
      get { return contentLoc6_; }
      set {
        contentLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc7" field.</summary>
    public const int ContentLoc7FieldNumber = 9;
    private string contentLoc7_ = "";
    /// <summary>
    /// Localized content (language 7)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc7 {
      get { return contentLoc7_; }
      set {
        contentLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc8" field.</summary>
    public const int ContentLoc8FieldNumber = 10;
    private string contentLoc8_ = "";
    /// <summary>
    /// Localized content (language 8)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc8 {
      get { return contentLoc8_; }
      set {
        contentLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound" field.</summary>
    public const int SoundFieldNumber = 11;
    private uint sound_;
    /// <summary>
    /// Sound ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sound {
      get { return sound_; }
      set {
        sound_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private uint type_;
    /// <summary>
    /// Type ID (defines the text type)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 13;
    private uint language_;
    /// <summary>
    /// Language ID for the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 14;
    private uint emote_;
    /// <summary>
    /// Emote associated with the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 15;
    private string comment_ = "";
    /// <summary>
    /// Comment or description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (ContentDefault != other.ContentDefault) return false;
      if (ContentLoc1 != other.ContentLoc1) return false;
      if (ContentLoc2 != other.ContentLoc2) return false;
      if (ContentLoc3 != other.ContentLoc3) return false;
      if (ContentLoc4 != other.ContentLoc4) return false;
      if (ContentLoc5 != other.ContentLoc5) return false;
      if (ContentLoc6 != other.ContentLoc6) return false;
      if (ContentLoc7 != other.ContentLoc7) return false;
      if (ContentLoc8 != other.ContentLoc8) return false;
      if (Sound != other.Sound) return false;
      if (Type != other.Type) return false;
      if (Language != other.Language) return false;
      if (Emote != other.Emote) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (ContentDefault.Length != 0) hash ^= ContentDefault.GetHashCode();
      if (ContentLoc1.Length != 0) hash ^= ContentLoc1.GetHashCode();
      if (ContentLoc2.Length != 0) hash ^= ContentLoc2.GetHashCode();
      if (ContentLoc3.Length != 0) hash ^= ContentLoc3.GetHashCode();
      if (ContentLoc4.Length != 0) hash ^= ContentLoc4.GetHashCode();
      if (ContentLoc5.Length != 0) hash ^= ContentLoc5.GetHashCode();
      if (ContentLoc6.Length != 0) hash ^= ContentLoc6.GetHashCode();
      if (ContentLoc7.Length != 0) hash ^= ContentLoc7.GetHashCode();
      if (ContentLoc8.Length != 0) hash ^= ContentLoc8.GetHashCode();
      if (Sound != 0) hash ^= Sound.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Language != 0) hash ^= Language.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (Sound != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Language);
      }
      if (Emote != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Emote);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (Sound != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Language);
      }
      if (Emote != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Emote);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (ContentDefault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc8);
      }
      if (Sound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sound);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Language != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Language);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomText other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.ContentDefault.Length != 0) {
        ContentDefault = other.ContentDefault;
      }
      if (other.ContentLoc1.Length != 0) {
        ContentLoc1 = other.ContentLoc1;
      }
      if (other.ContentLoc2.Length != 0) {
        ContentLoc2 = other.ContentLoc2;
      }
      if (other.ContentLoc3.Length != 0) {
        ContentLoc3 = other.ContentLoc3;
      }
      if (other.ContentLoc4.Length != 0) {
        ContentLoc4 = other.ContentLoc4;
      }
      if (other.ContentLoc5.Length != 0) {
        ContentLoc5 = other.ContentLoc5;
      }
      if (other.ContentLoc6.Length != 0) {
        ContentLoc6 = other.ContentLoc6;
      }
      if (other.ContentLoc7.Length != 0) {
        ContentLoc7 = other.ContentLoc7;
      }
      if (other.ContentLoc8.Length != 0) {
        ContentLoc8 = other.ContentLoc8;
      }
      if (other.Sound != 0) {
        Sound = other.Sound;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Language != 0) {
        Language = other.Language;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 88: {
            Sound = input.ReadUInt32();
            break;
          }
          case 96: {
            Type = input.ReadUInt32();
            break;
          }
          case 104: {
            Language = input.ReadUInt32();
            break;
          }
          case 112: {
            Emote = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 88: {
            Sound = input.ReadUInt32();
            break;
          }
          case 96: {
            Type = input.ReadUInt32();
            break;
          }
          case 104: {
            Language = input.ReadUInt32();
            break;
          }
          case 112: {
            Emote = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DisenchantLootTemplate : pb::IMessage<DisenchantLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisenchantLootTemplate> _parser = new pb::MessageParser<DisenchantLootTemplate>(() => new DisenchantLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DisenchantLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisenchantLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisenchantLootTemplate(DisenchantLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DisenchantLootTemplate Clone() {
      return new DisenchantLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// ID: recommended selection based on item level and quality
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item ID for the disenchant loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chance_or_quest_chance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance for the item to drop or quest-specific chance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID for the loot item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincount_or_ref" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private uint mincountOrRef_;
    /// <summary>
    /// Minimum count or reference ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum count of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for any requirements for the loot to drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version in which this loot can drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version in which this loot can drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DisenchantLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DisenchantLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DisenchantLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EventScript : pb::IMessage<EventScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScript> _parser = new pb::MessageParser<EventScript>(() => new EventScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventScript(EventScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventScript Clone() {
      return new EventScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique ID for the event script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before executing the event (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command type for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// Data field for event-related data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Secondary data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Tertiary data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Quaternary data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// First parameter for the event target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Second parameter for the event target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Type of the event target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags related to event data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private uint dataint_;
    /// <summary>
    /// Additional integer data for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private uint dataint2_;
    /// <summary>
    /// Secondary integer data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private uint dataint3_;
    /// <summary>
    /// Tertiary integer data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private uint dataint4_;
    /// <summary>
    /// Quaternary integer data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID related to the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments or descriptions of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadUInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadUInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadUInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadUInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadUInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadUInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadUInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadUInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExplorationBaseXP : pb::IMessage<ExplorationBaseXP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExplorationBaseXP> _parser = new pb::MessageParser<ExplorationBaseXP>(() => new ExplorationBaseXP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExplorationBaseXP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExplorationBaseXP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExplorationBaseXP(ExplorationBaseXP other) : this() {
      level_ = other.level_;
      basexp_ = other.basexp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExplorationBaseXP Clone() {
      return new ExplorationBaseXP(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private uint level_;
    /// <summary>
    /// Character level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "basexp" field.</summary>
    public const int BasexpFieldNumber = 2;
    private uint basexp_;
    /// <summary>
    /// Base experience points for exploration at the given level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Basexp {
      get { return basexp_; }
      set {
        basexp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExplorationBaseXP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExplorationBaseXP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Basexp != other.Basexp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Basexp != 0) hash ^= Basexp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Level);
      }
      if (Basexp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Basexp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Level);
      }
      if (Basexp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Basexp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Basexp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Basexp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExplorationBaseXP other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Basexp != 0) {
        Basexp = other.Basexp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadUInt32();
            break;
          }
          case 16: {
            Basexp = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadUInt32();
            break;
          }
          case 16: {
            Basexp = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Faction : pb::IMessage<Faction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Faction> _parser = new pb::MessageParser<Faction>(() => new Faction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Faction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Faction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Faction(Faction other) : this() {
      id_ = other.id_;
      reputationListID_ = other.reputationListID_;
      baseRepRaceMask1_ = other.baseRepRaceMask1_;
      baseRepRaceMask2_ = other.baseRepRaceMask2_;
      baseRepRaceMask3_ = other.baseRepRaceMask3_;
      baseRepRaceMask4_ = other.baseRepRaceMask4_;
      baseRepClassMask1_ = other.baseRepClassMask1_;
      baseRepClassMask2_ = other.baseRepClassMask2_;
      baseRepClassMask3_ = other.baseRepClassMask3_;
      baseRepClassMask4_ = other.baseRepClassMask4_;
      baseRepValue1_ = other.baseRepValue1_;
      baseRepValue2_ = other.baseRepValue2_;
      baseRepValue3_ = other.baseRepValue3_;
      baseRepValue4_ = other.baseRepValue4_;
      reputationFlags1_ = other.reputationFlags1_;
      reputationFlags2_ = other.reputationFlags2_;
      reputationFlags3_ = other.reputationFlags3_;
      reputationFlags4_ = other.reputationFlags4_;
      team_ = other.team_;
      name1_ = other.name1_;
      name2_ = other.name2_;
      name3_ = other.name3_;
      name4_ = other.name4_;
      name5_ = other.name5_;
      name6_ = other.name6_;
      name7_ = other.name7_;
      name8_ = other.name8_;
      description1_ = other.description1_;
      description2_ = other.description2_;
      description3_ = other.description3_;
      description4_ = other.description4_;
      description5_ = other.description5_;
      description6_ = other.description6_;
      description7_ = other.description7_;
      description8_ = other.description8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Faction Clone() {
      return new Faction(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Faction ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reputationListID" field.</summary>
    public const int ReputationListIDFieldNumber = 2;
    private int reputationListID_;
    /// <summary>
    /// Reputation list ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReputationListID {
      get { return reputationListID_; }
      set {
        reputationListID_ = value;
      }
    }

    /// <summary>Field number for the "baseRepRaceMask1" field.</summary>
    public const int BaseRepRaceMask1FieldNumber = 3;
    private uint baseRepRaceMask1_;
    /// <summary>
    /// Base reputation for race mask 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepRaceMask1 {
      get { return baseRepRaceMask1_; }
      set {
        baseRepRaceMask1_ = value;
      }
    }

    /// <summary>Field number for the "baseRepRaceMask2" field.</summary>
    public const int BaseRepRaceMask2FieldNumber = 4;
    private uint baseRepRaceMask2_;
    /// <summary>
    /// Base reputation for race mask 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepRaceMask2 {
      get { return baseRepRaceMask2_; }
      set {
        baseRepRaceMask2_ = value;
      }
    }

    /// <summary>Field number for the "baseRepRaceMask3" field.</summary>
    public const int BaseRepRaceMask3FieldNumber = 5;
    private uint baseRepRaceMask3_;
    /// <summary>
    /// Base reputation for race mask 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepRaceMask3 {
      get { return baseRepRaceMask3_; }
      set {
        baseRepRaceMask3_ = value;
      }
    }

    /// <summary>Field number for the "baseRepRaceMask4" field.</summary>
    public const int BaseRepRaceMask4FieldNumber = 6;
    private uint baseRepRaceMask4_;
    /// <summary>
    /// Base reputation for race mask 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepRaceMask4 {
      get { return baseRepRaceMask4_; }
      set {
        baseRepRaceMask4_ = value;
      }
    }

    /// <summary>Field number for the "baseRepClassMask1" field.</summary>
    public const int BaseRepClassMask1FieldNumber = 7;
    private uint baseRepClassMask1_;
    /// <summary>
    /// Base reputation for class mask 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepClassMask1 {
      get { return baseRepClassMask1_; }
      set {
        baseRepClassMask1_ = value;
      }
    }

    /// <summary>Field number for the "baseRepClassMask2" field.</summary>
    public const int BaseRepClassMask2FieldNumber = 8;
    private uint baseRepClassMask2_;
    /// <summary>
    /// Base reputation for class mask 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepClassMask2 {
      get { return baseRepClassMask2_; }
      set {
        baseRepClassMask2_ = value;
      }
    }

    /// <summary>Field number for the "baseRepClassMask3" field.</summary>
    public const int BaseRepClassMask3FieldNumber = 9;
    private uint baseRepClassMask3_;
    /// <summary>
    /// Base reputation for class mask 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepClassMask3 {
      get { return baseRepClassMask3_; }
      set {
        baseRepClassMask3_ = value;
      }
    }

    /// <summary>Field number for the "baseRepClassMask4" field.</summary>
    public const int BaseRepClassMask4FieldNumber = 10;
    private uint baseRepClassMask4_;
    /// <summary>
    /// Base reputation for class mask 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseRepClassMask4 {
      get { return baseRepClassMask4_; }
      set {
        baseRepClassMask4_ = value;
      }
    }

    /// <summary>Field number for the "baseRepValue1" field.</summary>
    public const int BaseRepValue1FieldNumber = 11;
    private int baseRepValue1_;
    /// <summary>
    /// Base reputation value 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaseRepValue1 {
      get { return baseRepValue1_; }
      set {
        baseRepValue1_ = value;
      }
    }

    /// <summary>Field number for the "baseRepValue2" field.</summary>
    public const int BaseRepValue2FieldNumber = 12;
    private int baseRepValue2_;
    /// <summary>
    /// Base reputation value 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaseRepValue2 {
      get { return baseRepValue2_; }
      set {
        baseRepValue2_ = value;
      }
    }

    /// <summary>Field number for the "baseRepValue3" field.</summary>
    public const int BaseRepValue3FieldNumber = 13;
    private int baseRepValue3_;
    /// <summary>
    /// Base reputation value 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaseRepValue3 {
      get { return baseRepValue3_; }
      set {
        baseRepValue3_ = value;
      }
    }

    /// <summary>Field number for the "baseRepValue4" field.</summary>
    public const int BaseRepValue4FieldNumber = 14;
    private int baseRepValue4_;
    /// <summary>
    /// Base reputation value 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaseRepValue4 {
      get { return baseRepValue4_; }
      set {
        baseRepValue4_ = value;
      }
    }

    /// <summary>Field number for the "reputationFlags1" field.</summary>
    public const int ReputationFlags1FieldNumber = 15;
    private uint reputationFlags1_;
    /// <summary>
    /// Reputation flags 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReputationFlags1 {
      get { return reputationFlags1_; }
      set {
        reputationFlags1_ = value;
      }
    }

    /// <summary>Field number for the "reputationFlags2" field.</summary>
    public const int ReputationFlags2FieldNumber = 16;
    private uint reputationFlags2_;
    /// <summary>
    /// Reputation flags 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReputationFlags2 {
      get { return reputationFlags2_; }
      set {
        reputationFlags2_ = value;
      }
    }

    /// <summary>Field number for the "reputationFlags3" field.</summary>
    public const int ReputationFlags3FieldNumber = 17;
    private uint reputationFlags3_;
    /// <summary>
    /// Reputation flags 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReputationFlags3 {
      get { return reputationFlags3_; }
      set {
        reputationFlags3_ = value;
      }
    }

    /// <summary>Field number for the "reputationFlags4" field.</summary>
    public const int ReputationFlags4FieldNumber = 18;
    private uint reputationFlags4_;
    /// <summary>
    /// Reputation flags 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReputationFlags4 {
      get { return reputationFlags4_; }
      set {
        reputationFlags4_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 19;
    private uint team_;
    /// <summary>
    /// Team ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "name1" field.</summary>
    public const int Name1FieldNumber = 20;
    private string name1_ = "";
    /// <summary>
    /// Faction name in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name1 {
      get { return name1_; }
      set {
        name1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name2" field.</summary>
    public const int Name2FieldNumber = 21;
    private string name2_ = "";
    /// <summary>
    /// Faction name in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name2 {
      get { return name2_; }
      set {
        name2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name3" field.</summary>
    public const int Name3FieldNumber = 22;
    private string name3_ = "";
    /// <summary>
    /// Faction name in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name3 {
      get { return name3_; }
      set {
        name3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name4" field.</summary>
    public const int Name4FieldNumber = 23;
    private string name4_ = "";
    /// <summary>
    /// Faction name in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name4 {
      get { return name4_; }
      set {
        name4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name5" field.</summary>
    public const int Name5FieldNumber = 24;
    private string name5_ = "";
    /// <summary>
    /// Faction name in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name5 {
      get { return name5_; }
      set {
        name5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name6" field.</summary>
    public const int Name6FieldNumber = 25;
    private string name6_ = "";
    /// <summary>
    /// Faction name in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name6 {
      get { return name6_; }
      set {
        name6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name7" field.</summary>
    public const int Name7FieldNumber = 26;
    private string name7_ = "";
    /// <summary>
    /// Faction name in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name7 {
      get { return name7_; }
      set {
        name7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name8" field.</summary>
    public const int Name8FieldNumber = 27;
    private string name8_ = "";
    /// <summary>
    /// Faction name in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name8 {
      get { return name8_; }
      set {
        name8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 28;
    private string description1_ = "";
    /// <summary>
    /// Faction description in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 29;
    private string description2_ = "";
    /// <summary>
    /// Faction description in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description3" field.</summary>
    public const int Description3FieldNumber = 30;
    private string description3_ = "";
    /// <summary>
    /// Faction description in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description3 {
      get { return description3_; }
      set {
        description3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description4" field.</summary>
    public const int Description4FieldNumber = 31;
    private string description4_ = "";
    /// <summary>
    /// Faction description in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description4 {
      get { return description4_; }
      set {
        description4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description5" field.</summary>
    public const int Description5FieldNumber = 32;
    private string description5_ = "";
    /// <summary>
    /// Faction description in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description5 {
      get { return description5_; }
      set {
        description5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description6" field.</summary>
    public const int Description6FieldNumber = 33;
    private string description6_ = "";
    /// <summary>
    /// Faction description in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description6 {
      get { return description6_; }
      set {
        description6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description7" field.</summary>
    public const int Description7FieldNumber = 34;
    private string description7_ = "";
    /// <summary>
    /// Faction description in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description7 {
      get { return description7_; }
      set {
        description7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description8" field.</summary>
    public const int Description8FieldNumber = 35;
    private string description8_ = "";
    /// <summary>
    /// Faction description in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description8 {
      get { return description8_; }
      set {
        description8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Faction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Faction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ReputationListID != other.ReputationListID) return false;
      if (BaseRepRaceMask1 != other.BaseRepRaceMask1) return false;
      if (BaseRepRaceMask2 != other.BaseRepRaceMask2) return false;
      if (BaseRepRaceMask3 != other.BaseRepRaceMask3) return false;
      if (BaseRepRaceMask4 != other.BaseRepRaceMask4) return false;
      if (BaseRepClassMask1 != other.BaseRepClassMask1) return false;
      if (BaseRepClassMask2 != other.BaseRepClassMask2) return false;
      if (BaseRepClassMask3 != other.BaseRepClassMask3) return false;
      if (BaseRepClassMask4 != other.BaseRepClassMask4) return false;
      if (BaseRepValue1 != other.BaseRepValue1) return false;
      if (BaseRepValue2 != other.BaseRepValue2) return false;
      if (BaseRepValue3 != other.BaseRepValue3) return false;
      if (BaseRepValue4 != other.BaseRepValue4) return false;
      if (ReputationFlags1 != other.ReputationFlags1) return false;
      if (ReputationFlags2 != other.ReputationFlags2) return false;
      if (ReputationFlags3 != other.ReputationFlags3) return false;
      if (ReputationFlags4 != other.ReputationFlags4) return false;
      if (Team != other.Team) return false;
      if (Name1 != other.Name1) return false;
      if (Name2 != other.Name2) return false;
      if (Name3 != other.Name3) return false;
      if (Name4 != other.Name4) return false;
      if (Name5 != other.Name5) return false;
      if (Name6 != other.Name6) return false;
      if (Name7 != other.Name7) return false;
      if (Name8 != other.Name8) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      if (Description3 != other.Description3) return false;
      if (Description4 != other.Description4) return false;
      if (Description5 != other.Description5) return false;
      if (Description6 != other.Description6) return false;
      if (Description7 != other.Description7) return false;
      if (Description8 != other.Description8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ReputationListID != 0) hash ^= ReputationListID.GetHashCode();
      if (BaseRepRaceMask1 != 0) hash ^= BaseRepRaceMask1.GetHashCode();
      if (BaseRepRaceMask2 != 0) hash ^= BaseRepRaceMask2.GetHashCode();
      if (BaseRepRaceMask3 != 0) hash ^= BaseRepRaceMask3.GetHashCode();
      if (BaseRepRaceMask4 != 0) hash ^= BaseRepRaceMask4.GetHashCode();
      if (BaseRepClassMask1 != 0) hash ^= BaseRepClassMask1.GetHashCode();
      if (BaseRepClassMask2 != 0) hash ^= BaseRepClassMask2.GetHashCode();
      if (BaseRepClassMask3 != 0) hash ^= BaseRepClassMask3.GetHashCode();
      if (BaseRepClassMask4 != 0) hash ^= BaseRepClassMask4.GetHashCode();
      if (BaseRepValue1 != 0) hash ^= BaseRepValue1.GetHashCode();
      if (BaseRepValue2 != 0) hash ^= BaseRepValue2.GetHashCode();
      if (BaseRepValue3 != 0) hash ^= BaseRepValue3.GetHashCode();
      if (BaseRepValue4 != 0) hash ^= BaseRepValue4.GetHashCode();
      if (ReputationFlags1 != 0) hash ^= ReputationFlags1.GetHashCode();
      if (ReputationFlags2 != 0) hash ^= ReputationFlags2.GetHashCode();
      if (ReputationFlags3 != 0) hash ^= ReputationFlags3.GetHashCode();
      if (ReputationFlags4 != 0) hash ^= ReputationFlags4.GetHashCode();
      if (Team != 0) hash ^= Team.GetHashCode();
      if (Name1.Length != 0) hash ^= Name1.GetHashCode();
      if (Name2.Length != 0) hash ^= Name2.GetHashCode();
      if (Name3.Length != 0) hash ^= Name3.GetHashCode();
      if (Name4.Length != 0) hash ^= Name4.GetHashCode();
      if (Name5.Length != 0) hash ^= Name5.GetHashCode();
      if (Name6.Length != 0) hash ^= Name6.GetHashCode();
      if (Name7.Length != 0) hash ^= Name7.GetHashCode();
      if (Name8.Length != 0) hash ^= Name8.GetHashCode();
      if (Description1.Length != 0) hash ^= Description1.GetHashCode();
      if (Description2.Length != 0) hash ^= Description2.GetHashCode();
      if (Description3.Length != 0) hash ^= Description3.GetHashCode();
      if (Description4.Length != 0) hash ^= Description4.GetHashCode();
      if (Description5.Length != 0) hash ^= Description5.GetHashCode();
      if (Description6.Length != 0) hash ^= Description6.GetHashCode();
      if (Description7.Length != 0) hash ^= Description7.GetHashCode();
      if (Description8.Length != 0) hash ^= Description8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ReputationListID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReputationListID);
      }
      if (BaseRepRaceMask1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BaseRepRaceMask1);
      }
      if (BaseRepRaceMask2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BaseRepRaceMask2);
      }
      if (BaseRepRaceMask3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(BaseRepRaceMask3);
      }
      if (BaseRepRaceMask4 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BaseRepRaceMask4);
      }
      if (BaseRepClassMask1 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(BaseRepClassMask1);
      }
      if (BaseRepClassMask2 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BaseRepClassMask2);
      }
      if (BaseRepClassMask3 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BaseRepClassMask3);
      }
      if (BaseRepClassMask4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BaseRepClassMask4);
      }
      if (BaseRepValue1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BaseRepValue1);
      }
      if (BaseRepValue2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BaseRepValue2);
      }
      if (BaseRepValue3 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BaseRepValue3);
      }
      if (BaseRepValue4 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BaseRepValue4);
      }
      if (ReputationFlags1 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ReputationFlags1);
      }
      if (ReputationFlags2 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(ReputationFlags2);
      }
      if (ReputationFlags3 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ReputationFlags3);
      }
      if (ReputationFlags4 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(ReputationFlags4);
      }
      if (Team != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Team);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Name1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Name2);
      }
      if (Name3.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Name3);
      }
      if (Name4.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Name4);
      }
      if (Name5.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Name5);
      }
      if (Name6.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Name6);
      }
      if (Name7.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Name7);
      }
      if (Name8.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(Name8);
      }
      if (Description1.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Description1);
      }
      if (Description2.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(Description2);
      }
      if (Description3.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(Description3);
      }
      if (Description4.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Description4);
      }
      if (Description5.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(Description5);
      }
      if (Description6.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(Description6);
      }
      if (Description7.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(Description7);
      }
      if (Description8.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(Description8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ReputationListID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReputationListID);
      }
      if (BaseRepRaceMask1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(BaseRepRaceMask1);
      }
      if (BaseRepRaceMask2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BaseRepRaceMask2);
      }
      if (BaseRepRaceMask3 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(BaseRepRaceMask3);
      }
      if (BaseRepRaceMask4 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BaseRepRaceMask4);
      }
      if (BaseRepClassMask1 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(BaseRepClassMask1);
      }
      if (BaseRepClassMask2 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BaseRepClassMask2);
      }
      if (BaseRepClassMask3 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BaseRepClassMask3);
      }
      if (BaseRepClassMask4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BaseRepClassMask4);
      }
      if (BaseRepValue1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BaseRepValue1);
      }
      if (BaseRepValue2 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BaseRepValue2);
      }
      if (BaseRepValue3 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BaseRepValue3);
      }
      if (BaseRepValue4 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BaseRepValue4);
      }
      if (ReputationFlags1 != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ReputationFlags1);
      }
      if (ReputationFlags2 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(ReputationFlags2);
      }
      if (ReputationFlags3 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(ReputationFlags3);
      }
      if (ReputationFlags4 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(ReputationFlags4);
      }
      if (Team != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Team);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Name1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Name2);
      }
      if (Name3.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Name3);
      }
      if (Name4.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Name4);
      }
      if (Name5.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Name5);
      }
      if (Name6.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Name6);
      }
      if (Name7.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(Name7);
      }
      if (Name8.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(Name8);
      }
      if (Description1.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Description1);
      }
      if (Description2.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(Description2);
      }
      if (Description3.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(Description3);
      }
      if (Description4.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Description4);
      }
      if (Description5.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(Description5);
      }
      if (Description6.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(Description6);
      }
      if (Description7.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(Description7);
      }
      if (Description8.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(Description8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ReputationListID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReputationListID);
      }
      if (BaseRepRaceMask1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepRaceMask1);
      }
      if (BaseRepRaceMask2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepRaceMask2);
      }
      if (BaseRepRaceMask3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepRaceMask3);
      }
      if (BaseRepRaceMask4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepRaceMask4);
      }
      if (BaseRepClassMask1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepClassMask1);
      }
      if (BaseRepClassMask2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepClassMask2);
      }
      if (BaseRepClassMask3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepClassMask3);
      }
      if (BaseRepClassMask4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseRepClassMask4);
      }
      if (BaseRepValue1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRepValue1);
      }
      if (BaseRepValue2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRepValue2);
      }
      if (BaseRepValue3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRepValue3);
      }
      if (BaseRepValue4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRepValue4);
      }
      if (ReputationFlags1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReputationFlags1);
      }
      if (ReputationFlags2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReputationFlags2);
      }
      if (ReputationFlags3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReputationFlags3);
      }
      if (ReputationFlags4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReputationFlags4);
      }
      if (Team != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Team);
      }
      if (Name1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name1);
      }
      if (Name2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name2);
      }
      if (Name3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name3);
      }
      if (Name4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name4);
      }
      if (Name5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name5);
      }
      if (Name6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name6);
      }
      if (Name7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name7);
      }
      if (Name8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name8);
      }
      if (Description1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description1);
      }
      if (Description2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description2);
      }
      if (Description3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description3);
      }
      if (Description4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description4);
      }
      if (Description5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description5);
      }
      if (Description6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description6);
      }
      if (Description7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description7);
      }
      if (Description8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Faction other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ReputationListID != 0) {
        ReputationListID = other.ReputationListID;
      }
      if (other.BaseRepRaceMask1 != 0) {
        BaseRepRaceMask1 = other.BaseRepRaceMask1;
      }
      if (other.BaseRepRaceMask2 != 0) {
        BaseRepRaceMask2 = other.BaseRepRaceMask2;
      }
      if (other.BaseRepRaceMask3 != 0) {
        BaseRepRaceMask3 = other.BaseRepRaceMask3;
      }
      if (other.BaseRepRaceMask4 != 0) {
        BaseRepRaceMask4 = other.BaseRepRaceMask4;
      }
      if (other.BaseRepClassMask1 != 0) {
        BaseRepClassMask1 = other.BaseRepClassMask1;
      }
      if (other.BaseRepClassMask2 != 0) {
        BaseRepClassMask2 = other.BaseRepClassMask2;
      }
      if (other.BaseRepClassMask3 != 0) {
        BaseRepClassMask3 = other.BaseRepClassMask3;
      }
      if (other.BaseRepClassMask4 != 0) {
        BaseRepClassMask4 = other.BaseRepClassMask4;
      }
      if (other.BaseRepValue1 != 0) {
        BaseRepValue1 = other.BaseRepValue1;
      }
      if (other.BaseRepValue2 != 0) {
        BaseRepValue2 = other.BaseRepValue2;
      }
      if (other.BaseRepValue3 != 0) {
        BaseRepValue3 = other.BaseRepValue3;
      }
      if (other.BaseRepValue4 != 0) {
        BaseRepValue4 = other.BaseRepValue4;
      }
      if (other.ReputationFlags1 != 0) {
        ReputationFlags1 = other.ReputationFlags1;
      }
      if (other.ReputationFlags2 != 0) {
        ReputationFlags2 = other.ReputationFlags2;
      }
      if (other.ReputationFlags3 != 0) {
        ReputationFlags3 = other.ReputationFlags3;
      }
      if (other.ReputationFlags4 != 0) {
        ReputationFlags4 = other.ReputationFlags4;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
      if (other.Name1.Length != 0) {
        Name1 = other.Name1;
      }
      if (other.Name2.Length != 0) {
        Name2 = other.Name2;
      }
      if (other.Name3.Length != 0) {
        Name3 = other.Name3;
      }
      if (other.Name4.Length != 0) {
        Name4 = other.Name4;
      }
      if (other.Name5.Length != 0) {
        Name5 = other.Name5;
      }
      if (other.Name6.Length != 0) {
        Name6 = other.Name6;
      }
      if (other.Name7.Length != 0) {
        Name7 = other.Name7;
      }
      if (other.Name8.Length != 0) {
        Name8 = other.Name8;
      }
      if (other.Description1.Length != 0) {
        Description1 = other.Description1;
      }
      if (other.Description2.Length != 0) {
        Description2 = other.Description2;
      }
      if (other.Description3.Length != 0) {
        Description3 = other.Description3;
      }
      if (other.Description4.Length != 0) {
        Description4 = other.Description4;
      }
      if (other.Description5.Length != 0) {
        Description5 = other.Description5;
      }
      if (other.Description6.Length != 0) {
        Description6 = other.Description6;
      }
      if (other.Description7.Length != 0) {
        Description7 = other.Description7;
      }
      if (other.Description8.Length != 0) {
        Description8 = other.Description8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ReputationListID = input.ReadInt32();
            break;
          }
          case 24: {
            BaseRepRaceMask1 = input.ReadUInt32();
            break;
          }
          case 32: {
            BaseRepRaceMask2 = input.ReadUInt32();
            break;
          }
          case 40: {
            BaseRepRaceMask3 = input.ReadUInt32();
            break;
          }
          case 48: {
            BaseRepRaceMask4 = input.ReadUInt32();
            break;
          }
          case 56: {
            BaseRepClassMask1 = input.ReadUInt32();
            break;
          }
          case 64: {
            BaseRepClassMask2 = input.ReadUInt32();
            break;
          }
          case 72: {
            BaseRepClassMask3 = input.ReadUInt32();
            break;
          }
          case 80: {
            BaseRepClassMask4 = input.ReadUInt32();
            break;
          }
          case 88: {
            BaseRepValue1 = input.ReadInt32();
            break;
          }
          case 96: {
            BaseRepValue2 = input.ReadInt32();
            break;
          }
          case 104: {
            BaseRepValue3 = input.ReadInt32();
            break;
          }
          case 112: {
            BaseRepValue4 = input.ReadInt32();
            break;
          }
          case 120: {
            ReputationFlags1 = input.ReadUInt32();
            break;
          }
          case 128: {
            ReputationFlags2 = input.ReadUInt32();
            break;
          }
          case 136: {
            ReputationFlags3 = input.ReadUInt32();
            break;
          }
          case 144: {
            ReputationFlags4 = input.ReadUInt32();
            break;
          }
          case 152: {
            Team = input.ReadUInt32();
            break;
          }
          case 162: {
            Name1 = input.ReadString();
            break;
          }
          case 170: {
            Name2 = input.ReadString();
            break;
          }
          case 178: {
            Name3 = input.ReadString();
            break;
          }
          case 186: {
            Name4 = input.ReadString();
            break;
          }
          case 194: {
            Name5 = input.ReadString();
            break;
          }
          case 202: {
            Name6 = input.ReadString();
            break;
          }
          case 210: {
            Name7 = input.ReadString();
            break;
          }
          case 218: {
            Name8 = input.ReadString();
            break;
          }
          case 226: {
            Description1 = input.ReadString();
            break;
          }
          case 234: {
            Description2 = input.ReadString();
            break;
          }
          case 242: {
            Description3 = input.ReadString();
            break;
          }
          case 250: {
            Description4 = input.ReadString();
            break;
          }
          case 258: {
            Description5 = input.ReadString();
            break;
          }
          case 266: {
            Description6 = input.ReadString();
            break;
          }
          case 274: {
            Description7 = input.ReadString();
            break;
          }
          case 282: {
            Description8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ReputationListID = input.ReadInt32();
            break;
          }
          case 24: {
            BaseRepRaceMask1 = input.ReadUInt32();
            break;
          }
          case 32: {
            BaseRepRaceMask2 = input.ReadUInt32();
            break;
          }
          case 40: {
            BaseRepRaceMask3 = input.ReadUInt32();
            break;
          }
          case 48: {
            BaseRepRaceMask4 = input.ReadUInt32();
            break;
          }
          case 56: {
            BaseRepClassMask1 = input.ReadUInt32();
            break;
          }
          case 64: {
            BaseRepClassMask2 = input.ReadUInt32();
            break;
          }
          case 72: {
            BaseRepClassMask3 = input.ReadUInt32();
            break;
          }
          case 80: {
            BaseRepClassMask4 = input.ReadUInt32();
            break;
          }
          case 88: {
            BaseRepValue1 = input.ReadInt32();
            break;
          }
          case 96: {
            BaseRepValue2 = input.ReadInt32();
            break;
          }
          case 104: {
            BaseRepValue3 = input.ReadInt32();
            break;
          }
          case 112: {
            BaseRepValue4 = input.ReadInt32();
            break;
          }
          case 120: {
            ReputationFlags1 = input.ReadUInt32();
            break;
          }
          case 128: {
            ReputationFlags2 = input.ReadUInt32();
            break;
          }
          case 136: {
            ReputationFlags3 = input.ReadUInt32();
            break;
          }
          case 144: {
            ReputationFlags4 = input.ReadUInt32();
            break;
          }
          case 152: {
            Team = input.ReadUInt32();
            break;
          }
          case 162: {
            Name1 = input.ReadString();
            break;
          }
          case 170: {
            Name2 = input.ReadString();
            break;
          }
          case 178: {
            Name3 = input.ReadString();
            break;
          }
          case 186: {
            Name4 = input.ReadString();
            break;
          }
          case 194: {
            Name5 = input.ReadString();
            break;
          }
          case 202: {
            Name6 = input.ReadString();
            break;
          }
          case 210: {
            Name7 = input.ReadString();
            break;
          }
          case 218: {
            Name8 = input.ReadString();
            break;
          }
          case 226: {
            Description1 = input.ReadString();
            break;
          }
          case 234: {
            Description2 = input.ReadString();
            break;
          }
          case 242: {
            Description3 = input.ReadString();
            break;
          }
          case 250: {
            Description4 = input.ReadString();
            break;
          }
          case 258: {
            Description5 = input.ReadString();
            break;
          }
          case 266: {
            Description6 = input.ReadString();
            break;
          }
          case 274: {
            Description7 = input.ReadString();
            break;
          }
          case 282: {
            Description8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FactionTemplate : pb::IMessage<FactionTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FactionTemplate> _parser = new pb::MessageParser<FactionTemplate>(() => new FactionTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FactionTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionTemplate(FactionTemplate other) : this() {
      id_ = other.id_;
      factionId_ = other.factionId_;
      factionFlags_ = other.factionFlags_;
      ourMask_ = other.ourMask_;
      friendlyMask_ = other.friendlyMask_;
      hostileMask_ = other.hostileMask_;
      enemyFaction1_ = other.enemyFaction1_;
      enemyFaction2_ = other.enemyFaction2_;
      enemyFaction3_ = other.enemyFaction3_;
      enemyFaction4_ = other.enemyFaction4_;
      friendFaction1_ = other.friendFaction1_;
      friendFaction2_ = other.friendFaction2_;
      friendFaction3_ = other.friendFaction3_;
      friendFaction4_ = other.friendFaction4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactionTemplate Clone() {
      return new FactionTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique ID for faction template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "factionId" field.</summary>
    public const int FactionIdFieldNumber = 2;
    private uint factionId_;
    /// <summary>
    /// Reference to faction ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionId {
      get { return factionId_; }
      set {
        factionId_ = value;
      }
    }

    /// <summary>Field number for the "factionFlags" field.</summary>
    public const int FactionFlagsFieldNumber = 3;
    private uint factionFlags_;
    /// <summary>
    /// Flags for faction properties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionFlags {
      get { return factionFlags_; }
      set {
        factionFlags_ = value;
      }
    }

    /// <summary>Field number for the "ourMask" field.</summary>
    public const int OurMaskFieldNumber = 4;
    private uint ourMask_;
    /// <summary>
    /// Mask representing our faction's stance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OurMask {
      get { return ourMask_; }
      set {
        ourMask_ = value;
      }
    }

    /// <summary>Field number for the "friendlyMask" field.</summary>
    public const int FriendlyMaskFieldNumber = 5;
    private uint friendlyMask_;
    /// <summary>
    /// Mask representing friendly factions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendlyMask {
      get { return friendlyMask_; }
      set {
        friendlyMask_ = value;
      }
    }

    /// <summary>Field number for the "hostileMask" field.</summary>
    public const int HostileMaskFieldNumber = 6;
    private uint hostileMask_;
    /// <summary>
    /// Mask representing hostile factions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HostileMask {
      get { return hostileMask_; }
      set {
        hostileMask_ = value;
      }
    }

    /// <summary>Field number for the "enemyFaction1" field.</summary>
    public const int EnemyFaction1FieldNumber = 7;
    private uint enemyFaction1_;
    /// <summary>
    /// Enemy faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnemyFaction1 {
      get { return enemyFaction1_; }
      set {
        enemyFaction1_ = value;
      }
    }

    /// <summary>Field number for the "enemyFaction2" field.</summary>
    public const int EnemyFaction2FieldNumber = 8;
    private uint enemyFaction2_;
    /// <summary>
    /// Enemy faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnemyFaction2 {
      get { return enemyFaction2_; }
      set {
        enemyFaction2_ = value;
      }
    }

    /// <summary>Field number for the "enemyFaction3" field.</summary>
    public const int EnemyFaction3FieldNumber = 9;
    private uint enemyFaction3_;
    /// <summary>
    /// Enemy faction 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnemyFaction3 {
      get { return enemyFaction3_; }
      set {
        enemyFaction3_ = value;
      }
    }

    /// <summary>Field number for the "enemyFaction4" field.</summary>
    public const int EnemyFaction4FieldNumber = 10;
    private uint enemyFaction4_;
    /// <summary>
    /// Enemy faction 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnemyFaction4 {
      get { return enemyFaction4_; }
      set {
        enemyFaction4_ = value;
      }
    }

    /// <summary>Field number for the "friendFaction1" field.</summary>
    public const int FriendFaction1FieldNumber = 11;
    private uint friendFaction1_;
    /// <summary>
    /// Friendly faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendFaction1 {
      get { return friendFaction1_; }
      set {
        friendFaction1_ = value;
      }
    }

    /// <summary>Field number for the "friendFaction2" field.</summary>
    public const int FriendFaction2FieldNumber = 12;
    private uint friendFaction2_;
    /// <summary>
    /// Friendly faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendFaction2 {
      get { return friendFaction2_; }
      set {
        friendFaction2_ = value;
      }
    }

    /// <summary>Field number for the "friendFaction3" field.</summary>
    public const int FriendFaction3FieldNumber = 13;
    private uint friendFaction3_;
    /// <summary>
    /// Friendly faction 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendFaction3 {
      get { return friendFaction3_; }
      set {
        friendFaction3_ = value;
      }
    }

    /// <summary>Field number for the "friendFaction4" field.</summary>
    public const int FriendFaction4FieldNumber = 14;
    private uint friendFaction4_;
    /// <summary>
    /// Friendly faction 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FriendFaction4 {
      get { return friendFaction4_; }
      set {
        friendFaction4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FactionTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FactionTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FactionId != other.FactionId) return false;
      if (FactionFlags != other.FactionFlags) return false;
      if (OurMask != other.OurMask) return false;
      if (FriendlyMask != other.FriendlyMask) return false;
      if (HostileMask != other.HostileMask) return false;
      if (EnemyFaction1 != other.EnemyFaction1) return false;
      if (EnemyFaction2 != other.EnemyFaction2) return false;
      if (EnemyFaction3 != other.EnemyFaction3) return false;
      if (EnemyFaction4 != other.EnemyFaction4) return false;
      if (FriendFaction1 != other.FriendFaction1) return false;
      if (FriendFaction2 != other.FriendFaction2) return false;
      if (FriendFaction3 != other.FriendFaction3) return false;
      if (FriendFaction4 != other.FriendFaction4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FactionId != 0) hash ^= FactionId.GetHashCode();
      if (FactionFlags != 0) hash ^= FactionFlags.GetHashCode();
      if (OurMask != 0) hash ^= OurMask.GetHashCode();
      if (FriendlyMask != 0) hash ^= FriendlyMask.GetHashCode();
      if (HostileMask != 0) hash ^= HostileMask.GetHashCode();
      if (EnemyFaction1 != 0) hash ^= EnemyFaction1.GetHashCode();
      if (EnemyFaction2 != 0) hash ^= EnemyFaction2.GetHashCode();
      if (EnemyFaction3 != 0) hash ^= EnemyFaction3.GetHashCode();
      if (EnemyFaction4 != 0) hash ^= EnemyFaction4.GetHashCode();
      if (FriendFaction1 != 0) hash ^= FriendFaction1.GetHashCode();
      if (FriendFaction2 != 0) hash ^= FriendFaction2.GetHashCode();
      if (FriendFaction3 != 0) hash ^= FriendFaction3.GetHashCode();
      if (FriendFaction4 != 0) hash ^= FriendFaction4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (FactionId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FactionId);
      }
      if (FactionFlags != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FactionFlags);
      }
      if (OurMask != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OurMask);
      }
      if (FriendlyMask != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FriendlyMask);
      }
      if (HostileMask != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(HostileMask);
      }
      if (EnemyFaction1 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EnemyFaction1);
      }
      if (EnemyFaction2 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(EnemyFaction2);
      }
      if (EnemyFaction3 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EnemyFaction3);
      }
      if (EnemyFaction4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(EnemyFaction4);
      }
      if (FriendFaction1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(FriendFaction1);
      }
      if (FriendFaction2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(FriendFaction2);
      }
      if (FriendFaction3 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(FriendFaction3);
      }
      if (FriendFaction4 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(FriendFaction4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (FactionId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FactionId);
      }
      if (FactionFlags != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FactionFlags);
      }
      if (OurMask != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OurMask);
      }
      if (FriendlyMask != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FriendlyMask);
      }
      if (HostileMask != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(HostileMask);
      }
      if (EnemyFaction1 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EnemyFaction1);
      }
      if (EnemyFaction2 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(EnemyFaction2);
      }
      if (EnemyFaction3 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(EnemyFaction3);
      }
      if (EnemyFaction4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(EnemyFaction4);
      }
      if (FriendFaction1 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(FriendFaction1);
      }
      if (FriendFaction2 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(FriendFaction2);
      }
      if (FriendFaction3 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(FriendFaction3);
      }
      if (FriendFaction4 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(FriendFaction4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (FactionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FactionId);
      }
      if (FactionFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FactionFlags);
      }
      if (OurMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OurMask);
      }
      if (FriendlyMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendlyMask);
      }
      if (HostileMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostileMask);
      }
      if (EnemyFaction1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyFaction1);
      }
      if (EnemyFaction2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyFaction2);
      }
      if (EnemyFaction3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyFaction3);
      }
      if (EnemyFaction4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnemyFaction4);
      }
      if (FriendFaction1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendFaction1);
      }
      if (FriendFaction2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendFaction2);
      }
      if (FriendFaction3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendFaction3);
      }
      if (FriendFaction4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendFaction4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FactionTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FactionId != 0) {
        FactionId = other.FactionId;
      }
      if (other.FactionFlags != 0) {
        FactionFlags = other.FactionFlags;
      }
      if (other.OurMask != 0) {
        OurMask = other.OurMask;
      }
      if (other.FriendlyMask != 0) {
        FriendlyMask = other.FriendlyMask;
      }
      if (other.HostileMask != 0) {
        HostileMask = other.HostileMask;
      }
      if (other.EnemyFaction1 != 0) {
        EnemyFaction1 = other.EnemyFaction1;
      }
      if (other.EnemyFaction2 != 0) {
        EnemyFaction2 = other.EnemyFaction2;
      }
      if (other.EnemyFaction3 != 0) {
        EnemyFaction3 = other.EnemyFaction3;
      }
      if (other.EnemyFaction4 != 0) {
        EnemyFaction4 = other.EnemyFaction4;
      }
      if (other.FriendFaction1 != 0) {
        FriendFaction1 = other.FriendFaction1;
      }
      if (other.FriendFaction2 != 0) {
        FriendFaction2 = other.FriendFaction2;
      }
      if (other.FriendFaction3 != 0) {
        FriendFaction3 = other.FriendFaction3;
      }
      if (other.FriendFaction4 != 0) {
        FriendFaction4 = other.FriendFaction4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            FactionId = input.ReadUInt32();
            break;
          }
          case 24: {
            FactionFlags = input.ReadUInt32();
            break;
          }
          case 32: {
            OurMask = input.ReadUInt32();
            break;
          }
          case 40: {
            FriendlyMask = input.ReadUInt32();
            break;
          }
          case 48: {
            HostileMask = input.ReadUInt32();
            break;
          }
          case 56: {
            EnemyFaction1 = input.ReadUInt32();
            break;
          }
          case 64: {
            EnemyFaction2 = input.ReadUInt32();
            break;
          }
          case 72: {
            EnemyFaction3 = input.ReadUInt32();
            break;
          }
          case 80: {
            EnemyFaction4 = input.ReadUInt32();
            break;
          }
          case 88: {
            FriendFaction1 = input.ReadUInt32();
            break;
          }
          case 96: {
            FriendFaction2 = input.ReadUInt32();
            break;
          }
          case 104: {
            FriendFaction3 = input.ReadUInt32();
            break;
          }
          case 112: {
            FriendFaction4 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            FactionId = input.ReadUInt32();
            break;
          }
          case 24: {
            FactionFlags = input.ReadUInt32();
            break;
          }
          case 32: {
            OurMask = input.ReadUInt32();
            break;
          }
          case 40: {
            FriendlyMask = input.ReadUInt32();
            break;
          }
          case 48: {
            HostileMask = input.ReadUInt32();
            break;
          }
          case 56: {
            EnemyFaction1 = input.ReadUInt32();
            break;
          }
          case 64: {
            EnemyFaction2 = input.ReadUInt32();
            break;
          }
          case 72: {
            EnemyFaction3 = input.ReadUInt32();
            break;
          }
          case 80: {
            EnemyFaction4 = input.ReadUInt32();
            break;
          }
          case 88: {
            FriendFaction1 = input.ReadUInt32();
            break;
          }
          case 96: {
            FriendFaction2 = input.ReadUInt32();
            break;
          }
          case 104: {
            FriendFaction3 = input.ReadUInt32();
            break;
          }
          case 112: {
            FriendFaction4 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FishingLootTemplate : pb::IMessage<FishingLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishingLootTemplate> _parser = new pb::MessageParser<FishingLootTemplate>(() => new FishingLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FishingLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishingLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishingLootTemplate(FishingLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupId_ = other.groupId_;
      minCountOrRef_ = other.minCountOrRef_;
      maxCount_ = other.maxCount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FishingLootTemplate Clone() {
      return new FishingLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID, 0 is for junk loot on fishing fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chanceOrQuestChance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Loot drop chance or quest-specific drop chance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 4;
    private uint groupId_;
    /// <summary>
    /// Group ID for loot grouping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "minCountOrRef" field.</summary>
    public const int MinCountOrRefFieldNumber = 5;
    private uint minCountOrRef_;
    /// <summary>
    /// Minimum count of items or reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinCountOrRef {
      get { return minCountOrRef_; }
      set {
        minCountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 6;
    private uint maxCount_;
    /// <summary>
    /// Maximum count of items
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "conditionId" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patchMin" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patchMax" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FishingLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FishingLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (GroupId != other.GroupId) return false;
      if (MinCountOrRef != other.MinCountOrRef) return false;
      if (MaxCount != other.MaxCount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (MinCountOrRef != 0) hash ^= MinCountOrRef.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (MinCountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinCountOrRef);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FishingLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.MinCountOrRef != 0) {
        MinCountOrRef = other.MinCountOrRef;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ForbiddenItem : pb::IMessage<ForbiddenItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ForbiddenItem> _parser = new pb::MessageParser<ForbiddenItem>(() => new ForbiddenItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ForbiddenItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForbiddenItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForbiddenItem(ForbiddenItem other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      afterOrBefore_ = other.afterOrBefore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForbiddenItem Clone() {
      return new ForbiddenItem(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Item entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "afterOrBefore" field.</summary>
    public const int AfterOrBeforeFieldNumber = 3;
    private uint afterOrBefore_;
    /// <summary>
    /// Indicator of restriction (after/before certain patch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AfterOrBefore {
      get { return afterOrBefore_; }
      set {
        afterOrBefore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ForbiddenItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ForbiddenItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (AfterOrBefore != other.AfterOrBefore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (AfterOrBefore != 0) hash ^= AfterOrBefore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (AfterOrBefore != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AfterOrBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (AfterOrBefore != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AfterOrBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (AfterOrBefore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AfterOrBefore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ForbiddenItem other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.AfterOrBefore != 0) {
        AfterOrBefore = other.AfterOrBefore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            AfterOrBefore = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            AfterOrBefore = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObject : pb::IMessage<GameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObject> _parser = new pb::MessageParser<GameObject>(() => new GameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObject(GameObject other) : this() {
      guid_ = other.guid_;
      id_ = other.id_;
      map_ = other.map_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      orientation_ = other.orientation_;
      rotation0_ = other.rotation0_;
      rotation1_ = other.rotation1_;
      rotation2_ = other.rotation2_;
      rotation3_ = other.rotation3_;
      spawntimesecsmin_ = other.spawntimesecsmin_;
      spawntimesecsmax_ = other.spawntimesecsmax_;
      animprogress_ = other.animprogress_;
      state_ = other.state_;
      spawnFlags_ = other.spawnFlags_;
      visibilitymod_ = other.visibilitymod_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObject Clone() {
      return new GameObject(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    /// <summary>
    /// Gameobject Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 3;
    private uint map_;
    /// <summary>
    /// Map Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 4;
    private float positionX_;
    /// <summary>
    /// X position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 5;
    private float positionY_;
    /// <summary>
    /// Y position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 6;
    private float positionZ_;
    /// <summary>
    /// Z position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 7;
    private float orientation_;
    /// <summary>
    /// Orientation of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "rotation0" field.</summary>
    public const int Rotation0FieldNumber = 8;
    private float rotation0_;
    /// <summary>
    /// Rotation component 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rotation0 {
      get { return rotation0_; }
      set {
        rotation0_ = value;
      }
    }

    /// <summary>Field number for the "rotation1" field.</summary>
    public const int Rotation1FieldNumber = 9;
    private float rotation1_;
    /// <summary>
    /// Rotation component 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rotation1 {
      get { return rotation1_; }
      set {
        rotation1_ = value;
      }
    }

    /// <summary>Field number for the "rotation2" field.</summary>
    public const int Rotation2FieldNumber = 10;
    private float rotation2_;
    /// <summary>
    /// Rotation component 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rotation2 {
      get { return rotation2_; }
      set {
        rotation2_ = value;
      }
    }

    /// <summary>Field number for the "rotation3" field.</summary>
    public const int Rotation3FieldNumber = 11;
    private float rotation3_;
    /// <summary>
    /// Rotation component 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rotation3 {
      get { return rotation3_; }
      set {
        rotation3_ = value;
      }
    }

    /// <summary>Field number for the "spawntimesecsmin" field.</summary>
    public const int SpawntimesecsminFieldNumber = 12;
    private int spawntimesecsmin_;
    /// <summary>
    /// Minimum spawn time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spawntimesecsmin {
      get { return spawntimesecsmin_; }
      set {
        spawntimesecsmin_ = value;
      }
    }

    /// <summary>Field number for the "spawntimesecsmax" field.</summary>
    public const int SpawntimesecsmaxFieldNumber = 13;
    private int spawntimesecsmax_;
    /// <summary>
    /// Maximum spawn time in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Spawntimesecsmax {
      get { return spawntimesecsmax_; }
      set {
        spawntimesecsmax_ = value;
      }
    }

    /// <summary>Field number for the "animprogress" field.</summary>
    public const int AnimprogressFieldNumber = 14;
    private uint animprogress_;
    /// <summary>
    /// Animation progress (0-255)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Animprogress {
      get { return animprogress_; }
      set {
        animprogress_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 15;
    private uint state_;
    /// <summary>
    /// State of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "spawnFlags" field.</summary>
    public const int SpawnFlagsFieldNumber = 16;
    private uint spawnFlags_;
    /// <summary>
    /// Flags related to spawning
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpawnFlags {
      get { return spawnFlags_; }
      set {
        spawnFlags_ = value;
      }
    }

    /// <summary>Field number for the "visibilitymod" field.</summary>
    public const int VisibilitymodFieldNumber = 17;
    private float visibilitymod_;
    /// <summary>
    /// Modifier for visibility
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Visibilitymod {
      get { return visibilitymod_; }
      set {
        visibilitymod_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 18;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 19;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (Map != other.Map) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation0, other.Rotation0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation1, other.Rotation1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation2, other.Rotation2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation3, other.Rotation3)) return false;
      if (Spawntimesecsmin != other.Spawntimesecsmin) return false;
      if (Spawntimesecsmax != other.Spawntimesecsmax) return false;
      if (Animprogress != other.Animprogress) return false;
      if (State != other.State) return false;
      if (SpawnFlags != other.SpawnFlags) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Visibilitymod, other.Visibilitymod)) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Map != 0) hash ^= Map.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Rotation0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation0);
      if (Rotation1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation1);
      if (Rotation2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation2);
      if (Rotation3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation3);
      if (Spawntimesecsmin != 0) hash ^= Spawntimesecsmin.GetHashCode();
      if (Spawntimesecsmax != 0) hash ^= Spawntimesecsmax.GetHashCode();
      if (Animprogress != 0) hash ^= Animprogress.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (SpawnFlags != 0) hash ^= SpawnFlags.GetHashCode();
      if (Visibilitymod != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Visibilitymod);
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Orientation);
      }
      if (Rotation0 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Rotation0);
      }
      if (Rotation1 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Rotation1);
      }
      if (Rotation2 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Rotation2);
      }
      if (Rotation3 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Rotation3);
      }
      if (Spawntimesecsmin != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Spawntimesecsmax);
      }
      if (Animprogress != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Animprogress);
      }
      if (State != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(State);
      }
      if (SpawnFlags != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Visibilitymod);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Orientation);
      }
      if (Rotation0 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Rotation0);
      }
      if (Rotation1 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Rotation1);
      }
      if (Rotation2 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Rotation2);
      }
      if (Rotation3 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Rotation3);
      }
      if (Spawntimesecsmin != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Spawntimesecsmax);
      }
      if (Animprogress != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Animprogress);
      }
      if (State != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(State);
      }
      if (SpawnFlags != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Visibilitymod);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Rotation0 != 0F) {
        size += 1 + 4;
      }
      if (Rotation1 != 0F) {
        size += 1 + 4;
      }
      if (Rotation2 != 0F) {
        size += 1 + 4;
      }
      if (Rotation3 != 0F) {
        size += 1 + 4;
      }
      if (Spawntimesecsmin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spawntimesecsmin);
      }
      if (Spawntimesecsmax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Spawntimesecsmax);
      }
      if (Animprogress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Animprogress);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (SpawnFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpawnFlags);
      }
      if (Visibilitymod != 0F) {
        size += 2 + 4;
      }
      if (PatchMin != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObject other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Rotation0 != 0F) {
        Rotation0 = other.Rotation0;
      }
      if (other.Rotation1 != 0F) {
        Rotation1 = other.Rotation1;
      }
      if (other.Rotation2 != 0F) {
        Rotation2 = other.Rotation2;
      }
      if (other.Rotation3 != 0F) {
        Rotation3 = other.Rotation3;
      }
      if (other.Spawntimesecsmin != 0) {
        Spawntimesecsmin = other.Spawntimesecsmin;
      }
      if (other.Spawntimesecsmax != 0) {
        Spawntimesecsmax = other.Spawntimesecsmax;
      }
      if (other.Animprogress != 0) {
        Animprogress = other.Animprogress;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.SpawnFlags != 0) {
        SpawnFlags = other.SpawnFlags;
      }
      if (other.Visibilitymod != 0F) {
        Visibilitymod = other.Visibilitymod;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 37: {
            PositionX = input.ReadFloat();
            break;
          }
          case 45: {
            PositionY = input.ReadFloat();
            break;
          }
          case 53: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 61: {
            Orientation = input.ReadFloat();
            break;
          }
          case 69: {
            Rotation0 = input.ReadFloat();
            break;
          }
          case 77: {
            Rotation1 = input.ReadFloat();
            break;
          }
          case 85: {
            Rotation2 = input.ReadFloat();
            break;
          }
          case 93: {
            Rotation3 = input.ReadFloat();
            break;
          }
          case 96: {
            Spawntimesecsmin = input.ReadInt32();
            break;
          }
          case 104: {
            Spawntimesecsmax = input.ReadInt32();
            break;
          }
          case 112: {
            Animprogress = input.ReadUInt32();
            break;
          }
          case 120: {
            State = input.ReadUInt32();
            break;
          }
          case 128: {
            SpawnFlags = input.ReadUInt32();
            break;
          }
          case 141: {
            Visibilitymod = input.ReadFloat();
            break;
          }
          case 144: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 152: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 37: {
            PositionX = input.ReadFloat();
            break;
          }
          case 45: {
            PositionY = input.ReadFloat();
            break;
          }
          case 53: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 61: {
            Orientation = input.ReadFloat();
            break;
          }
          case 69: {
            Rotation0 = input.ReadFloat();
            break;
          }
          case 77: {
            Rotation1 = input.ReadFloat();
            break;
          }
          case 85: {
            Rotation2 = input.ReadFloat();
            break;
          }
          case 93: {
            Rotation3 = input.ReadFloat();
            break;
          }
          case 96: {
            Spawntimesecsmin = input.ReadInt32();
            break;
          }
          case 104: {
            Spawntimesecsmax = input.ReadInt32();
            break;
          }
          case 112: {
            Animprogress = input.ReadUInt32();
            break;
          }
          case 120: {
            State = input.ReadUInt32();
            break;
          }
          case 128: {
            SpawnFlags = input.ReadUInt32();
            break;
          }
          case 141: {
            Visibilitymod = input.ReadFloat();
            break;
          }
          case 144: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 152: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectBattleground : pb::IMessage<GameObjectBattleground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectBattleground> _parser = new pb::MessageParser<GameObjectBattleground>(() => new GameObjectBattleground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectBattleground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectBattleground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectBattleground(GameObjectBattleground other) : this() {
      guid_ = other.guid_;
      event1_ = other.event1_;
      event2_ = other.event2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectBattleground Clone() {
      return new GameObjectBattleground(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// GameObject's GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "event1" field.</summary>
    public const int Event1FieldNumber = 2;
    private uint event1_;
    /// <summary>
    /// Main event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event1 {
      get { return event1_; }
      set {
        event1_ = value;
      }
    }

    /// <summary>Field number for the "event2" field.</summary>
    public const int Event2FieldNumber = 3;
    private uint event2_;
    /// <summary>
    /// Sub event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event2 {
      get { return event2_; }
      set {
        event2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectBattleground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectBattleground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Event1 != other.Event1) return false;
      if (Event2 != other.Event2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Event1 != 0) hash ^= Event1.GetHashCode();
      if (Event2 != 0) hash ^= Event2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event1);
      }
      if (Event2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Event2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Event1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event1);
      }
      if (Event2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectBattleground other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Event1 != 0) {
        Event1 = other.Event1;
      }
      if (other.Event2 != 0) {
        Event2 = other.Event2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Event2 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectInvolvedRelation : pb::IMessage<GameObjectInvolvedRelation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectInvolvedRelation> _parser = new pb::MessageParser<GameObjectInvolvedRelation>(() => new GameObjectInvolvedRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectInvolvedRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectInvolvedRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectInvolvedRelation(GameObjectInvolvedRelation other) : this() {
      id_ = other.id_;
      quest_ = other.quest_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectInvolvedRelation Clone() {
      return new GameObjectInvolvedRelation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// ID of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectInvolvedRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectInvolvedRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quest != other.Quest) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectInvolvedRelation other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectLootTemplate : pb::IMessage<GameObjectLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectLootTemplate> _parser = new pb::MessageParser<GameObjectLootTemplate>(() => new GameObjectLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectLootTemplate(GameObjectLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectLootTemplate Clone() {
      return new GameObjectLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID for the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chance_or_quest_chance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance or Quest-related chance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID for the loot group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincount_or_ref" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private int mincountOrRef_;
    /// <summary>
    /// Minimum count or reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID to trigger the loot drop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectQuestRelation : pb::IMessage<GameObjectQuestRelation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectQuestRelation> _parser = new pb::MessageParser<GameObjectQuestRelation>(() => new GameObjectQuestRelation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectQuestRelation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectQuestRelation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectQuestRelation(GameObjectQuestRelation other) : this() {
      id_ = other.id_;
      quest_ = other.quest_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectQuestRelation Clone() {
      return new GameObjectQuestRelation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// GameObject ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest Identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    /// <summary>
    /// Patch version related to the quest relation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectQuestRelation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectQuestRelation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Quest != other.Quest) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectQuestRelation other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectRequirement : pb::IMessage<GameObjectRequirement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectRequirement> _parser = new pb::MessageParser<GameObjectRequirement>(() => new GameObjectRequirement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectRequirement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectRequirement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectRequirement(GameObjectRequirement other) : this() {
      guid_ = other.guid_;
      reqType_ = other.reqType_;
      reqGuid_ = other.reqGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectRequirement Clone() {
      return new GameObjectRequirement(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier for the GameObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "reqType" field.</summary>
    public const int ReqTypeFieldNumber = 2;
    private uint reqType_;
    /// <summary>
    /// Type of requirement for the GameObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqType {
      get { return reqType_; }
      set {
        reqType_ = value;
      }
    }

    /// <summary>Field number for the "reqGuid" field.</summary>
    public const int ReqGuidFieldNumber = 3;
    private uint reqGuid_;
    /// <summary>
    /// Identifier of the required GameObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqGuid {
      get { return reqGuid_; }
      set {
        reqGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectRequirement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectRequirement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (ReqType != other.ReqType) return false;
      if (ReqGuid != other.ReqGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (ReqType != 0) hash ^= ReqType.GetHashCode();
      if (ReqGuid != 0) hash ^= ReqGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (ReqType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReqType);
      }
      if (ReqGuid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ReqGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (ReqType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReqType);
      }
      if (ReqGuid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ReqGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (ReqType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqType);
      }
      if (ReqGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectRequirement other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.ReqType != 0) {
        ReqType = other.ReqType;
      }
      if (other.ReqGuid != 0) {
        ReqGuid = other.ReqGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            ReqType = input.ReadUInt32();
            break;
          }
          case 24: {
            ReqGuid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            ReqType = input.ReadUInt32();
            break;
          }
          case 24: {
            ReqGuid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectScript : pb::IMessage<GameObjectScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectScript> _parser = new pb::MessageParser<GameObjectScript>(() => new GameObjectScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectScript(GameObjectScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectScript Clone() {
      return new GameObjectScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay in seconds before execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command to be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// Data field 1 for command parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Data field 2 for command parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Data field 3 for command parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Data field 4 for command parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// Parameter for target selection (target 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Parameter for target selection (target 2)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Target type (self, target, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags for additional behavior
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// Additional data integer 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Additional data integer 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Additional data integer 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Additional data integer 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate for positional data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate for positional data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate for positional data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation (rotation angle)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for when the script will run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Optional comments for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameObjectTemplate : pb::IMessage<GameObjectTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectTemplate> _parser = new pb::MessageParser<GameObjectTemplate>(() => new GameObjectTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectTemplate(GameObjectTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      type_ = other.type_;
      displayId_ = other.displayId_;
      name_ = other.name_;
      faction_ = other.faction_;
      flags_ = other.flags_;
      size_ = other.size_;
      data_ = other.data_.Clone();
      mingold_ = other.mingold_;
      maxgold_ = other.maxgold_;
      scriptName_ = other.scriptName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectTemplate Clone() {
      return new GameObjectTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry ID for the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version for the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private uint type_;
    /// <summary>
    /// Type of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "displayId" field.</summary>
    public const int DisplayIdFieldNumber = 4;
    private uint displayId_;
    /// <summary>
    /// Display ID for visual representation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DisplayId {
      get { return displayId_; }
      set {
        displayId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// Name of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 6;
    private uint faction_;
    /// <summary>
    /// Faction ID related to the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 7;
    private uint flags_;
    /// <summary>
    /// Flags indicating specific behaviors or states
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 8;
    private float size_;
    /// <summary>
    /// Size of the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_data_codec
        = pb::FieldCodec.ForUInt32(74);
    private readonly pbc::RepeatedField<uint> data_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// List of data fields (data0 through data23)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "mingold" field.</summary>
    public const int MingoldFieldNumber = 10;
    private uint mingold_;
    /// <summary>
    /// Minimum gold provided
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mingold {
      get { return mingold_; }
      set {
        mingold_ = value;
      }
    }

    /// <summary>Field number for the "maxgold" field.</summary>
    public const int MaxgoldFieldNumber = 11;
    private uint maxgold_;
    /// <summary>
    /// Maximum gold provided
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxgold {
      get { return maxgold_; }
      set {
        maxgold_ = value;
      }
    }

    /// <summary>Field number for the "ScriptName" field.</summary>
    public const int ScriptNameFieldNumber = 12;
    private string scriptName_ = "";
    /// <summary>
    /// Name of the script associated with the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Type != other.Type) return false;
      if (DisplayId != other.DisplayId) return false;
      if (Name != other.Name) return false;
      if (Faction != other.Faction) return false;
      if (Flags != other.Flags) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Size, other.Size)) return false;
      if(!data_.Equals(other.data_)) return false;
      if (Mingold != other.Mingold) return false;
      if (Maxgold != other.Maxgold) return false;
      if (ScriptName != other.ScriptName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (DisplayId != 0) hash ^= DisplayId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (Size != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Size);
      hash ^= data_.GetHashCode();
      if (Mingold != 0) hash ^= Mingold.GetHashCode();
      if (Maxgold != 0) hash ^= Maxgold.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (DisplayId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DisplayId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Faction != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Faction);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Flags);
      }
      if (Size != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Size);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (Mingold != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Mingold);
      }
      if (Maxgold != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Maxgold);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (DisplayId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DisplayId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Faction != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Faction);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Flags);
      }
      if (Size != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Size);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (Mingold != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Mingold);
      }
      if (Maxgold != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Maxgold);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (DisplayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DisplayId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (Size != 0F) {
        size += 1 + 4;
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (Mingold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mingold);
      }
      if (Maxgold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxgold);
      }
      if (ScriptName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.DisplayId != 0) {
        DisplayId = other.DisplayId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.Size != 0F) {
        Size = other.Size;
      }
      data_.Add(other.data_);
      if (other.Mingold != 0) {
        Mingold = other.Mingold;
      }
      if (other.Maxgold != 0) {
        Maxgold = other.Maxgold;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
          case 32: {
            DisplayId = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Faction = input.ReadUInt32();
            break;
          }
          case 56: {
            Flags = input.ReadUInt32();
            break;
          }
          case 69: {
            Size = input.ReadFloat();
            break;
          }
          case 74:
          case 72: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 80: {
            Mingold = input.ReadUInt32();
            break;
          }
          case 88: {
            Maxgold = input.ReadUInt32();
            break;
          }
          case 98: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
          case 32: {
            DisplayId = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Faction = input.ReadUInt32();
            break;
          }
          case 56: {
            Flags = input.ReadUInt32();
            break;
          }
          case 69: {
            Size = input.ReadFloat();
            break;
          }
          case 74:
          case 72: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 80: {
            Mingold = input.ReadUInt32();
            break;
          }
          case 88: {
            Maxgold = input.ReadUInt32();
            break;
          }
          case 98: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEvent : pb::IMessage<GameEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEvent> _parser = new pb::MessageParser<GameEvent>(() => new GameEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEvent(GameEvent other) : this() {
      entry_ = other.entry_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      occurrence_ = other.occurrence_;
      length_ = other.length_;
      holiday_ = other.holiday_;
      description_ = other.description_;
      hardcoded_ = other.hardcoded_;
      disabled_ = other.disabled_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEvent Clone() {
      return new GameEvent(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique entry for the game event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Absolute start time in timestamp format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Absolute end time in timestamp format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "occurrence" field.</summary>
    public const int OccurrenceFieldNumber = 4;
    private ulong occurrence_;
    /// <summary>
    /// Delay in minutes between occurrences of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Occurrence {
      get { return occurrence_; }
      set {
        occurrence_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private ulong length_;
    /// <summary>
    /// Length in minutes of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "holiday" field.</summary>
    public const int HolidayFieldNumber = 6;
    private uint holiday_;
    /// <summary>
    /// Client-side holiday ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Holiday {
      get { return holiday_; }
      set {
        holiday_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    /// <summary>
    /// Description of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hardcoded" field.</summary>
    public const int HardcodedFieldNumber = 8;
    private bool hardcoded_;
    /// <summary>
    /// Whether the event is hardcoded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hardcoded {
      get { return hardcoded_; }
      set {
        hardcoded_ = value;
      }
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 9;
    private bool disabled_;
    /// <summary>
    /// Whether the event is disabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 10;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 11;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version for the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Occurrence != other.Occurrence) return false;
      if (Length != other.Length) return false;
      if (Holiday != other.Holiday) return false;
      if (Description != other.Description) return false;
      if (Hardcoded != other.Hardcoded) return false;
      if (Disabled != other.Disabled) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Occurrence != 0UL) hash ^= Occurrence.GetHashCode();
      if (Length != 0UL) hash ^= Length.GetHashCode();
      if (Holiday != 0) hash ^= Holiday.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Hardcoded != false) hash ^= Hardcoded.GetHashCode();
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (Occurrence != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Occurrence);
      }
      if (Length != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Length);
      }
      if (Holiday != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Holiday);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (Hardcoded != false) {
        output.WriteRawTag(64);
        output.WriteBool(Hardcoded);
      }
      if (Disabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(Disabled);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (Occurrence != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Occurrence);
      }
      if (Length != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Length);
      }
      if (Holiday != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Holiday);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (Hardcoded != false) {
        output.WriteRawTag(64);
        output.WriteBool(Hardcoded);
      }
      if (Disabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(Disabled);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Occurrence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Occurrence);
      }
      if (Length != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Length);
      }
      if (Holiday != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Holiday);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Hardcoded != false) {
        size += 1 + 1;
      }
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEvent other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Occurrence != 0UL) {
        Occurrence = other.Occurrence;
      }
      if (other.Length != 0UL) {
        Length = other.Length;
      }
      if (other.Holiday != 0) {
        Holiday = other.Holiday;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Hardcoded != false) {
        Hardcoded = other.Hardcoded;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            Occurrence = input.ReadUInt64();
            break;
          }
          case 40: {
            Length = input.ReadUInt64();
            break;
          }
          case 48: {
            Holiday = input.ReadUInt32();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 64: {
            Hardcoded = input.ReadBool();
            break;
          }
          case 72: {
            Disabled = input.ReadBool();
            break;
          }
          case 80: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 88: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            Occurrence = input.ReadUInt64();
            break;
          }
          case 40: {
            Length = input.ReadUInt64();
            break;
          }
          case 48: {
            Holiday = input.ReadUInt32();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 64: {
            Hardcoded = input.ReadBool();
            break;
          }
          case 72: {
            Disabled = input.ReadBool();
            break;
          }
          case 80: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 88: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEventCreature : pb::IMessage<GameEventCreature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEventCreature> _parser = new pb::MessageParser<GameEventCreature>(() => new GameEventCreature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEventCreature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreature(GameEventCreature other) : this() {
      guid_ = other.guid_;
      event_ = other.event_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreature Clone() {
      return new GameEventCreature(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    private int event_;
    /// <summary>
    /// Event ID (negative values indicate removal during the event)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEventCreature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEventCreature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Event != other.Event) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Event != 0) hash ^= Event.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Event != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEventCreature other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Event != 0) {
        Event = other.Event;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEventCreatureData : pb::IMessage<GameEventCreatureData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEventCreatureData> _parser = new pb::MessageParser<GameEventCreatureData>(() => new GameEventCreatureData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEventCreatureData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreatureData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreatureData(GameEventCreatureData other) : this() {
      guid_ = other.guid_;
      entryId_ = other.entryId_;
      modelid_ = other.modelid_;
      equipmentId_ = other.equipmentId_;
      spellStart_ = other.spellStart_;
      spellEnd_ = other.spellEnd_;
      event_ = other.event_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventCreatureData Clone() {
      return new GameEventCreatureData(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 2;
    private uint entryId_;
    /// <summary>
    /// Entry ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntryId {
      get { return entryId_; }
      set {
        entryId_ = value;
      }
    }

    /// <summary>Field number for the "modelid" field.</summary>
    public const int ModelidFieldNumber = 3;
    private uint modelid_;
    /// <summary>
    /// Model ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Modelid {
      get { return modelid_; }
      set {
        modelid_ = value;
      }
    }

    /// <summary>Field number for the "equipment_id" field.</summary>
    public const int EquipmentIdFieldNumber = 4;
    private uint equipmentId_;
    /// <summary>
    /// Equipment ID for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EquipmentId {
      get { return equipmentId_; }
      set {
        equipmentId_ = value;
      }
    }

    /// <summary>Field number for the "spell_start" field.</summary>
    public const int SpellStartFieldNumber = 5;
    private uint spellStart_;
    /// <summary>
    /// Spell ID that the creature starts with
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellStart {
      get { return spellStart_; }
      set {
        spellStart_ = value;
      }
    }

    /// <summary>Field number for the "spell_end" field.</summary>
    public const int SpellEndFieldNumber = 6;
    private uint spellEnd_;
    /// <summary>
    /// Spell ID that the creature ends with
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellEnd {
      get { return spellEnd_; }
      set {
        spellEnd_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 7;
    private uint event_;
    /// <summary>
    /// Event ID this creature data is tied to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEventCreatureData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEventCreatureData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (EntryId != other.EntryId) return false;
      if (Modelid != other.Modelid) return false;
      if (EquipmentId != other.EquipmentId) return false;
      if (SpellStart != other.SpellStart) return false;
      if (SpellEnd != other.SpellEnd) return false;
      if (Event != other.Event) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (EntryId != 0) hash ^= EntryId.GetHashCode();
      if (Modelid != 0) hash ^= Modelid.GetHashCode();
      if (EquipmentId != 0) hash ^= EquipmentId.GetHashCode();
      if (SpellStart != 0) hash ^= SpellStart.GetHashCode();
      if (SpellEnd != 0) hash ^= SpellEnd.GetHashCode();
      if (Event != 0) hash ^= Event.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (EntryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntryId);
      }
      if (Modelid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modelid);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EquipmentId);
      }
      if (SpellStart != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SpellStart);
      }
      if (SpellEnd != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SpellEnd);
      }
      if (Event != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (EntryId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntryId);
      }
      if (Modelid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Modelid);
      }
      if (EquipmentId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EquipmentId);
      }
      if (SpellStart != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SpellStart);
      }
      if (SpellEnd != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SpellEnd);
      }
      if (Event != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (EntryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntryId);
      }
      if (Modelid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Modelid);
      }
      if (EquipmentId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquipmentId);
      }
      if (SpellStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellStart);
      }
      if (SpellEnd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellEnd);
      }
      if (Event != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEventCreatureData other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.EntryId != 0) {
        EntryId = other.EntryId;
      }
      if (other.Modelid != 0) {
        Modelid = other.Modelid;
      }
      if (other.EquipmentId != 0) {
        EquipmentId = other.EquipmentId;
      }
      if (other.SpellStart != 0) {
        SpellStart = other.SpellStart;
      }
      if (other.SpellEnd != 0) {
        SpellEnd = other.SpellEnd;
      }
      if (other.Event != 0) {
        Event = other.Event;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            EntryId = input.ReadUInt32();
            break;
          }
          case 24: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 32: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 40: {
            SpellStart = input.ReadUInt32();
            break;
          }
          case 48: {
            SpellEnd = input.ReadUInt32();
            break;
          }
          case 56: {
            Event = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            EntryId = input.ReadUInt32();
            break;
          }
          case 24: {
            Modelid = input.ReadUInt32();
            break;
          }
          case 32: {
            EquipmentId = input.ReadUInt32();
            break;
          }
          case 40: {
            SpellStart = input.ReadUInt32();
            break;
          }
          case 48: {
            SpellEnd = input.ReadUInt32();
            break;
          }
          case 56: {
            Event = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEventGameObject : pb::IMessage<GameEventGameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEventGameObject> _parser = new pb::MessageParser<GameEventGameObject>(() => new GameEventGameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEventGameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventGameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventGameObject(GameEventGameObject other) : this() {
      guid_ = other.guid_;
      event_ = other.event_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventGameObject Clone() {
      return new GameEventGameObject(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier for the game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    private int event_;
    /// <summary>
    /// Event ID for the game object, negative to remove during event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEventGameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEventGameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Event != other.Event) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Event != 0) hash ^= Event.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Event);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Event != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Event);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEventGameObject other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Event != 0) {
        Event = other.Event;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEventMail : pb::IMessage<GameEventMail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEventMail> _parser = new pb::MessageParser<GameEventMail>(() => new GameEventMail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEventMail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventMail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventMail(GameEventMail other) : this() {
      event_ = other.event_;
      raceMask_ = other.raceMask_;
      quest_ = other.quest_;
      mailTemplateId_ = other.mailTemplateId_;
      senderEntry_ = other.senderEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventMail Clone() {
      return new GameEventMail(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private int event_;
    /// <summary>
    /// Event ID, negative value for event stop, positive for event start
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "raceMask" field.</summary>
    public const int RaceMaskFieldNumber = 2;
    private uint raceMask_;
    /// <summary>
    /// Race mask for which races this mail is sent to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RaceMask {
      get { return raceMask_; }
      set {
        raceMask_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 3;
    private uint quest_;
    /// <summary>
    /// Quest ID related to the mail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "mailTemplateId" field.</summary>
    public const int MailTemplateIdFieldNumber = 4;
    private uint mailTemplateId_;
    /// <summary>
    /// Mail template ID used for this event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MailTemplateId {
      get { return mailTemplateId_; }
      set {
        mailTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "senderEntry" field.</summary>
    public const int SenderEntryFieldNumber = 5;
    private uint senderEntry_;
    /// <summary>
    /// Sender entry ID for the mail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SenderEntry {
      get { return senderEntry_; }
      set {
        senderEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEventMail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEventMail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Event != other.Event) return false;
      if (RaceMask != other.RaceMask) return false;
      if (Quest != other.Quest) return false;
      if (MailTemplateId != other.MailTemplateId) return false;
      if (SenderEntry != other.SenderEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Event != 0) hash ^= Event.GetHashCode();
      if (RaceMask != 0) hash ^= RaceMask.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (MailTemplateId != 0) hash ^= MailTemplateId.GetHashCode();
      if (SenderEntry != 0) hash ^= SenderEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Event != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Event);
      }
      if (RaceMask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RaceMask);
      }
      if (Quest != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Quest);
      }
      if (MailTemplateId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MailTemplateId);
      }
      if (SenderEntry != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SenderEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Event != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Event);
      }
      if (RaceMask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RaceMask);
      }
      if (Quest != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Quest);
      }
      if (MailTemplateId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MailTemplateId);
      }
      if (SenderEntry != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SenderEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Event != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Event);
      }
      if (RaceMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RaceMask);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (MailTemplateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MailTemplateId);
      }
      if (SenderEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SenderEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEventMail other) {
      if (other == null) {
        return;
      }
      if (other.Event != 0) {
        Event = other.Event;
      }
      if (other.RaceMask != 0) {
        RaceMask = other.RaceMask;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.MailTemplateId != 0) {
        MailTemplateId = other.MailTemplateId;
      }
      if (other.SenderEntry != 0) {
        SenderEntry = other.SenderEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Event = input.ReadInt32();
            break;
          }
          case 16: {
            RaceMask = input.ReadUInt32();
            break;
          }
          case 24: {
            Quest = input.ReadUInt32();
            break;
          }
          case 32: {
            MailTemplateId = input.ReadUInt32();
            break;
          }
          case 40: {
            SenderEntry = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Event = input.ReadInt32();
            break;
          }
          case 16: {
            RaceMask = input.ReadUInt32();
            break;
          }
          case 24: {
            Quest = input.ReadUInt32();
            break;
          }
          case 32: {
            MailTemplateId = input.ReadUInt32();
            break;
          }
          case 40: {
            SenderEntry = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameEventQuest : pb::IMessage<GameEventQuest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameEventQuest> _parser = new pb::MessageParser<GameEventQuest>(() => new GameEventQuest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameEventQuest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventQuest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventQuest(GameEventQuest other) : this() {
      quest_ = other.quest_;
      event_ = other.event_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameEventQuest Clone() {
      return new GameEventQuest(this);
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 1;
    private uint quest_;
    /// <summary>
    /// Entry from quest_template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    private uint event_;
    /// <summary>
    /// Entry from game_event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private uint patch_;
    /// <summary>
    /// Patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameEventQuest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameEventQuest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quest != other.Quest) return false;
      if (Event != other.Event) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (Event != 0) hash ^= Event.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Quest != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Quest);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Quest != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Quest);
      }
      if (Event != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Event);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (Event != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameEventQuest other) {
      if (other == null) {
        return;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.Event != 0) {
        Event = other.Event;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Quest = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Quest = input.ReadUInt32();
            break;
          }
          case 16: {
            Event = input.ReadUInt32();
            break;
          }
          case 24: {
            Patch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameGraveyardZone : pb::IMessage<GameGraveyardZone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameGraveyardZone> _parser = new pb::MessageParser<GameGraveyardZone>(() => new GameGraveyardZone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameGraveyardZone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameGraveyardZone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameGraveyardZone(GameGraveyardZone other) : this() {
      id_ = other.id_;
      ghostZone_ = other.ghostZone_;
      faction_ = other.faction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameGraveyardZone Clone() {
      return new GameGraveyardZone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// ID for the graveyard zone
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ghost_zone" field.</summary>
    public const int GhostZoneFieldNumber = 2;
    private uint ghostZone_;
    /// <summary>
    /// Zone ID where ghosts spawn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GhostZone {
      get { return ghostZone_; }
      set {
        ghostZone_ = value;
      }
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 3;
    private uint faction_;
    /// <summary>
    /// Faction ID (Horde/Alliance/Neutral)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameGraveyardZone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameGraveyardZone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GhostZone != other.GhostZone) return false;
      if (Faction != other.Faction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GhostZone != 0) hash ^= GhostZone.GetHashCode();
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (GhostZone != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GhostZone);
      }
      if (Faction != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Faction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (GhostZone != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GhostZone);
      }
      if (Faction != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Faction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (GhostZone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostZone);
      }
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameGraveyardZone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GhostZone != 0) {
        GhostZone = other.GhostZone;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            GhostZone = input.ReadUInt32();
            break;
          }
          case 24: {
            Faction = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            GhostZone = input.ReadUInt32();
            break;
          }
          case 24: {
            Faction = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameTele : pb::IMessage<GameTele>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameTele> _parser = new pb::MessageParser<GameTele>(() => new GameTele());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameTele> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameTele() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameTele(GameTele other) : this() {
      id_ = other.id_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      orientation_ = other.orientation_;
      map_ = other.map_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameTele Clone() {
      return new GameTele(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Teleportation point unique ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 2;
    private float positionX_;
    /// <summary>
    /// X coordinate for the teleportation point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 3;
    private float positionY_;
    /// <summary>
    /// Y coordinate for the teleportation point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 4;
    private float positionZ_;
    /// <summary>
    /// Z coordinate for the teleportation point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 5;
    private float orientation_;
    /// <summary>
    /// Orientation of the player after teleportation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 6;
    private uint map_;
    /// <summary>
    /// Map ID where the teleportation point is located
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// Name of the teleportation point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameTele);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameTele other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      if (Map != other.Map) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (Map != 0) hash ^= Map.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Orientation);
      }
      if (Map != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Map);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Orientation);
      }
      if (Map != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Map);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameTele other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 21: {
            PositionX = input.ReadFloat();
            break;
          }
          case 29: {
            PositionY = input.ReadFloat();
            break;
          }
          case 37: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 45: {
            Orientation = input.ReadFloat();
            break;
          }
          case 48: {
            Map = input.ReadUInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 21: {
            PositionX = input.ReadFloat();
            break;
          }
          case 29: {
            PositionY = input.ReadFloat();
            break;
          }
          case 37: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 45: {
            Orientation = input.ReadFloat();
            break;
          }
          case 48: {
            Map = input.ReadUInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameWeather : pb::IMessage<GameWeather>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameWeather> _parser = new pb::MessageParser<GameWeather>(() => new GameWeather());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameWeather> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameWeather() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameWeather(GameWeather other) : this() {
      zone_ = other.zone_;
      springRainChance_ = other.springRainChance_;
      springSnowChance_ = other.springSnowChance_;
      springStormChance_ = other.springStormChance_;
      summerRainChance_ = other.summerRainChance_;
      summerSnowChance_ = other.summerSnowChance_;
      summerStormChance_ = other.summerStormChance_;
      fallRainChance_ = other.fallRainChance_;
      fallSnowChance_ = other.fallSnowChance_;
      fallStormChance_ = other.fallStormChance_;
      winterRainChance_ = other.winterRainChance_;
      winterSnowChance_ = other.winterSnowChance_;
      winterStormChance_ = other.winterStormChance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameWeather Clone() {
      return new GameWeather(this);
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 1;
    private uint zone_;
    /// <summary>
    /// The zone ID where the weather is applied
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }

    /// <summary>Field number for the "spring_rain_chance" field.</summary>
    public const int SpringRainChanceFieldNumber = 2;
    private uint springRainChance_;
    /// <summary>
    /// Chance of rain in spring (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpringRainChance {
      get { return springRainChance_; }
      set {
        springRainChance_ = value;
      }
    }

    /// <summary>Field number for the "spring_snow_chance" field.</summary>
    public const int SpringSnowChanceFieldNumber = 3;
    private uint springSnowChance_;
    /// <summary>
    /// Chance of snow in spring (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpringSnowChance {
      get { return springSnowChance_; }
      set {
        springSnowChance_ = value;
      }
    }

    /// <summary>Field number for the "spring_storm_chance" field.</summary>
    public const int SpringStormChanceFieldNumber = 4;
    private uint springStormChance_;
    /// <summary>
    /// Chance of a storm in spring (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpringStormChance {
      get { return springStormChance_; }
      set {
        springStormChance_ = value;
      }
    }

    /// <summary>Field number for the "summer_rain_chance" field.</summary>
    public const int SummerRainChanceFieldNumber = 5;
    private uint summerRainChance_;
    /// <summary>
    /// Chance of rain in summer (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SummerRainChance {
      get { return summerRainChance_; }
      set {
        summerRainChance_ = value;
      }
    }

    /// <summary>Field number for the "summer_snow_chance" field.</summary>
    public const int SummerSnowChanceFieldNumber = 6;
    private uint summerSnowChance_;
    /// <summary>
    /// Chance of snow in summer (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SummerSnowChance {
      get { return summerSnowChance_; }
      set {
        summerSnowChance_ = value;
      }
    }

    /// <summary>Field number for the "summer_storm_chance" field.</summary>
    public const int SummerStormChanceFieldNumber = 7;
    private uint summerStormChance_;
    /// <summary>
    /// Chance of a storm in summer (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SummerStormChance {
      get { return summerStormChance_; }
      set {
        summerStormChance_ = value;
      }
    }

    /// <summary>Field number for the "fall_rain_chance" field.</summary>
    public const int FallRainChanceFieldNumber = 8;
    private uint fallRainChance_;
    /// <summary>
    /// Chance of rain in fall (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FallRainChance {
      get { return fallRainChance_; }
      set {
        fallRainChance_ = value;
      }
    }

    /// <summary>Field number for the "fall_snow_chance" field.</summary>
    public const int FallSnowChanceFieldNumber = 9;
    private uint fallSnowChance_;
    /// <summary>
    /// Chance of snow in fall (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FallSnowChance {
      get { return fallSnowChance_; }
      set {
        fallSnowChance_ = value;
      }
    }

    /// <summary>Field number for the "fall_storm_chance" field.</summary>
    public const int FallStormChanceFieldNumber = 10;
    private uint fallStormChance_;
    /// <summary>
    /// Chance of a storm in fall (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FallStormChance {
      get { return fallStormChance_; }
      set {
        fallStormChance_ = value;
      }
    }

    /// <summary>Field number for the "winter_rain_chance" field.</summary>
    public const int WinterRainChanceFieldNumber = 11;
    private uint winterRainChance_;
    /// <summary>
    /// Chance of rain in winter (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WinterRainChance {
      get { return winterRainChance_; }
      set {
        winterRainChance_ = value;
      }
    }

    /// <summary>Field number for the "winter_snow_chance" field.</summary>
    public const int WinterSnowChanceFieldNumber = 12;
    private uint winterSnowChance_;
    /// <summary>
    /// Chance of snow in winter (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WinterSnowChance {
      get { return winterSnowChance_; }
      set {
        winterSnowChance_ = value;
      }
    }

    /// <summary>Field number for the "winter_storm_chance" field.</summary>
    public const int WinterStormChanceFieldNumber = 13;
    private uint winterStormChance_;
    /// <summary>
    /// Chance of a storm in winter (in percentage)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WinterStormChance {
      get { return winterStormChance_; }
      set {
        winterStormChance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameWeather);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameWeather other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Zone != other.Zone) return false;
      if (SpringRainChance != other.SpringRainChance) return false;
      if (SpringSnowChance != other.SpringSnowChance) return false;
      if (SpringStormChance != other.SpringStormChance) return false;
      if (SummerRainChance != other.SummerRainChance) return false;
      if (SummerSnowChance != other.SummerSnowChance) return false;
      if (SummerStormChance != other.SummerStormChance) return false;
      if (FallRainChance != other.FallRainChance) return false;
      if (FallSnowChance != other.FallSnowChance) return false;
      if (FallStormChance != other.FallStormChance) return false;
      if (WinterRainChance != other.WinterRainChance) return false;
      if (WinterSnowChance != other.WinterSnowChance) return false;
      if (WinterStormChance != other.WinterStormChance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Zone != 0) hash ^= Zone.GetHashCode();
      if (SpringRainChance != 0) hash ^= SpringRainChance.GetHashCode();
      if (SpringSnowChance != 0) hash ^= SpringSnowChance.GetHashCode();
      if (SpringStormChance != 0) hash ^= SpringStormChance.GetHashCode();
      if (SummerRainChance != 0) hash ^= SummerRainChance.GetHashCode();
      if (SummerSnowChance != 0) hash ^= SummerSnowChance.GetHashCode();
      if (SummerStormChance != 0) hash ^= SummerStormChance.GetHashCode();
      if (FallRainChance != 0) hash ^= FallRainChance.GetHashCode();
      if (FallSnowChance != 0) hash ^= FallSnowChance.GetHashCode();
      if (FallStormChance != 0) hash ^= FallStormChance.GetHashCode();
      if (WinterRainChance != 0) hash ^= WinterRainChance.GetHashCode();
      if (WinterSnowChance != 0) hash ^= WinterSnowChance.GetHashCode();
      if (WinterStormChance != 0) hash ^= WinterStormChance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Zone != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Zone);
      }
      if (SpringRainChance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SpringRainChance);
      }
      if (SpringSnowChance != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpringSnowChance);
      }
      if (SpringStormChance != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SpringStormChance);
      }
      if (SummerRainChance != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SummerRainChance);
      }
      if (SummerSnowChance != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SummerSnowChance);
      }
      if (SummerStormChance != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(SummerStormChance);
      }
      if (FallRainChance != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FallRainChance);
      }
      if (FallSnowChance != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FallSnowChance);
      }
      if (FallStormChance != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(FallStormChance);
      }
      if (WinterRainChance != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(WinterRainChance);
      }
      if (WinterSnowChance != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(WinterSnowChance);
      }
      if (WinterStormChance != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WinterStormChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Zone != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Zone);
      }
      if (SpringRainChance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SpringRainChance);
      }
      if (SpringSnowChance != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpringSnowChance);
      }
      if (SpringStormChance != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SpringStormChance);
      }
      if (SummerRainChance != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SummerRainChance);
      }
      if (SummerSnowChance != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SummerSnowChance);
      }
      if (SummerStormChance != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(SummerStormChance);
      }
      if (FallRainChance != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FallRainChance);
      }
      if (FallSnowChance != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FallSnowChance);
      }
      if (FallStormChance != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(FallStormChance);
      }
      if (WinterRainChance != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(WinterRainChance);
      }
      if (WinterSnowChance != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(WinterSnowChance);
      }
      if (WinterStormChance != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WinterStormChance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Zone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Zone);
      }
      if (SpringRainChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpringRainChance);
      }
      if (SpringSnowChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpringSnowChance);
      }
      if (SpringStormChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpringStormChance);
      }
      if (SummerRainChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SummerRainChance);
      }
      if (SummerSnowChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SummerSnowChance);
      }
      if (SummerStormChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SummerStormChance);
      }
      if (FallRainChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FallRainChance);
      }
      if (FallSnowChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FallSnowChance);
      }
      if (FallStormChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FallStormChance);
      }
      if (WinterRainChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WinterRainChance);
      }
      if (WinterSnowChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WinterSnowChance);
      }
      if (WinterStormChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WinterStormChance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameWeather other) {
      if (other == null) {
        return;
      }
      if (other.Zone != 0) {
        Zone = other.Zone;
      }
      if (other.SpringRainChance != 0) {
        SpringRainChance = other.SpringRainChance;
      }
      if (other.SpringSnowChance != 0) {
        SpringSnowChance = other.SpringSnowChance;
      }
      if (other.SpringStormChance != 0) {
        SpringStormChance = other.SpringStormChance;
      }
      if (other.SummerRainChance != 0) {
        SummerRainChance = other.SummerRainChance;
      }
      if (other.SummerSnowChance != 0) {
        SummerSnowChance = other.SummerSnowChance;
      }
      if (other.SummerStormChance != 0) {
        SummerStormChance = other.SummerStormChance;
      }
      if (other.FallRainChance != 0) {
        FallRainChance = other.FallRainChance;
      }
      if (other.FallSnowChance != 0) {
        FallSnowChance = other.FallSnowChance;
      }
      if (other.FallStormChance != 0) {
        FallStormChance = other.FallStormChance;
      }
      if (other.WinterRainChance != 0) {
        WinterRainChance = other.WinterRainChance;
      }
      if (other.WinterSnowChance != 0) {
        WinterSnowChance = other.WinterSnowChance;
      }
      if (other.WinterStormChance != 0) {
        WinterStormChance = other.WinterStormChance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Zone = input.ReadUInt32();
            break;
          }
          case 16: {
            SpringRainChance = input.ReadUInt32();
            break;
          }
          case 24: {
            SpringSnowChance = input.ReadUInt32();
            break;
          }
          case 32: {
            SpringStormChance = input.ReadUInt32();
            break;
          }
          case 40: {
            SummerRainChance = input.ReadUInt32();
            break;
          }
          case 48: {
            SummerSnowChance = input.ReadUInt32();
            break;
          }
          case 56: {
            SummerStormChance = input.ReadUInt32();
            break;
          }
          case 64: {
            FallRainChance = input.ReadUInt32();
            break;
          }
          case 72: {
            FallSnowChance = input.ReadUInt32();
            break;
          }
          case 80: {
            FallStormChance = input.ReadUInt32();
            break;
          }
          case 88: {
            WinterRainChance = input.ReadUInt32();
            break;
          }
          case 96: {
            WinterSnowChance = input.ReadUInt32();
            break;
          }
          case 104: {
            WinterStormChance = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Zone = input.ReadUInt32();
            break;
          }
          case 16: {
            SpringRainChance = input.ReadUInt32();
            break;
          }
          case 24: {
            SpringSnowChance = input.ReadUInt32();
            break;
          }
          case 32: {
            SpringStormChance = input.ReadUInt32();
            break;
          }
          case 40: {
            SummerRainChance = input.ReadUInt32();
            break;
          }
          case 48: {
            SummerSnowChance = input.ReadUInt32();
            break;
          }
          case 56: {
            SummerStormChance = input.ReadUInt32();
            break;
          }
          case 64: {
            FallRainChance = input.ReadUInt32();
            break;
          }
          case 72: {
            FallSnowChance = input.ReadUInt32();
            break;
          }
          case 80: {
            FallStormChance = input.ReadUInt32();
            break;
          }
          case 88: {
            WinterRainChance = input.ReadUInt32();
            break;
          }
          case 96: {
            WinterSnowChance = input.ReadUInt32();
            break;
          }
          case 104: {
            WinterStormChance = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GMSubSurvey : pb::IMessage<GMSubSurvey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GMSubSurvey> _parser = new pb::MessageParser<GMSubSurvey>(() => new GMSubSurvey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GMSubSurvey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSubSurvey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSubSurvey(GMSubSurvey other) : this() {
      surveyId_ = other.surveyId_;
      subsurveyId_ = other.subsurveyId_;
      rank_ = other.rank_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSubSurvey Clone() {
      return new GMSubSurvey(this);
    }

    /// <summary>Field number for the "surveyId" field.</summary>
    public const int SurveyIdFieldNumber = 1;
    private uint surveyId_;
    /// <summary>
    /// Identifier for the survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SurveyId {
      get { return surveyId_; }
      set {
        surveyId_ = value;
      }
    }

    /// <summary>Field number for the "subsurveyId" field.</summary>
    public const int SubsurveyIdFieldNumber = 2;
    private uint subsurveyId_;
    /// <summary>
    /// Identifier for the sub-survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubsurveyId {
      get { return subsurveyId_; }
      set {
        subsurveyId_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 3;
    private uint rank_;
    /// <summary>
    /// Rank provided in the survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 4;
    private string comment_ = "";
    /// <summary>
    /// Comment provided by the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GMSubSurvey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GMSubSurvey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SurveyId != other.SurveyId) return false;
      if (SubsurveyId != other.SubsurveyId) return false;
      if (Rank != other.Rank) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SurveyId != 0) hash ^= SurveyId.GetHashCode();
      if (SubsurveyId != 0) hash ^= SubsurveyId.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SurveyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SurveyId);
      }
      if (SubsurveyId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SubsurveyId);
      }
      if (Rank != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Rank);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SurveyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SurveyId);
      }
      if (SubsurveyId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SubsurveyId);
      }
      if (Rank != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Rank);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SurveyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurveyId);
      }
      if (SubsurveyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubsurveyId);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GMSubSurvey other) {
      if (other == null) {
        return;
      }
      if (other.SurveyId != 0) {
        SurveyId = other.SurveyId;
      }
      if (other.SubsurveyId != 0) {
        SubsurveyId = other.SubsurveyId;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SurveyId = input.ReadUInt32();
            break;
          }
          case 16: {
            SubsurveyId = input.ReadUInt32();
            break;
          }
          case 24: {
            Rank = input.ReadUInt32();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SurveyId = input.ReadUInt32();
            break;
          }
          case 16: {
            SubsurveyId = input.ReadUInt32();
            break;
          }
          case 24: {
            Rank = input.ReadUInt32();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GMSurvey : pb::IMessage<GMSurvey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GMSurvey> _parser = new pb::MessageParser<GMSurvey>(() => new GMSurvey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GMSurvey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSurvey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSurvey(GMSurvey other) : this() {
      surveyId_ = other.surveyId_;
      guid_ = other.guid_;
      mainSurvey_ = other.mainSurvey_;
      overallComment_ = other.overallComment_;
      createTime_ = other.createTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMSurvey Clone() {
      return new GMSurvey(this);
    }

    /// <summary>Field number for the "surveyId" field.</summary>
    public const int SurveyIdFieldNumber = 1;
    private uint surveyId_;
    /// <summary>
    /// Identifier for the survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SurveyId {
      get { return surveyId_; }
      set {
        surveyId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 2;
    private uint guid_;
    /// <summary>
    /// Global Unique Identifier (GUID) of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "mainSurvey" field.</summary>
    public const int MainSurveyFieldNumber = 3;
    private uint mainSurvey_;
    /// <summary>
    /// Identifier for the main survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MainSurvey {
      get { return mainSurvey_; }
      set {
        mainSurvey_ = value;
      }
    }

    /// <summary>Field number for the "overallComment" field.</summary>
    public const int OverallCommentFieldNumber = 4;
    private string overallComment_ = "";
    /// <summary>
    /// Overall comment or feedback provided in the survey
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OverallComment {
      get { return overallComment_; }
      set {
        overallComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private uint createTime_;
    /// <summary>
    /// Timestamp of when the survey was created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GMSurvey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GMSurvey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SurveyId != other.SurveyId) return false;
      if (Guid != other.Guid) return false;
      if (MainSurvey != other.MainSurvey) return false;
      if (OverallComment != other.OverallComment) return false;
      if (CreateTime != other.CreateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SurveyId != 0) hash ^= SurveyId.GetHashCode();
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (MainSurvey != 0) hash ^= MainSurvey.GetHashCode();
      if (OverallComment.Length != 0) hash ^= OverallComment.GetHashCode();
      if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SurveyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SurveyId);
      }
      if (Guid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guid);
      }
      if (MainSurvey != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MainSurvey);
      }
      if (OverallComment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OverallComment);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SurveyId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SurveyId);
      }
      if (Guid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guid);
      }
      if (MainSurvey != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MainSurvey);
      }
      if (OverallComment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OverallComment);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SurveyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurveyId);
      }
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (MainSurvey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MainSurvey);
      }
      if (OverallComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OverallComment);
      }
      if (CreateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GMSurvey other) {
      if (other == null) {
        return;
      }
      if (other.SurveyId != 0) {
        SurveyId = other.SurveyId;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.MainSurvey != 0) {
        MainSurvey = other.MainSurvey;
      }
      if (other.OverallComment.Length != 0) {
        OverallComment = other.OverallComment;
      }
      if (other.CreateTime != 0) {
        CreateTime = other.CreateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SurveyId = input.ReadUInt32();
            break;
          }
          case 16: {
            Guid = input.ReadUInt32();
            break;
          }
          case 24: {
            MainSurvey = input.ReadUInt32();
            break;
          }
          case 34: {
            OverallComment = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SurveyId = input.ReadUInt32();
            break;
          }
          case 16: {
            Guid = input.ReadUInt32();
            break;
          }
          case 24: {
            MainSurvey = input.ReadUInt32();
            break;
          }
          case 34: {
            OverallComment = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GMTicket : pb::IMessage<GMTicket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GMTicket> _parser = new pb::MessageParser<GMTicket>(() => new GMTicket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GMTicket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMTicket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMTicket(GMTicket other) : this() {
      ticketId_ = other.ticketId_;
      guid_ = other.guid_;
      name_ = other.name_;
      message_ = other.message_;
      createTime_ = other.createTime_;
      mapId_ = other.mapId_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      lastModifiedTime_ = other.lastModifiedTime_;
      closedBy_ = other.closedBy_;
      assignedTo_ = other.assignedTo_;
      comment_ = other.comment_;
      response_ = other.response_;
      completed_ = other.completed_;
      escalated_ = other.escalated_;
      viewed_ = other.viewed_;
      haveTicket_ = other.haveTicket_;
      ticketType_ = other.ticketType_;
      securityNeeded_ = other.securityNeeded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GMTicket Clone() {
      return new GMTicket(this);
    }

    /// <summary>Field number for the "ticketId" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private uint ticketId_;
    /// <summary>
    /// Unique identifier for the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 2;
    private uint guid_;
    /// <summary>
    /// GUID of the player who created the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Name of the ticket creator
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    /// <summary>
    /// Message content of the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private uint createTime_;
    /// <summary>
    /// Creation timestamp of the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 6;
    private uint mapId_;
    /// <summary>
    /// Map identifier where the player was located
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 7;
    private float posX_;
    /// <summary>
    /// X coordinate of the player's position when the ticket was created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 8;
    private float posY_;
    /// <summary>
    /// Y coordinate of the player's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "posZ" field.</summary>
    public const int PosZFieldNumber = 9;
    private float posZ_;
    /// <summary>
    /// Z coordinate of the player's position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    /// <summary>Field number for the "lastModifiedTime" field.</summary>
    public const int LastModifiedTimeFieldNumber = 10;
    private uint lastModifiedTime_;
    /// <summary>
    /// Timestamp of the last modification to the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LastModifiedTime {
      get { return lastModifiedTime_; }
      set {
        lastModifiedTime_ = value;
      }
    }

    /// <summary>Field number for the "closedBy" field.</summary>
    public const int ClosedByFieldNumber = 11;
    private uint closedBy_;
    /// <summary>
    /// Identifier of the admin who closed the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ClosedBy {
      get { return closedBy_; }
      set {
        closedBy_ = value;
      }
    }

    /// <summary>Field number for the "assignedTo" field.</summary>
    public const int AssignedToFieldNumber = 12;
    private uint assignedTo_;
    /// <summary>
    /// GUID of the admin the ticket is assigned to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AssignedTo {
      get { return assignedTo_; }
      set {
        assignedTo_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 13;
    private string comment_ = "";
    /// <summary>
    /// Comments added to the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 14;
    private string response_ = "";
    /// <summary>
    /// Response to the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 15;
    private uint completed_;
    /// <summary>
    /// Whether the ticket is completed (0 = No, 1 = Yes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "escalated" field.</summary>
    public const int EscalatedFieldNumber = 16;
    private uint escalated_;
    /// <summary>
    /// Whether the ticket was escalated (0 = No, 1 = Yes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Escalated {
      get { return escalated_; }
      set {
        escalated_ = value;
      }
    }

    /// <summary>Field number for the "viewed" field.</summary>
    public const int ViewedFieldNumber = 17;
    private uint viewed_;
    /// <summary>
    /// Whether the ticket has been viewed (0 = No, 1 = Yes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Viewed {
      get { return viewed_; }
      set {
        viewed_ = value;
      }
    }

    /// <summary>Field number for the "haveTicket" field.</summary>
    public const int HaveTicketFieldNumber = 18;
    private uint haveTicket_;
    /// <summary>
    /// Whether the player currently has an active ticket (0 = No, 1 = Yes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HaveTicket {
      get { return haveTicket_; }
      set {
        haveTicket_ = value;
      }
    }

    /// <summary>Field number for the "ticketType" field.</summary>
    public const int TicketTypeFieldNumber = 19;
    private uint ticketType_;
    /// <summary>
    /// Type of the ticket (0 for regular, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TicketType {
      get { return ticketType_; }
      set {
        ticketType_ = value;
      }
    }

    /// <summary>Field number for the "securityNeeded" field.</summary>
    public const int SecurityNeededFieldNumber = 20;
    private uint securityNeeded_;
    /// <summary>
    /// Level of security needed to handle the ticket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SecurityNeeded {
      get { return securityNeeded_; }
      set {
        securityNeeded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GMTicket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GMTicket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      if (Guid != other.Guid) return false;
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      if (CreateTime != other.CreateTime) return false;
      if (MapId != other.MapId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (LastModifiedTime != other.LastModifiedTime) return false;
      if (ClosedBy != other.ClosedBy) return false;
      if (AssignedTo != other.AssignedTo) return false;
      if (Comment != other.Comment) return false;
      if (Response != other.Response) return false;
      if (Completed != other.Completed) return false;
      if (Escalated != other.Escalated) return false;
      if (Viewed != other.Viewed) return false;
      if (HaveTicket != other.HaveTicket) return false;
      if (TicketType != other.TicketType) return false;
      if (SecurityNeeded != other.SecurityNeeded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId != 0) hash ^= TicketId.GetHashCode();
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (LastModifiedTime != 0) hash ^= LastModifiedTime.GetHashCode();
      if (ClosedBy != 0) hash ^= ClosedBy.GetHashCode();
      if (AssignedTo != 0) hash ^= AssignedTo.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (Completed != 0) hash ^= Completed.GetHashCode();
      if (Escalated != 0) hash ^= Escalated.GetHashCode();
      if (Viewed != 0) hash ^= Viewed.GetHashCode();
      if (HaveTicket != 0) hash ^= HaveTicket.GetHashCode();
      if (TicketType != 0) hash ^= TicketType.GetHashCode();
      if (SecurityNeeded != 0) hash ^= SecurityNeeded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TicketId);
      }
      if (Guid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CreateTime);
      }
      if (MapId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MapId);
      }
      if (PosX != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PosZ);
      }
      if (LastModifiedTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(LastModifiedTime);
      }
      if (ClosedBy != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(ClosedBy);
      }
      if (AssignedTo != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AssignedTo);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Comment);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Response);
      }
      if (Completed != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Completed);
      }
      if (Escalated != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Escalated);
      }
      if (Viewed != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Viewed);
      }
      if (HaveTicket != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(HaveTicket);
      }
      if (TicketType != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(TicketType);
      }
      if (SecurityNeeded != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(SecurityNeeded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TicketId);
      }
      if (Guid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Guid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (CreateTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CreateTime);
      }
      if (MapId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MapId);
      }
      if (PosX != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PosZ);
      }
      if (LastModifiedTime != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(LastModifiedTime);
      }
      if (ClosedBy != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(ClosedBy);
      }
      if (AssignedTo != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AssignedTo);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Comment);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Response);
      }
      if (Completed != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Completed);
      }
      if (Escalated != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Escalated);
      }
      if (Viewed != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Viewed);
      }
      if (HaveTicket != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(HaveTicket);
      }
      if (TicketType != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(TicketType);
      }
      if (SecurityNeeded != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(SecurityNeeded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TicketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TicketId);
      }
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (CreateTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreateTime);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (LastModifiedTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastModifiedTime);
      }
      if (ClosedBy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClosedBy);
      }
      if (AssignedTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssignedTo);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      if (Completed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Completed);
      }
      if (Escalated != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Escalated);
      }
      if (Viewed != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Viewed);
      }
      if (HaveTicket != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HaveTicket);
      }
      if (TicketType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TicketType);
      }
      if (SecurityNeeded != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SecurityNeeded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GMTicket other) {
      if (other == null) {
        return;
      }
      if (other.TicketId != 0) {
        TicketId = other.TicketId;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.CreateTime != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      if (other.LastModifiedTime != 0) {
        LastModifiedTime = other.LastModifiedTime;
      }
      if (other.ClosedBy != 0) {
        ClosedBy = other.ClosedBy;
      }
      if (other.AssignedTo != 0) {
        AssignedTo = other.AssignedTo;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      if (other.Completed != 0) {
        Completed = other.Completed;
      }
      if (other.Escalated != 0) {
        Escalated = other.Escalated;
      }
      if (other.Viewed != 0) {
        Viewed = other.Viewed;
      }
      if (other.HaveTicket != 0) {
        HaveTicket = other.HaveTicket;
      }
      if (other.TicketType != 0) {
        TicketType = other.TicketType;
      }
      if (other.SecurityNeeded != 0) {
        SecurityNeeded = other.SecurityNeeded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TicketId = input.ReadUInt32();
            break;
          }
          case 16: {
            Guid = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadUInt32();
            break;
          }
          case 48: {
            MapId = input.ReadUInt32();
            break;
          }
          case 61: {
            PosX = input.ReadFloat();
            break;
          }
          case 69: {
            PosY = input.ReadFloat();
            break;
          }
          case 77: {
            PosZ = input.ReadFloat();
            break;
          }
          case 80: {
            LastModifiedTime = input.ReadUInt32();
            break;
          }
          case 88: {
            ClosedBy = input.ReadUInt32();
            break;
          }
          case 96: {
            AssignedTo = input.ReadUInt32();
            break;
          }
          case 106: {
            Comment = input.ReadString();
            break;
          }
          case 114: {
            Response = input.ReadString();
            break;
          }
          case 120: {
            Completed = input.ReadUInt32();
            break;
          }
          case 128: {
            Escalated = input.ReadUInt32();
            break;
          }
          case 136: {
            Viewed = input.ReadUInt32();
            break;
          }
          case 144: {
            HaveTicket = input.ReadUInt32();
            break;
          }
          case 152: {
            TicketType = input.ReadUInt32();
            break;
          }
          case 160: {
            SecurityNeeded = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TicketId = input.ReadUInt32();
            break;
          }
          case 16: {
            Guid = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadUInt32();
            break;
          }
          case 48: {
            MapId = input.ReadUInt32();
            break;
          }
          case 61: {
            PosX = input.ReadFloat();
            break;
          }
          case 69: {
            PosY = input.ReadFloat();
            break;
          }
          case 77: {
            PosZ = input.ReadFloat();
            break;
          }
          case 80: {
            LastModifiedTime = input.ReadUInt32();
            break;
          }
          case 88: {
            ClosedBy = input.ReadUInt32();
            break;
          }
          case 96: {
            AssignedTo = input.ReadUInt32();
            break;
          }
          case 106: {
            Comment = input.ReadString();
            break;
          }
          case 114: {
            Response = input.ReadString();
            break;
          }
          case 120: {
            Completed = input.ReadUInt32();
            break;
          }
          case 128: {
            Escalated = input.ReadUInt32();
            break;
          }
          case 136: {
            Viewed = input.ReadUInt32();
            break;
          }
          case 144: {
            HaveTicket = input.ReadUInt32();
            break;
          }
          case 152: {
            TicketType = input.ReadUInt32();
            break;
          }
          case 160: {
            SecurityNeeded = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GossipMenu : pb::IMessage<GossipMenu>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GossipMenu> _parser = new pb::MessageParser<GossipMenu>(() => new GossipMenu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GossipMenu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenu(GossipMenu other) : this() {
      entry_ = other.entry_;
      textId_ = other.textId_;
      conditionId_ = other.conditionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenu Clone() {
      return new GossipMenu(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// The entry ID for the gossip menu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "text_id" field.</summary>
    public const int TextIdFieldNumber = 2;
    private uint textId_;
    /// <summary>
    /// The text ID associated with this gossip menu entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TextId {
      get { return textId_; }
      set {
        textId_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 3;
    private uint conditionId_;
    /// <summary>
    /// The condition ID that determines if this gossip menu option is available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GossipMenu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GossipMenu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (TextId != other.TextId) return false;
      if (ConditionId != other.ConditionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (TextId != 0) hash ^= TextId.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TextId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TextId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConditionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TextId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TextId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ConditionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (TextId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TextId);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GossipMenu other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.TextId != 0) {
        TextId = other.TextId;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            TextId = input.ReadUInt32();
            break;
          }
          case 24: {
            ConditionId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            TextId = input.ReadUInt32();
            break;
          }
          case 24: {
            ConditionId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GossipMenuOption : pb::IMessage<GossipMenuOption>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GossipMenuOption> _parser = new pb::MessageParser<GossipMenuOption>(() => new GossipMenuOption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GossipMenuOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenuOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenuOption(GossipMenuOption other) : this() {
      menuId_ = other.menuId_;
      id_ = other.id_;
      optionIcon_ = other.optionIcon_;
      optionText_ = other.optionText_;
      optionBroadcastTextId_ = other.optionBroadcastTextId_;
      optionId_ = other.optionId_;
      npcOptionNpcflag_ = other.npcOptionNpcflag_;
      actionMenuId_ = other.actionMenuId_;
      actionPoiId_ = other.actionPoiId_;
      actionScriptId_ = other.actionScriptId_;
      boxCoded_ = other.boxCoded_;
      boxMoney_ = other.boxMoney_;
      boxText_ = other.boxText_;
      boxBroadcastTextId_ = other.boxBroadcastTextId_;
      conditionId_ = other.conditionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipMenuOption Clone() {
      return new GossipMenuOption(this);
    }

    /// <summary>Field number for the "menu_id" field.</summary>
    public const int MenuIdFieldNumber = 1;
    private uint menuId_;
    /// <summary>
    /// The gossip menu ID this option belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MenuId {
      get { return menuId_; }
      set {
        menuId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    /// <summary>
    /// The specific option ID within the gossip menu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "option_icon" field.</summary>
    public const int OptionIconFieldNumber = 3;
    private uint optionIcon_;
    /// <summary>
    /// Icon for the gossip option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OptionIcon {
      get { return optionIcon_; }
      set {
        optionIcon_ = value;
      }
    }

    /// <summary>Field number for the "option_text" field.</summary>
    public const int OptionTextFieldNumber = 4;
    private string optionText_ = "";
    /// <summary>
    /// The text displayed for the option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionText {
      get { return optionText_; }
      set {
        optionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_broadcast_text_id" field.</summary>
    public const int OptionBroadcastTextIdFieldNumber = 5;
    private uint optionBroadcastTextId_;
    /// <summary>
    /// ID for broadcasting text associated with the option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OptionBroadcastTextId {
      get { return optionBroadcastTextId_; }
      set {
        optionBroadcastTextId_ = value;
      }
    }

    /// <summary>Field number for the "option_id" field.</summary>
    public const int OptionIdFieldNumber = 6;
    private uint optionId_;
    /// <summary>
    /// Option ID (response type)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OptionId {
      get { return optionId_; }
      set {
        optionId_ = value;
      }
    }

    /// <summary>Field number for the "npc_option_npcflag" field.</summary>
    public const int NpcOptionNpcflagFieldNumber = 7;
    private uint npcOptionNpcflag_;
    /// <summary>
    /// Flags indicating the NPC type for this option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NpcOptionNpcflag {
      get { return npcOptionNpcflag_; }
      set {
        npcOptionNpcflag_ = value;
      }
    }

    /// <summary>Field number for the "action_menu_id" field.</summary>
    public const int ActionMenuIdFieldNumber = 8;
    private int actionMenuId_;
    /// <summary>
    /// The action menu ID to execute when selected
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionMenuId {
      get { return actionMenuId_; }
      set {
        actionMenuId_ = value;
      }
    }

    /// <summary>Field number for the "action_poi_id" field.</summary>
    public const int ActionPoiIdFieldNumber = 9;
    private uint actionPoiId_;
    /// <summary>
    /// Point of interest ID associated with the action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActionPoiId {
      get { return actionPoiId_; }
      set {
        actionPoiId_ = value;
      }
    }

    /// <summary>Field number for the "action_script_id" field.</summary>
    public const int ActionScriptIdFieldNumber = 10;
    private uint actionScriptId_;
    /// <summary>
    /// Script ID executed when this option is selected
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActionScriptId {
      get { return actionScriptId_; }
      set {
        actionScriptId_ = value;
      }
    }

    /// <summary>Field number for the "box_coded" field.</summary>
    public const int BoxCodedFieldNumber = 11;
    private uint boxCoded_;
    /// <summary>
    /// Indicates if the text box requires a code input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BoxCoded {
      get { return boxCoded_; }
      set {
        boxCoded_ = value;
      }
    }

    /// <summary>Field number for the "box_money" field.</summary>
    public const int BoxMoneyFieldNumber = 12;
    private uint boxMoney_;
    /// <summary>
    /// Money required for this option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BoxMoney {
      get { return boxMoney_; }
      set {
        boxMoney_ = value;
      }
    }

    /// <summary>Field number for the "box_text" field.</summary>
    public const int BoxTextFieldNumber = 13;
    private string boxText_ = "";
    /// <summary>
    /// Text displayed in the text box
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxText {
      get { return boxText_; }
      set {
        boxText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_broadcast_text_id" field.</summary>
    public const int BoxBroadcastTextIdFieldNumber = 14;
    private uint boxBroadcastTextId_;
    /// <summary>
    /// Broadcast text ID associated with the box
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BoxBroadcastTextId {
      get { return boxBroadcastTextId_; }
      set {
        boxBroadcastTextId_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 15;
    private uint conditionId_;
    /// <summary>
    /// Condition ID to display or enable this option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GossipMenuOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GossipMenuOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MenuId != other.MenuId) return false;
      if (Id != other.Id) return false;
      if (OptionIcon != other.OptionIcon) return false;
      if (OptionText != other.OptionText) return false;
      if (OptionBroadcastTextId != other.OptionBroadcastTextId) return false;
      if (OptionId != other.OptionId) return false;
      if (NpcOptionNpcflag != other.NpcOptionNpcflag) return false;
      if (ActionMenuId != other.ActionMenuId) return false;
      if (ActionPoiId != other.ActionPoiId) return false;
      if (ActionScriptId != other.ActionScriptId) return false;
      if (BoxCoded != other.BoxCoded) return false;
      if (BoxMoney != other.BoxMoney) return false;
      if (BoxText != other.BoxText) return false;
      if (BoxBroadcastTextId != other.BoxBroadcastTextId) return false;
      if (ConditionId != other.ConditionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MenuId != 0) hash ^= MenuId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OptionIcon != 0) hash ^= OptionIcon.GetHashCode();
      if (OptionText.Length != 0) hash ^= OptionText.GetHashCode();
      if (OptionBroadcastTextId != 0) hash ^= OptionBroadcastTextId.GetHashCode();
      if (OptionId != 0) hash ^= OptionId.GetHashCode();
      if (NpcOptionNpcflag != 0) hash ^= NpcOptionNpcflag.GetHashCode();
      if (ActionMenuId != 0) hash ^= ActionMenuId.GetHashCode();
      if (ActionPoiId != 0) hash ^= ActionPoiId.GetHashCode();
      if (ActionScriptId != 0) hash ^= ActionScriptId.GetHashCode();
      if (BoxCoded != 0) hash ^= BoxCoded.GetHashCode();
      if (BoxMoney != 0) hash ^= BoxMoney.GetHashCode();
      if (BoxText.Length != 0) hash ^= BoxText.GetHashCode();
      if (BoxBroadcastTextId != 0) hash ^= BoxBroadcastTextId.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MenuId);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (OptionIcon != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OptionIcon);
      }
      if (OptionText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptionText);
      }
      if (OptionBroadcastTextId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OptionBroadcastTextId);
      }
      if (OptionId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(OptionId);
      }
      if (NpcOptionNpcflag != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(NpcOptionNpcflag);
      }
      if (ActionMenuId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ActionMenuId);
      }
      if (ActionPoiId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ActionPoiId);
      }
      if (ActionScriptId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ActionScriptId);
      }
      if (BoxCoded != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(BoxCoded);
      }
      if (BoxMoney != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(BoxMoney);
      }
      if (BoxText.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BoxText);
      }
      if (BoxBroadcastTextId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BoxBroadcastTextId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ConditionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MenuId);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (OptionIcon != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OptionIcon);
      }
      if (OptionText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptionText);
      }
      if (OptionBroadcastTextId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OptionBroadcastTextId);
      }
      if (OptionId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(OptionId);
      }
      if (NpcOptionNpcflag != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(NpcOptionNpcflag);
      }
      if (ActionMenuId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ActionMenuId);
      }
      if (ActionPoiId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ActionPoiId);
      }
      if (ActionScriptId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ActionScriptId);
      }
      if (BoxCoded != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(BoxCoded);
      }
      if (BoxMoney != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(BoxMoney);
      }
      if (BoxText.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BoxText);
      }
      if (BoxBroadcastTextId != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BoxBroadcastTextId);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ConditionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MenuId);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (OptionIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OptionIcon);
      }
      if (OptionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionText);
      }
      if (OptionBroadcastTextId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OptionBroadcastTextId);
      }
      if (OptionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OptionId);
      }
      if (NpcOptionNpcflag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NpcOptionNpcflag);
      }
      if (ActionMenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionMenuId);
      }
      if (ActionPoiId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionPoiId);
      }
      if (ActionScriptId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionScriptId);
      }
      if (BoxCoded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoxCoded);
      }
      if (BoxMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoxMoney);
      }
      if (BoxText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxText);
      }
      if (BoxBroadcastTextId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoxBroadcastTextId);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GossipMenuOption other) {
      if (other == null) {
        return;
      }
      if (other.MenuId != 0) {
        MenuId = other.MenuId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OptionIcon != 0) {
        OptionIcon = other.OptionIcon;
      }
      if (other.OptionText.Length != 0) {
        OptionText = other.OptionText;
      }
      if (other.OptionBroadcastTextId != 0) {
        OptionBroadcastTextId = other.OptionBroadcastTextId;
      }
      if (other.OptionId != 0) {
        OptionId = other.OptionId;
      }
      if (other.NpcOptionNpcflag != 0) {
        NpcOptionNpcflag = other.NpcOptionNpcflag;
      }
      if (other.ActionMenuId != 0) {
        ActionMenuId = other.ActionMenuId;
      }
      if (other.ActionPoiId != 0) {
        ActionPoiId = other.ActionPoiId;
      }
      if (other.ActionScriptId != 0) {
        ActionScriptId = other.ActionScriptId;
      }
      if (other.BoxCoded != 0) {
        BoxCoded = other.BoxCoded;
      }
      if (other.BoxMoney != 0) {
        BoxMoney = other.BoxMoney;
      }
      if (other.BoxText.Length != 0) {
        BoxText = other.BoxText;
      }
      if (other.BoxBroadcastTextId != 0) {
        BoxBroadcastTextId = other.BoxBroadcastTextId;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MenuId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            OptionIcon = input.ReadUInt32();
            break;
          }
          case 34: {
            OptionText = input.ReadString();
            break;
          }
          case 40: {
            OptionBroadcastTextId = input.ReadUInt32();
            break;
          }
          case 48: {
            OptionId = input.ReadUInt32();
            break;
          }
          case 56: {
            NpcOptionNpcflag = input.ReadUInt32();
            break;
          }
          case 64: {
            ActionMenuId = input.ReadInt32();
            break;
          }
          case 72: {
            ActionPoiId = input.ReadUInt32();
            break;
          }
          case 80: {
            ActionScriptId = input.ReadUInt32();
            break;
          }
          case 88: {
            BoxCoded = input.ReadUInt32();
            break;
          }
          case 96: {
            BoxMoney = input.ReadUInt32();
            break;
          }
          case 106: {
            BoxText = input.ReadString();
            break;
          }
          case 112: {
            BoxBroadcastTextId = input.ReadUInt32();
            break;
          }
          case 120: {
            ConditionId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MenuId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 24: {
            OptionIcon = input.ReadUInt32();
            break;
          }
          case 34: {
            OptionText = input.ReadString();
            break;
          }
          case 40: {
            OptionBroadcastTextId = input.ReadUInt32();
            break;
          }
          case 48: {
            OptionId = input.ReadUInt32();
            break;
          }
          case 56: {
            NpcOptionNpcflag = input.ReadUInt32();
            break;
          }
          case 64: {
            ActionMenuId = input.ReadInt32();
            break;
          }
          case 72: {
            ActionPoiId = input.ReadUInt32();
            break;
          }
          case 80: {
            ActionScriptId = input.ReadUInt32();
            break;
          }
          case 88: {
            BoxCoded = input.ReadUInt32();
            break;
          }
          case 96: {
            BoxMoney = input.ReadUInt32();
            break;
          }
          case 106: {
            BoxText = input.ReadString();
            break;
          }
          case 112: {
            BoxBroadcastTextId = input.ReadUInt32();
            break;
          }
          case 120: {
            ConditionId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GossipScript : pb::IMessage<GossipScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GossipScript> _parser = new pb::MessageParser<GossipScript>(() => new GossipScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GossipScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipScript(GossipScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GossipScript Clone() {
      return new GossipScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the gossip script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay in seconds before the script executes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command type for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// First data field for additional script parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Second data field for additional script parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Third data field for additional script parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Fourth data field for additional script parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// First target parameter for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Second target parameter for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Type of target for the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags that modify the behavior of the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// First integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Second integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Third integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Fourth integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate for position-based scripts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate for position-based scripts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate for position-based scripts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation for position-based scripts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for determining when the script can run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Optional comments for context or explanation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GossipScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GossipScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GossipScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstanceBuffRemoval : pb::IMessage<InstanceBuffRemoval>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceBuffRemoval> _parser = new pb::MessageParser<InstanceBuffRemoval>(() => new InstanceBuffRemoval());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceBuffRemoval> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceBuffRemoval() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceBuffRemoval(InstanceBuffRemoval other) : this() {
      mapId_ = other.mapId_;
      auraId_ = other.auraId_;
      enabled_ = other.enabled_;
      flags_ = other.flags_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceBuffRemoval Clone() {
      return new InstanceBuffRemoval(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private uint mapId_;
    /// <summary>
    /// The map ID where the aura will be removed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "aura_id" field.</summary>
    public const int AuraIdFieldNumber = 2;
    private uint auraId_;
    /// <summary>
    /// The aura ID to remove upon entering the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuraId {
      get { return auraId_; }
      set {
        auraId_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 3;
    private bool enabled_;
    /// <summary>
    /// Whether aura removal is enabled or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    private uint flags_;
    /// <summary>
    /// Flags defining conditions or behavior for aura removal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 5;
    private string comment_ = "";
    /// <summary>
    /// Description or additional information regarding the removal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceBuffRemoval);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceBuffRemoval other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (AuraId != other.AuraId) return false;
      if (Enabled != other.Enabled) return false;
      if (Flags != other.Flags) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (AuraId != 0) hash ^= AuraId.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (AuraId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AuraId);
      }
      if (Enabled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enabled);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (AuraId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AuraId);
      }
      if (Enabled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enabled);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (AuraId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuraId);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceBuffRemoval other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.AuraId != 0) {
        AuraId = other.AuraId;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AuraId = input.ReadUInt32();
            break;
          }
          case 24: {
            Enabled = input.ReadBool();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
          case 42: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AuraId = input.ReadUInt32();
            break;
          }
          case 24: {
            Enabled = input.ReadBool();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
          case 42: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstanceCreatureKills : pb::IMessage<InstanceCreatureKills>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceCreatureKills> _parser = new pb::MessageParser<InstanceCreatureKills>(() => new InstanceCreatureKills());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceCreatureKills> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCreatureKills() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCreatureKills(InstanceCreatureKills other) : this() {
      mapId_ = other.mapId_;
      creatureEntry_ = other.creatureEntry_;
      spellEntry_ = other.spellEntry_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCreatureKills Clone() {
      return new InstanceCreatureKills(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private uint mapId_;
    /// <summary>
    /// Map ID where the creature exists
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "creature_entry" field.</summary>
    public const int CreatureEntryFieldNumber = 2;
    private uint creatureEntry_;
    /// <summary>
    /// Entry ID of the creature that performed the kill
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureEntry {
      get { return creatureEntry_; }
      set {
        creatureEntry_ = value;
      }
    }

    /// <summary>Field number for the "spell_entry" field.</summary>
    public const int SpellEntryFieldNumber = 3;
    private uint spellEntry_;
    /// <summary>
    /// Spell entry that caused the kill, 0 for melee or unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellEntry {
      get { return spellEntry_; }
      set {
        spellEntry_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private uint count_;
    /// <summary>
    /// Number of kills
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceCreatureKills);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceCreatureKills other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (CreatureEntry != other.CreatureEntry) return false;
      if (SpellEntry != other.SpellEntry) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (CreatureEntry != 0) hash ^= CreatureEntry.GetHashCode();
      if (SpellEntry != 0) hash ^= SpellEntry.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (CreatureEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureEntry);
      }
      if (SpellEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellEntry);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (CreatureEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureEntry);
      }
      if (SpellEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellEntry);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (CreatureEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureEntry);
      }
      if (SpellEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellEntry);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceCreatureKills other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.CreatureEntry != 0) {
        CreatureEntry = other.CreatureEntry;
      }
      if (other.SpellEntry != 0) {
        SpellEntry = other.SpellEntry;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellEntry = input.ReadUInt32();
            break;
          }
          case 32: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellEntry = input.ReadUInt32();
            break;
          }
          case 32: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstanceCustomCounter : pb::IMessage<InstanceCustomCounter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceCustomCounter> _parser = new pb::MessageParser<InstanceCustomCounter>(() => new InstanceCustomCounter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceCustomCounter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCustomCounter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCustomCounter(InstanceCustomCounter other) : this() {
      index_ = other.index_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceCustomCounter Clone() {
      return new InstanceCustomCounter(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private uint index_;
    /// <summary>
    /// Index as defined in InstanceStatistics.h
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private uint count_;
    /// <summary>
    /// The custom counter value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceCustomCounter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceCustomCounter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceCustomCounter other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadUInt32();
            break;
          }
          case 16: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstanceWipe : pb::IMessage<InstanceWipe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceWipe> _parser = new pb::MessageParser<InstanceWipe>(() => new InstanceWipe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceWipe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceWipe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceWipe(InstanceWipe other) : this() {
      mapId_ = other.mapId_;
      creatureEntry_ = other.creatureEntry_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceWipe Clone() {
      return new InstanceWipe(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private uint mapId_;
    /// <summary>
    /// Map ID where the creature exists
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "creature_entry" field.</summary>
    public const int CreatureEntryFieldNumber = 2;
    private uint creatureEntry_;
    /// <summary>
    /// Creature entry ID that the wipe occurred against
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureEntry {
      get { return creatureEntry_; }
      set {
        creatureEntry_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private uint count_;
    /// <summary>
    /// Number of wipes against the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceWipe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceWipe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (CreatureEntry != other.CreatureEntry) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (CreatureEntry != 0) hash ^= CreatureEntry.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (CreatureEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureEntry);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (CreatureEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreatureEntry);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (CreatureEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureEntry);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceWipe other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.CreatureEntry != 0) {
        CreatureEntry = other.CreatureEntry;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 24: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 24: {
            Count = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemDisplayInfo : pb::IMessage<ItemDisplayInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemDisplayInfo> _parser = new pb::MessageParser<ItemDisplayInfo>(() => new ItemDisplayInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemDisplayInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemDisplayInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemDisplayInfo(ItemDisplayInfo other) : this() {
      field0_ = other.field0_;
      field5_ = other.field5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemDisplayInfo Clone() {
      return new ItemDisplayInfo(this);
    }

    /// <summary>Field number for the "field0" field.</summary>
    public const int Field0FieldNumber = 1;
    private int field0_;
    /// <summary>
    /// Field representing some integer attribute (possibly ID or display type)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Field0 {
      get { return field0_; }
      set {
        field0_ = value;
      }
    }

    /// <summary>Field number for the "field5" field.</summary>
    public const int Field5FieldNumber = 2;
    private string field5_ = "";
    /// <summary>
    /// Field for additional display-related information (could be name, description, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Field5 {
      get { return field5_; }
      set {
        field5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemDisplayInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemDisplayInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field0 != other.Field0) return false;
      if (Field5 != other.Field5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Field0 != 0) hash ^= Field0.GetHashCode();
      if (Field5.Length != 0) hash ^= Field5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Field0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Field0);
      }
      if (Field5.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Field5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Field0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Field0);
      }
      if (Field5.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Field5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Field0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field0);
      }
      if (Field5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemDisplayInfo other) {
      if (other == null) {
        return;
      }
      if (other.Field0 != 0) {
        Field0 = other.Field0;
      }
      if (other.Field5.Length != 0) {
        Field5 = other.Field5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Field0 = input.ReadInt32();
            break;
          }
          case 18: {
            Field5 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Field0 = input.ReadInt32();
            break;
          }
          case 18: {
            Field5 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemEnchantmentTemplate : pb::IMessage<ItemEnchantmentTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemEnchantmentTemplate> _parser = new pb::MessageParser<ItemEnchantmentTemplate>(() => new ItemEnchantmentTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemEnchantmentTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantmentTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantmentTemplate(ItemEnchantmentTemplate other) : this() {
      entry_ = other.entry_;
      ench_ = other.ench_;
      chance_ = other.chance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantmentTemplate Clone() {
      return new ItemEnchantmentTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the item that can have enchantments
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "ench" field.</summary>
    public const int EnchFieldNumber = 2;
    private uint ench_;
    /// <summary>
    /// Enchantment ID related to this item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Ench {
      get { return ench_; }
      set {
        ench_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of the enchantment being applied
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemEnchantmentTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemEnchantmentTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Ench != other.Ench) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Ench != 0) hash ^= Ench.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Ench != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Ench);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Ench != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Ench);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Ench != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ench);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemEnchantmentTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Ench != 0) {
        Ench = other.Ench;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Ench = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Ench = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemLootTemplate : pb::IMessage<ItemLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemLootTemplate> _parser = new pb::MessageParser<ItemLootTemplate>(() => new ItemLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLootTemplate(ItemLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLootTemplate Clone() {
      return new ItemLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the item for which this loot is defined
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// ID of the item that can be looted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "ChanceOrQuestChance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance of the item dropping or being used in a quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID for organizing loot drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincountOrRef" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private int mincountOrRef_;
    /// <summary>
    /// Minimum count or reference ID for the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum count of the item that can be looted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for loot drop restrictions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch where the loot is available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch where the loot is available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemRequiredTarget : pb::IMessage<ItemRequiredTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemRequiredTarget> _parser = new pb::MessageParser<ItemRequiredTarget>(() => new ItemRequiredTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemRequiredTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemRequiredTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemRequiredTarget(ItemRequiredTarget other) : this() {
      entry_ = other.entry_;
      type_ = other.type_;
      targetEntry_ = other.targetEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemRequiredTarget Clone() {
      return new ItemRequiredTarget(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    /// <summary>
    /// Type of target requirement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "targetEntry" field.</summary>
    public const int TargetEntryFieldNumber = 3;
    private uint targetEntry_;
    /// <summary>
    /// Entry ID of the target required for the item to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetEntry {
      get { return targetEntry_; }
      set {
        targetEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemRequiredTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemRequiredTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Type != other.Type) return false;
      if (TargetEntry != other.TargetEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TargetEntry != 0) hash ^= TargetEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (TargetEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TargetEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (TargetEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TargetEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (TargetEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemRequiredTarget other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TargetEntry != 0) {
        TargetEntry = other.TargetEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            TargetEntry = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            TargetEntry = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ItemTemplate : pb::IMessage<ItemTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemTemplate> _parser = new pb::MessageParser<ItemTemplate>(() => new ItemTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplate(ItemTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      class_ = other.class_;
      subclass_ = other.subclass_;
      name_ = other.name_;
      displayid_ = other.displayid_;
      quality_ = other.quality_;
      flags_ = other.flags_;
      buyCount_ = other.buyCount_;
      buyPrice_ = other.buyPrice_;
      sellPrice_ = other.sellPrice_;
      inventoryType_ = other.inventoryType_;
      allowableClass_ = other.allowableClass_;
      allowableRace_ = other.allowableRace_;
      itemLevel_ = other.itemLevel_;
      requiredLevel_ = other.requiredLevel_;
      requiredSkill_ = other.requiredSkill_;
      requiredSkillRank_ = other.requiredSkillRank_;
      requiredSpell_ = other.requiredSpell_;
      requiredHonorRank_ = other.requiredHonorRank_;
      requiredCityRank_ = other.requiredCityRank_;
      requiredReputationFaction_ = other.requiredReputationFaction_;
      requiredReputationRank_ = other.requiredReputationRank_;
      maxCount_ = other.maxCount_;
      stackable_ = other.stackable_;
      containerSlots_ = other.containerSlots_;
      stats_ = other.stats_.Clone();
      damages_ = other.damages_.Clone();
      armor_ = other.armor_;
      resistances_ = other.resistances_ != null ? other.resistances_.Clone() : null;
      delay_ = other.delay_;
      ammoType_ = other.ammoType_;
      rangedModRange_ = other.rangedModRange_;
      spells_ = other.spells_.Clone();
      bonding_ = other.bonding_;
      description_ = other.description_;
      pageText_ = other.pageText_;
      languageID_ = other.languageID_;
      pageMaterial_ = other.pageMaterial_;
      startQuest_ = other.startQuest_;
      lockID_ = other.lockID_;
      material_ = other.material_;
      sheath_ = other.sheath_;
      randomProperty_ = other.randomProperty_;
      block_ = other.block_;
      itemSet_ = other.itemSet_;
      maxDurability_ = other.maxDurability_;
      area_ = other.area_;
      map_ = other.map_;
      bagFamily_ = other.bagFamily_;
      scriptName_ = other.scriptName_;
      disenchantID_ = other.disenchantID_;
      foodType_ = other.foodType_;
      minMoneyLoot_ = other.minMoneyLoot_;
      maxMoneyLoot_ = other.maxMoneyLoot_;
      duration_ = other.duration_;
      extraFlags_ = other.extraFlags_;
      otherTeamEntry_ = other.otherTeamEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemTemplate Clone() {
      return new ItemTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique item identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version for the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 3;
    private uint class_;
    /// <summary>
    /// Class of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "subclass" field.</summary>
    public const int SubclassFieldNumber = 4;
    private uint subclass_;
    /// <summary>
    /// Subclass of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Subclass {
      get { return subclass_; }
      set {
        subclass_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// Name of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayid" field.</summary>
    public const int DisplayidFieldNumber = 6;
    private uint displayid_;
    /// <summary>
    /// Display ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Displayid {
      get { return displayid_; }
      set {
        displayid_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 7;
    private uint quality_;
    /// <summary>
    /// Item quality
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 8;
    private uint flags_;
    /// <summary>
    /// Item flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "buyCount" field.</summary>
    public const int BuyCountFieldNumber = 9;
    private uint buyCount_;
    /// <summary>
    /// Buy count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    /// <summary>Field number for the "buyPrice" field.</summary>
    public const int BuyPriceFieldNumber = 10;
    private uint buyPrice_;
    /// <summary>
    /// Buy price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BuyPrice {
      get { return buyPrice_; }
      set {
        buyPrice_ = value;
      }
    }

    /// <summary>Field number for the "sellPrice" field.</summary>
    public const int SellPriceFieldNumber = 11;
    private uint sellPrice_;
    /// <summary>
    /// Sell price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SellPrice {
      get { return sellPrice_; }
      set {
        sellPrice_ = value;
      }
    }

    /// <summary>Field number for the "inventoryType" field.</summary>
    public const int InventoryTypeFieldNumber = 12;
    private uint inventoryType_;
    /// <summary>
    /// Inventory type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InventoryType {
      get { return inventoryType_; }
      set {
        inventoryType_ = value;
      }
    }

    /// <summary>Field number for the "allowableClass" field.</summary>
    public const int AllowableClassFieldNumber = 13;
    private int allowableClass_;
    /// <summary>
    /// Allowable classes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllowableClass {
      get { return allowableClass_; }
      set {
        allowableClass_ = value;
      }
    }

    /// <summary>Field number for the "allowableRace" field.</summary>
    public const int AllowableRaceFieldNumber = 14;
    private int allowableRace_;
    /// <summary>
    /// Allowable races
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllowableRace {
      get { return allowableRace_; }
      set {
        allowableRace_ = value;
      }
    }

    /// <summary>Field number for the "itemLevel" field.</summary>
    public const int ItemLevelFieldNumber = 15;
    private uint itemLevel_;
    /// <summary>
    /// Item level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemLevel {
      get { return itemLevel_; }
      set {
        itemLevel_ = value;
      }
    }

    /// <summary>Field number for the "requiredLevel" field.</summary>
    public const int RequiredLevelFieldNumber = 16;
    private uint requiredLevel_;
    /// <summary>
    /// Required level to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredLevel {
      get { return requiredLevel_; }
      set {
        requiredLevel_ = value;
      }
    }

    /// <summary>Field number for the "requiredSkill" field.</summary>
    public const int RequiredSkillFieldNumber = 17;
    private uint requiredSkill_;
    /// <summary>
    /// Required skill
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSkill {
      get { return requiredSkill_; }
      set {
        requiredSkill_ = value;
      }
    }

    /// <summary>Field number for the "requiredSkillRank" field.</summary>
    public const int RequiredSkillRankFieldNumber = 18;
    private uint requiredSkillRank_;
    /// <summary>
    /// Required skill rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSkillRank {
      get { return requiredSkillRank_; }
      set {
        requiredSkillRank_ = value;
      }
    }

    /// <summary>Field number for the "requiredSpell" field.</summary>
    public const int RequiredSpellFieldNumber = 19;
    private uint requiredSpell_;
    /// <summary>
    /// Required spell to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSpell {
      get { return requiredSpell_; }
      set {
        requiredSpell_ = value;
      }
    }

    /// <summary>Field number for the "requiredHonorRank" field.</summary>
    public const int RequiredHonorRankFieldNumber = 20;
    private uint requiredHonorRank_;
    /// <summary>
    /// Required honor rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredHonorRank {
      get { return requiredHonorRank_; }
      set {
        requiredHonorRank_ = value;
      }
    }

    /// <summary>Field number for the "requiredCityRank" field.</summary>
    public const int RequiredCityRankFieldNumber = 21;
    private uint requiredCityRank_;
    /// <summary>
    /// Required city rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredCityRank {
      get { return requiredCityRank_; }
      set {
        requiredCityRank_ = value;
      }
    }

    /// <summary>Field number for the "requiredReputationFaction" field.</summary>
    public const int RequiredReputationFactionFieldNumber = 22;
    private uint requiredReputationFaction_;
    /// <summary>
    /// Required reputation faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredReputationFaction {
      get { return requiredReputationFaction_; }
      set {
        requiredReputationFaction_ = value;
      }
    }

    /// <summary>Field number for the "requiredReputationRank" field.</summary>
    public const int RequiredReputationRankFieldNumber = 23;
    private uint requiredReputationRank_;
    /// <summary>
    /// Required reputation rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredReputationRank {
      get { return requiredReputationRank_; }
      set {
        requiredReputationRank_ = value;
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 24;
    private uint maxCount_;
    /// <summary>
    /// Max count in inventory
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "stackable" field.</summary>
    public const int StackableFieldNumber = 25;
    private uint stackable_;
    /// <summary>
    /// Stackable count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Stackable {
      get { return stackable_; }
      set {
        stackable_ = value;
      }
    }

    /// <summary>Field number for the "containerSlots" field.</summary>
    public const int ContainerSlotsFieldNumber = 26;
    private uint containerSlots_;
    /// <summary>
    /// Container slots
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ContainerSlots {
      get { return containerSlots_; }
      set {
        containerSlots_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 27;
    private static readonly pb::FieldCodec<global::Database.Stat> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(218, global::Database.Stat.Parser);
    private readonly pbc::RepeatedField<global::Database.Stat> stats_ = new pbc::RepeatedField<global::Database.Stat>();
    /// <summary>
    /// Stats of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Database.Stat> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "damages" field.</summary>
    public const int DamagesFieldNumber = 28;
    private static readonly pb::FieldCodec<global::Database.Damage> _repeated_damages_codec
        = pb::FieldCodec.ForMessage(226, global::Database.Damage.Parser);
    private readonly pbc::RepeatedField<global::Database.Damage> damages_ = new pbc::RepeatedField<global::Database.Damage>();
    /// <summary>
    /// Damage attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Database.Damage> Damages {
      get { return damages_; }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 29;
    private uint armor_;
    /// <summary>
    /// Armor value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "resistances" field.</summary>
    public const int ResistancesFieldNumber = 30;
    private global::Database.Resistance resistances_;
    /// <summary>
    /// Resistances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Database.Resistance Resistances {
      get { return resistances_; }
      set {
        resistances_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 31;
    private uint delay_;
    /// <summary>
    /// Delay between attacks (for weapons)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "ammoType" field.</summary>
    public const int AmmoTypeFieldNumber = 32;
    private uint ammoType_;
    /// <summary>
    /// Ammo type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AmmoType {
      get { return ammoType_; }
      set {
        ammoType_ = value;
      }
    }

    /// <summary>Field number for the "rangedModRange" field.</summary>
    public const int RangedModRangeFieldNumber = 33;
    private uint rangedModRange_;
    /// <summary>
    /// Ranged mod range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RangedModRange {
      get { return rangedModRange_; }
      set {
        rangedModRange_ = value;
      }
    }

    /// <summary>Field number for the "spells" field.</summary>
    public const int SpellsFieldNumber = 34;
    private static readonly pb::FieldCodec<global::Database.Spell> _repeated_spells_codec
        = pb::FieldCodec.ForMessage(274, global::Database.Spell.Parser);
    private readonly pbc::RepeatedField<global::Database.Spell> spells_ = new pbc::RepeatedField<global::Database.Spell>();
    /// <summary>
    /// Associated spells
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Database.Spell> Spells {
      get { return spells_; }
    }

    /// <summary>Field number for the "bonding" field.</summary>
    public const int BondingFieldNumber = 35;
    private uint bonding_;
    /// <summary>
    /// Bonding type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bonding {
      get { return bonding_; }
      set {
        bonding_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 36;
    private string description_ = "";
    /// <summary>
    /// Item description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pageText" field.</summary>
    public const int PageTextFieldNumber = 37;
    private uint pageText_;
    /// <summary>
    /// Page text ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PageText {
      get { return pageText_; }
      set {
        pageText_ = value;
      }
    }

    /// <summary>Field number for the "languageID" field.</summary>
    public const int LanguageIDFieldNumber = 38;
    private uint languageID_;
    /// <summary>
    /// Language ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LanguageID {
      get { return languageID_; }
      set {
        languageID_ = value;
      }
    }

    /// <summary>Field number for the "pageMaterial" field.</summary>
    public const int PageMaterialFieldNumber = 39;
    private uint pageMaterial_;
    /// <summary>
    /// Page material type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PageMaterial {
      get { return pageMaterial_; }
      set {
        pageMaterial_ = value;
      }
    }

    /// <summary>Field number for the "startQuest" field.</summary>
    public const int StartQuestFieldNumber = 40;
    private uint startQuest_;
    /// <summary>
    /// ID of the quest the item starts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartQuest {
      get { return startQuest_; }
      set {
        startQuest_ = value;
      }
    }

    /// <summary>Field number for the "lockID" field.</summary>
    public const int LockIDFieldNumber = 41;
    private uint lockID_;
    /// <summary>
    /// Lock ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LockID {
      get { return lockID_; }
      set {
        lockID_ = value;
      }
    }

    /// <summary>Field number for the "material" field.</summary>
    public const int MaterialFieldNumber = 42;
    private int material_;
    /// <summary>
    /// Material type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Material {
      get { return material_; }
      set {
        material_ = value;
      }
    }

    /// <summary>Field number for the "sheath" field.</summary>
    public const int SheathFieldNumber = 43;
    private uint sheath_;
    /// <summary>
    /// Sheath type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sheath {
      get { return sheath_; }
      set {
        sheath_ = value;
      }
    }

    /// <summary>Field number for the "randomProperty" field.</summary>
    public const int RandomPropertyFieldNumber = 44;
    private uint randomProperty_;
    /// <summary>
    /// Random property ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RandomProperty {
      get { return randomProperty_; }
      set {
        randomProperty_ = value;
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 45;
    private uint block_;
    /// <summary>
    /// Block value (for shields)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "itemSet" field.</summary>
    public const int ItemSetFieldNumber = 46;
    private uint itemSet_;
    /// <summary>
    /// Item set ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemSet {
      get { return itemSet_; }
      set {
        itemSet_ = value;
      }
    }

    /// <summary>Field number for the "maxDurability" field.</summary>
    public const int MaxDurabilityFieldNumber = 47;
    private uint maxDurability_;
    /// <summary>
    /// Maximum durability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxDurability {
      get { return maxDurability_; }
      set {
        maxDurability_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 48;
    private uint area_;
    /// <summary>
    /// Area restriction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 49;
    private uint map_;
    /// <summary>
    /// Map restriction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "bagFamily" field.</summary>
    public const int BagFamilyFieldNumber = 50;
    private uint bagFamily_;
    /// <summary>
    /// Bag family
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BagFamily {
      get { return bagFamily_; }
      set {
        bagFamily_ = value;
      }
    }

    /// <summary>Field number for the "scriptName" field.</summary>
    public const int ScriptNameFieldNumber = 51;
    private string scriptName_ = "";
    /// <summary>
    /// Script name associated with the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disenchantID" field.</summary>
    public const int DisenchantIDFieldNumber = 52;
    private uint disenchantID_;
    /// <summary>
    /// Disenchant ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DisenchantID {
      get { return disenchantID_; }
      set {
        disenchantID_ = value;
      }
    }

    /// <summary>Field number for the "foodType" field.</summary>
    public const int FoodTypeFieldNumber = 53;
    private uint foodType_;
    /// <summary>
    /// Food type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FoodType {
      get { return foodType_; }
      set {
        foodType_ = value;
      }
    }

    /// <summary>Field number for the "minMoneyLoot" field.</summary>
    public const int MinMoneyLootFieldNumber = 54;
    private uint minMoneyLoot_;
    /// <summary>
    /// Minimum money loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinMoneyLoot {
      get { return minMoneyLoot_; }
      set {
        minMoneyLoot_ = value;
      }
    }

    /// <summary>Field number for the "maxMoneyLoot" field.</summary>
    public const int MaxMoneyLootFieldNumber = 55;
    private uint maxMoneyLoot_;
    /// <summary>
    /// Maximum money loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxMoneyLoot {
      get { return maxMoneyLoot_; }
      set {
        maxMoneyLoot_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 56;
    private uint duration_;
    /// <summary>
    /// Duration of the item (in seconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "extraFlags" field.</summary>
    public const int ExtraFlagsFieldNumber = 57;
    private uint extraFlags_;
    /// <summary>
    /// Extra flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ExtraFlags {
      get { return extraFlags_; }
      set {
        extraFlags_ = value;
      }
    }

    /// <summary>Field number for the "otherTeamEntry" field.</summary>
    public const int OtherTeamEntryFieldNumber = 58;
    private uint otherTeamEntry_;
    /// <summary>
    /// Entry for the other team version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OtherTeamEntry {
      get { return otherTeamEntry_; }
      set {
        otherTeamEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Class != other.Class) return false;
      if (Subclass != other.Subclass) return false;
      if (Name != other.Name) return false;
      if (Displayid != other.Displayid) return false;
      if (Quality != other.Quality) return false;
      if (Flags != other.Flags) return false;
      if (BuyCount != other.BuyCount) return false;
      if (BuyPrice != other.BuyPrice) return false;
      if (SellPrice != other.SellPrice) return false;
      if (InventoryType != other.InventoryType) return false;
      if (AllowableClass != other.AllowableClass) return false;
      if (AllowableRace != other.AllowableRace) return false;
      if (ItemLevel != other.ItemLevel) return false;
      if (RequiredLevel != other.RequiredLevel) return false;
      if (RequiredSkill != other.RequiredSkill) return false;
      if (RequiredSkillRank != other.RequiredSkillRank) return false;
      if (RequiredSpell != other.RequiredSpell) return false;
      if (RequiredHonorRank != other.RequiredHonorRank) return false;
      if (RequiredCityRank != other.RequiredCityRank) return false;
      if (RequiredReputationFaction != other.RequiredReputationFaction) return false;
      if (RequiredReputationRank != other.RequiredReputationRank) return false;
      if (MaxCount != other.MaxCount) return false;
      if (Stackable != other.Stackable) return false;
      if (ContainerSlots != other.ContainerSlots) return false;
      if(!stats_.Equals(other.stats_)) return false;
      if(!damages_.Equals(other.damages_)) return false;
      if (Armor != other.Armor) return false;
      if (!object.Equals(Resistances, other.Resistances)) return false;
      if (Delay != other.Delay) return false;
      if (AmmoType != other.AmmoType) return false;
      if (RangedModRange != other.RangedModRange) return false;
      if(!spells_.Equals(other.spells_)) return false;
      if (Bonding != other.Bonding) return false;
      if (Description != other.Description) return false;
      if (PageText != other.PageText) return false;
      if (LanguageID != other.LanguageID) return false;
      if (PageMaterial != other.PageMaterial) return false;
      if (StartQuest != other.StartQuest) return false;
      if (LockID != other.LockID) return false;
      if (Material != other.Material) return false;
      if (Sheath != other.Sheath) return false;
      if (RandomProperty != other.RandomProperty) return false;
      if (Block != other.Block) return false;
      if (ItemSet != other.ItemSet) return false;
      if (MaxDurability != other.MaxDurability) return false;
      if (Area != other.Area) return false;
      if (Map != other.Map) return false;
      if (BagFamily != other.BagFamily) return false;
      if (ScriptName != other.ScriptName) return false;
      if (DisenchantID != other.DisenchantID) return false;
      if (FoodType != other.FoodType) return false;
      if (MinMoneyLoot != other.MinMoneyLoot) return false;
      if (MaxMoneyLoot != other.MaxMoneyLoot) return false;
      if (Duration != other.Duration) return false;
      if (ExtraFlags != other.ExtraFlags) return false;
      if (OtherTeamEntry != other.OtherTeamEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Subclass != 0) hash ^= Subclass.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Displayid != 0) hash ^= Displayid.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (BuyPrice != 0) hash ^= BuyPrice.GetHashCode();
      if (SellPrice != 0) hash ^= SellPrice.GetHashCode();
      if (InventoryType != 0) hash ^= InventoryType.GetHashCode();
      if (AllowableClass != 0) hash ^= AllowableClass.GetHashCode();
      if (AllowableRace != 0) hash ^= AllowableRace.GetHashCode();
      if (ItemLevel != 0) hash ^= ItemLevel.GetHashCode();
      if (RequiredLevel != 0) hash ^= RequiredLevel.GetHashCode();
      if (RequiredSkill != 0) hash ^= RequiredSkill.GetHashCode();
      if (RequiredSkillRank != 0) hash ^= RequiredSkillRank.GetHashCode();
      if (RequiredSpell != 0) hash ^= RequiredSpell.GetHashCode();
      if (RequiredHonorRank != 0) hash ^= RequiredHonorRank.GetHashCode();
      if (RequiredCityRank != 0) hash ^= RequiredCityRank.GetHashCode();
      if (RequiredReputationFaction != 0) hash ^= RequiredReputationFaction.GetHashCode();
      if (RequiredReputationRank != 0) hash ^= RequiredReputationRank.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (Stackable != 0) hash ^= Stackable.GetHashCode();
      if (ContainerSlots != 0) hash ^= ContainerSlots.GetHashCode();
      hash ^= stats_.GetHashCode();
      hash ^= damages_.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (resistances_ != null) hash ^= Resistances.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (AmmoType != 0) hash ^= AmmoType.GetHashCode();
      if (RangedModRange != 0) hash ^= RangedModRange.GetHashCode();
      hash ^= spells_.GetHashCode();
      if (Bonding != 0) hash ^= Bonding.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (PageText != 0) hash ^= PageText.GetHashCode();
      if (LanguageID != 0) hash ^= LanguageID.GetHashCode();
      if (PageMaterial != 0) hash ^= PageMaterial.GetHashCode();
      if (StartQuest != 0) hash ^= StartQuest.GetHashCode();
      if (LockID != 0) hash ^= LockID.GetHashCode();
      if (Material != 0) hash ^= Material.GetHashCode();
      if (Sheath != 0) hash ^= Sheath.GetHashCode();
      if (RandomProperty != 0) hash ^= RandomProperty.GetHashCode();
      if (Block != 0) hash ^= Block.GetHashCode();
      if (ItemSet != 0) hash ^= ItemSet.GetHashCode();
      if (MaxDurability != 0) hash ^= MaxDurability.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (Map != 0) hash ^= Map.GetHashCode();
      if (BagFamily != 0) hash ^= BagFamily.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (DisenchantID != 0) hash ^= DisenchantID.GetHashCode();
      if (FoodType != 0) hash ^= FoodType.GetHashCode();
      if (MinMoneyLoot != 0) hash ^= MinMoneyLoot.GetHashCode();
      if (MaxMoneyLoot != 0) hash ^= MaxMoneyLoot.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (ExtraFlags != 0) hash ^= ExtraFlags.GetHashCode();
      if (OtherTeamEntry != 0) hash ^= OtherTeamEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Class != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Class);
      }
      if (Subclass != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Subclass);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Displayid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Displayid);
      }
      if (Quality != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Quality);
      }
      if (Flags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BuyCount);
      }
      if (BuyPrice != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BuyPrice);
      }
      if (SellPrice != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SellPrice);
      }
      if (InventoryType != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(InventoryType);
      }
      if (AllowableClass != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AllowableClass);
      }
      if (AllowableRace != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(AllowableRace);
      }
      if (ItemLevel != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ItemLevel);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RequiredLevel);
      }
      if (RequiredSkill != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RequiredSkill);
      }
      if (RequiredSkillRank != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(RequiredSkillRank);
      }
      if (RequiredSpell != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(RequiredSpell);
      }
      if (RequiredHonorRank != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(RequiredHonorRank);
      }
      if (RequiredCityRank != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(RequiredCityRank);
      }
      if (RequiredReputationFaction != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(RequiredReputationFaction);
      }
      if (RequiredReputationRank != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(RequiredReputationRank);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(MaxCount);
      }
      if (Stackable != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Stackable);
      }
      if (ContainerSlots != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(ContainerSlots);
      }
      stats_.WriteTo(output, _repeated_stats_codec);
      damages_.WriteTo(output, _repeated_damages_codec);
      if (Armor != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(Armor);
      }
      if (resistances_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Resistances);
      }
      if (Delay != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(Delay);
      }
      if (AmmoType != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(AmmoType);
      }
      if (RangedModRange != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(RangedModRange);
      }
      spells_.WriteTo(output, _repeated_spells_codec);
      if (Bonding != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(Bonding);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(Description);
      }
      if (PageText != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(PageText);
      }
      if (LanguageID != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(LanguageID);
      }
      if (PageMaterial != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(PageMaterial);
      }
      if (StartQuest != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(StartQuest);
      }
      if (LockID != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(LockID);
      }
      if (Material != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(Material);
      }
      if (Sheath != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(Sheath);
      }
      if (RandomProperty != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(RandomProperty);
      }
      if (Block != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(Block);
      }
      if (ItemSet != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ItemSet);
      }
      if (MaxDurability != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(MaxDurability);
      }
      if (Area != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Area);
      }
      if (Map != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(Map);
      }
      if (BagFamily != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(BagFamily);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ScriptName);
      }
      if (DisenchantID != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(DisenchantID);
      }
      if (FoodType != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(FoodType);
      }
      if (MinMoneyLoot != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(MinMoneyLoot);
      }
      if (MaxMoneyLoot != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(MaxMoneyLoot);
      }
      if (Duration != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(Duration);
      }
      if (ExtraFlags != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ExtraFlags);
      }
      if (OtherTeamEntry != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(OtherTeamEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Class != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Class);
      }
      if (Subclass != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Subclass);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Displayid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Displayid);
      }
      if (Quality != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Quality);
      }
      if (Flags != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Flags);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(BuyCount);
      }
      if (BuyPrice != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BuyPrice);
      }
      if (SellPrice != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SellPrice);
      }
      if (InventoryType != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(InventoryType);
      }
      if (AllowableClass != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AllowableClass);
      }
      if (AllowableRace != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(AllowableRace);
      }
      if (ItemLevel != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(ItemLevel);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RequiredLevel);
      }
      if (RequiredSkill != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RequiredSkill);
      }
      if (RequiredSkillRank != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(RequiredSkillRank);
      }
      if (RequiredSpell != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(RequiredSpell);
      }
      if (RequiredHonorRank != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(RequiredHonorRank);
      }
      if (RequiredCityRank != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(RequiredCityRank);
      }
      if (RequiredReputationFaction != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(RequiredReputationFaction);
      }
      if (RequiredReputationRank != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(RequiredReputationRank);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(MaxCount);
      }
      if (Stackable != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Stackable);
      }
      if (ContainerSlots != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(ContainerSlots);
      }
      stats_.WriteTo(ref output, _repeated_stats_codec);
      damages_.WriteTo(ref output, _repeated_damages_codec);
      if (Armor != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(Armor);
      }
      if (resistances_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Resistances);
      }
      if (Delay != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(Delay);
      }
      if (AmmoType != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(AmmoType);
      }
      if (RangedModRange != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(RangedModRange);
      }
      spells_.WriteTo(ref output, _repeated_spells_codec);
      if (Bonding != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(Bonding);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(Description);
      }
      if (PageText != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(PageText);
      }
      if (LanguageID != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(LanguageID);
      }
      if (PageMaterial != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(PageMaterial);
      }
      if (StartQuest != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(StartQuest);
      }
      if (LockID != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(LockID);
      }
      if (Material != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(Material);
      }
      if (Sheath != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(Sheath);
      }
      if (RandomProperty != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(RandomProperty);
      }
      if (Block != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(Block);
      }
      if (ItemSet != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ItemSet);
      }
      if (MaxDurability != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(MaxDurability);
      }
      if (Area != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Area);
      }
      if (Map != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(Map);
      }
      if (BagFamily != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(BagFamily);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ScriptName);
      }
      if (DisenchantID != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(DisenchantID);
      }
      if (FoodType != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(FoodType);
      }
      if (MinMoneyLoot != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(MinMoneyLoot);
      }
      if (MaxMoneyLoot != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(MaxMoneyLoot);
      }
      if (Duration != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(Duration);
      }
      if (ExtraFlags != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ExtraFlags);
      }
      if (OtherTeamEntry != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(OtherTeamEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Subclass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Subclass);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Displayid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Displayid);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuyCount);
      }
      if (BuyPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuyPrice);
      }
      if (SellPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SellPrice);
      }
      if (InventoryType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventoryType);
      }
      if (AllowableClass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllowableClass);
      }
      if (AllowableRace != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllowableRace);
      }
      if (ItemLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemLevel);
      }
      if (RequiredLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredLevel);
      }
      if (RequiredSkill != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSkill);
      }
      if (RequiredSkillRank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSkillRank);
      }
      if (RequiredSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSpell);
      }
      if (RequiredHonorRank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredHonorRank);
      }
      if (RequiredCityRank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredCityRank);
      }
      if (RequiredReputationFaction != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredReputationFaction);
      }
      if (RequiredReputationRank != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredReputationRank);
      }
      if (MaxCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxCount);
      }
      if (Stackable != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Stackable);
      }
      if (ContainerSlots != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ContainerSlots);
      }
      size += stats_.CalculateSize(_repeated_stats_codec);
      size += damages_.CalculateSize(_repeated_damages_codec);
      if (Armor != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Armor);
      }
      if (resistances_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Resistances);
      }
      if (Delay != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (AmmoType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AmmoType);
      }
      if (RangedModRange != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RangedModRange);
      }
      size += spells_.CalculateSize(_repeated_spells_codec);
      if (Bonding != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Bonding);
      }
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (PageText != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PageText);
      }
      if (LanguageID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LanguageID);
      }
      if (PageMaterial != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PageMaterial);
      }
      if (StartQuest != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StartQuest);
      }
      if (LockID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LockID);
      }
      if (Material != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Material);
      }
      if (Sheath != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Sheath);
      }
      if (RandomProperty != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RandomProperty);
      }
      if (Block != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Block);
      }
      if (ItemSet != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ItemSet);
      }
      if (MaxDurability != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxDurability);
      }
      if (Area != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Area);
      }
      if (Map != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (BagFamily != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BagFamily);
      }
      if (ScriptName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (DisenchantID != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DisenchantID);
      }
      if (FoodType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FoodType);
      }
      if (MinMoneyLoot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MinMoneyLoot);
      }
      if (MaxMoneyLoot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxMoneyLoot);
      }
      if (Duration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
      }
      if (ExtraFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ExtraFlags);
      }
      if (OtherTeamEntry != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OtherTeamEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Subclass != 0) {
        Subclass = other.Subclass;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Displayid != 0) {
        Displayid = other.Displayid;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      if (other.BuyPrice != 0) {
        BuyPrice = other.BuyPrice;
      }
      if (other.SellPrice != 0) {
        SellPrice = other.SellPrice;
      }
      if (other.InventoryType != 0) {
        InventoryType = other.InventoryType;
      }
      if (other.AllowableClass != 0) {
        AllowableClass = other.AllowableClass;
      }
      if (other.AllowableRace != 0) {
        AllowableRace = other.AllowableRace;
      }
      if (other.ItemLevel != 0) {
        ItemLevel = other.ItemLevel;
      }
      if (other.RequiredLevel != 0) {
        RequiredLevel = other.RequiredLevel;
      }
      if (other.RequiredSkill != 0) {
        RequiredSkill = other.RequiredSkill;
      }
      if (other.RequiredSkillRank != 0) {
        RequiredSkillRank = other.RequiredSkillRank;
      }
      if (other.RequiredSpell != 0) {
        RequiredSpell = other.RequiredSpell;
      }
      if (other.RequiredHonorRank != 0) {
        RequiredHonorRank = other.RequiredHonorRank;
      }
      if (other.RequiredCityRank != 0) {
        RequiredCityRank = other.RequiredCityRank;
      }
      if (other.RequiredReputationFaction != 0) {
        RequiredReputationFaction = other.RequiredReputationFaction;
      }
      if (other.RequiredReputationRank != 0) {
        RequiredReputationRank = other.RequiredReputationRank;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.Stackable != 0) {
        Stackable = other.Stackable;
      }
      if (other.ContainerSlots != 0) {
        ContainerSlots = other.ContainerSlots;
      }
      stats_.Add(other.stats_);
      damages_.Add(other.damages_);
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.resistances_ != null) {
        if (resistances_ == null) {
          Resistances = new global::Database.Resistance();
        }
        Resistances.MergeFrom(other.Resistances);
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.AmmoType != 0) {
        AmmoType = other.AmmoType;
      }
      if (other.RangedModRange != 0) {
        RangedModRange = other.RangedModRange;
      }
      spells_.Add(other.spells_);
      if (other.Bonding != 0) {
        Bonding = other.Bonding;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.PageText != 0) {
        PageText = other.PageText;
      }
      if (other.LanguageID != 0) {
        LanguageID = other.LanguageID;
      }
      if (other.PageMaterial != 0) {
        PageMaterial = other.PageMaterial;
      }
      if (other.StartQuest != 0) {
        StartQuest = other.StartQuest;
      }
      if (other.LockID != 0) {
        LockID = other.LockID;
      }
      if (other.Material != 0) {
        Material = other.Material;
      }
      if (other.Sheath != 0) {
        Sheath = other.Sheath;
      }
      if (other.RandomProperty != 0) {
        RandomProperty = other.RandomProperty;
      }
      if (other.Block != 0) {
        Block = other.Block;
      }
      if (other.ItemSet != 0) {
        ItemSet = other.ItemSet;
      }
      if (other.MaxDurability != 0) {
        MaxDurability = other.MaxDurability;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.BagFamily != 0) {
        BagFamily = other.BagFamily;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      if (other.DisenchantID != 0) {
        DisenchantID = other.DisenchantID;
      }
      if (other.FoodType != 0) {
        FoodType = other.FoodType;
      }
      if (other.MinMoneyLoot != 0) {
        MinMoneyLoot = other.MinMoneyLoot;
      }
      if (other.MaxMoneyLoot != 0) {
        MaxMoneyLoot = other.MaxMoneyLoot;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.ExtraFlags != 0) {
        ExtraFlags = other.ExtraFlags;
      }
      if (other.OtherTeamEntry != 0) {
        OtherTeamEntry = other.OtherTeamEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Class = input.ReadUInt32();
            break;
          }
          case 32: {
            Subclass = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Displayid = input.ReadUInt32();
            break;
          }
          case 56: {
            Quality = input.ReadUInt32();
            break;
          }
          case 64: {
            Flags = input.ReadUInt32();
            break;
          }
          case 72: {
            BuyCount = input.ReadUInt32();
            break;
          }
          case 80: {
            BuyPrice = input.ReadUInt32();
            break;
          }
          case 88: {
            SellPrice = input.ReadUInt32();
            break;
          }
          case 96: {
            InventoryType = input.ReadUInt32();
            break;
          }
          case 104: {
            AllowableClass = input.ReadInt32();
            break;
          }
          case 112: {
            AllowableRace = input.ReadInt32();
            break;
          }
          case 120: {
            ItemLevel = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiredLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            RequiredSkill = input.ReadUInt32();
            break;
          }
          case 144: {
            RequiredSkillRank = input.ReadUInt32();
            break;
          }
          case 152: {
            RequiredSpell = input.ReadUInt32();
            break;
          }
          case 160: {
            RequiredHonorRank = input.ReadUInt32();
            break;
          }
          case 168: {
            RequiredCityRank = input.ReadUInt32();
            break;
          }
          case 176: {
            RequiredReputationFaction = input.ReadUInt32();
            break;
          }
          case 184: {
            RequiredReputationRank = input.ReadUInt32();
            break;
          }
          case 192: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 200: {
            Stackable = input.ReadUInt32();
            break;
          }
          case 208: {
            ContainerSlots = input.ReadUInt32();
            break;
          }
          case 218: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
          case 226: {
            damages_.AddEntriesFrom(input, _repeated_damages_codec);
            break;
          }
          case 232: {
            Armor = input.ReadUInt32();
            break;
          }
          case 242: {
            if (resistances_ == null) {
              Resistances = new global::Database.Resistance();
            }
            input.ReadMessage(Resistances);
            break;
          }
          case 248: {
            Delay = input.ReadUInt32();
            break;
          }
          case 256: {
            AmmoType = input.ReadUInt32();
            break;
          }
          case 264: {
            RangedModRange = input.ReadUInt32();
            break;
          }
          case 274: {
            spells_.AddEntriesFrom(input, _repeated_spells_codec);
            break;
          }
          case 280: {
            Bonding = input.ReadUInt32();
            break;
          }
          case 290: {
            Description = input.ReadString();
            break;
          }
          case 296: {
            PageText = input.ReadUInt32();
            break;
          }
          case 304: {
            LanguageID = input.ReadUInt32();
            break;
          }
          case 312: {
            PageMaterial = input.ReadUInt32();
            break;
          }
          case 320: {
            StartQuest = input.ReadUInt32();
            break;
          }
          case 328: {
            LockID = input.ReadUInt32();
            break;
          }
          case 336: {
            Material = input.ReadInt32();
            break;
          }
          case 344: {
            Sheath = input.ReadUInt32();
            break;
          }
          case 352: {
            RandomProperty = input.ReadUInt32();
            break;
          }
          case 360: {
            Block = input.ReadUInt32();
            break;
          }
          case 368: {
            ItemSet = input.ReadUInt32();
            break;
          }
          case 376: {
            MaxDurability = input.ReadUInt32();
            break;
          }
          case 384: {
            Area = input.ReadUInt32();
            break;
          }
          case 392: {
            Map = input.ReadUInt32();
            break;
          }
          case 400: {
            BagFamily = input.ReadUInt32();
            break;
          }
          case 410: {
            ScriptName = input.ReadString();
            break;
          }
          case 416: {
            DisenchantID = input.ReadUInt32();
            break;
          }
          case 424: {
            FoodType = input.ReadUInt32();
            break;
          }
          case 432: {
            MinMoneyLoot = input.ReadUInt32();
            break;
          }
          case 440: {
            MaxMoneyLoot = input.ReadUInt32();
            break;
          }
          case 448: {
            Duration = input.ReadUInt32();
            break;
          }
          case 456: {
            ExtraFlags = input.ReadUInt32();
            break;
          }
          case 464: {
            OtherTeamEntry = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Class = input.ReadUInt32();
            break;
          }
          case 32: {
            Subclass = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Displayid = input.ReadUInt32();
            break;
          }
          case 56: {
            Quality = input.ReadUInt32();
            break;
          }
          case 64: {
            Flags = input.ReadUInt32();
            break;
          }
          case 72: {
            BuyCount = input.ReadUInt32();
            break;
          }
          case 80: {
            BuyPrice = input.ReadUInt32();
            break;
          }
          case 88: {
            SellPrice = input.ReadUInt32();
            break;
          }
          case 96: {
            InventoryType = input.ReadUInt32();
            break;
          }
          case 104: {
            AllowableClass = input.ReadInt32();
            break;
          }
          case 112: {
            AllowableRace = input.ReadInt32();
            break;
          }
          case 120: {
            ItemLevel = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiredLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            RequiredSkill = input.ReadUInt32();
            break;
          }
          case 144: {
            RequiredSkillRank = input.ReadUInt32();
            break;
          }
          case 152: {
            RequiredSpell = input.ReadUInt32();
            break;
          }
          case 160: {
            RequiredHonorRank = input.ReadUInt32();
            break;
          }
          case 168: {
            RequiredCityRank = input.ReadUInt32();
            break;
          }
          case 176: {
            RequiredReputationFaction = input.ReadUInt32();
            break;
          }
          case 184: {
            RequiredReputationRank = input.ReadUInt32();
            break;
          }
          case 192: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 200: {
            Stackable = input.ReadUInt32();
            break;
          }
          case 208: {
            ContainerSlots = input.ReadUInt32();
            break;
          }
          case 218: {
            stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
            break;
          }
          case 226: {
            damages_.AddEntriesFrom(ref input, _repeated_damages_codec);
            break;
          }
          case 232: {
            Armor = input.ReadUInt32();
            break;
          }
          case 242: {
            if (resistances_ == null) {
              Resistances = new global::Database.Resistance();
            }
            input.ReadMessage(Resistances);
            break;
          }
          case 248: {
            Delay = input.ReadUInt32();
            break;
          }
          case 256: {
            AmmoType = input.ReadUInt32();
            break;
          }
          case 264: {
            RangedModRange = input.ReadUInt32();
            break;
          }
          case 274: {
            spells_.AddEntriesFrom(ref input, _repeated_spells_codec);
            break;
          }
          case 280: {
            Bonding = input.ReadUInt32();
            break;
          }
          case 290: {
            Description = input.ReadString();
            break;
          }
          case 296: {
            PageText = input.ReadUInt32();
            break;
          }
          case 304: {
            LanguageID = input.ReadUInt32();
            break;
          }
          case 312: {
            PageMaterial = input.ReadUInt32();
            break;
          }
          case 320: {
            StartQuest = input.ReadUInt32();
            break;
          }
          case 328: {
            LockID = input.ReadUInt32();
            break;
          }
          case 336: {
            Material = input.ReadInt32();
            break;
          }
          case 344: {
            Sheath = input.ReadUInt32();
            break;
          }
          case 352: {
            RandomProperty = input.ReadUInt32();
            break;
          }
          case 360: {
            Block = input.ReadUInt32();
            break;
          }
          case 368: {
            ItemSet = input.ReadUInt32();
            break;
          }
          case 376: {
            MaxDurability = input.ReadUInt32();
            break;
          }
          case 384: {
            Area = input.ReadUInt32();
            break;
          }
          case 392: {
            Map = input.ReadUInt32();
            break;
          }
          case 400: {
            BagFamily = input.ReadUInt32();
            break;
          }
          case 410: {
            ScriptName = input.ReadString();
            break;
          }
          case 416: {
            DisenchantID = input.ReadUInt32();
            break;
          }
          case 424: {
            FoodType = input.ReadUInt32();
            break;
          }
          case 432: {
            MinMoneyLoot = input.ReadUInt32();
            break;
          }
          case 440: {
            MaxMoneyLoot = input.ReadUInt32();
            break;
          }
          case 448: {
            Duration = input.ReadUInt32();
            break;
          }
          case 456: {
            ExtraFlags = input.ReadUInt32();
            break;
          }
          case 464: {
            OtherTeamEntry = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Nested message types for stats, damages, resistances, and spells
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Stat : pb::IMessage<Stat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat(Stat other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat Clone() {
      return new Stat(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Damage : pb::IMessage<Damage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Damage> _parser = new pb::MessageParser<Damage>(() => new Damage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Damage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage(Damage other) : this() {
      min_ = other.min_;
      max_ = other.max_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Damage Clone() {
      return new Damage(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private float min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private float max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Damage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Damage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Max, other.Max)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Min);
      if (Max != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Max);
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Min != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Min);
      }
      if (Max != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Max);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Min != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Min);
      }
      if (Max != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Max);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Min != 0F) {
        size += 1 + 4;
      }
      if (Max != 0F) {
        size += 1 + 4;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Damage other) {
      if (other == null) {
        return;
      }
      if (other.Min != 0F) {
        Min = other.Min;
      }
      if (other.Max != 0F) {
        Max = other.Max;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Min = input.ReadFloat();
            break;
          }
          case 21: {
            Max = input.ReadFloat();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Min = input.ReadFloat();
            break;
          }
          case 21: {
            Max = input.ReadFloat();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Resistance : pb::IMessage<Resistance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resistance> _parser = new pb::MessageParser<Resistance>(() => new Resistance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Resistance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistance(Resistance other) : this() {
      holy_ = other.holy_;
      fire_ = other.fire_;
      nature_ = other.nature_;
      frost_ = other.frost_;
      shadow_ = other.shadow_;
      arcane_ = other.arcane_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Resistance Clone() {
      return new Resistance(this);
    }

    /// <summary>Field number for the "holy" field.</summary>
    public const int HolyFieldNumber = 1;
    private uint holy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Holy {
      get { return holy_; }
      set {
        holy_ = value;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 2;
    private uint fire_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Fire {
      get { return fire_; }
      set {
        fire_ = value;
      }
    }

    /// <summary>Field number for the "nature" field.</summary>
    public const int NatureFieldNumber = 3;
    private uint nature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Nature {
      get { return nature_; }
      set {
        nature_ = value;
      }
    }

    /// <summary>Field number for the "frost" field.</summary>
    public const int FrostFieldNumber = 4;
    private uint frost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Frost {
      get { return frost_; }
      set {
        frost_ = value;
      }
    }

    /// <summary>Field number for the "shadow" field.</summary>
    public const int ShadowFieldNumber = 5;
    private uint shadow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Shadow {
      get { return shadow_; }
      set {
        shadow_ = value;
      }
    }

    /// <summary>Field number for the "arcane" field.</summary>
    public const int ArcaneFieldNumber = 6;
    private uint arcane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Arcane {
      get { return arcane_; }
      set {
        arcane_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Resistance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Resistance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Holy != other.Holy) return false;
      if (Fire != other.Fire) return false;
      if (Nature != other.Nature) return false;
      if (Frost != other.Frost) return false;
      if (Shadow != other.Shadow) return false;
      if (Arcane != other.Arcane) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Holy != 0) hash ^= Holy.GetHashCode();
      if (Fire != 0) hash ^= Fire.GetHashCode();
      if (Nature != 0) hash ^= Nature.GetHashCode();
      if (Frost != 0) hash ^= Frost.GetHashCode();
      if (Shadow != 0) hash ^= Shadow.GetHashCode();
      if (Arcane != 0) hash ^= Arcane.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Holy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Holy);
      }
      if (Fire != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fire);
      }
      if (Nature != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Nature);
      }
      if (Frost != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frost);
      }
      if (Shadow != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Shadow);
      }
      if (Arcane != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Arcane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Holy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Holy);
      }
      if (Fire != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Fire);
      }
      if (Nature != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Nature);
      }
      if (Frost != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Frost);
      }
      if (Shadow != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Shadow);
      }
      if (Arcane != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Arcane);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Holy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Holy);
      }
      if (Fire != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fire);
      }
      if (Nature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nature);
      }
      if (Frost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frost);
      }
      if (Shadow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Shadow);
      }
      if (Arcane != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Arcane);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Resistance other) {
      if (other == null) {
        return;
      }
      if (other.Holy != 0) {
        Holy = other.Holy;
      }
      if (other.Fire != 0) {
        Fire = other.Fire;
      }
      if (other.Nature != 0) {
        Nature = other.Nature;
      }
      if (other.Frost != 0) {
        Frost = other.Frost;
      }
      if (other.Shadow != 0) {
        Shadow = other.Shadow;
      }
      if (other.Arcane != 0) {
        Arcane = other.Arcane;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Holy = input.ReadUInt32();
            break;
          }
          case 16: {
            Fire = input.ReadUInt32();
            break;
          }
          case 24: {
            Nature = input.ReadUInt32();
            break;
          }
          case 32: {
            Frost = input.ReadUInt32();
            break;
          }
          case 40: {
            Shadow = input.ReadUInt32();
            break;
          }
          case 48: {
            Arcane = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Holy = input.ReadUInt32();
            break;
          }
          case 16: {
            Fire = input.ReadUInt32();
            break;
          }
          case 24: {
            Nature = input.ReadUInt32();
            break;
          }
          case 32: {
            Frost = input.ReadUInt32();
            break;
          }
          case 40: {
            Shadow = input.ReadUInt32();
            break;
          }
          case 48: {
            Arcane = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Spell : pb::IMessage<Spell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spell> _parser = new pb::MessageParser<Spell>(() => new Spell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Spell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spell(Spell other) : this() {
      spellID_ = other.spellID_;
      trigger_ = other.trigger_;
      charges_ = other.charges_;
      ppmRate_ = other.ppmRate_;
      cooldown_ = other.cooldown_;
      category_ = other.category_;
      categoryCooldown_ = other.categoryCooldown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spell Clone() {
      return new Spell(this);
    }

    /// <summary>Field number for the "spellID" field.</summary>
    public const int SpellIDFieldNumber = 1;
    private uint spellID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellID {
      get { return spellID_; }
      set {
        spellID_ = value;
      }
    }

    /// <summary>Field number for the "trigger" field.</summary>
    public const int TriggerFieldNumber = 2;
    private uint trigger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Trigger {
      get { return trigger_; }
      set {
        trigger_ = value;
      }
    }

    /// <summary>Field number for the "charges" field.</summary>
    public const int ChargesFieldNumber = 3;
    private int charges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Charges {
      get { return charges_; }
      set {
        charges_ = value;
      }
    }

    /// <summary>Field number for the "ppmRate" field.</summary>
    public const int PpmRateFieldNumber = 4;
    private float ppmRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PpmRate {
      get { return ppmRate_; }
      set {
        ppmRate_ = value;
      }
    }

    /// <summary>Field number for the "cooldown" field.</summary>
    public const int CooldownFieldNumber = 5;
    private int cooldown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cooldown {
      get { return cooldown_; }
      set {
        cooldown_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 6;
    private uint category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "categoryCooldown" field.</summary>
    public const int CategoryCooldownFieldNumber = 7;
    private int categoryCooldown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CategoryCooldown {
      get { return categoryCooldown_; }
      set {
        categoryCooldown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Spell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Spell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellID != other.SpellID) return false;
      if (Trigger != other.Trigger) return false;
      if (Charges != other.Charges) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PpmRate, other.PpmRate)) return false;
      if (Cooldown != other.Cooldown) return false;
      if (Category != other.Category) return false;
      if (CategoryCooldown != other.CategoryCooldown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpellID != 0) hash ^= SpellID.GetHashCode();
      if (Trigger != 0) hash ^= Trigger.GetHashCode();
      if (Charges != 0) hash ^= Charges.GetHashCode();
      if (PpmRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PpmRate);
      if (Cooldown != 0) hash ^= Cooldown.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (CategoryCooldown != 0) hash ^= CategoryCooldown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpellID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellID);
      }
      if (Trigger != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Trigger);
      }
      if (Charges != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Charges);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PpmRate);
      }
      if (Cooldown != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Cooldown);
      }
      if (Category != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Category);
      }
      if (CategoryCooldown != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CategoryCooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpellID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellID);
      }
      if (Trigger != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Trigger);
      }
      if (Charges != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Charges);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PpmRate);
      }
      if (Cooldown != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Cooldown);
      }
      if (Category != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Category);
      }
      if (CategoryCooldown != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CategoryCooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpellID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellID);
      }
      if (Trigger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Trigger);
      }
      if (Charges != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Charges);
      }
      if (PpmRate != 0F) {
        size += 1 + 4;
      }
      if (Cooldown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cooldown);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Category);
      }
      if (CategoryCooldown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CategoryCooldown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Spell other) {
      if (other == null) {
        return;
      }
      if (other.SpellID != 0) {
        SpellID = other.SpellID;
      }
      if (other.Trigger != 0) {
        Trigger = other.Trigger;
      }
      if (other.Charges != 0) {
        Charges = other.Charges;
      }
      if (other.PpmRate != 0F) {
        PpmRate = other.PpmRate;
      }
      if (other.Cooldown != 0) {
        Cooldown = other.Cooldown;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.CategoryCooldown != 0) {
        CategoryCooldown = other.CategoryCooldown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellID = input.ReadUInt32();
            break;
          }
          case 16: {
            Trigger = input.ReadUInt32();
            break;
          }
          case 24: {
            Charges = input.ReadInt32();
            break;
          }
          case 37: {
            PpmRate = input.ReadFloat();
            break;
          }
          case 40: {
            Cooldown = input.ReadInt32();
            break;
          }
          case 48: {
            Category = input.ReadUInt32();
            break;
          }
          case 56: {
            CategoryCooldown = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellID = input.ReadUInt32();
            break;
          }
          case 16: {
            Trigger = input.ReadUInt32();
            break;
          }
          case 24: {
            Charges = input.ReadInt32();
            break;
          }
          case 37: {
            PpmRate = input.ReadFloat();
            break;
          }
          case 40: {
            Cooldown = input.ReadInt32();
            break;
          }
          case 48: {
            Category = input.ReadUInt32();
            break;
          }
          case 56: {
            CategoryCooldown = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesArea : pb::IMessage<LocalesArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesArea> _parser = new pb::MessageParser<LocalesArea>(() => new LocalesArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesArea(LocalesArea other) : this() {
      entry_ = other.entry_;
      nameLoc1_ = other.nameLoc1_;
      nameLoc2_ = other.nameLoc2_;
      nameLoc3_ = other.nameLoc3_;
      nameLoc4_ = other.nameLoc4_;
      nameLoc5_ = other.nameLoc5_;
      nameLoc6_ = other.nameLoc6_;
      nameLoc7_ = other.nameLoc7_;
      nameLoc8_ = other.nameLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesArea Clone() {
      return new LocalesArea(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Area entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "nameLoc1" field.</summary>
    public const int NameLoc1FieldNumber = 2;
    private string nameLoc1_ = "";
    /// <summary>
    /// Name in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc1 {
      get { return nameLoc1_; }
      set {
        nameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc2" field.</summary>
    public const int NameLoc2FieldNumber = 3;
    private string nameLoc2_ = "";
    /// <summary>
    /// Name in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc2 {
      get { return nameLoc2_; }
      set {
        nameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc3" field.</summary>
    public const int NameLoc3FieldNumber = 4;
    private string nameLoc3_ = "";
    /// <summary>
    /// Name in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc3 {
      get { return nameLoc3_; }
      set {
        nameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc4" field.</summary>
    public const int NameLoc4FieldNumber = 5;
    private string nameLoc4_ = "";
    /// <summary>
    /// Name in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc4 {
      get { return nameLoc4_; }
      set {
        nameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc5" field.</summary>
    public const int NameLoc5FieldNumber = 6;
    private string nameLoc5_ = "";
    /// <summary>
    /// Name in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc5 {
      get { return nameLoc5_; }
      set {
        nameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc6" field.</summary>
    public const int NameLoc6FieldNumber = 7;
    private string nameLoc6_ = "";
    /// <summary>
    /// Name in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc6 {
      get { return nameLoc6_; }
      set {
        nameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc7" field.</summary>
    public const int NameLoc7FieldNumber = 8;
    private string nameLoc7_ = "";
    /// <summary>
    /// Name in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc7 {
      get { return nameLoc7_; }
      set {
        nameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameLoc8" field.</summary>
    public const int NameLoc8FieldNumber = 9;
    private string nameLoc8_ = "";
    /// <summary>
    /// Name in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc8 {
      get { return nameLoc8_; }
      set {
        nameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (NameLoc1 != other.NameLoc1) return false;
      if (NameLoc2 != other.NameLoc2) return false;
      if (NameLoc3 != other.NameLoc3) return false;
      if (NameLoc4 != other.NameLoc4) return false;
      if (NameLoc5 != other.NameLoc5) return false;
      if (NameLoc6 != other.NameLoc6) return false;
      if (NameLoc7 != other.NameLoc7) return false;
      if (NameLoc8 != other.NameLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (NameLoc1.Length != 0) hash ^= NameLoc1.GetHashCode();
      if (NameLoc2.Length != 0) hash ^= NameLoc2.GetHashCode();
      if (NameLoc3.Length != 0) hash ^= NameLoc3.GetHashCode();
      if (NameLoc4.Length != 0) hash ^= NameLoc4.GetHashCode();
      if (NameLoc5.Length != 0) hash ^= NameLoc5.GetHashCode();
      if (NameLoc6.Length != 0) hash ^= NameLoc6.GetHashCode();
      if (NameLoc7.Length != 0) hash ^= NameLoc7.GetHashCode();
      if (NameLoc8.Length != 0) hash ^= NameLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (NameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesArea other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.NameLoc1.Length != 0) {
        NameLoc1 = other.NameLoc1;
      }
      if (other.NameLoc2.Length != 0) {
        NameLoc2 = other.NameLoc2;
      }
      if (other.NameLoc3.Length != 0) {
        NameLoc3 = other.NameLoc3;
      }
      if (other.NameLoc4.Length != 0) {
        NameLoc4 = other.NameLoc4;
      }
      if (other.NameLoc5.Length != 0) {
        NameLoc5 = other.NameLoc5;
      }
      if (other.NameLoc6.Length != 0) {
        NameLoc6 = other.NameLoc6;
      }
      if (other.NameLoc7.Length != 0) {
        NameLoc7 = other.NameLoc7;
      }
      if (other.NameLoc8.Length != 0) {
        NameLoc8 = other.NameLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesBroadcastText : pb::IMessage<LocalesBroadcastText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesBroadcastText> _parser = new pb::MessageParser<LocalesBroadcastText>(() => new LocalesBroadcastText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesBroadcastText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesBroadcastText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesBroadcastText(LocalesBroadcastText other) : this() {
      id_ = other.id_;
      maleTextLoc1_ = other.maleTextLoc1_;
      maleTextLoc2_ = other.maleTextLoc2_;
      maleTextLoc3_ = other.maleTextLoc3_;
      maleTextLoc4_ = other.maleTextLoc4_;
      maleTextLoc5_ = other.maleTextLoc5_;
      maleTextLoc6_ = other.maleTextLoc6_;
      maleTextLoc7_ = other.maleTextLoc7_;
      maleTextLoc8_ = other.maleTextLoc8_;
      femaleTextLoc1_ = other.femaleTextLoc1_;
      femaleTextLoc2_ = other.femaleTextLoc2_;
      femaleTextLoc3_ = other.femaleTextLoc3_;
      femaleTextLoc4_ = other.femaleTextLoc4_;
      femaleTextLoc5_ = other.femaleTextLoc5_;
      femaleTextLoc6_ = other.femaleTextLoc6_;
      femaleTextLoc7_ = other.femaleTextLoc7_;
      femaleTextLoc8_ = other.femaleTextLoc8_;
      verifiedBuild_ = other.verifiedBuild_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesBroadcastText Clone() {
      return new LocalesBroadcastText(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Broadcast text ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "maleTextLoc1" field.</summary>
    public const int MaleTextLoc1FieldNumber = 2;
    private string maleTextLoc1_ = "";
    /// <summary>
    /// Male text in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc1 {
      get { return maleTextLoc1_; }
      set {
        maleTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc2" field.</summary>
    public const int MaleTextLoc2FieldNumber = 3;
    private string maleTextLoc2_ = "";
    /// <summary>
    /// Male text in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc2 {
      get { return maleTextLoc2_; }
      set {
        maleTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc3" field.</summary>
    public const int MaleTextLoc3FieldNumber = 4;
    private string maleTextLoc3_ = "";
    /// <summary>
    /// Male text in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc3 {
      get { return maleTextLoc3_; }
      set {
        maleTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc4" field.</summary>
    public const int MaleTextLoc4FieldNumber = 5;
    private string maleTextLoc4_ = "";
    /// <summary>
    /// Male text in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc4 {
      get { return maleTextLoc4_; }
      set {
        maleTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc5" field.</summary>
    public const int MaleTextLoc5FieldNumber = 6;
    private string maleTextLoc5_ = "";
    /// <summary>
    /// Male text in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc5 {
      get { return maleTextLoc5_; }
      set {
        maleTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc6" field.</summary>
    public const int MaleTextLoc6FieldNumber = 7;
    private string maleTextLoc6_ = "";
    /// <summary>
    /// Male text in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc6 {
      get { return maleTextLoc6_; }
      set {
        maleTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc7" field.</summary>
    public const int MaleTextLoc7FieldNumber = 8;
    private string maleTextLoc7_ = "";
    /// <summary>
    /// Male text in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc7 {
      get { return maleTextLoc7_; }
      set {
        maleTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maleTextLoc8" field.</summary>
    public const int MaleTextLoc8FieldNumber = 9;
    private string maleTextLoc8_ = "";
    /// <summary>
    /// Male text in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MaleTextLoc8 {
      get { return maleTextLoc8_; }
      set {
        maleTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc1" field.</summary>
    public const int FemaleTextLoc1FieldNumber = 10;
    private string femaleTextLoc1_ = "";
    /// <summary>
    /// Female text in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc1 {
      get { return femaleTextLoc1_; }
      set {
        femaleTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc2" field.</summary>
    public const int FemaleTextLoc2FieldNumber = 11;
    private string femaleTextLoc2_ = "";
    /// <summary>
    /// Female text in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc2 {
      get { return femaleTextLoc2_; }
      set {
        femaleTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc3" field.</summary>
    public const int FemaleTextLoc3FieldNumber = 12;
    private string femaleTextLoc3_ = "";
    /// <summary>
    /// Female text in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc3 {
      get { return femaleTextLoc3_; }
      set {
        femaleTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc4" field.</summary>
    public const int FemaleTextLoc4FieldNumber = 13;
    private string femaleTextLoc4_ = "";
    /// <summary>
    /// Female text in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc4 {
      get { return femaleTextLoc4_; }
      set {
        femaleTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc5" field.</summary>
    public const int FemaleTextLoc5FieldNumber = 14;
    private string femaleTextLoc5_ = "";
    /// <summary>
    /// Female text in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc5 {
      get { return femaleTextLoc5_; }
      set {
        femaleTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc6" field.</summary>
    public const int FemaleTextLoc6FieldNumber = 15;
    private string femaleTextLoc6_ = "";
    /// <summary>
    /// Female text in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc6 {
      get { return femaleTextLoc6_; }
      set {
        femaleTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc7" field.</summary>
    public const int FemaleTextLoc7FieldNumber = 16;
    private string femaleTextLoc7_ = "";
    /// <summary>
    /// Female text in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc7 {
      get { return femaleTextLoc7_; }
      set {
        femaleTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "femaleTextLoc8" field.</summary>
    public const int FemaleTextLoc8FieldNumber = 17;
    private string femaleTextLoc8_ = "";
    /// <summary>
    /// Female text in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FemaleTextLoc8 {
      get { return femaleTextLoc8_; }
      set {
        femaleTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verifiedBuild" field.</summary>
    public const int VerifiedBuildFieldNumber = 18;
    private int verifiedBuild_;
    /// <summary>
    /// Verified build version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VerifiedBuild {
      get { return verifiedBuild_; }
      set {
        verifiedBuild_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesBroadcastText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesBroadcastText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MaleTextLoc1 != other.MaleTextLoc1) return false;
      if (MaleTextLoc2 != other.MaleTextLoc2) return false;
      if (MaleTextLoc3 != other.MaleTextLoc3) return false;
      if (MaleTextLoc4 != other.MaleTextLoc4) return false;
      if (MaleTextLoc5 != other.MaleTextLoc5) return false;
      if (MaleTextLoc6 != other.MaleTextLoc6) return false;
      if (MaleTextLoc7 != other.MaleTextLoc7) return false;
      if (MaleTextLoc8 != other.MaleTextLoc8) return false;
      if (FemaleTextLoc1 != other.FemaleTextLoc1) return false;
      if (FemaleTextLoc2 != other.FemaleTextLoc2) return false;
      if (FemaleTextLoc3 != other.FemaleTextLoc3) return false;
      if (FemaleTextLoc4 != other.FemaleTextLoc4) return false;
      if (FemaleTextLoc5 != other.FemaleTextLoc5) return false;
      if (FemaleTextLoc6 != other.FemaleTextLoc6) return false;
      if (FemaleTextLoc7 != other.FemaleTextLoc7) return false;
      if (FemaleTextLoc8 != other.FemaleTextLoc8) return false;
      if (VerifiedBuild != other.VerifiedBuild) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MaleTextLoc1.Length != 0) hash ^= MaleTextLoc1.GetHashCode();
      if (MaleTextLoc2.Length != 0) hash ^= MaleTextLoc2.GetHashCode();
      if (MaleTextLoc3.Length != 0) hash ^= MaleTextLoc3.GetHashCode();
      if (MaleTextLoc4.Length != 0) hash ^= MaleTextLoc4.GetHashCode();
      if (MaleTextLoc5.Length != 0) hash ^= MaleTextLoc5.GetHashCode();
      if (MaleTextLoc6.Length != 0) hash ^= MaleTextLoc6.GetHashCode();
      if (MaleTextLoc7.Length != 0) hash ^= MaleTextLoc7.GetHashCode();
      if (MaleTextLoc8.Length != 0) hash ^= MaleTextLoc8.GetHashCode();
      if (FemaleTextLoc1.Length != 0) hash ^= FemaleTextLoc1.GetHashCode();
      if (FemaleTextLoc2.Length != 0) hash ^= FemaleTextLoc2.GetHashCode();
      if (FemaleTextLoc3.Length != 0) hash ^= FemaleTextLoc3.GetHashCode();
      if (FemaleTextLoc4.Length != 0) hash ^= FemaleTextLoc4.GetHashCode();
      if (FemaleTextLoc5.Length != 0) hash ^= FemaleTextLoc5.GetHashCode();
      if (FemaleTextLoc6.Length != 0) hash ^= FemaleTextLoc6.GetHashCode();
      if (FemaleTextLoc7.Length != 0) hash ^= FemaleTextLoc7.GetHashCode();
      if (FemaleTextLoc8.Length != 0) hash ^= FemaleTextLoc8.GetHashCode();
      if (VerifiedBuild != 0) hash ^= VerifiedBuild.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MaleTextLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaleTextLoc1);
      }
      if (MaleTextLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaleTextLoc2);
      }
      if (MaleTextLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MaleTextLoc3);
      }
      if (MaleTextLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MaleTextLoc4);
      }
      if (MaleTextLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaleTextLoc5);
      }
      if (MaleTextLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MaleTextLoc6);
      }
      if (MaleTextLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaleTextLoc7);
      }
      if (MaleTextLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MaleTextLoc8);
      }
      if (FemaleTextLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(FemaleTextLoc1);
      }
      if (FemaleTextLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FemaleTextLoc2);
      }
      if (FemaleTextLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FemaleTextLoc3);
      }
      if (FemaleTextLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FemaleTextLoc4);
      }
      if (FemaleTextLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FemaleTextLoc5);
      }
      if (FemaleTextLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FemaleTextLoc6);
      }
      if (FemaleTextLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(FemaleTextLoc7);
      }
      if (FemaleTextLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(FemaleTextLoc8);
      }
      if (VerifiedBuild != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(VerifiedBuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (MaleTextLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MaleTextLoc1);
      }
      if (MaleTextLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MaleTextLoc2);
      }
      if (MaleTextLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MaleTextLoc3);
      }
      if (MaleTextLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MaleTextLoc4);
      }
      if (MaleTextLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaleTextLoc5);
      }
      if (MaleTextLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MaleTextLoc6);
      }
      if (MaleTextLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaleTextLoc7);
      }
      if (MaleTextLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MaleTextLoc8);
      }
      if (FemaleTextLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(FemaleTextLoc1);
      }
      if (FemaleTextLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FemaleTextLoc2);
      }
      if (FemaleTextLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FemaleTextLoc3);
      }
      if (FemaleTextLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(FemaleTextLoc4);
      }
      if (FemaleTextLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FemaleTextLoc5);
      }
      if (FemaleTextLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FemaleTextLoc6);
      }
      if (FemaleTextLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(FemaleTextLoc7);
      }
      if (FemaleTextLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(FemaleTextLoc8);
      }
      if (VerifiedBuild != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(VerifiedBuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (MaleTextLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc1);
      }
      if (MaleTextLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc2);
      }
      if (MaleTextLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc3);
      }
      if (MaleTextLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc4);
      }
      if (MaleTextLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc5);
      }
      if (MaleTextLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc6);
      }
      if (MaleTextLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc7);
      }
      if (MaleTextLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaleTextLoc8);
      }
      if (FemaleTextLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc1);
      }
      if (FemaleTextLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc2);
      }
      if (FemaleTextLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc3);
      }
      if (FemaleTextLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc4);
      }
      if (FemaleTextLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc5);
      }
      if (FemaleTextLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc6);
      }
      if (FemaleTextLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc7);
      }
      if (FemaleTextLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FemaleTextLoc8);
      }
      if (VerifiedBuild != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VerifiedBuild);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesBroadcastText other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MaleTextLoc1.Length != 0) {
        MaleTextLoc1 = other.MaleTextLoc1;
      }
      if (other.MaleTextLoc2.Length != 0) {
        MaleTextLoc2 = other.MaleTextLoc2;
      }
      if (other.MaleTextLoc3.Length != 0) {
        MaleTextLoc3 = other.MaleTextLoc3;
      }
      if (other.MaleTextLoc4.Length != 0) {
        MaleTextLoc4 = other.MaleTextLoc4;
      }
      if (other.MaleTextLoc5.Length != 0) {
        MaleTextLoc5 = other.MaleTextLoc5;
      }
      if (other.MaleTextLoc6.Length != 0) {
        MaleTextLoc6 = other.MaleTextLoc6;
      }
      if (other.MaleTextLoc7.Length != 0) {
        MaleTextLoc7 = other.MaleTextLoc7;
      }
      if (other.MaleTextLoc8.Length != 0) {
        MaleTextLoc8 = other.MaleTextLoc8;
      }
      if (other.FemaleTextLoc1.Length != 0) {
        FemaleTextLoc1 = other.FemaleTextLoc1;
      }
      if (other.FemaleTextLoc2.Length != 0) {
        FemaleTextLoc2 = other.FemaleTextLoc2;
      }
      if (other.FemaleTextLoc3.Length != 0) {
        FemaleTextLoc3 = other.FemaleTextLoc3;
      }
      if (other.FemaleTextLoc4.Length != 0) {
        FemaleTextLoc4 = other.FemaleTextLoc4;
      }
      if (other.FemaleTextLoc5.Length != 0) {
        FemaleTextLoc5 = other.FemaleTextLoc5;
      }
      if (other.FemaleTextLoc6.Length != 0) {
        FemaleTextLoc6 = other.FemaleTextLoc6;
      }
      if (other.FemaleTextLoc7.Length != 0) {
        FemaleTextLoc7 = other.FemaleTextLoc7;
      }
      if (other.FemaleTextLoc8.Length != 0) {
        FemaleTextLoc8 = other.FemaleTextLoc8;
      }
      if (other.VerifiedBuild != 0) {
        VerifiedBuild = other.VerifiedBuild;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            MaleTextLoc1 = input.ReadString();
            break;
          }
          case 26: {
            MaleTextLoc2 = input.ReadString();
            break;
          }
          case 34: {
            MaleTextLoc3 = input.ReadString();
            break;
          }
          case 42: {
            MaleTextLoc4 = input.ReadString();
            break;
          }
          case 50: {
            MaleTextLoc5 = input.ReadString();
            break;
          }
          case 58: {
            MaleTextLoc6 = input.ReadString();
            break;
          }
          case 66: {
            MaleTextLoc7 = input.ReadString();
            break;
          }
          case 74: {
            MaleTextLoc8 = input.ReadString();
            break;
          }
          case 82: {
            FemaleTextLoc1 = input.ReadString();
            break;
          }
          case 90: {
            FemaleTextLoc2 = input.ReadString();
            break;
          }
          case 98: {
            FemaleTextLoc3 = input.ReadString();
            break;
          }
          case 106: {
            FemaleTextLoc4 = input.ReadString();
            break;
          }
          case 114: {
            FemaleTextLoc5 = input.ReadString();
            break;
          }
          case 122: {
            FemaleTextLoc6 = input.ReadString();
            break;
          }
          case 130: {
            FemaleTextLoc7 = input.ReadString();
            break;
          }
          case 138: {
            FemaleTextLoc8 = input.ReadString();
            break;
          }
          case 144: {
            VerifiedBuild = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            MaleTextLoc1 = input.ReadString();
            break;
          }
          case 26: {
            MaleTextLoc2 = input.ReadString();
            break;
          }
          case 34: {
            MaleTextLoc3 = input.ReadString();
            break;
          }
          case 42: {
            MaleTextLoc4 = input.ReadString();
            break;
          }
          case 50: {
            MaleTextLoc5 = input.ReadString();
            break;
          }
          case 58: {
            MaleTextLoc6 = input.ReadString();
            break;
          }
          case 66: {
            MaleTextLoc7 = input.ReadString();
            break;
          }
          case 74: {
            MaleTextLoc8 = input.ReadString();
            break;
          }
          case 82: {
            FemaleTextLoc1 = input.ReadString();
            break;
          }
          case 90: {
            FemaleTextLoc2 = input.ReadString();
            break;
          }
          case 98: {
            FemaleTextLoc3 = input.ReadString();
            break;
          }
          case 106: {
            FemaleTextLoc4 = input.ReadString();
            break;
          }
          case 114: {
            FemaleTextLoc5 = input.ReadString();
            break;
          }
          case 122: {
            FemaleTextLoc6 = input.ReadString();
            break;
          }
          case 130: {
            FemaleTextLoc7 = input.ReadString();
            break;
          }
          case 138: {
            FemaleTextLoc8 = input.ReadString();
            break;
          }
          case 144: {
            VerifiedBuild = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesCreature : pb::IMessage<LocalesCreature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesCreature> _parser = new pb::MessageParser<LocalesCreature>(() => new LocalesCreature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesCreature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesCreature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesCreature(LocalesCreature other) : this() {
      entry_ = other.entry_;
      nameLoc1_ = other.nameLoc1_;
      nameLoc2_ = other.nameLoc2_;
      nameLoc3_ = other.nameLoc3_;
      nameLoc4_ = other.nameLoc4_;
      nameLoc5_ = other.nameLoc5_;
      nameLoc6_ = other.nameLoc6_;
      nameLoc7_ = other.nameLoc7_;
      nameLoc8_ = other.nameLoc8_;
      subnameLoc1_ = other.subnameLoc1_;
      subnameLoc2_ = other.subnameLoc2_;
      subnameLoc3_ = other.subnameLoc3_;
      subnameLoc4_ = other.subnameLoc4_;
      subnameLoc5_ = other.subnameLoc5_;
      subnameLoc6_ = other.subnameLoc6_;
      subnameLoc7_ = other.subnameLoc7_;
      subnameLoc8_ = other.subnameLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesCreature Clone() {
      return new LocalesCreature(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Creature Entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "name_loc1" field.</summary>
    public const int NameLoc1FieldNumber = 2;
    private string nameLoc1_ = "";
    /// <summary>
    /// Creature name in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc1 {
      get { return nameLoc1_; }
      set {
        nameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc2" field.</summary>
    public const int NameLoc2FieldNumber = 3;
    private string nameLoc2_ = "";
    /// <summary>
    /// Creature name in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc2 {
      get { return nameLoc2_; }
      set {
        nameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc3" field.</summary>
    public const int NameLoc3FieldNumber = 4;
    private string nameLoc3_ = "";
    /// <summary>
    /// Creature name in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc3 {
      get { return nameLoc3_; }
      set {
        nameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc4" field.</summary>
    public const int NameLoc4FieldNumber = 5;
    private string nameLoc4_ = "";
    /// <summary>
    /// Creature name in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc4 {
      get { return nameLoc4_; }
      set {
        nameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc5" field.</summary>
    public const int NameLoc5FieldNumber = 6;
    private string nameLoc5_ = "";
    /// <summary>
    /// Creature name in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc5 {
      get { return nameLoc5_; }
      set {
        nameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc6" field.</summary>
    public const int NameLoc6FieldNumber = 7;
    private string nameLoc6_ = "";
    /// <summary>
    /// Creature name in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc6 {
      get { return nameLoc6_; }
      set {
        nameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc7" field.</summary>
    public const int NameLoc7FieldNumber = 8;
    private string nameLoc7_ = "";
    /// <summary>
    /// Creature name in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc7 {
      get { return nameLoc7_; }
      set {
        nameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc8" field.</summary>
    public const int NameLoc8FieldNumber = 9;
    private string nameLoc8_ = "";
    /// <summary>
    /// Creature name in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc8 {
      get { return nameLoc8_; }
      set {
        nameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc1" field.</summary>
    public const int SubnameLoc1FieldNumber = 10;
    private string subnameLoc1_ = "";
    /// <summary>
    /// Creature subname in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc1 {
      get { return subnameLoc1_; }
      set {
        subnameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc2" field.</summary>
    public const int SubnameLoc2FieldNumber = 11;
    private string subnameLoc2_ = "";
    /// <summary>
    /// Creature subname in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc2 {
      get { return subnameLoc2_; }
      set {
        subnameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc3" field.</summary>
    public const int SubnameLoc3FieldNumber = 12;
    private string subnameLoc3_ = "";
    /// <summary>
    /// Creature subname in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc3 {
      get { return subnameLoc3_; }
      set {
        subnameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc4" field.</summary>
    public const int SubnameLoc4FieldNumber = 13;
    private string subnameLoc4_ = "";
    /// <summary>
    /// Creature subname in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc4 {
      get { return subnameLoc4_; }
      set {
        subnameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc5" field.</summary>
    public const int SubnameLoc5FieldNumber = 14;
    private string subnameLoc5_ = "";
    /// <summary>
    /// Creature subname in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc5 {
      get { return subnameLoc5_; }
      set {
        subnameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc6" field.</summary>
    public const int SubnameLoc6FieldNumber = 15;
    private string subnameLoc6_ = "";
    /// <summary>
    /// Creature subname in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc6 {
      get { return subnameLoc6_; }
      set {
        subnameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc7" field.</summary>
    public const int SubnameLoc7FieldNumber = 16;
    private string subnameLoc7_ = "";
    /// <summary>
    /// Creature subname in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc7 {
      get { return subnameLoc7_; }
      set {
        subnameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subname_loc8" field.</summary>
    public const int SubnameLoc8FieldNumber = 17;
    private string subnameLoc8_ = "";
    /// <summary>
    /// Creature subname in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubnameLoc8 {
      get { return subnameLoc8_; }
      set {
        subnameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesCreature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesCreature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (NameLoc1 != other.NameLoc1) return false;
      if (NameLoc2 != other.NameLoc2) return false;
      if (NameLoc3 != other.NameLoc3) return false;
      if (NameLoc4 != other.NameLoc4) return false;
      if (NameLoc5 != other.NameLoc5) return false;
      if (NameLoc6 != other.NameLoc6) return false;
      if (NameLoc7 != other.NameLoc7) return false;
      if (NameLoc8 != other.NameLoc8) return false;
      if (SubnameLoc1 != other.SubnameLoc1) return false;
      if (SubnameLoc2 != other.SubnameLoc2) return false;
      if (SubnameLoc3 != other.SubnameLoc3) return false;
      if (SubnameLoc4 != other.SubnameLoc4) return false;
      if (SubnameLoc5 != other.SubnameLoc5) return false;
      if (SubnameLoc6 != other.SubnameLoc6) return false;
      if (SubnameLoc7 != other.SubnameLoc7) return false;
      if (SubnameLoc8 != other.SubnameLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (NameLoc1.Length != 0) hash ^= NameLoc1.GetHashCode();
      if (NameLoc2.Length != 0) hash ^= NameLoc2.GetHashCode();
      if (NameLoc3.Length != 0) hash ^= NameLoc3.GetHashCode();
      if (NameLoc4.Length != 0) hash ^= NameLoc4.GetHashCode();
      if (NameLoc5.Length != 0) hash ^= NameLoc5.GetHashCode();
      if (NameLoc6.Length != 0) hash ^= NameLoc6.GetHashCode();
      if (NameLoc7.Length != 0) hash ^= NameLoc7.GetHashCode();
      if (NameLoc8.Length != 0) hash ^= NameLoc8.GetHashCode();
      if (SubnameLoc1.Length != 0) hash ^= SubnameLoc1.GetHashCode();
      if (SubnameLoc2.Length != 0) hash ^= SubnameLoc2.GetHashCode();
      if (SubnameLoc3.Length != 0) hash ^= SubnameLoc3.GetHashCode();
      if (SubnameLoc4.Length != 0) hash ^= SubnameLoc4.GetHashCode();
      if (SubnameLoc5.Length != 0) hash ^= SubnameLoc5.GetHashCode();
      if (SubnameLoc6.Length != 0) hash ^= SubnameLoc6.GetHashCode();
      if (SubnameLoc7.Length != 0) hash ^= SubnameLoc7.GetHashCode();
      if (SubnameLoc8.Length != 0) hash ^= SubnameLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (SubnameLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SubnameLoc1);
      }
      if (SubnameLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SubnameLoc2);
      }
      if (SubnameLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SubnameLoc3);
      }
      if (SubnameLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SubnameLoc4);
      }
      if (SubnameLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SubnameLoc5);
      }
      if (SubnameLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SubnameLoc6);
      }
      if (SubnameLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SubnameLoc7);
      }
      if (SubnameLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SubnameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (SubnameLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SubnameLoc1);
      }
      if (SubnameLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SubnameLoc2);
      }
      if (SubnameLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SubnameLoc3);
      }
      if (SubnameLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SubnameLoc4);
      }
      if (SubnameLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SubnameLoc5);
      }
      if (SubnameLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(SubnameLoc6);
      }
      if (SubnameLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(SubnameLoc7);
      }
      if (SubnameLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SubnameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (NameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc8);
      }
      if (SubnameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc1);
      }
      if (SubnameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc2);
      }
      if (SubnameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc3);
      }
      if (SubnameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc4);
      }
      if (SubnameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc5);
      }
      if (SubnameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc6);
      }
      if (SubnameLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc7);
      }
      if (SubnameLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SubnameLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesCreature other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.NameLoc1.Length != 0) {
        NameLoc1 = other.NameLoc1;
      }
      if (other.NameLoc2.Length != 0) {
        NameLoc2 = other.NameLoc2;
      }
      if (other.NameLoc3.Length != 0) {
        NameLoc3 = other.NameLoc3;
      }
      if (other.NameLoc4.Length != 0) {
        NameLoc4 = other.NameLoc4;
      }
      if (other.NameLoc5.Length != 0) {
        NameLoc5 = other.NameLoc5;
      }
      if (other.NameLoc6.Length != 0) {
        NameLoc6 = other.NameLoc6;
      }
      if (other.NameLoc7.Length != 0) {
        NameLoc7 = other.NameLoc7;
      }
      if (other.NameLoc8.Length != 0) {
        NameLoc8 = other.NameLoc8;
      }
      if (other.SubnameLoc1.Length != 0) {
        SubnameLoc1 = other.SubnameLoc1;
      }
      if (other.SubnameLoc2.Length != 0) {
        SubnameLoc2 = other.SubnameLoc2;
      }
      if (other.SubnameLoc3.Length != 0) {
        SubnameLoc3 = other.SubnameLoc3;
      }
      if (other.SubnameLoc4.Length != 0) {
        SubnameLoc4 = other.SubnameLoc4;
      }
      if (other.SubnameLoc5.Length != 0) {
        SubnameLoc5 = other.SubnameLoc5;
      }
      if (other.SubnameLoc6.Length != 0) {
        SubnameLoc6 = other.SubnameLoc6;
      }
      if (other.SubnameLoc7.Length != 0) {
        SubnameLoc7 = other.SubnameLoc7;
      }
      if (other.SubnameLoc8.Length != 0) {
        SubnameLoc8 = other.SubnameLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
          case 82: {
            SubnameLoc1 = input.ReadString();
            break;
          }
          case 90: {
            SubnameLoc2 = input.ReadString();
            break;
          }
          case 98: {
            SubnameLoc3 = input.ReadString();
            break;
          }
          case 106: {
            SubnameLoc4 = input.ReadString();
            break;
          }
          case 114: {
            SubnameLoc5 = input.ReadString();
            break;
          }
          case 122: {
            SubnameLoc6 = input.ReadString();
            break;
          }
          case 130: {
            SubnameLoc7 = input.ReadString();
            break;
          }
          case 138: {
            SubnameLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
          case 82: {
            SubnameLoc1 = input.ReadString();
            break;
          }
          case 90: {
            SubnameLoc2 = input.ReadString();
            break;
          }
          case 98: {
            SubnameLoc3 = input.ReadString();
            break;
          }
          case 106: {
            SubnameLoc4 = input.ReadString();
            break;
          }
          case 114: {
            SubnameLoc5 = input.ReadString();
            break;
          }
          case 122: {
            SubnameLoc6 = input.ReadString();
            break;
          }
          case 130: {
            SubnameLoc7 = input.ReadString();
            break;
          }
          case 138: {
            SubnameLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesGameObject : pb::IMessage<LocalesGameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesGameObject> _parser = new pb::MessageParser<LocalesGameObject>(() => new LocalesGameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesGameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGameObject(LocalesGameObject other) : this() {
      entry_ = other.entry_;
      nameLoc1_ = other.nameLoc1_;
      nameLoc2_ = other.nameLoc2_;
      nameLoc3_ = other.nameLoc3_;
      nameLoc4_ = other.nameLoc4_;
      nameLoc5_ = other.nameLoc5_;
      nameLoc6_ = other.nameLoc6_;
      nameLoc7_ = other.nameLoc7_;
      nameLoc8_ = other.nameLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGameObject Clone() {
      return new LocalesGameObject(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// GameObject Entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "name_loc1" field.</summary>
    public const int NameLoc1FieldNumber = 2;
    private string nameLoc1_ = "";
    /// <summary>
    /// GameObject name in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc1 {
      get { return nameLoc1_; }
      set {
        nameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc2" field.</summary>
    public const int NameLoc2FieldNumber = 3;
    private string nameLoc2_ = "";
    /// <summary>
    /// GameObject name in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc2 {
      get { return nameLoc2_; }
      set {
        nameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc3" field.</summary>
    public const int NameLoc3FieldNumber = 4;
    private string nameLoc3_ = "";
    /// <summary>
    /// GameObject name in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc3 {
      get { return nameLoc3_; }
      set {
        nameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc4" field.</summary>
    public const int NameLoc4FieldNumber = 5;
    private string nameLoc4_ = "";
    /// <summary>
    /// GameObject name in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc4 {
      get { return nameLoc4_; }
      set {
        nameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc5" field.</summary>
    public const int NameLoc5FieldNumber = 6;
    private string nameLoc5_ = "";
    /// <summary>
    /// GameObject name in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc5 {
      get { return nameLoc5_; }
      set {
        nameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc6" field.</summary>
    public const int NameLoc6FieldNumber = 7;
    private string nameLoc6_ = "";
    /// <summary>
    /// GameObject name in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc6 {
      get { return nameLoc6_; }
      set {
        nameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc7" field.</summary>
    public const int NameLoc7FieldNumber = 8;
    private string nameLoc7_ = "";
    /// <summary>
    /// GameObject name in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc7 {
      get { return nameLoc7_; }
      set {
        nameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc8" field.</summary>
    public const int NameLoc8FieldNumber = 9;
    private string nameLoc8_ = "";
    /// <summary>
    /// GameObject name in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc8 {
      get { return nameLoc8_; }
      set {
        nameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesGameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesGameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (NameLoc1 != other.NameLoc1) return false;
      if (NameLoc2 != other.NameLoc2) return false;
      if (NameLoc3 != other.NameLoc3) return false;
      if (NameLoc4 != other.NameLoc4) return false;
      if (NameLoc5 != other.NameLoc5) return false;
      if (NameLoc6 != other.NameLoc6) return false;
      if (NameLoc7 != other.NameLoc7) return false;
      if (NameLoc8 != other.NameLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (NameLoc1.Length != 0) hash ^= NameLoc1.GetHashCode();
      if (NameLoc2.Length != 0) hash ^= NameLoc2.GetHashCode();
      if (NameLoc3.Length != 0) hash ^= NameLoc3.GetHashCode();
      if (NameLoc4.Length != 0) hash ^= NameLoc4.GetHashCode();
      if (NameLoc5.Length != 0) hash ^= NameLoc5.GetHashCode();
      if (NameLoc6.Length != 0) hash ^= NameLoc6.GetHashCode();
      if (NameLoc7.Length != 0) hash ^= NameLoc7.GetHashCode();
      if (NameLoc8.Length != 0) hash ^= NameLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (NameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesGameObject other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.NameLoc1.Length != 0) {
        NameLoc1 = other.NameLoc1;
      }
      if (other.NameLoc2.Length != 0) {
        NameLoc2 = other.NameLoc2;
      }
      if (other.NameLoc3.Length != 0) {
        NameLoc3 = other.NameLoc3;
      }
      if (other.NameLoc4.Length != 0) {
        NameLoc4 = other.NameLoc4;
      }
      if (other.NameLoc5.Length != 0) {
        NameLoc5 = other.NameLoc5;
      }
      if (other.NameLoc6.Length != 0) {
        NameLoc6 = other.NameLoc6;
      }
      if (other.NameLoc7.Length != 0) {
        NameLoc7 = other.NameLoc7;
      }
      if (other.NameLoc8.Length != 0) {
        NameLoc8 = other.NameLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesGossipMenuOption : pb::IMessage<LocalesGossipMenuOption>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesGossipMenuOption> _parser = new pb::MessageParser<LocalesGossipMenuOption>(() => new LocalesGossipMenuOption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesGossipMenuOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGossipMenuOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGossipMenuOption(LocalesGossipMenuOption other) : this() {
      menuId_ = other.menuId_;
      id_ = other.id_;
      optionTextLoc1_ = other.optionTextLoc1_;
      optionTextLoc2_ = other.optionTextLoc2_;
      optionTextLoc3_ = other.optionTextLoc3_;
      optionTextLoc4_ = other.optionTextLoc4_;
      optionTextLoc5_ = other.optionTextLoc5_;
      optionTextLoc6_ = other.optionTextLoc6_;
      optionTextLoc7_ = other.optionTextLoc7_;
      optionTextLoc8_ = other.optionTextLoc8_;
      boxTextLoc1_ = other.boxTextLoc1_;
      boxTextLoc2_ = other.boxTextLoc2_;
      boxTextLoc3_ = other.boxTextLoc3_;
      boxTextLoc4_ = other.boxTextLoc4_;
      boxTextLoc5_ = other.boxTextLoc5_;
      boxTextLoc6_ = other.boxTextLoc6_;
      boxTextLoc7_ = other.boxTextLoc7_;
      boxTextLoc8_ = other.boxTextLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesGossipMenuOption Clone() {
      return new LocalesGossipMenuOption(this);
    }

    /// <summary>Field number for the "menu_id" field.</summary>
    public const int MenuIdFieldNumber = 1;
    private uint menuId_;
    /// <summary>
    /// Gossip Menu ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MenuId {
      get { return menuId_; }
      set {
        menuId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    /// <summary>
    /// Option ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "option_text_loc1" field.</summary>
    public const int OptionTextLoc1FieldNumber = 3;
    private string optionTextLoc1_ = "";
    /// <summary>
    /// Option text in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc1 {
      get { return optionTextLoc1_; }
      set {
        optionTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc2" field.</summary>
    public const int OptionTextLoc2FieldNumber = 4;
    private string optionTextLoc2_ = "";
    /// <summary>
    /// Option text in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc2 {
      get { return optionTextLoc2_; }
      set {
        optionTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc3" field.</summary>
    public const int OptionTextLoc3FieldNumber = 5;
    private string optionTextLoc3_ = "";
    /// <summary>
    /// Option text in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc3 {
      get { return optionTextLoc3_; }
      set {
        optionTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc4" field.</summary>
    public const int OptionTextLoc4FieldNumber = 6;
    private string optionTextLoc4_ = "";
    /// <summary>
    /// Option text in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc4 {
      get { return optionTextLoc4_; }
      set {
        optionTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc5" field.</summary>
    public const int OptionTextLoc5FieldNumber = 7;
    private string optionTextLoc5_ = "";
    /// <summary>
    /// Option text in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc5 {
      get { return optionTextLoc5_; }
      set {
        optionTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc6" field.</summary>
    public const int OptionTextLoc6FieldNumber = 8;
    private string optionTextLoc6_ = "";
    /// <summary>
    /// Option text in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc6 {
      get { return optionTextLoc6_; }
      set {
        optionTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc7" field.</summary>
    public const int OptionTextLoc7FieldNumber = 9;
    private string optionTextLoc7_ = "";
    /// <summary>
    /// Option text in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc7 {
      get { return optionTextLoc7_; }
      set {
        optionTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "option_text_loc8" field.</summary>
    public const int OptionTextLoc8FieldNumber = 10;
    private string optionTextLoc8_ = "";
    /// <summary>
    /// Option text in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OptionTextLoc8 {
      get { return optionTextLoc8_; }
      set {
        optionTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc1" field.</summary>
    public const int BoxTextLoc1FieldNumber = 11;
    private string boxTextLoc1_ = "";
    /// <summary>
    /// Box text in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc1 {
      get { return boxTextLoc1_; }
      set {
        boxTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc2" field.</summary>
    public const int BoxTextLoc2FieldNumber = 12;
    private string boxTextLoc2_ = "";
    /// <summary>
    /// Box text in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc2 {
      get { return boxTextLoc2_; }
      set {
        boxTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc3" field.</summary>
    public const int BoxTextLoc3FieldNumber = 13;
    private string boxTextLoc3_ = "";
    /// <summary>
    /// Box text in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc3 {
      get { return boxTextLoc3_; }
      set {
        boxTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc4" field.</summary>
    public const int BoxTextLoc4FieldNumber = 14;
    private string boxTextLoc4_ = "";
    /// <summary>
    /// Box text in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc4 {
      get { return boxTextLoc4_; }
      set {
        boxTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc5" field.</summary>
    public const int BoxTextLoc5FieldNumber = 15;
    private string boxTextLoc5_ = "";
    /// <summary>
    /// Box text in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc5 {
      get { return boxTextLoc5_; }
      set {
        boxTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc6" field.</summary>
    public const int BoxTextLoc6FieldNumber = 16;
    private string boxTextLoc6_ = "";
    /// <summary>
    /// Box text in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc6 {
      get { return boxTextLoc6_; }
      set {
        boxTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc7" field.</summary>
    public const int BoxTextLoc7FieldNumber = 17;
    private string boxTextLoc7_ = "";
    /// <summary>
    /// Box text in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc7 {
      get { return boxTextLoc7_; }
      set {
        boxTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "box_text_loc8" field.</summary>
    public const int BoxTextLoc8FieldNumber = 18;
    private string boxTextLoc8_ = "";
    /// <summary>
    /// Box text in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoxTextLoc8 {
      get { return boxTextLoc8_; }
      set {
        boxTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesGossipMenuOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesGossipMenuOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MenuId != other.MenuId) return false;
      if (Id != other.Id) return false;
      if (OptionTextLoc1 != other.OptionTextLoc1) return false;
      if (OptionTextLoc2 != other.OptionTextLoc2) return false;
      if (OptionTextLoc3 != other.OptionTextLoc3) return false;
      if (OptionTextLoc4 != other.OptionTextLoc4) return false;
      if (OptionTextLoc5 != other.OptionTextLoc5) return false;
      if (OptionTextLoc6 != other.OptionTextLoc6) return false;
      if (OptionTextLoc7 != other.OptionTextLoc7) return false;
      if (OptionTextLoc8 != other.OptionTextLoc8) return false;
      if (BoxTextLoc1 != other.BoxTextLoc1) return false;
      if (BoxTextLoc2 != other.BoxTextLoc2) return false;
      if (BoxTextLoc3 != other.BoxTextLoc3) return false;
      if (BoxTextLoc4 != other.BoxTextLoc4) return false;
      if (BoxTextLoc5 != other.BoxTextLoc5) return false;
      if (BoxTextLoc6 != other.BoxTextLoc6) return false;
      if (BoxTextLoc7 != other.BoxTextLoc7) return false;
      if (BoxTextLoc8 != other.BoxTextLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MenuId != 0) hash ^= MenuId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OptionTextLoc1.Length != 0) hash ^= OptionTextLoc1.GetHashCode();
      if (OptionTextLoc2.Length != 0) hash ^= OptionTextLoc2.GetHashCode();
      if (OptionTextLoc3.Length != 0) hash ^= OptionTextLoc3.GetHashCode();
      if (OptionTextLoc4.Length != 0) hash ^= OptionTextLoc4.GetHashCode();
      if (OptionTextLoc5.Length != 0) hash ^= OptionTextLoc5.GetHashCode();
      if (OptionTextLoc6.Length != 0) hash ^= OptionTextLoc6.GetHashCode();
      if (OptionTextLoc7.Length != 0) hash ^= OptionTextLoc7.GetHashCode();
      if (OptionTextLoc8.Length != 0) hash ^= OptionTextLoc8.GetHashCode();
      if (BoxTextLoc1.Length != 0) hash ^= BoxTextLoc1.GetHashCode();
      if (BoxTextLoc2.Length != 0) hash ^= BoxTextLoc2.GetHashCode();
      if (BoxTextLoc3.Length != 0) hash ^= BoxTextLoc3.GetHashCode();
      if (BoxTextLoc4.Length != 0) hash ^= BoxTextLoc4.GetHashCode();
      if (BoxTextLoc5.Length != 0) hash ^= BoxTextLoc5.GetHashCode();
      if (BoxTextLoc6.Length != 0) hash ^= BoxTextLoc6.GetHashCode();
      if (BoxTextLoc7.Length != 0) hash ^= BoxTextLoc7.GetHashCode();
      if (BoxTextLoc8.Length != 0) hash ^= BoxTextLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MenuId);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (OptionTextLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OptionTextLoc1);
      }
      if (OptionTextLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptionTextLoc2);
      }
      if (OptionTextLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OptionTextLoc3);
      }
      if (OptionTextLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OptionTextLoc4);
      }
      if (OptionTextLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OptionTextLoc5);
      }
      if (OptionTextLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OptionTextLoc6);
      }
      if (OptionTextLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OptionTextLoc7);
      }
      if (OptionTextLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OptionTextLoc8);
      }
      if (BoxTextLoc1.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(BoxTextLoc1);
      }
      if (BoxTextLoc2.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BoxTextLoc2);
      }
      if (BoxTextLoc3.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BoxTextLoc3);
      }
      if (BoxTextLoc4.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BoxTextLoc4);
      }
      if (BoxTextLoc5.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BoxTextLoc5);
      }
      if (BoxTextLoc6.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(BoxTextLoc6);
      }
      if (BoxTextLoc7.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(BoxTextLoc7);
      }
      if (BoxTextLoc8.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(BoxTextLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MenuId);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (OptionTextLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OptionTextLoc1);
      }
      if (OptionTextLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptionTextLoc2);
      }
      if (OptionTextLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OptionTextLoc3);
      }
      if (OptionTextLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OptionTextLoc4);
      }
      if (OptionTextLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OptionTextLoc5);
      }
      if (OptionTextLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OptionTextLoc6);
      }
      if (OptionTextLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OptionTextLoc7);
      }
      if (OptionTextLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OptionTextLoc8);
      }
      if (BoxTextLoc1.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(BoxTextLoc1);
      }
      if (BoxTextLoc2.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BoxTextLoc2);
      }
      if (BoxTextLoc3.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BoxTextLoc3);
      }
      if (BoxTextLoc4.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BoxTextLoc4);
      }
      if (BoxTextLoc5.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BoxTextLoc5);
      }
      if (BoxTextLoc6.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(BoxTextLoc6);
      }
      if (BoxTextLoc7.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(BoxTextLoc7);
      }
      if (BoxTextLoc8.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(BoxTextLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MenuId);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (OptionTextLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc1);
      }
      if (OptionTextLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc2);
      }
      if (OptionTextLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc3);
      }
      if (OptionTextLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc4);
      }
      if (OptionTextLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc5);
      }
      if (OptionTextLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc6);
      }
      if (OptionTextLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc7);
      }
      if (OptionTextLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptionTextLoc8);
      }
      if (BoxTextLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc1);
      }
      if (BoxTextLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc2);
      }
      if (BoxTextLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc3);
      }
      if (BoxTextLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc4);
      }
      if (BoxTextLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc5);
      }
      if (BoxTextLoc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc6);
      }
      if (BoxTextLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc7);
      }
      if (BoxTextLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BoxTextLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesGossipMenuOption other) {
      if (other == null) {
        return;
      }
      if (other.MenuId != 0) {
        MenuId = other.MenuId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OptionTextLoc1.Length != 0) {
        OptionTextLoc1 = other.OptionTextLoc1;
      }
      if (other.OptionTextLoc2.Length != 0) {
        OptionTextLoc2 = other.OptionTextLoc2;
      }
      if (other.OptionTextLoc3.Length != 0) {
        OptionTextLoc3 = other.OptionTextLoc3;
      }
      if (other.OptionTextLoc4.Length != 0) {
        OptionTextLoc4 = other.OptionTextLoc4;
      }
      if (other.OptionTextLoc5.Length != 0) {
        OptionTextLoc5 = other.OptionTextLoc5;
      }
      if (other.OptionTextLoc6.Length != 0) {
        OptionTextLoc6 = other.OptionTextLoc6;
      }
      if (other.OptionTextLoc7.Length != 0) {
        OptionTextLoc7 = other.OptionTextLoc7;
      }
      if (other.OptionTextLoc8.Length != 0) {
        OptionTextLoc8 = other.OptionTextLoc8;
      }
      if (other.BoxTextLoc1.Length != 0) {
        BoxTextLoc1 = other.BoxTextLoc1;
      }
      if (other.BoxTextLoc2.Length != 0) {
        BoxTextLoc2 = other.BoxTextLoc2;
      }
      if (other.BoxTextLoc3.Length != 0) {
        BoxTextLoc3 = other.BoxTextLoc3;
      }
      if (other.BoxTextLoc4.Length != 0) {
        BoxTextLoc4 = other.BoxTextLoc4;
      }
      if (other.BoxTextLoc5.Length != 0) {
        BoxTextLoc5 = other.BoxTextLoc5;
      }
      if (other.BoxTextLoc6.Length != 0) {
        BoxTextLoc6 = other.BoxTextLoc6;
      }
      if (other.BoxTextLoc7.Length != 0) {
        BoxTextLoc7 = other.BoxTextLoc7;
      }
      if (other.BoxTextLoc8.Length != 0) {
        BoxTextLoc8 = other.BoxTextLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MenuId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 26: {
            OptionTextLoc1 = input.ReadString();
            break;
          }
          case 34: {
            OptionTextLoc2 = input.ReadString();
            break;
          }
          case 42: {
            OptionTextLoc3 = input.ReadString();
            break;
          }
          case 50: {
            OptionTextLoc4 = input.ReadString();
            break;
          }
          case 58: {
            OptionTextLoc5 = input.ReadString();
            break;
          }
          case 66: {
            OptionTextLoc6 = input.ReadString();
            break;
          }
          case 74: {
            OptionTextLoc7 = input.ReadString();
            break;
          }
          case 82: {
            OptionTextLoc8 = input.ReadString();
            break;
          }
          case 90: {
            BoxTextLoc1 = input.ReadString();
            break;
          }
          case 98: {
            BoxTextLoc2 = input.ReadString();
            break;
          }
          case 106: {
            BoxTextLoc3 = input.ReadString();
            break;
          }
          case 114: {
            BoxTextLoc4 = input.ReadString();
            break;
          }
          case 122: {
            BoxTextLoc5 = input.ReadString();
            break;
          }
          case 130: {
            BoxTextLoc6 = input.ReadString();
            break;
          }
          case 138: {
            BoxTextLoc7 = input.ReadString();
            break;
          }
          case 146: {
            BoxTextLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MenuId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
          case 26: {
            OptionTextLoc1 = input.ReadString();
            break;
          }
          case 34: {
            OptionTextLoc2 = input.ReadString();
            break;
          }
          case 42: {
            OptionTextLoc3 = input.ReadString();
            break;
          }
          case 50: {
            OptionTextLoc4 = input.ReadString();
            break;
          }
          case 58: {
            OptionTextLoc5 = input.ReadString();
            break;
          }
          case 66: {
            OptionTextLoc6 = input.ReadString();
            break;
          }
          case 74: {
            OptionTextLoc7 = input.ReadString();
            break;
          }
          case 82: {
            OptionTextLoc8 = input.ReadString();
            break;
          }
          case 90: {
            BoxTextLoc1 = input.ReadString();
            break;
          }
          case 98: {
            BoxTextLoc2 = input.ReadString();
            break;
          }
          case 106: {
            BoxTextLoc3 = input.ReadString();
            break;
          }
          case 114: {
            BoxTextLoc4 = input.ReadString();
            break;
          }
          case 122: {
            BoxTextLoc5 = input.ReadString();
            break;
          }
          case 130: {
            BoxTextLoc6 = input.ReadString();
            break;
          }
          case 138: {
            BoxTextLoc7 = input.ReadString();
            break;
          }
          case 146: {
            BoxTextLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesItem : pb::IMessage<LocalesItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesItem> _parser = new pb::MessageParser<LocalesItem>(() => new LocalesItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesItem(LocalesItem other) : this() {
      entry_ = other.entry_;
      nameLoc1_ = other.nameLoc1_;
      nameLoc2_ = other.nameLoc2_;
      nameLoc3_ = other.nameLoc3_;
      nameLoc4_ = other.nameLoc4_;
      nameLoc5_ = other.nameLoc5_;
      nameLoc6_ = other.nameLoc6_;
      nameLoc7_ = other.nameLoc7_;
      nameLoc8_ = other.nameLoc8_;
      descriptionLoc1_ = other.descriptionLoc1_;
      descriptionLoc2_ = other.descriptionLoc2_;
      descriptionLoc3_ = other.descriptionLoc3_;
      descriptionLoc4_ = other.descriptionLoc4_;
      descriptionLoc5_ = other.descriptionLoc5_;
      descriptionLoc6_ = other.descriptionLoc6_;
      descriptionLoc7_ = other.descriptionLoc7_;
      descriptionLoc8_ = other.descriptionLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesItem Clone() {
      return new LocalesItem(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Item Entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "name_loc1" field.</summary>
    public const int NameLoc1FieldNumber = 2;
    private string nameLoc1_ = "";
    /// <summary>
    /// Item name in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc1 {
      get { return nameLoc1_; }
      set {
        nameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc2" field.</summary>
    public const int NameLoc2FieldNumber = 3;
    private string nameLoc2_ = "";
    /// <summary>
    /// Item name in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc2 {
      get { return nameLoc2_; }
      set {
        nameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc3" field.</summary>
    public const int NameLoc3FieldNumber = 4;
    private string nameLoc3_ = "";
    /// <summary>
    /// Item name in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc3 {
      get { return nameLoc3_; }
      set {
        nameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc4" field.</summary>
    public const int NameLoc4FieldNumber = 5;
    private string nameLoc4_ = "";
    /// <summary>
    /// Item name in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc4 {
      get { return nameLoc4_; }
      set {
        nameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc5" field.</summary>
    public const int NameLoc5FieldNumber = 6;
    private string nameLoc5_ = "";
    /// <summary>
    /// Item name in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc5 {
      get { return nameLoc5_; }
      set {
        nameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc6" field.</summary>
    public const int NameLoc6FieldNumber = 7;
    private string nameLoc6_ = "";
    /// <summary>
    /// Item name in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc6 {
      get { return nameLoc6_; }
      set {
        nameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc7" field.</summary>
    public const int NameLoc7FieldNumber = 8;
    private string nameLoc7_ = "";
    /// <summary>
    /// Item name in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc7 {
      get { return nameLoc7_; }
      set {
        nameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_loc8" field.</summary>
    public const int NameLoc8FieldNumber = 9;
    private string nameLoc8_ = "";
    /// <summary>
    /// Item name in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameLoc8 {
      get { return nameLoc8_; }
      set {
        nameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc1" field.</summary>
    public const int DescriptionLoc1FieldNumber = 10;
    private string descriptionLoc1_ = "";
    /// <summary>
    /// Item description in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc1 {
      get { return descriptionLoc1_; }
      set {
        descriptionLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc2" field.</summary>
    public const int DescriptionLoc2FieldNumber = 11;
    private string descriptionLoc2_ = "";
    /// <summary>
    /// Item description in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc2 {
      get { return descriptionLoc2_; }
      set {
        descriptionLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc3" field.</summary>
    public const int DescriptionLoc3FieldNumber = 12;
    private string descriptionLoc3_ = "";
    /// <summary>
    /// Item description in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc3 {
      get { return descriptionLoc3_; }
      set {
        descriptionLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc4" field.</summary>
    public const int DescriptionLoc4FieldNumber = 13;
    private string descriptionLoc4_ = "";
    /// <summary>
    /// Item description in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc4 {
      get { return descriptionLoc4_; }
      set {
        descriptionLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc5" field.</summary>
    public const int DescriptionLoc5FieldNumber = 14;
    private string descriptionLoc5_ = "";
    /// <summary>
    /// Item description in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc5 {
      get { return descriptionLoc5_; }
      set {
        descriptionLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc6" field.</summary>
    public const int DescriptionLoc6FieldNumber = 15;
    private string descriptionLoc6_ = "";
    /// <summary>
    /// Item description in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc6 {
      get { return descriptionLoc6_; }
      set {
        descriptionLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc7" field.</summary>
    public const int DescriptionLoc7FieldNumber = 16;
    private string descriptionLoc7_ = "";
    /// <summary>
    /// Item description in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc7 {
      get { return descriptionLoc7_; }
      set {
        descriptionLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_loc8" field.</summary>
    public const int DescriptionLoc8FieldNumber = 17;
    private string descriptionLoc8_ = "";
    /// <summary>
    /// Item description in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DescriptionLoc8 {
      get { return descriptionLoc8_; }
      set {
        descriptionLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (NameLoc1 != other.NameLoc1) return false;
      if (NameLoc2 != other.NameLoc2) return false;
      if (NameLoc3 != other.NameLoc3) return false;
      if (NameLoc4 != other.NameLoc4) return false;
      if (NameLoc5 != other.NameLoc5) return false;
      if (NameLoc6 != other.NameLoc6) return false;
      if (NameLoc7 != other.NameLoc7) return false;
      if (NameLoc8 != other.NameLoc8) return false;
      if (DescriptionLoc1 != other.DescriptionLoc1) return false;
      if (DescriptionLoc2 != other.DescriptionLoc2) return false;
      if (DescriptionLoc3 != other.DescriptionLoc3) return false;
      if (DescriptionLoc4 != other.DescriptionLoc4) return false;
      if (DescriptionLoc5 != other.DescriptionLoc5) return false;
      if (DescriptionLoc6 != other.DescriptionLoc6) return false;
      if (DescriptionLoc7 != other.DescriptionLoc7) return false;
      if (DescriptionLoc8 != other.DescriptionLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (NameLoc1.Length != 0) hash ^= NameLoc1.GetHashCode();
      if (NameLoc2.Length != 0) hash ^= NameLoc2.GetHashCode();
      if (NameLoc3.Length != 0) hash ^= NameLoc3.GetHashCode();
      if (NameLoc4.Length != 0) hash ^= NameLoc4.GetHashCode();
      if (NameLoc5.Length != 0) hash ^= NameLoc5.GetHashCode();
      if (NameLoc6.Length != 0) hash ^= NameLoc6.GetHashCode();
      if (NameLoc7.Length != 0) hash ^= NameLoc7.GetHashCode();
      if (NameLoc8.Length != 0) hash ^= NameLoc8.GetHashCode();
      if (DescriptionLoc1.Length != 0) hash ^= DescriptionLoc1.GetHashCode();
      if (DescriptionLoc2.Length != 0) hash ^= DescriptionLoc2.GetHashCode();
      if (DescriptionLoc3.Length != 0) hash ^= DescriptionLoc3.GetHashCode();
      if (DescriptionLoc4.Length != 0) hash ^= DescriptionLoc4.GetHashCode();
      if (DescriptionLoc5.Length != 0) hash ^= DescriptionLoc5.GetHashCode();
      if (DescriptionLoc6.Length != 0) hash ^= DescriptionLoc6.GetHashCode();
      if (DescriptionLoc7.Length != 0) hash ^= DescriptionLoc7.GetHashCode();
      if (DescriptionLoc8.Length != 0) hash ^= DescriptionLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (DescriptionLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DescriptionLoc1);
      }
      if (DescriptionLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DescriptionLoc2);
      }
      if (DescriptionLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DescriptionLoc3);
      }
      if (DescriptionLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DescriptionLoc4);
      }
      if (DescriptionLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DescriptionLoc5);
      }
      if (DescriptionLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DescriptionLoc6);
      }
      if (DescriptionLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DescriptionLoc7);
      }
      if (DescriptionLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DescriptionLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (NameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NameLoc8);
      }
      if (DescriptionLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DescriptionLoc1);
      }
      if (DescriptionLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DescriptionLoc2);
      }
      if (DescriptionLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DescriptionLoc3);
      }
      if (DescriptionLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DescriptionLoc4);
      }
      if (DescriptionLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DescriptionLoc5);
      }
      if (DescriptionLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DescriptionLoc6);
      }
      if (DescriptionLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DescriptionLoc7);
      }
      if (DescriptionLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DescriptionLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (NameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc1);
      }
      if (NameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc2);
      }
      if (NameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc3);
      }
      if (NameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc4);
      }
      if (NameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc5);
      }
      if (NameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc6);
      }
      if (NameLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc7);
      }
      if (NameLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameLoc8);
      }
      if (DescriptionLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc1);
      }
      if (DescriptionLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc2);
      }
      if (DescriptionLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc3);
      }
      if (DescriptionLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc4);
      }
      if (DescriptionLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc5);
      }
      if (DescriptionLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc6);
      }
      if (DescriptionLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc7);
      }
      if (DescriptionLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DescriptionLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesItem other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.NameLoc1.Length != 0) {
        NameLoc1 = other.NameLoc1;
      }
      if (other.NameLoc2.Length != 0) {
        NameLoc2 = other.NameLoc2;
      }
      if (other.NameLoc3.Length != 0) {
        NameLoc3 = other.NameLoc3;
      }
      if (other.NameLoc4.Length != 0) {
        NameLoc4 = other.NameLoc4;
      }
      if (other.NameLoc5.Length != 0) {
        NameLoc5 = other.NameLoc5;
      }
      if (other.NameLoc6.Length != 0) {
        NameLoc6 = other.NameLoc6;
      }
      if (other.NameLoc7.Length != 0) {
        NameLoc7 = other.NameLoc7;
      }
      if (other.NameLoc8.Length != 0) {
        NameLoc8 = other.NameLoc8;
      }
      if (other.DescriptionLoc1.Length != 0) {
        DescriptionLoc1 = other.DescriptionLoc1;
      }
      if (other.DescriptionLoc2.Length != 0) {
        DescriptionLoc2 = other.DescriptionLoc2;
      }
      if (other.DescriptionLoc3.Length != 0) {
        DescriptionLoc3 = other.DescriptionLoc3;
      }
      if (other.DescriptionLoc4.Length != 0) {
        DescriptionLoc4 = other.DescriptionLoc4;
      }
      if (other.DescriptionLoc5.Length != 0) {
        DescriptionLoc5 = other.DescriptionLoc5;
      }
      if (other.DescriptionLoc6.Length != 0) {
        DescriptionLoc6 = other.DescriptionLoc6;
      }
      if (other.DescriptionLoc7.Length != 0) {
        DescriptionLoc7 = other.DescriptionLoc7;
      }
      if (other.DescriptionLoc8.Length != 0) {
        DescriptionLoc8 = other.DescriptionLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
          case 82: {
            DescriptionLoc1 = input.ReadString();
            break;
          }
          case 90: {
            DescriptionLoc2 = input.ReadString();
            break;
          }
          case 98: {
            DescriptionLoc3 = input.ReadString();
            break;
          }
          case 106: {
            DescriptionLoc4 = input.ReadString();
            break;
          }
          case 114: {
            DescriptionLoc5 = input.ReadString();
            break;
          }
          case 122: {
            DescriptionLoc6 = input.ReadString();
            break;
          }
          case 130: {
            DescriptionLoc7 = input.ReadString();
            break;
          }
          case 138: {
            DescriptionLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            NameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            NameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            NameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            NameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            NameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            NameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            NameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            NameLoc8 = input.ReadString();
            break;
          }
          case 82: {
            DescriptionLoc1 = input.ReadString();
            break;
          }
          case 90: {
            DescriptionLoc2 = input.ReadString();
            break;
          }
          case 98: {
            DescriptionLoc3 = input.ReadString();
            break;
          }
          case 106: {
            DescriptionLoc4 = input.ReadString();
            break;
          }
          case 114: {
            DescriptionLoc5 = input.ReadString();
            break;
          }
          case 122: {
            DescriptionLoc6 = input.ReadString();
            break;
          }
          case 130: {
            DescriptionLoc7 = input.ReadString();
            break;
          }
          case 138: {
            DescriptionLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesPageText : pb::IMessage<LocalesPageText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesPageText> _parser = new pb::MessageParser<LocalesPageText>(() => new LocalesPageText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesPageText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPageText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPageText(LocalesPageText other) : this() {
      entry_ = other.entry_;
      textLoc1_ = other.textLoc1_;
      textLoc2_ = other.textLoc2_;
      textLoc3_ = other.textLoc3_;
      textLoc4_ = other.textLoc4_;
      textLoc5_ = other.textLoc5_;
      textLoc6_ = other.textLoc6_;
      textLoc7_ = other.textLoc7_;
      textLoc8_ = other.textLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPageText Clone() {
      return new LocalesPageText(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID for the page text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "text_loc1" field.</summary>
    public const int TextLoc1FieldNumber = 2;
    private string textLoc1_ = "";
    /// <summary>
    /// Text in locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc1 {
      get { return textLoc1_; }
      set {
        textLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc2" field.</summary>
    public const int TextLoc2FieldNumber = 3;
    private string textLoc2_ = "";
    /// <summary>
    /// Text in locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc2 {
      get { return textLoc2_; }
      set {
        textLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc3" field.</summary>
    public const int TextLoc3FieldNumber = 4;
    private string textLoc3_ = "";
    /// <summary>
    /// Text in locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc3 {
      get { return textLoc3_; }
      set {
        textLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc4" field.</summary>
    public const int TextLoc4FieldNumber = 5;
    private string textLoc4_ = "";
    /// <summary>
    /// Text in locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc4 {
      get { return textLoc4_; }
      set {
        textLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc5" field.</summary>
    public const int TextLoc5FieldNumber = 6;
    private string textLoc5_ = "";
    /// <summary>
    /// Text in locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc5 {
      get { return textLoc5_; }
      set {
        textLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc6" field.</summary>
    public const int TextLoc6FieldNumber = 7;
    private string textLoc6_ = "";
    /// <summary>
    /// Text in locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc6 {
      get { return textLoc6_; }
      set {
        textLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc7" field.</summary>
    public const int TextLoc7FieldNumber = 8;
    private string textLoc7_ = "";
    /// <summary>
    /// Text in locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc7 {
      get { return textLoc7_; }
      set {
        textLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_loc8" field.</summary>
    public const int TextLoc8FieldNumber = 9;
    private string textLoc8_ = "";
    /// <summary>
    /// Text in locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextLoc8 {
      get { return textLoc8_; }
      set {
        textLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesPageText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesPageText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (TextLoc1 != other.TextLoc1) return false;
      if (TextLoc2 != other.TextLoc2) return false;
      if (TextLoc3 != other.TextLoc3) return false;
      if (TextLoc4 != other.TextLoc4) return false;
      if (TextLoc5 != other.TextLoc5) return false;
      if (TextLoc6 != other.TextLoc6) return false;
      if (TextLoc7 != other.TextLoc7) return false;
      if (TextLoc8 != other.TextLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (TextLoc1.Length != 0) hash ^= TextLoc1.GetHashCode();
      if (TextLoc2.Length != 0) hash ^= TextLoc2.GetHashCode();
      if (TextLoc3.Length != 0) hash ^= TextLoc3.GetHashCode();
      if (TextLoc4.Length != 0) hash ^= TextLoc4.GetHashCode();
      if (TextLoc5.Length != 0) hash ^= TextLoc5.GetHashCode();
      if (TextLoc6.Length != 0) hash ^= TextLoc6.GetHashCode();
      if (TextLoc7.Length != 0) hash ^= TextLoc7.GetHashCode();
      if (TextLoc8.Length != 0) hash ^= TextLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TextLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TextLoc1);
      }
      if (TextLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TextLoc2);
      }
      if (TextLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextLoc3);
      }
      if (TextLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TextLoc4);
      }
      if (TextLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TextLoc5);
      }
      if (TextLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TextLoc6);
      }
      if (TextLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TextLoc7);
      }
      if (TextLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TextLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TextLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TextLoc1);
      }
      if (TextLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TextLoc2);
      }
      if (TextLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextLoc3);
      }
      if (TextLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TextLoc4);
      }
      if (TextLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TextLoc5);
      }
      if (TextLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TextLoc6);
      }
      if (TextLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TextLoc7);
      }
      if (TextLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TextLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (TextLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc1);
      }
      if (TextLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc2);
      }
      if (TextLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc3);
      }
      if (TextLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc4);
      }
      if (TextLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc5);
      }
      if (TextLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc6);
      }
      if (TextLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc7);
      }
      if (TextLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesPageText other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.TextLoc1.Length != 0) {
        TextLoc1 = other.TextLoc1;
      }
      if (other.TextLoc2.Length != 0) {
        TextLoc2 = other.TextLoc2;
      }
      if (other.TextLoc3.Length != 0) {
        TextLoc3 = other.TextLoc3;
      }
      if (other.TextLoc4.Length != 0) {
        TextLoc4 = other.TextLoc4;
      }
      if (other.TextLoc5.Length != 0) {
        TextLoc5 = other.TextLoc5;
      }
      if (other.TextLoc6.Length != 0) {
        TextLoc6 = other.TextLoc6;
      }
      if (other.TextLoc7.Length != 0) {
        TextLoc7 = other.TextLoc7;
      }
      if (other.TextLoc8.Length != 0) {
        TextLoc8 = other.TextLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            TextLoc1 = input.ReadString();
            break;
          }
          case 26: {
            TextLoc2 = input.ReadString();
            break;
          }
          case 34: {
            TextLoc3 = input.ReadString();
            break;
          }
          case 42: {
            TextLoc4 = input.ReadString();
            break;
          }
          case 50: {
            TextLoc5 = input.ReadString();
            break;
          }
          case 58: {
            TextLoc6 = input.ReadString();
            break;
          }
          case 66: {
            TextLoc7 = input.ReadString();
            break;
          }
          case 74: {
            TextLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            TextLoc1 = input.ReadString();
            break;
          }
          case 26: {
            TextLoc2 = input.ReadString();
            break;
          }
          case 34: {
            TextLoc3 = input.ReadString();
            break;
          }
          case 42: {
            TextLoc4 = input.ReadString();
            break;
          }
          case 50: {
            TextLoc5 = input.ReadString();
            break;
          }
          case 58: {
            TextLoc6 = input.ReadString();
            break;
          }
          case 66: {
            TextLoc7 = input.ReadString();
            break;
          }
          case 74: {
            TextLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesPointsOfInterest : pb::IMessage<LocalesPointsOfInterest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesPointsOfInterest> _parser = new pb::MessageParser<LocalesPointsOfInterest>(() => new LocalesPointsOfInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesPointsOfInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPointsOfInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPointsOfInterest(LocalesPointsOfInterest other) : this() {
      entry_ = other.entry_;
      iconNameLoc1_ = other.iconNameLoc1_;
      iconNameLoc2_ = other.iconNameLoc2_;
      iconNameLoc3_ = other.iconNameLoc3_;
      iconNameLoc4_ = other.iconNameLoc4_;
      iconNameLoc5_ = other.iconNameLoc5_;
      iconNameLoc6_ = other.iconNameLoc6_;
      iconNameLoc7_ = other.iconNameLoc7_;
      iconNameLoc8_ = other.iconNameLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesPointsOfInterest Clone() {
      return new LocalesPointsOfInterest(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID for the point of interest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "icon_name_loc1" field.</summary>
    public const int IconNameLoc1FieldNumber = 2;
    private string iconNameLoc1_ = "";
    /// <summary>
    /// Icon name for locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc1 {
      get { return iconNameLoc1_; }
      set {
        iconNameLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc2" field.</summary>
    public const int IconNameLoc2FieldNumber = 3;
    private string iconNameLoc2_ = "";
    /// <summary>
    /// Icon name for locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc2 {
      get { return iconNameLoc2_; }
      set {
        iconNameLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc3" field.</summary>
    public const int IconNameLoc3FieldNumber = 4;
    private string iconNameLoc3_ = "";
    /// <summary>
    /// Icon name for locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc3 {
      get { return iconNameLoc3_; }
      set {
        iconNameLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc4" field.</summary>
    public const int IconNameLoc4FieldNumber = 5;
    private string iconNameLoc4_ = "";
    /// <summary>
    /// Icon name for locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc4 {
      get { return iconNameLoc4_; }
      set {
        iconNameLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc5" field.</summary>
    public const int IconNameLoc5FieldNumber = 6;
    private string iconNameLoc5_ = "";
    /// <summary>
    /// Icon name for locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc5 {
      get { return iconNameLoc5_; }
      set {
        iconNameLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc6" field.</summary>
    public const int IconNameLoc6FieldNumber = 7;
    private string iconNameLoc6_ = "";
    /// <summary>
    /// Icon name for locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc6 {
      get { return iconNameLoc6_; }
      set {
        iconNameLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc7" field.</summary>
    public const int IconNameLoc7FieldNumber = 8;
    private string iconNameLoc7_ = "";
    /// <summary>
    /// Icon name for locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc7 {
      get { return iconNameLoc7_; }
      set {
        iconNameLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_name_loc8" field.</summary>
    public const int IconNameLoc8FieldNumber = 9;
    private string iconNameLoc8_ = "";
    /// <summary>
    /// Icon name for locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconNameLoc8 {
      get { return iconNameLoc8_; }
      set {
        iconNameLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesPointsOfInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesPointsOfInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (IconNameLoc1 != other.IconNameLoc1) return false;
      if (IconNameLoc2 != other.IconNameLoc2) return false;
      if (IconNameLoc3 != other.IconNameLoc3) return false;
      if (IconNameLoc4 != other.IconNameLoc4) return false;
      if (IconNameLoc5 != other.IconNameLoc5) return false;
      if (IconNameLoc6 != other.IconNameLoc6) return false;
      if (IconNameLoc7 != other.IconNameLoc7) return false;
      if (IconNameLoc8 != other.IconNameLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (IconNameLoc1.Length != 0) hash ^= IconNameLoc1.GetHashCode();
      if (IconNameLoc2.Length != 0) hash ^= IconNameLoc2.GetHashCode();
      if (IconNameLoc3.Length != 0) hash ^= IconNameLoc3.GetHashCode();
      if (IconNameLoc4.Length != 0) hash ^= IconNameLoc4.GetHashCode();
      if (IconNameLoc5.Length != 0) hash ^= IconNameLoc5.GetHashCode();
      if (IconNameLoc6.Length != 0) hash ^= IconNameLoc6.GetHashCode();
      if (IconNameLoc7.Length != 0) hash ^= IconNameLoc7.GetHashCode();
      if (IconNameLoc8.Length != 0) hash ^= IconNameLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (IconNameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IconNameLoc1);
      }
      if (IconNameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconNameLoc2);
      }
      if (IconNameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IconNameLoc3);
      }
      if (IconNameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IconNameLoc4);
      }
      if (IconNameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconNameLoc5);
      }
      if (IconNameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IconNameLoc6);
      }
      if (IconNameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IconNameLoc7);
      }
      if (IconNameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IconNameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (IconNameLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IconNameLoc1);
      }
      if (IconNameLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconNameLoc2);
      }
      if (IconNameLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IconNameLoc3);
      }
      if (IconNameLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IconNameLoc4);
      }
      if (IconNameLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconNameLoc5);
      }
      if (IconNameLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IconNameLoc6);
      }
      if (IconNameLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IconNameLoc7);
      }
      if (IconNameLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IconNameLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (IconNameLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc1);
      }
      if (IconNameLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc2);
      }
      if (IconNameLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc3);
      }
      if (IconNameLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc4);
      }
      if (IconNameLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc5);
      }
      if (IconNameLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc6);
      }
      if (IconNameLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc7);
      }
      if (IconNameLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconNameLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesPointsOfInterest other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.IconNameLoc1.Length != 0) {
        IconNameLoc1 = other.IconNameLoc1;
      }
      if (other.IconNameLoc2.Length != 0) {
        IconNameLoc2 = other.IconNameLoc2;
      }
      if (other.IconNameLoc3.Length != 0) {
        IconNameLoc3 = other.IconNameLoc3;
      }
      if (other.IconNameLoc4.Length != 0) {
        IconNameLoc4 = other.IconNameLoc4;
      }
      if (other.IconNameLoc5.Length != 0) {
        IconNameLoc5 = other.IconNameLoc5;
      }
      if (other.IconNameLoc6.Length != 0) {
        IconNameLoc6 = other.IconNameLoc6;
      }
      if (other.IconNameLoc7.Length != 0) {
        IconNameLoc7 = other.IconNameLoc7;
      }
      if (other.IconNameLoc8.Length != 0) {
        IconNameLoc8 = other.IconNameLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            IconNameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            IconNameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            IconNameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            IconNameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            IconNameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            IconNameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            IconNameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            IconNameLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            IconNameLoc1 = input.ReadString();
            break;
          }
          case 26: {
            IconNameLoc2 = input.ReadString();
            break;
          }
          case 34: {
            IconNameLoc3 = input.ReadString();
            break;
          }
          case 42: {
            IconNameLoc4 = input.ReadString();
            break;
          }
          case 50: {
            IconNameLoc5 = input.ReadString();
            break;
          }
          case 58: {
            IconNameLoc6 = input.ReadString();
            break;
          }
          case 66: {
            IconNameLoc7 = input.ReadString();
            break;
          }
          case 74: {
            IconNameLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalesQuest : pb::IMessage<LocalesQuest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalesQuest> _parser = new pb::MessageParser<LocalesQuest>(() => new LocalesQuest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalesQuest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesQuest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesQuest(LocalesQuest other) : this() {
      entry_ = other.entry_;
      titleLoc1_ = other.titleLoc1_;
      titleLoc2_ = other.titleLoc2_;
      titleLoc3_ = other.titleLoc3_;
      titleLoc4_ = other.titleLoc4_;
      titleLoc5_ = other.titleLoc5_;
      titleLoc6_ = other.titleLoc6_;
      titleLoc7_ = other.titleLoc7_;
      titleLoc8_ = other.titleLoc8_;
      detailsLoc1_ = other.detailsLoc1_;
      detailsLoc2_ = other.detailsLoc2_;
      detailsLoc3_ = other.detailsLoc3_;
      detailsLoc4_ = other.detailsLoc4_;
      detailsLoc5_ = other.detailsLoc5_;
      detailsLoc6_ = other.detailsLoc6_;
      detailsLoc7_ = other.detailsLoc7_;
      detailsLoc8_ = other.detailsLoc8_;
      objectivesLoc1_ = other.objectivesLoc1_;
      objectivesLoc2_ = other.objectivesLoc2_;
      objectivesLoc3_ = other.objectivesLoc3_;
      objectivesLoc4_ = other.objectivesLoc4_;
      objectivesLoc5_ = other.objectivesLoc5_;
      objectivesLoc6_ = other.objectivesLoc6_;
      objectivesLoc7_ = other.objectivesLoc7_;
      objectivesLoc8_ = other.objectivesLoc8_;
      offerRewardTextLoc1_ = other.offerRewardTextLoc1_;
      offerRewardTextLoc2_ = other.offerRewardTextLoc2_;
      offerRewardTextLoc3_ = other.offerRewardTextLoc3_;
      offerRewardTextLoc4_ = other.offerRewardTextLoc4_;
      offerRewardTextLoc5_ = other.offerRewardTextLoc5_;
      offerRewardTextLoc6_ = other.offerRewardTextLoc6_;
      offerRewardTextLoc7_ = other.offerRewardTextLoc7_;
      offerRewardTextLoc8_ = other.offerRewardTextLoc8_;
      requestItemsTextLoc1_ = other.requestItemsTextLoc1_;
      requestItemsTextLoc2_ = other.requestItemsTextLoc2_;
      requestItemsTextLoc3_ = other.requestItemsTextLoc3_;
      requestItemsTextLoc4_ = other.requestItemsTextLoc4_;
      requestItemsTextLoc5_ = other.requestItemsTextLoc5_;
      requestItemsTextLoc6_ = other.requestItemsTextLoc6_;
      requestItemsTextLoc7_ = other.requestItemsTextLoc7_;
      requestItemsTextLoc8_ = other.requestItemsTextLoc8_;
      endTextLoc1_ = other.endTextLoc1_;
      endTextLoc2_ = other.endTextLoc2_;
      endTextLoc3_ = other.endTextLoc3_;
      endTextLoc4_ = other.endTextLoc4_;
      endTextLoc5_ = other.endTextLoc5_;
      endTextLoc6_ = other.endTextLoc6_;
      endTextLoc7_ = other.endTextLoc7_;
      endTextLoc8_ = other.endTextLoc8_;
      objectiveText1Loc1_ = other.objectiveText1Loc1_;
      objectiveText1Loc2_ = other.objectiveText1Loc2_;
      objectiveText1Loc3_ = other.objectiveText1Loc3_;
      objectiveText1Loc4_ = other.objectiveText1Loc4_;
      objectiveText1Loc5_ = other.objectiveText1Loc5_;
      objectiveText1Loc6_ = other.objectiveText1Loc6_;
      objectiveText1Loc7_ = other.objectiveText1Loc7_;
      objectiveText1Loc8_ = other.objectiveText1Loc8_;
      objectiveText2Loc1_ = other.objectiveText2Loc1_;
      objectiveText2Loc2_ = other.objectiveText2Loc2_;
      objectiveText2Loc3_ = other.objectiveText2Loc3_;
      objectiveText2Loc4_ = other.objectiveText2Loc4_;
      objectiveText2Loc5_ = other.objectiveText2Loc5_;
      objectiveText2Loc6_ = other.objectiveText2Loc6_;
      objectiveText2Loc7_ = other.objectiveText2Loc7_;
      objectiveText2Loc8_ = other.objectiveText2Loc8_;
      objectiveText3Loc1_ = other.objectiveText3Loc1_;
      objectiveText3Loc2_ = other.objectiveText3Loc2_;
      objectiveText3Loc3_ = other.objectiveText3Loc3_;
      objectiveText3Loc4_ = other.objectiveText3Loc4_;
      objectiveText3Loc5_ = other.objectiveText3Loc5_;
      objectiveText3Loc6_ = other.objectiveText3Loc6_;
      objectiveText3Loc7_ = other.objectiveText3Loc7_;
      objectiveText3Loc8_ = other.objectiveText3Loc8_;
      objectiveText4Loc1_ = other.objectiveText4Loc1_;
      objectiveText4Loc2_ = other.objectiveText4Loc2_;
      objectiveText4Loc3_ = other.objectiveText4Loc3_;
      objectiveText4Loc4_ = other.objectiveText4Loc4_;
      objectiveText4Loc5_ = other.objectiveText4Loc5_;
      objectiveText4Loc6_ = other.objectiveText4Loc6_;
      objectiveText4Loc7_ = other.objectiveText4Loc7_;
      objectiveText4Loc8_ = other.objectiveText4Loc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalesQuest Clone() {
      return new LocalesQuest(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "Title_loc1" field.</summary>
    public const int TitleLoc1FieldNumber = 2;
    private string titleLoc1_ = "";
    /// <summary>
    /// Title fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc1 {
      get { return titleLoc1_; }
      set {
        titleLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc2" field.</summary>
    public const int TitleLoc2FieldNumber = 3;
    private string titleLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc2 {
      get { return titleLoc2_; }
      set {
        titleLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc3" field.</summary>
    public const int TitleLoc3FieldNumber = 4;
    private string titleLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc3 {
      get { return titleLoc3_; }
      set {
        titleLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc4" field.</summary>
    public const int TitleLoc4FieldNumber = 5;
    private string titleLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc4 {
      get { return titleLoc4_; }
      set {
        titleLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc5" field.</summary>
    public const int TitleLoc5FieldNumber = 6;
    private string titleLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc5 {
      get { return titleLoc5_; }
      set {
        titleLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc6" field.</summary>
    public const int TitleLoc6FieldNumber = 7;
    private string titleLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc6 {
      get { return titleLoc6_; }
      set {
        titleLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc7" field.</summary>
    public const int TitleLoc7FieldNumber = 8;
    private string titleLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc7 {
      get { return titleLoc7_; }
      set {
        titleLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title_loc8" field.</summary>
    public const int TitleLoc8FieldNumber = 9;
    private string titleLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TitleLoc8 {
      get { return titleLoc8_; }
      set {
        titleLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc1" field.</summary>
    public const int DetailsLoc1FieldNumber = 10;
    private string detailsLoc1_ = "";
    /// <summary>
    /// Details fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc1 {
      get { return detailsLoc1_; }
      set {
        detailsLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc2" field.</summary>
    public const int DetailsLoc2FieldNumber = 11;
    private string detailsLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc2 {
      get { return detailsLoc2_; }
      set {
        detailsLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc3" field.</summary>
    public const int DetailsLoc3FieldNumber = 12;
    private string detailsLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc3 {
      get { return detailsLoc3_; }
      set {
        detailsLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc4" field.</summary>
    public const int DetailsLoc4FieldNumber = 13;
    private string detailsLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc4 {
      get { return detailsLoc4_; }
      set {
        detailsLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc5" field.</summary>
    public const int DetailsLoc5FieldNumber = 14;
    private string detailsLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc5 {
      get { return detailsLoc5_; }
      set {
        detailsLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc6" field.</summary>
    public const int DetailsLoc6FieldNumber = 15;
    private string detailsLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc6 {
      get { return detailsLoc6_; }
      set {
        detailsLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc7" field.</summary>
    public const int DetailsLoc7FieldNumber = 16;
    private string detailsLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc7 {
      get { return detailsLoc7_; }
      set {
        detailsLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Details_loc8" field.</summary>
    public const int DetailsLoc8FieldNumber = 17;
    private string detailsLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetailsLoc8 {
      get { return detailsLoc8_; }
      set {
        detailsLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc1" field.</summary>
    public const int ObjectivesLoc1FieldNumber = 18;
    private string objectivesLoc1_ = "";
    /// <summary>
    /// Objectives fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc1 {
      get { return objectivesLoc1_; }
      set {
        objectivesLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc2" field.</summary>
    public const int ObjectivesLoc2FieldNumber = 19;
    private string objectivesLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc2 {
      get { return objectivesLoc2_; }
      set {
        objectivesLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc3" field.</summary>
    public const int ObjectivesLoc3FieldNumber = 20;
    private string objectivesLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc3 {
      get { return objectivesLoc3_; }
      set {
        objectivesLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc4" field.</summary>
    public const int ObjectivesLoc4FieldNumber = 21;
    private string objectivesLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc4 {
      get { return objectivesLoc4_; }
      set {
        objectivesLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc5" field.</summary>
    public const int ObjectivesLoc5FieldNumber = 22;
    private string objectivesLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc5 {
      get { return objectivesLoc5_; }
      set {
        objectivesLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc6" field.</summary>
    public const int ObjectivesLoc6FieldNumber = 23;
    private string objectivesLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc6 {
      get { return objectivesLoc6_; }
      set {
        objectivesLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc7" field.</summary>
    public const int ObjectivesLoc7FieldNumber = 24;
    private string objectivesLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc7 {
      get { return objectivesLoc7_; }
      set {
        objectivesLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Objectives_loc8" field.</summary>
    public const int ObjectivesLoc8FieldNumber = 25;
    private string objectivesLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectivesLoc8 {
      get { return objectivesLoc8_; }
      set {
        objectivesLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc1" field.</summary>
    public const int OfferRewardTextLoc1FieldNumber = 26;
    private string offerRewardTextLoc1_ = "";
    /// <summary>
    /// OfferRewardText fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc1 {
      get { return offerRewardTextLoc1_; }
      set {
        offerRewardTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc2" field.</summary>
    public const int OfferRewardTextLoc2FieldNumber = 27;
    private string offerRewardTextLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc2 {
      get { return offerRewardTextLoc2_; }
      set {
        offerRewardTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc3" field.</summary>
    public const int OfferRewardTextLoc3FieldNumber = 28;
    private string offerRewardTextLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc3 {
      get { return offerRewardTextLoc3_; }
      set {
        offerRewardTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc4" field.</summary>
    public const int OfferRewardTextLoc4FieldNumber = 29;
    private string offerRewardTextLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc4 {
      get { return offerRewardTextLoc4_; }
      set {
        offerRewardTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc5" field.</summary>
    public const int OfferRewardTextLoc5FieldNumber = 30;
    private string offerRewardTextLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc5 {
      get { return offerRewardTextLoc5_; }
      set {
        offerRewardTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc6" field.</summary>
    public const int OfferRewardTextLoc6FieldNumber = 31;
    private string offerRewardTextLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc6 {
      get { return offerRewardTextLoc6_; }
      set {
        offerRewardTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc7" field.</summary>
    public const int OfferRewardTextLoc7FieldNumber = 32;
    private string offerRewardTextLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc7 {
      get { return offerRewardTextLoc7_; }
      set {
        offerRewardTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OfferRewardText_loc8" field.</summary>
    public const int OfferRewardTextLoc8FieldNumber = 33;
    private string offerRewardTextLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardTextLoc8 {
      get { return offerRewardTextLoc8_; }
      set {
        offerRewardTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc1" field.</summary>
    public const int RequestItemsTextLoc1FieldNumber = 34;
    private string requestItemsTextLoc1_ = "";
    /// <summary>
    /// RequestItemsText fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc1 {
      get { return requestItemsTextLoc1_; }
      set {
        requestItemsTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc2" field.</summary>
    public const int RequestItemsTextLoc2FieldNumber = 35;
    private string requestItemsTextLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc2 {
      get { return requestItemsTextLoc2_; }
      set {
        requestItemsTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc3" field.</summary>
    public const int RequestItemsTextLoc3FieldNumber = 36;
    private string requestItemsTextLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc3 {
      get { return requestItemsTextLoc3_; }
      set {
        requestItemsTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc4" field.</summary>
    public const int RequestItemsTextLoc4FieldNumber = 37;
    private string requestItemsTextLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc4 {
      get { return requestItemsTextLoc4_; }
      set {
        requestItemsTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc5" field.</summary>
    public const int RequestItemsTextLoc5FieldNumber = 38;
    private string requestItemsTextLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc5 {
      get { return requestItemsTextLoc5_; }
      set {
        requestItemsTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc6" field.</summary>
    public const int RequestItemsTextLoc6FieldNumber = 39;
    private string requestItemsTextLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc6 {
      get { return requestItemsTextLoc6_; }
      set {
        requestItemsTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc7" field.</summary>
    public const int RequestItemsTextLoc7FieldNumber = 40;
    private string requestItemsTextLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc7 {
      get { return requestItemsTextLoc7_; }
      set {
        requestItemsTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestItemsText_loc8" field.</summary>
    public const int RequestItemsTextLoc8FieldNumber = 41;
    private string requestItemsTextLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsTextLoc8 {
      get { return requestItemsTextLoc8_; }
      set {
        requestItemsTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc1" field.</summary>
    public const int EndTextLoc1FieldNumber = 42;
    private string endTextLoc1_ = "";
    /// <summary>
    /// EndText fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc1 {
      get { return endTextLoc1_; }
      set {
        endTextLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc2" field.</summary>
    public const int EndTextLoc2FieldNumber = 43;
    private string endTextLoc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc2 {
      get { return endTextLoc2_; }
      set {
        endTextLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc3" field.</summary>
    public const int EndTextLoc3FieldNumber = 44;
    private string endTextLoc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc3 {
      get { return endTextLoc3_; }
      set {
        endTextLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc4" field.</summary>
    public const int EndTextLoc4FieldNumber = 45;
    private string endTextLoc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc4 {
      get { return endTextLoc4_; }
      set {
        endTextLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc5" field.</summary>
    public const int EndTextLoc5FieldNumber = 46;
    private string endTextLoc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc5 {
      get { return endTextLoc5_; }
      set {
        endTextLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc6" field.</summary>
    public const int EndTextLoc6FieldNumber = 47;
    private string endTextLoc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc6 {
      get { return endTextLoc6_; }
      set {
        endTextLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc7" field.</summary>
    public const int EndTextLoc7FieldNumber = 48;
    private string endTextLoc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc7 {
      get { return endTextLoc7_; }
      set {
        endTextLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndText_loc8" field.</summary>
    public const int EndTextLoc8FieldNumber = 49;
    private string endTextLoc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTextLoc8 {
      get { return endTextLoc8_; }
      set {
        endTextLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc1" field.</summary>
    public const int ObjectiveText1Loc1FieldNumber = 50;
    private string objectiveText1Loc1_ = "";
    /// <summary>
    /// ObjectiveText1 fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc1 {
      get { return objectiveText1Loc1_; }
      set {
        objectiveText1Loc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc2" field.</summary>
    public const int ObjectiveText1Loc2FieldNumber = 51;
    private string objectiveText1Loc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc2 {
      get { return objectiveText1Loc2_; }
      set {
        objectiveText1Loc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc3" field.</summary>
    public const int ObjectiveText1Loc3FieldNumber = 52;
    private string objectiveText1Loc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc3 {
      get { return objectiveText1Loc3_; }
      set {
        objectiveText1Loc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc4" field.</summary>
    public const int ObjectiveText1Loc4FieldNumber = 53;
    private string objectiveText1Loc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc4 {
      get { return objectiveText1Loc4_; }
      set {
        objectiveText1Loc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc5" field.</summary>
    public const int ObjectiveText1Loc5FieldNumber = 54;
    private string objectiveText1Loc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc5 {
      get { return objectiveText1Loc5_; }
      set {
        objectiveText1Loc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc6" field.</summary>
    public const int ObjectiveText1Loc6FieldNumber = 55;
    private string objectiveText1Loc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc6 {
      get { return objectiveText1Loc6_; }
      set {
        objectiveText1Loc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc7" field.</summary>
    public const int ObjectiveText1Loc7FieldNumber = 56;
    private string objectiveText1Loc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc7 {
      get { return objectiveText1Loc7_; }
      set {
        objectiveText1Loc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText1_loc8" field.</summary>
    public const int ObjectiveText1Loc8FieldNumber = 57;
    private string objectiveText1Loc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1Loc8 {
      get { return objectiveText1Loc8_; }
      set {
        objectiveText1Loc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc1" field.</summary>
    public const int ObjectiveText2Loc1FieldNumber = 58;
    private string objectiveText2Loc1_ = "";
    /// <summary>
    /// ObjectiveText2 fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc1 {
      get { return objectiveText2Loc1_; }
      set {
        objectiveText2Loc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc2" field.</summary>
    public const int ObjectiveText2Loc2FieldNumber = 59;
    private string objectiveText2Loc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc2 {
      get { return objectiveText2Loc2_; }
      set {
        objectiveText2Loc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc3" field.</summary>
    public const int ObjectiveText2Loc3FieldNumber = 60;
    private string objectiveText2Loc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc3 {
      get { return objectiveText2Loc3_; }
      set {
        objectiveText2Loc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc4" field.</summary>
    public const int ObjectiveText2Loc4FieldNumber = 61;
    private string objectiveText2Loc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc4 {
      get { return objectiveText2Loc4_; }
      set {
        objectiveText2Loc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc5" field.</summary>
    public const int ObjectiveText2Loc5FieldNumber = 62;
    private string objectiveText2Loc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc5 {
      get { return objectiveText2Loc5_; }
      set {
        objectiveText2Loc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc6" field.</summary>
    public const int ObjectiveText2Loc6FieldNumber = 63;
    private string objectiveText2Loc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc6 {
      get { return objectiveText2Loc6_; }
      set {
        objectiveText2Loc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc7" field.</summary>
    public const int ObjectiveText2Loc7FieldNumber = 64;
    private string objectiveText2Loc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc7 {
      get { return objectiveText2Loc7_; }
      set {
        objectiveText2Loc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText2_loc8" field.</summary>
    public const int ObjectiveText2Loc8FieldNumber = 65;
    private string objectiveText2Loc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2Loc8 {
      get { return objectiveText2Loc8_; }
      set {
        objectiveText2Loc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc1" field.</summary>
    public const int ObjectiveText3Loc1FieldNumber = 66;
    private string objectiveText3Loc1_ = "";
    /// <summary>
    /// ObjectiveText3 fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc1 {
      get { return objectiveText3Loc1_; }
      set {
        objectiveText3Loc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc2" field.</summary>
    public const int ObjectiveText3Loc2FieldNumber = 67;
    private string objectiveText3Loc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc2 {
      get { return objectiveText3Loc2_; }
      set {
        objectiveText3Loc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc3" field.</summary>
    public const int ObjectiveText3Loc3FieldNumber = 68;
    private string objectiveText3Loc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc3 {
      get { return objectiveText3Loc3_; }
      set {
        objectiveText3Loc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc4" field.</summary>
    public const int ObjectiveText3Loc4FieldNumber = 69;
    private string objectiveText3Loc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc4 {
      get { return objectiveText3Loc4_; }
      set {
        objectiveText3Loc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc5" field.</summary>
    public const int ObjectiveText3Loc5FieldNumber = 70;
    private string objectiveText3Loc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc5 {
      get { return objectiveText3Loc5_; }
      set {
        objectiveText3Loc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc6" field.</summary>
    public const int ObjectiveText3Loc6FieldNumber = 71;
    private string objectiveText3Loc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc6 {
      get { return objectiveText3Loc6_; }
      set {
        objectiveText3Loc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc7" field.</summary>
    public const int ObjectiveText3Loc7FieldNumber = 72;
    private string objectiveText3Loc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc7 {
      get { return objectiveText3Loc7_; }
      set {
        objectiveText3Loc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText3_loc8" field.</summary>
    public const int ObjectiveText3Loc8FieldNumber = 73;
    private string objectiveText3Loc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3Loc8 {
      get { return objectiveText3Loc8_; }
      set {
        objectiveText3Loc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc1" field.</summary>
    public const int ObjectiveText4Loc1FieldNumber = 74;
    private string objectiveText4Loc1_ = "";
    /// <summary>
    /// ObjectiveText4 fields for different locales
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc1 {
      get { return objectiveText4Loc1_; }
      set {
        objectiveText4Loc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc2" field.</summary>
    public const int ObjectiveText4Loc2FieldNumber = 75;
    private string objectiveText4Loc2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc2 {
      get { return objectiveText4Loc2_; }
      set {
        objectiveText4Loc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc3" field.</summary>
    public const int ObjectiveText4Loc3FieldNumber = 76;
    private string objectiveText4Loc3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc3 {
      get { return objectiveText4Loc3_; }
      set {
        objectiveText4Loc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc4" field.</summary>
    public const int ObjectiveText4Loc4FieldNumber = 77;
    private string objectiveText4Loc4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc4 {
      get { return objectiveText4Loc4_; }
      set {
        objectiveText4Loc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc5" field.</summary>
    public const int ObjectiveText4Loc5FieldNumber = 78;
    private string objectiveText4Loc5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc5 {
      get { return objectiveText4Loc5_; }
      set {
        objectiveText4Loc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc6" field.</summary>
    public const int ObjectiveText4Loc6FieldNumber = 79;
    private string objectiveText4Loc6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc6 {
      get { return objectiveText4Loc6_; }
      set {
        objectiveText4Loc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc7" field.</summary>
    public const int ObjectiveText4Loc7FieldNumber = 80;
    private string objectiveText4Loc7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc7 {
      get { return objectiveText4Loc7_; }
      set {
        objectiveText4Loc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ObjectiveText4_loc8" field.</summary>
    public const int ObjectiveText4Loc8FieldNumber = 81;
    private string objectiveText4Loc8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4Loc8 {
      get { return objectiveText4Loc8_; }
      set {
        objectiveText4Loc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalesQuest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalesQuest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (TitleLoc1 != other.TitleLoc1) return false;
      if (TitleLoc2 != other.TitleLoc2) return false;
      if (TitleLoc3 != other.TitleLoc3) return false;
      if (TitleLoc4 != other.TitleLoc4) return false;
      if (TitleLoc5 != other.TitleLoc5) return false;
      if (TitleLoc6 != other.TitleLoc6) return false;
      if (TitleLoc7 != other.TitleLoc7) return false;
      if (TitleLoc8 != other.TitleLoc8) return false;
      if (DetailsLoc1 != other.DetailsLoc1) return false;
      if (DetailsLoc2 != other.DetailsLoc2) return false;
      if (DetailsLoc3 != other.DetailsLoc3) return false;
      if (DetailsLoc4 != other.DetailsLoc4) return false;
      if (DetailsLoc5 != other.DetailsLoc5) return false;
      if (DetailsLoc6 != other.DetailsLoc6) return false;
      if (DetailsLoc7 != other.DetailsLoc7) return false;
      if (DetailsLoc8 != other.DetailsLoc8) return false;
      if (ObjectivesLoc1 != other.ObjectivesLoc1) return false;
      if (ObjectivesLoc2 != other.ObjectivesLoc2) return false;
      if (ObjectivesLoc3 != other.ObjectivesLoc3) return false;
      if (ObjectivesLoc4 != other.ObjectivesLoc4) return false;
      if (ObjectivesLoc5 != other.ObjectivesLoc5) return false;
      if (ObjectivesLoc6 != other.ObjectivesLoc6) return false;
      if (ObjectivesLoc7 != other.ObjectivesLoc7) return false;
      if (ObjectivesLoc8 != other.ObjectivesLoc8) return false;
      if (OfferRewardTextLoc1 != other.OfferRewardTextLoc1) return false;
      if (OfferRewardTextLoc2 != other.OfferRewardTextLoc2) return false;
      if (OfferRewardTextLoc3 != other.OfferRewardTextLoc3) return false;
      if (OfferRewardTextLoc4 != other.OfferRewardTextLoc4) return false;
      if (OfferRewardTextLoc5 != other.OfferRewardTextLoc5) return false;
      if (OfferRewardTextLoc6 != other.OfferRewardTextLoc6) return false;
      if (OfferRewardTextLoc7 != other.OfferRewardTextLoc7) return false;
      if (OfferRewardTextLoc8 != other.OfferRewardTextLoc8) return false;
      if (RequestItemsTextLoc1 != other.RequestItemsTextLoc1) return false;
      if (RequestItemsTextLoc2 != other.RequestItemsTextLoc2) return false;
      if (RequestItemsTextLoc3 != other.RequestItemsTextLoc3) return false;
      if (RequestItemsTextLoc4 != other.RequestItemsTextLoc4) return false;
      if (RequestItemsTextLoc5 != other.RequestItemsTextLoc5) return false;
      if (RequestItemsTextLoc6 != other.RequestItemsTextLoc6) return false;
      if (RequestItemsTextLoc7 != other.RequestItemsTextLoc7) return false;
      if (RequestItemsTextLoc8 != other.RequestItemsTextLoc8) return false;
      if (EndTextLoc1 != other.EndTextLoc1) return false;
      if (EndTextLoc2 != other.EndTextLoc2) return false;
      if (EndTextLoc3 != other.EndTextLoc3) return false;
      if (EndTextLoc4 != other.EndTextLoc4) return false;
      if (EndTextLoc5 != other.EndTextLoc5) return false;
      if (EndTextLoc6 != other.EndTextLoc6) return false;
      if (EndTextLoc7 != other.EndTextLoc7) return false;
      if (EndTextLoc8 != other.EndTextLoc8) return false;
      if (ObjectiveText1Loc1 != other.ObjectiveText1Loc1) return false;
      if (ObjectiveText1Loc2 != other.ObjectiveText1Loc2) return false;
      if (ObjectiveText1Loc3 != other.ObjectiveText1Loc3) return false;
      if (ObjectiveText1Loc4 != other.ObjectiveText1Loc4) return false;
      if (ObjectiveText1Loc5 != other.ObjectiveText1Loc5) return false;
      if (ObjectiveText1Loc6 != other.ObjectiveText1Loc6) return false;
      if (ObjectiveText1Loc7 != other.ObjectiveText1Loc7) return false;
      if (ObjectiveText1Loc8 != other.ObjectiveText1Loc8) return false;
      if (ObjectiveText2Loc1 != other.ObjectiveText2Loc1) return false;
      if (ObjectiveText2Loc2 != other.ObjectiveText2Loc2) return false;
      if (ObjectiveText2Loc3 != other.ObjectiveText2Loc3) return false;
      if (ObjectiveText2Loc4 != other.ObjectiveText2Loc4) return false;
      if (ObjectiveText2Loc5 != other.ObjectiveText2Loc5) return false;
      if (ObjectiveText2Loc6 != other.ObjectiveText2Loc6) return false;
      if (ObjectiveText2Loc7 != other.ObjectiveText2Loc7) return false;
      if (ObjectiveText2Loc8 != other.ObjectiveText2Loc8) return false;
      if (ObjectiveText3Loc1 != other.ObjectiveText3Loc1) return false;
      if (ObjectiveText3Loc2 != other.ObjectiveText3Loc2) return false;
      if (ObjectiveText3Loc3 != other.ObjectiveText3Loc3) return false;
      if (ObjectiveText3Loc4 != other.ObjectiveText3Loc4) return false;
      if (ObjectiveText3Loc5 != other.ObjectiveText3Loc5) return false;
      if (ObjectiveText3Loc6 != other.ObjectiveText3Loc6) return false;
      if (ObjectiveText3Loc7 != other.ObjectiveText3Loc7) return false;
      if (ObjectiveText3Loc8 != other.ObjectiveText3Loc8) return false;
      if (ObjectiveText4Loc1 != other.ObjectiveText4Loc1) return false;
      if (ObjectiveText4Loc2 != other.ObjectiveText4Loc2) return false;
      if (ObjectiveText4Loc3 != other.ObjectiveText4Loc3) return false;
      if (ObjectiveText4Loc4 != other.ObjectiveText4Loc4) return false;
      if (ObjectiveText4Loc5 != other.ObjectiveText4Loc5) return false;
      if (ObjectiveText4Loc6 != other.ObjectiveText4Loc6) return false;
      if (ObjectiveText4Loc7 != other.ObjectiveText4Loc7) return false;
      if (ObjectiveText4Loc8 != other.ObjectiveText4Loc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (TitleLoc1.Length != 0) hash ^= TitleLoc1.GetHashCode();
      if (TitleLoc2.Length != 0) hash ^= TitleLoc2.GetHashCode();
      if (TitleLoc3.Length != 0) hash ^= TitleLoc3.GetHashCode();
      if (TitleLoc4.Length != 0) hash ^= TitleLoc4.GetHashCode();
      if (TitleLoc5.Length != 0) hash ^= TitleLoc5.GetHashCode();
      if (TitleLoc6.Length != 0) hash ^= TitleLoc6.GetHashCode();
      if (TitleLoc7.Length != 0) hash ^= TitleLoc7.GetHashCode();
      if (TitleLoc8.Length != 0) hash ^= TitleLoc8.GetHashCode();
      if (DetailsLoc1.Length != 0) hash ^= DetailsLoc1.GetHashCode();
      if (DetailsLoc2.Length != 0) hash ^= DetailsLoc2.GetHashCode();
      if (DetailsLoc3.Length != 0) hash ^= DetailsLoc3.GetHashCode();
      if (DetailsLoc4.Length != 0) hash ^= DetailsLoc4.GetHashCode();
      if (DetailsLoc5.Length != 0) hash ^= DetailsLoc5.GetHashCode();
      if (DetailsLoc6.Length != 0) hash ^= DetailsLoc6.GetHashCode();
      if (DetailsLoc7.Length != 0) hash ^= DetailsLoc7.GetHashCode();
      if (DetailsLoc8.Length != 0) hash ^= DetailsLoc8.GetHashCode();
      if (ObjectivesLoc1.Length != 0) hash ^= ObjectivesLoc1.GetHashCode();
      if (ObjectivesLoc2.Length != 0) hash ^= ObjectivesLoc2.GetHashCode();
      if (ObjectivesLoc3.Length != 0) hash ^= ObjectivesLoc3.GetHashCode();
      if (ObjectivesLoc4.Length != 0) hash ^= ObjectivesLoc4.GetHashCode();
      if (ObjectivesLoc5.Length != 0) hash ^= ObjectivesLoc5.GetHashCode();
      if (ObjectivesLoc6.Length != 0) hash ^= ObjectivesLoc6.GetHashCode();
      if (ObjectivesLoc7.Length != 0) hash ^= ObjectivesLoc7.GetHashCode();
      if (ObjectivesLoc8.Length != 0) hash ^= ObjectivesLoc8.GetHashCode();
      if (OfferRewardTextLoc1.Length != 0) hash ^= OfferRewardTextLoc1.GetHashCode();
      if (OfferRewardTextLoc2.Length != 0) hash ^= OfferRewardTextLoc2.GetHashCode();
      if (OfferRewardTextLoc3.Length != 0) hash ^= OfferRewardTextLoc3.GetHashCode();
      if (OfferRewardTextLoc4.Length != 0) hash ^= OfferRewardTextLoc4.GetHashCode();
      if (OfferRewardTextLoc5.Length != 0) hash ^= OfferRewardTextLoc5.GetHashCode();
      if (OfferRewardTextLoc6.Length != 0) hash ^= OfferRewardTextLoc6.GetHashCode();
      if (OfferRewardTextLoc7.Length != 0) hash ^= OfferRewardTextLoc7.GetHashCode();
      if (OfferRewardTextLoc8.Length != 0) hash ^= OfferRewardTextLoc8.GetHashCode();
      if (RequestItemsTextLoc1.Length != 0) hash ^= RequestItemsTextLoc1.GetHashCode();
      if (RequestItemsTextLoc2.Length != 0) hash ^= RequestItemsTextLoc2.GetHashCode();
      if (RequestItemsTextLoc3.Length != 0) hash ^= RequestItemsTextLoc3.GetHashCode();
      if (RequestItemsTextLoc4.Length != 0) hash ^= RequestItemsTextLoc4.GetHashCode();
      if (RequestItemsTextLoc5.Length != 0) hash ^= RequestItemsTextLoc5.GetHashCode();
      if (RequestItemsTextLoc6.Length != 0) hash ^= RequestItemsTextLoc6.GetHashCode();
      if (RequestItemsTextLoc7.Length != 0) hash ^= RequestItemsTextLoc7.GetHashCode();
      if (RequestItemsTextLoc8.Length != 0) hash ^= RequestItemsTextLoc8.GetHashCode();
      if (EndTextLoc1.Length != 0) hash ^= EndTextLoc1.GetHashCode();
      if (EndTextLoc2.Length != 0) hash ^= EndTextLoc2.GetHashCode();
      if (EndTextLoc3.Length != 0) hash ^= EndTextLoc3.GetHashCode();
      if (EndTextLoc4.Length != 0) hash ^= EndTextLoc4.GetHashCode();
      if (EndTextLoc5.Length != 0) hash ^= EndTextLoc5.GetHashCode();
      if (EndTextLoc6.Length != 0) hash ^= EndTextLoc6.GetHashCode();
      if (EndTextLoc7.Length != 0) hash ^= EndTextLoc7.GetHashCode();
      if (EndTextLoc8.Length != 0) hash ^= EndTextLoc8.GetHashCode();
      if (ObjectiveText1Loc1.Length != 0) hash ^= ObjectiveText1Loc1.GetHashCode();
      if (ObjectiveText1Loc2.Length != 0) hash ^= ObjectiveText1Loc2.GetHashCode();
      if (ObjectiveText1Loc3.Length != 0) hash ^= ObjectiveText1Loc3.GetHashCode();
      if (ObjectiveText1Loc4.Length != 0) hash ^= ObjectiveText1Loc4.GetHashCode();
      if (ObjectiveText1Loc5.Length != 0) hash ^= ObjectiveText1Loc5.GetHashCode();
      if (ObjectiveText1Loc6.Length != 0) hash ^= ObjectiveText1Loc6.GetHashCode();
      if (ObjectiveText1Loc7.Length != 0) hash ^= ObjectiveText1Loc7.GetHashCode();
      if (ObjectiveText1Loc8.Length != 0) hash ^= ObjectiveText1Loc8.GetHashCode();
      if (ObjectiveText2Loc1.Length != 0) hash ^= ObjectiveText2Loc1.GetHashCode();
      if (ObjectiveText2Loc2.Length != 0) hash ^= ObjectiveText2Loc2.GetHashCode();
      if (ObjectiveText2Loc3.Length != 0) hash ^= ObjectiveText2Loc3.GetHashCode();
      if (ObjectiveText2Loc4.Length != 0) hash ^= ObjectiveText2Loc4.GetHashCode();
      if (ObjectiveText2Loc5.Length != 0) hash ^= ObjectiveText2Loc5.GetHashCode();
      if (ObjectiveText2Loc6.Length != 0) hash ^= ObjectiveText2Loc6.GetHashCode();
      if (ObjectiveText2Loc7.Length != 0) hash ^= ObjectiveText2Loc7.GetHashCode();
      if (ObjectiveText2Loc8.Length != 0) hash ^= ObjectiveText2Loc8.GetHashCode();
      if (ObjectiveText3Loc1.Length != 0) hash ^= ObjectiveText3Loc1.GetHashCode();
      if (ObjectiveText3Loc2.Length != 0) hash ^= ObjectiveText3Loc2.GetHashCode();
      if (ObjectiveText3Loc3.Length != 0) hash ^= ObjectiveText3Loc3.GetHashCode();
      if (ObjectiveText3Loc4.Length != 0) hash ^= ObjectiveText3Loc4.GetHashCode();
      if (ObjectiveText3Loc5.Length != 0) hash ^= ObjectiveText3Loc5.GetHashCode();
      if (ObjectiveText3Loc6.Length != 0) hash ^= ObjectiveText3Loc6.GetHashCode();
      if (ObjectiveText3Loc7.Length != 0) hash ^= ObjectiveText3Loc7.GetHashCode();
      if (ObjectiveText3Loc8.Length != 0) hash ^= ObjectiveText3Loc8.GetHashCode();
      if (ObjectiveText4Loc1.Length != 0) hash ^= ObjectiveText4Loc1.GetHashCode();
      if (ObjectiveText4Loc2.Length != 0) hash ^= ObjectiveText4Loc2.GetHashCode();
      if (ObjectiveText4Loc3.Length != 0) hash ^= ObjectiveText4Loc3.GetHashCode();
      if (ObjectiveText4Loc4.Length != 0) hash ^= ObjectiveText4Loc4.GetHashCode();
      if (ObjectiveText4Loc5.Length != 0) hash ^= ObjectiveText4Loc5.GetHashCode();
      if (ObjectiveText4Loc6.Length != 0) hash ^= ObjectiveText4Loc6.GetHashCode();
      if (ObjectiveText4Loc7.Length != 0) hash ^= ObjectiveText4Loc7.GetHashCode();
      if (ObjectiveText4Loc8.Length != 0) hash ^= ObjectiveText4Loc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TitleLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TitleLoc1);
      }
      if (TitleLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TitleLoc2);
      }
      if (TitleLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TitleLoc3);
      }
      if (TitleLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TitleLoc4);
      }
      if (TitleLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TitleLoc5);
      }
      if (TitleLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TitleLoc6);
      }
      if (TitleLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TitleLoc7);
      }
      if (TitleLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TitleLoc8);
      }
      if (DetailsLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DetailsLoc1);
      }
      if (DetailsLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DetailsLoc2);
      }
      if (DetailsLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DetailsLoc3);
      }
      if (DetailsLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DetailsLoc4);
      }
      if (DetailsLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DetailsLoc5);
      }
      if (DetailsLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DetailsLoc6);
      }
      if (DetailsLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DetailsLoc7);
      }
      if (DetailsLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DetailsLoc8);
      }
      if (ObjectivesLoc1.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ObjectivesLoc1);
      }
      if (ObjectivesLoc2.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ObjectivesLoc2);
      }
      if (ObjectivesLoc3.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ObjectivesLoc3);
      }
      if (ObjectivesLoc4.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ObjectivesLoc4);
      }
      if (ObjectivesLoc5.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ObjectivesLoc5);
      }
      if (ObjectivesLoc6.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ObjectivesLoc6);
      }
      if (ObjectivesLoc7.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ObjectivesLoc7);
      }
      if (ObjectivesLoc8.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ObjectivesLoc8);
      }
      if (OfferRewardTextLoc1.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(OfferRewardTextLoc1);
      }
      if (OfferRewardTextLoc2.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(OfferRewardTextLoc2);
      }
      if (OfferRewardTextLoc3.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(OfferRewardTextLoc3);
      }
      if (OfferRewardTextLoc4.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(OfferRewardTextLoc4);
      }
      if (OfferRewardTextLoc5.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(OfferRewardTextLoc5);
      }
      if (OfferRewardTextLoc6.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(OfferRewardTextLoc6);
      }
      if (OfferRewardTextLoc7.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(OfferRewardTextLoc7);
      }
      if (OfferRewardTextLoc8.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OfferRewardTextLoc8);
      }
      if (RequestItemsTextLoc1.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(RequestItemsTextLoc1);
      }
      if (RequestItemsTextLoc2.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(RequestItemsTextLoc2);
      }
      if (RequestItemsTextLoc3.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(RequestItemsTextLoc3);
      }
      if (RequestItemsTextLoc4.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(RequestItemsTextLoc4);
      }
      if (RequestItemsTextLoc5.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(RequestItemsTextLoc5);
      }
      if (RequestItemsTextLoc6.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(RequestItemsTextLoc6);
      }
      if (RequestItemsTextLoc7.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(RequestItemsTextLoc7);
      }
      if (RequestItemsTextLoc8.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(RequestItemsTextLoc8);
      }
      if (EndTextLoc1.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(EndTextLoc1);
      }
      if (EndTextLoc2.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(EndTextLoc2);
      }
      if (EndTextLoc3.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(EndTextLoc3);
      }
      if (EndTextLoc4.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(EndTextLoc4);
      }
      if (EndTextLoc5.Length != 0) {
        output.WriteRawTag(242, 2);
        output.WriteString(EndTextLoc5);
      }
      if (EndTextLoc6.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(EndTextLoc6);
      }
      if (EndTextLoc7.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(EndTextLoc7);
      }
      if (EndTextLoc8.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(EndTextLoc8);
      }
      if (ObjectiveText1Loc1.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(ObjectiveText1Loc1);
      }
      if (ObjectiveText1Loc2.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ObjectiveText1Loc2);
      }
      if (ObjectiveText1Loc3.Length != 0) {
        output.WriteRawTag(162, 3);
        output.WriteString(ObjectiveText1Loc3);
      }
      if (ObjectiveText1Loc4.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(ObjectiveText1Loc4);
      }
      if (ObjectiveText1Loc5.Length != 0) {
        output.WriteRawTag(178, 3);
        output.WriteString(ObjectiveText1Loc5);
      }
      if (ObjectiveText1Loc6.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(ObjectiveText1Loc6);
      }
      if (ObjectiveText1Loc7.Length != 0) {
        output.WriteRawTag(194, 3);
        output.WriteString(ObjectiveText1Loc7);
      }
      if (ObjectiveText1Loc8.Length != 0) {
        output.WriteRawTag(202, 3);
        output.WriteString(ObjectiveText1Loc8);
      }
      if (ObjectiveText2Loc1.Length != 0) {
        output.WriteRawTag(210, 3);
        output.WriteString(ObjectiveText2Loc1);
      }
      if (ObjectiveText2Loc2.Length != 0) {
        output.WriteRawTag(218, 3);
        output.WriteString(ObjectiveText2Loc2);
      }
      if (ObjectiveText2Loc3.Length != 0) {
        output.WriteRawTag(226, 3);
        output.WriteString(ObjectiveText2Loc3);
      }
      if (ObjectiveText2Loc4.Length != 0) {
        output.WriteRawTag(234, 3);
        output.WriteString(ObjectiveText2Loc4);
      }
      if (ObjectiveText2Loc5.Length != 0) {
        output.WriteRawTag(242, 3);
        output.WriteString(ObjectiveText2Loc5);
      }
      if (ObjectiveText2Loc6.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(ObjectiveText2Loc6);
      }
      if (ObjectiveText2Loc7.Length != 0) {
        output.WriteRawTag(130, 4);
        output.WriteString(ObjectiveText2Loc7);
      }
      if (ObjectiveText2Loc8.Length != 0) {
        output.WriteRawTag(138, 4);
        output.WriteString(ObjectiveText2Loc8);
      }
      if (ObjectiveText3Loc1.Length != 0) {
        output.WriteRawTag(146, 4);
        output.WriteString(ObjectiveText3Loc1);
      }
      if (ObjectiveText3Loc2.Length != 0) {
        output.WriteRawTag(154, 4);
        output.WriteString(ObjectiveText3Loc2);
      }
      if (ObjectiveText3Loc3.Length != 0) {
        output.WriteRawTag(162, 4);
        output.WriteString(ObjectiveText3Loc3);
      }
      if (ObjectiveText3Loc4.Length != 0) {
        output.WriteRawTag(170, 4);
        output.WriteString(ObjectiveText3Loc4);
      }
      if (ObjectiveText3Loc5.Length != 0) {
        output.WriteRawTag(178, 4);
        output.WriteString(ObjectiveText3Loc5);
      }
      if (ObjectiveText3Loc6.Length != 0) {
        output.WriteRawTag(186, 4);
        output.WriteString(ObjectiveText3Loc6);
      }
      if (ObjectiveText3Loc7.Length != 0) {
        output.WriteRawTag(194, 4);
        output.WriteString(ObjectiveText3Loc7);
      }
      if (ObjectiveText3Loc8.Length != 0) {
        output.WriteRawTag(202, 4);
        output.WriteString(ObjectiveText3Loc8);
      }
      if (ObjectiveText4Loc1.Length != 0) {
        output.WriteRawTag(210, 4);
        output.WriteString(ObjectiveText4Loc1);
      }
      if (ObjectiveText4Loc2.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(ObjectiveText4Loc2);
      }
      if (ObjectiveText4Loc3.Length != 0) {
        output.WriteRawTag(226, 4);
        output.WriteString(ObjectiveText4Loc3);
      }
      if (ObjectiveText4Loc4.Length != 0) {
        output.WriteRawTag(234, 4);
        output.WriteString(ObjectiveText4Loc4);
      }
      if (ObjectiveText4Loc5.Length != 0) {
        output.WriteRawTag(242, 4);
        output.WriteString(ObjectiveText4Loc5);
      }
      if (ObjectiveText4Loc6.Length != 0) {
        output.WriteRawTag(250, 4);
        output.WriteString(ObjectiveText4Loc6);
      }
      if (ObjectiveText4Loc7.Length != 0) {
        output.WriteRawTag(130, 5);
        output.WriteString(ObjectiveText4Loc7);
      }
      if (ObjectiveText4Loc8.Length != 0) {
        output.WriteRawTag(138, 5);
        output.WriteString(ObjectiveText4Loc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (TitleLoc1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TitleLoc1);
      }
      if (TitleLoc2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TitleLoc2);
      }
      if (TitleLoc3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TitleLoc3);
      }
      if (TitleLoc4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TitleLoc4);
      }
      if (TitleLoc5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TitleLoc5);
      }
      if (TitleLoc6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TitleLoc6);
      }
      if (TitleLoc7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TitleLoc7);
      }
      if (TitleLoc8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TitleLoc8);
      }
      if (DetailsLoc1.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DetailsLoc1);
      }
      if (DetailsLoc2.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DetailsLoc2);
      }
      if (DetailsLoc3.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DetailsLoc3);
      }
      if (DetailsLoc4.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(DetailsLoc4);
      }
      if (DetailsLoc5.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(DetailsLoc5);
      }
      if (DetailsLoc6.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DetailsLoc6);
      }
      if (DetailsLoc7.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DetailsLoc7);
      }
      if (DetailsLoc8.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DetailsLoc8);
      }
      if (ObjectivesLoc1.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ObjectivesLoc1);
      }
      if (ObjectivesLoc2.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ObjectivesLoc2);
      }
      if (ObjectivesLoc3.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ObjectivesLoc3);
      }
      if (ObjectivesLoc4.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ObjectivesLoc4);
      }
      if (ObjectivesLoc5.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ObjectivesLoc5);
      }
      if (ObjectivesLoc6.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ObjectivesLoc6);
      }
      if (ObjectivesLoc7.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ObjectivesLoc7);
      }
      if (ObjectivesLoc8.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ObjectivesLoc8);
      }
      if (OfferRewardTextLoc1.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(OfferRewardTextLoc1);
      }
      if (OfferRewardTextLoc2.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(OfferRewardTextLoc2);
      }
      if (OfferRewardTextLoc3.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(OfferRewardTextLoc3);
      }
      if (OfferRewardTextLoc4.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(OfferRewardTextLoc4);
      }
      if (OfferRewardTextLoc5.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(OfferRewardTextLoc5);
      }
      if (OfferRewardTextLoc6.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(OfferRewardTextLoc6);
      }
      if (OfferRewardTextLoc7.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(OfferRewardTextLoc7);
      }
      if (OfferRewardTextLoc8.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OfferRewardTextLoc8);
      }
      if (RequestItemsTextLoc1.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(RequestItemsTextLoc1);
      }
      if (RequestItemsTextLoc2.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(RequestItemsTextLoc2);
      }
      if (RequestItemsTextLoc3.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(RequestItemsTextLoc3);
      }
      if (RequestItemsTextLoc4.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(RequestItemsTextLoc4);
      }
      if (RequestItemsTextLoc5.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(RequestItemsTextLoc5);
      }
      if (RequestItemsTextLoc6.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(RequestItemsTextLoc6);
      }
      if (RequestItemsTextLoc7.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(RequestItemsTextLoc7);
      }
      if (RequestItemsTextLoc8.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(RequestItemsTextLoc8);
      }
      if (EndTextLoc1.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(EndTextLoc1);
      }
      if (EndTextLoc2.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(EndTextLoc2);
      }
      if (EndTextLoc3.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(EndTextLoc3);
      }
      if (EndTextLoc4.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(EndTextLoc4);
      }
      if (EndTextLoc5.Length != 0) {
        output.WriteRawTag(242, 2);
        output.WriteString(EndTextLoc5);
      }
      if (EndTextLoc6.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(EndTextLoc6);
      }
      if (EndTextLoc7.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(EndTextLoc7);
      }
      if (EndTextLoc8.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(EndTextLoc8);
      }
      if (ObjectiveText1Loc1.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(ObjectiveText1Loc1);
      }
      if (ObjectiveText1Loc2.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ObjectiveText1Loc2);
      }
      if (ObjectiveText1Loc3.Length != 0) {
        output.WriteRawTag(162, 3);
        output.WriteString(ObjectiveText1Loc3);
      }
      if (ObjectiveText1Loc4.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(ObjectiveText1Loc4);
      }
      if (ObjectiveText1Loc5.Length != 0) {
        output.WriteRawTag(178, 3);
        output.WriteString(ObjectiveText1Loc5);
      }
      if (ObjectiveText1Loc6.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(ObjectiveText1Loc6);
      }
      if (ObjectiveText1Loc7.Length != 0) {
        output.WriteRawTag(194, 3);
        output.WriteString(ObjectiveText1Loc7);
      }
      if (ObjectiveText1Loc8.Length != 0) {
        output.WriteRawTag(202, 3);
        output.WriteString(ObjectiveText1Loc8);
      }
      if (ObjectiveText2Loc1.Length != 0) {
        output.WriteRawTag(210, 3);
        output.WriteString(ObjectiveText2Loc1);
      }
      if (ObjectiveText2Loc2.Length != 0) {
        output.WriteRawTag(218, 3);
        output.WriteString(ObjectiveText2Loc2);
      }
      if (ObjectiveText2Loc3.Length != 0) {
        output.WriteRawTag(226, 3);
        output.WriteString(ObjectiveText2Loc3);
      }
      if (ObjectiveText2Loc4.Length != 0) {
        output.WriteRawTag(234, 3);
        output.WriteString(ObjectiveText2Loc4);
      }
      if (ObjectiveText2Loc5.Length != 0) {
        output.WriteRawTag(242, 3);
        output.WriteString(ObjectiveText2Loc5);
      }
      if (ObjectiveText2Loc6.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(ObjectiveText2Loc6);
      }
      if (ObjectiveText2Loc7.Length != 0) {
        output.WriteRawTag(130, 4);
        output.WriteString(ObjectiveText2Loc7);
      }
      if (ObjectiveText2Loc8.Length != 0) {
        output.WriteRawTag(138, 4);
        output.WriteString(ObjectiveText2Loc8);
      }
      if (ObjectiveText3Loc1.Length != 0) {
        output.WriteRawTag(146, 4);
        output.WriteString(ObjectiveText3Loc1);
      }
      if (ObjectiveText3Loc2.Length != 0) {
        output.WriteRawTag(154, 4);
        output.WriteString(ObjectiveText3Loc2);
      }
      if (ObjectiveText3Loc3.Length != 0) {
        output.WriteRawTag(162, 4);
        output.WriteString(ObjectiveText3Loc3);
      }
      if (ObjectiveText3Loc4.Length != 0) {
        output.WriteRawTag(170, 4);
        output.WriteString(ObjectiveText3Loc4);
      }
      if (ObjectiveText3Loc5.Length != 0) {
        output.WriteRawTag(178, 4);
        output.WriteString(ObjectiveText3Loc5);
      }
      if (ObjectiveText3Loc6.Length != 0) {
        output.WriteRawTag(186, 4);
        output.WriteString(ObjectiveText3Loc6);
      }
      if (ObjectiveText3Loc7.Length != 0) {
        output.WriteRawTag(194, 4);
        output.WriteString(ObjectiveText3Loc7);
      }
      if (ObjectiveText3Loc8.Length != 0) {
        output.WriteRawTag(202, 4);
        output.WriteString(ObjectiveText3Loc8);
      }
      if (ObjectiveText4Loc1.Length != 0) {
        output.WriteRawTag(210, 4);
        output.WriteString(ObjectiveText4Loc1);
      }
      if (ObjectiveText4Loc2.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(ObjectiveText4Loc2);
      }
      if (ObjectiveText4Loc3.Length != 0) {
        output.WriteRawTag(226, 4);
        output.WriteString(ObjectiveText4Loc3);
      }
      if (ObjectiveText4Loc4.Length != 0) {
        output.WriteRawTag(234, 4);
        output.WriteString(ObjectiveText4Loc4);
      }
      if (ObjectiveText4Loc5.Length != 0) {
        output.WriteRawTag(242, 4);
        output.WriteString(ObjectiveText4Loc5);
      }
      if (ObjectiveText4Loc6.Length != 0) {
        output.WriteRawTag(250, 4);
        output.WriteString(ObjectiveText4Loc6);
      }
      if (ObjectiveText4Loc7.Length != 0) {
        output.WriteRawTag(130, 5);
        output.WriteString(ObjectiveText4Loc7);
      }
      if (ObjectiveText4Loc8.Length != 0) {
        output.WriteRawTag(138, 5);
        output.WriteString(ObjectiveText4Loc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (TitleLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc1);
      }
      if (TitleLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc2);
      }
      if (TitleLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc3);
      }
      if (TitleLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc4);
      }
      if (TitleLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc5);
      }
      if (TitleLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc6);
      }
      if (TitleLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc7);
      }
      if (TitleLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleLoc8);
      }
      if (DetailsLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc1);
      }
      if (DetailsLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc2);
      }
      if (DetailsLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc3);
      }
      if (DetailsLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc4);
      }
      if (DetailsLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc5);
      }
      if (DetailsLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc6);
      }
      if (DetailsLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc7);
      }
      if (DetailsLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DetailsLoc8);
      }
      if (ObjectivesLoc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc1);
      }
      if (ObjectivesLoc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc2);
      }
      if (ObjectivesLoc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc3);
      }
      if (ObjectivesLoc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc4);
      }
      if (ObjectivesLoc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc5);
      }
      if (ObjectivesLoc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc6);
      }
      if (ObjectivesLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc7);
      }
      if (ObjectivesLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectivesLoc8);
      }
      if (OfferRewardTextLoc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc1);
      }
      if (OfferRewardTextLoc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc2);
      }
      if (OfferRewardTextLoc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc3);
      }
      if (OfferRewardTextLoc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc4);
      }
      if (OfferRewardTextLoc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc5);
      }
      if (OfferRewardTextLoc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc6);
      }
      if (OfferRewardTextLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc7);
      }
      if (OfferRewardTextLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardTextLoc8);
      }
      if (RequestItemsTextLoc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc1);
      }
      if (RequestItemsTextLoc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc2);
      }
      if (RequestItemsTextLoc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc3);
      }
      if (RequestItemsTextLoc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc4);
      }
      if (RequestItemsTextLoc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc5);
      }
      if (RequestItemsTextLoc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc6);
      }
      if (RequestItemsTextLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc7);
      }
      if (RequestItemsTextLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsTextLoc8);
      }
      if (EndTextLoc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc1);
      }
      if (EndTextLoc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc2);
      }
      if (EndTextLoc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc3);
      }
      if (EndTextLoc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc4);
      }
      if (EndTextLoc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc5);
      }
      if (EndTextLoc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc6);
      }
      if (EndTextLoc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc7);
      }
      if (EndTextLoc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTextLoc8);
      }
      if (ObjectiveText1Loc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc1);
      }
      if (ObjectiveText1Loc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc2);
      }
      if (ObjectiveText1Loc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc3);
      }
      if (ObjectiveText1Loc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc4);
      }
      if (ObjectiveText1Loc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc5);
      }
      if (ObjectiveText1Loc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc6);
      }
      if (ObjectiveText1Loc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc7);
      }
      if (ObjectiveText1Loc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1Loc8);
      }
      if (ObjectiveText2Loc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc1);
      }
      if (ObjectiveText2Loc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc2);
      }
      if (ObjectiveText2Loc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc3);
      }
      if (ObjectiveText2Loc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc4);
      }
      if (ObjectiveText2Loc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc5);
      }
      if (ObjectiveText2Loc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc6);
      }
      if (ObjectiveText2Loc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc7);
      }
      if (ObjectiveText2Loc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2Loc8);
      }
      if (ObjectiveText3Loc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc1);
      }
      if (ObjectiveText3Loc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc2);
      }
      if (ObjectiveText3Loc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc3);
      }
      if (ObjectiveText3Loc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc4);
      }
      if (ObjectiveText3Loc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc5);
      }
      if (ObjectiveText3Loc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc6);
      }
      if (ObjectiveText3Loc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc7);
      }
      if (ObjectiveText3Loc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3Loc8);
      }
      if (ObjectiveText4Loc1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc1);
      }
      if (ObjectiveText4Loc2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc2);
      }
      if (ObjectiveText4Loc3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc3);
      }
      if (ObjectiveText4Loc4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc4);
      }
      if (ObjectiveText4Loc5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc5);
      }
      if (ObjectiveText4Loc6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc6);
      }
      if (ObjectiveText4Loc7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc7);
      }
      if (ObjectiveText4Loc8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4Loc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalesQuest other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.TitleLoc1.Length != 0) {
        TitleLoc1 = other.TitleLoc1;
      }
      if (other.TitleLoc2.Length != 0) {
        TitleLoc2 = other.TitleLoc2;
      }
      if (other.TitleLoc3.Length != 0) {
        TitleLoc3 = other.TitleLoc3;
      }
      if (other.TitleLoc4.Length != 0) {
        TitleLoc4 = other.TitleLoc4;
      }
      if (other.TitleLoc5.Length != 0) {
        TitleLoc5 = other.TitleLoc5;
      }
      if (other.TitleLoc6.Length != 0) {
        TitleLoc6 = other.TitleLoc6;
      }
      if (other.TitleLoc7.Length != 0) {
        TitleLoc7 = other.TitleLoc7;
      }
      if (other.TitleLoc8.Length != 0) {
        TitleLoc8 = other.TitleLoc8;
      }
      if (other.DetailsLoc1.Length != 0) {
        DetailsLoc1 = other.DetailsLoc1;
      }
      if (other.DetailsLoc2.Length != 0) {
        DetailsLoc2 = other.DetailsLoc2;
      }
      if (other.DetailsLoc3.Length != 0) {
        DetailsLoc3 = other.DetailsLoc3;
      }
      if (other.DetailsLoc4.Length != 0) {
        DetailsLoc4 = other.DetailsLoc4;
      }
      if (other.DetailsLoc5.Length != 0) {
        DetailsLoc5 = other.DetailsLoc5;
      }
      if (other.DetailsLoc6.Length != 0) {
        DetailsLoc6 = other.DetailsLoc6;
      }
      if (other.DetailsLoc7.Length != 0) {
        DetailsLoc7 = other.DetailsLoc7;
      }
      if (other.DetailsLoc8.Length != 0) {
        DetailsLoc8 = other.DetailsLoc8;
      }
      if (other.ObjectivesLoc1.Length != 0) {
        ObjectivesLoc1 = other.ObjectivesLoc1;
      }
      if (other.ObjectivesLoc2.Length != 0) {
        ObjectivesLoc2 = other.ObjectivesLoc2;
      }
      if (other.ObjectivesLoc3.Length != 0) {
        ObjectivesLoc3 = other.ObjectivesLoc3;
      }
      if (other.ObjectivesLoc4.Length != 0) {
        ObjectivesLoc4 = other.ObjectivesLoc4;
      }
      if (other.ObjectivesLoc5.Length != 0) {
        ObjectivesLoc5 = other.ObjectivesLoc5;
      }
      if (other.ObjectivesLoc6.Length != 0) {
        ObjectivesLoc6 = other.ObjectivesLoc6;
      }
      if (other.ObjectivesLoc7.Length != 0) {
        ObjectivesLoc7 = other.ObjectivesLoc7;
      }
      if (other.ObjectivesLoc8.Length != 0) {
        ObjectivesLoc8 = other.ObjectivesLoc8;
      }
      if (other.OfferRewardTextLoc1.Length != 0) {
        OfferRewardTextLoc1 = other.OfferRewardTextLoc1;
      }
      if (other.OfferRewardTextLoc2.Length != 0) {
        OfferRewardTextLoc2 = other.OfferRewardTextLoc2;
      }
      if (other.OfferRewardTextLoc3.Length != 0) {
        OfferRewardTextLoc3 = other.OfferRewardTextLoc3;
      }
      if (other.OfferRewardTextLoc4.Length != 0) {
        OfferRewardTextLoc4 = other.OfferRewardTextLoc4;
      }
      if (other.OfferRewardTextLoc5.Length != 0) {
        OfferRewardTextLoc5 = other.OfferRewardTextLoc5;
      }
      if (other.OfferRewardTextLoc6.Length != 0) {
        OfferRewardTextLoc6 = other.OfferRewardTextLoc6;
      }
      if (other.OfferRewardTextLoc7.Length != 0) {
        OfferRewardTextLoc7 = other.OfferRewardTextLoc7;
      }
      if (other.OfferRewardTextLoc8.Length != 0) {
        OfferRewardTextLoc8 = other.OfferRewardTextLoc8;
      }
      if (other.RequestItemsTextLoc1.Length != 0) {
        RequestItemsTextLoc1 = other.RequestItemsTextLoc1;
      }
      if (other.RequestItemsTextLoc2.Length != 0) {
        RequestItemsTextLoc2 = other.RequestItemsTextLoc2;
      }
      if (other.RequestItemsTextLoc3.Length != 0) {
        RequestItemsTextLoc3 = other.RequestItemsTextLoc3;
      }
      if (other.RequestItemsTextLoc4.Length != 0) {
        RequestItemsTextLoc4 = other.RequestItemsTextLoc4;
      }
      if (other.RequestItemsTextLoc5.Length != 0) {
        RequestItemsTextLoc5 = other.RequestItemsTextLoc5;
      }
      if (other.RequestItemsTextLoc6.Length != 0) {
        RequestItemsTextLoc6 = other.RequestItemsTextLoc6;
      }
      if (other.RequestItemsTextLoc7.Length != 0) {
        RequestItemsTextLoc7 = other.RequestItemsTextLoc7;
      }
      if (other.RequestItemsTextLoc8.Length != 0) {
        RequestItemsTextLoc8 = other.RequestItemsTextLoc8;
      }
      if (other.EndTextLoc1.Length != 0) {
        EndTextLoc1 = other.EndTextLoc1;
      }
      if (other.EndTextLoc2.Length != 0) {
        EndTextLoc2 = other.EndTextLoc2;
      }
      if (other.EndTextLoc3.Length != 0) {
        EndTextLoc3 = other.EndTextLoc3;
      }
      if (other.EndTextLoc4.Length != 0) {
        EndTextLoc4 = other.EndTextLoc4;
      }
      if (other.EndTextLoc5.Length != 0) {
        EndTextLoc5 = other.EndTextLoc5;
      }
      if (other.EndTextLoc6.Length != 0) {
        EndTextLoc6 = other.EndTextLoc6;
      }
      if (other.EndTextLoc7.Length != 0) {
        EndTextLoc7 = other.EndTextLoc7;
      }
      if (other.EndTextLoc8.Length != 0) {
        EndTextLoc8 = other.EndTextLoc8;
      }
      if (other.ObjectiveText1Loc1.Length != 0) {
        ObjectiveText1Loc1 = other.ObjectiveText1Loc1;
      }
      if (other.ObjectiveText1Loc2.Length != 0) {
        ObjectiveText1Loc2 = other.ObjectiveText1Loc2;
      }
      if (other.ObjectiveText1Loc3.Length != 0) {
        ObjectiveText1Loc3 = other.ObjectiveText1Loc3;
      }
      if (other.ObjectiveText1Loc4.Length != 0) {
        ObjectiveText1Loc4 = other.ObjectiveText1Loc4;
      }
      if (other.ObjectiveText1Loc5.Length != 0) {
        ObjectiveText1Loc5 = other.ObjectiveText1Loc5;
      }
      if (other.ObjectiveText1Loc6.Length != 0) {
        ObjectiveText1Loc6 = other.ObjectiveText1Loc6;
      }
      if (other.ObjectiveText1Loc7.Length != 0) {
        ObjectiveText1Loc7 = other.ObjectiveText1Loc7;
      }
      if (other.ObjectiveText1Loc8.Length != 0) {
        ObjectiveText1Loc8 = other.ObjectiveText1Loc8;
      }
      if (other.ObjectiveText2Loc1.Length != 0) {
        ObjectiveText2Loc1 = other.ObjectiveText2Loc1;
      }
      if (other.ObjectiveText2Loc2.Length != 0) {
        ObjectiveText2Loc2 = other.ObjectiveText2Loc2;
      }
      if (other.ObjectiveText2Loc3.Length != 0) {
        ObjectiveText2Loc3 = other.ObjectiveText2Loc3;
      }
      if (other.ObjectiveText2Loc4.Length != 0) {
        ObjectiveText2Loc4 = other.ObjectiveText2Loc4;
      }
      if (other.ObjectiveText2Loc5.Length != 0) {
        ObjectiveText2Loc5 = other.ObjectiveText2Loc5;
      }
      if (other.ObjectiveText2Loc6.Length != 0) {
        ObjectiveText2Loc6 = other.ObjectiveText2Loc6;
      }
      if (other.ObjectiveText2Loc7.Length != 0) {
        ObjectiveText2Loc7 = other.ObjectiveText2Loc7;
      }
      if (other.ObjectiveText2Loc8.Length != 0) {
        ObjectiveText2Loc8 = other.ObjectiveText2Loc8;
      }
      if (other.ObjectiveText3Loc1.Length != 0) {
        ObjectiveText3Loc1 = other.ObjectiveText3Loc1;
      }
      if (other.ObjectiveText3Loc2.Length != 0) {
        ObjectiveText3Loc2 = other.ObjectiveText3Loc2;
      }
      if (other.ObjectiveText3Loc3.Length != 0) {
        ObjectiveText3Loc3 = other.ObjectiveText3Loc3;
      }
      if (other.ObjectiveText3Loc4.Length != 0) {
        ObjectiveText3Loc4 = other.ObjectiveText3Loc4;
      }
      if (other.ObjectiveText3Loc5.Length != 0) {
        ObjectiveText3Loc5 = other.ObjectiveText3Loc5;
      }
      if (other.ObjectiveText3Loc6.Length != 0) {
        ObjectiveText3Loc6 = other.ObjectiveText3Loc6;
      }
      if (other.ObjectiveText3Loc7.Length != 0) {
        ObjectiveText3Loc7 = other.ObjectiveText3Loc7;
      }
      if (other.ObjectiveText3Loc8.Length != 0) {
        ObjectiveText3Loc8 = other.ObjectiveText3Loc8;
      }
      if (other.ObjectiveText4Loc1.Length != 0) {
        ObjectiveText4Loc1 = other.ObjectiveText4Loc1;
      }
      if (other.ObjectiveText4Loc2.Length != 0) {
        ObjectiveText4Loc2 = other.ObjectiveText4Loc2;
      }
      if (other.ObjectiveText4Loc3.Length != 0) {
        ObjectiveText4Loc3 = other.ObjectiveText4Loc3;
      }
      if (other.ObjectiveText4Loc4.Length != 0) {
        ObjectiveText4Loc4 = other.ObjectiveText4Loc4;
      }
      if (other.ObjectiveText4Loc5.Length != 0) {
        ObjectiveText4Loc5 = other.ObjectiveText4Loc5;
      }
      if (other.ObjectiveText4Loc6.Length != 0) {
        ObjectiveText4Loc6 = other.ObjectiveText4Loc6;
      }
      if (other.ObjectiveText4Loc7.Length != 0) {
        ObjectiveText4Loc7 = other.ObjectiveText4Loc7;
      }
      if (other.ObjectiveText4Loc8.Length != 0) {
        ObjectiveText4Loc8 = other.ObjectiveText4Loc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            TitleLoc1 = input.ReadString();
            break;
          }
          case 26: {
            TitleLoc2 = input.ReadString();
            break;
          }
          case 34: {
            TitleLoc3 = input.ReadString();
            break;
          }
          case 42: {
            TitleLoc4 = input.ReadString();
            break;
          }
          case 50: {
            TitleLoc5 = input.ReadString();
            break;
          }
          case 58: {
            TitleLoc6 = input.ReadString();
            break;
          }
          case 66: {
            TitleLoc7 = input.ReadString();
            break;
          }
          case 74: {
            TitleLoc8 = input.ReadString();
            break;
          }
          case 82: {
            DetailsLoc1 = input.ReadString();
            break;
          }
          case 90: {
            DetailsLoc2 = input.ReadString();
            break;
          }
          case 98: {
            DetailsLoc3 = input.ReadString();
            break;
          }
          case 106: {
            DetailsLoc4 = input.ReadString();
            break;
          }
          case 114: {
            DetailsLoc5 = input.ReadString();
            break;
          }
          case 122: {
            DetailsLoc6 = input.ReadString();
            break;
          }
          case 130: {
            DetailsLoc7 = input.ReadString();
            break;
          }
          case 138: {
            DetailsLoc8 = input.ReadString();
            break;
          }
          case 146: {
            ObjectivesLoc1 = input.ReadString();
            break;
          }
          case 154: {
            ObjectivesLoc2 = input.ReadString();
            break;
          }
          case 162: {
            ObjectivesLoc3 = input.ReadString();
            break;
          }
          case 170: {
            ObjectivesLoc4 = input.ReadString();
            break;
          }
          case 178: {
            ObjectivesLoc5 = input.ReadString();
            break;
          }
          case 186: {
            ObjectivesLoc6 = input.ReadString();
            break;
          }
          case 194: {
            ObjectivesLoc7 = input.ReadString();
            break;
          }
          case 202: {
            ObjectivesLoc8 = input.ReadString();
            break;
          }
          case 210: {
            OfferRewardTextLoc1 = input.ReadString();
            break;
          }
          case 218: {
            OfferRewardTextLoc2 = input.ReadString();
            break;
          }
          case 226: {
            OfferRewardTextLoc3 = input.ReadString();
            break;
          }
          case 234: {
            OfferRewardTextLoc4 = input.ReadString();
            break;
          }
          case 242: {
            OfferRewardTextLoc5 = input.ReadString();
            break;
          }
          case 250: {
            OfferRewardTextLoc6 = input.ReadString();
            break;
          }
          case 258: {
            OfferRewardTextLoc7 = input.ReadString();
            break;
          }
          case 266: {
            OfferRewardTextLoc8 = input.ReadString();
            break;
          }
          case 274: {
            RequestItemsTextLoc1 = input.ReadString();
            break;
          }
          case 282: {
            RequestItemsTextLoc2 = input.ReadString();
            break;
          }
          case 290: {
            RequestItemsTextLoc3 = input.ReadString();
            break;
          }
          case 298: {
            RequestItemsTextLoc4 = input.ReadString();
            break;
          }
          case 306: {
            RequestItemsTextLoc5 = input.ReadString();
            break;
          }
          case 314: {
            RequestItemsTextLoc6 = input.ReadString();
            break;
          }
          case 322: {
            RequestItemsTextLoc7 = input.ReadString();
            break;
          }
          case 330: {
            RequestItemsTextLoc8 = input.ReadString();
            break;
          }
          case 338: {
            EndTextLoc1 = input.ReadString();
            break;
          }
          case 346: {
            EndTextLoc2 = input.ReadString();
            break;
          }
          case 354: {
            EndTextLoc3 = input.ReadString();
            break;
          }
          case 362: {
            EndTextLoc4 = input.ReadString();
            break;
          }
          case 370: {
            EndTextLoc5 = input.ReadString();
            break;
          }
          case 378: {
            EndTextLoc6 = input.ReadString();
            break;
          }
          case 386: {
            EndTextLoc7 = input.ReadString();
            break;
          }
          case 394: {
            EndTextLoc8 = input.ReadString();
            break;
          }
          case 402: {
            ObjectiveText1Loc1 = input.ReadString();
            break;
          }
          case 410: {
            ObjectiveText1Loc2 = input.ReadString();
            break;
          }
          case 418: {
            ObjectiveText1Loc3 = input.ReadString();
            break;
          }
          case 426: {
            ObjectiveText1Loc4 = input.ReadString();
            break;
          }
          case 434: {
            ObjectiveText1Loc5 = input.ReadString();
            break;
          }
          case 442: {
            ObjectiveText1Loc6 = input.ReadString();
            break;
          }
          case 450: {
            ObjectiveText1Loc7 = input.ReadString();
            break;
          }
          case 458: {
            ObjectiveText1Loc8 = input.ReadString();
            break;
          }
          case 466: {
            ObjectiveText2Loc1 = input.ReadString();
            break;
          }
          case 474: {
            ObjectiveText2Loc2 = input.ReadString();
            break;
          }
          case 482: {
            ObjectiveText2Loc3 = input.ReadString();
            break;
          }
          case 490: {
            ObjectiveText2Loc4 = input.ReadString();
            break;
          }
          case 498: {
            ObjectiveText2Loc5 = input.ReadString();
            break;
          }
          case 506: {
            ObjectiveText2Loc6 = input.ReadString();
            break;
          }
          case 514: {
            ObjectiveText2Loc7 = input.ReadString();
            break;
          }
          case 522: {
            ObjectiveText2Loc8 = input.ReadString();
            break;
          }
          case 530: {
            ObjectiveText3Loc1 = input.ReadString();
            break;
          }
          case 538: {
            ObjectiveText3Loc2 = input.ReadString();
            break;
          }
          case 546: {
            ObjectiveText3Loc3 = input.ReadString();
            break;
          }
          case 554: {
            ObjectiveText3Loc4 = input.ReadString();
            break;
          }
          case 562: {
            ObjectiveText3Loc5 = input.ReadString();
            break;
          }
          case 570: {
            ObjectiveText3Loc6 = input.ReadString();
            break;
          }
          case 578: {
            ObjectiveText3Loc7 = input.ReadString();
            break;
          }
          case 586: {
            ObjectiveText3Loc8 = input.ReadString();
            break;
          }
          case 594: {
            ObjectiveText4Loc1 = input.ReadString();
            break;
          }
          case 602: {
            ObjectiveText4Loc2 = input.ReadString();
            break;
          }
          case 610: {
            ObjectiveText4Loc3 = input.ReadString();
            break;
          }
          case 618: {
            ObjectiveText4Loc4 = input.ReadString();
            break;
          }
          case 626: {
            ObjectiveText4Loc5 = input.ReadString();
            break;
          }
          case 634: {
            ObjectiveText4Loc6 = input.ReadString();
            break;
          }
          case 642: {
            ObjectiveText4Loc7 = input.ReadString();
            break;
          }
          case 650: {
            ObjectiveText4Loc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            TitleLoc1 = input.ReadString();
            break;
          }
          case 26: {
            TitleLoc2 = input.ReadString();
            break;
          }
          case 34: {
            TitleLoc3 = input.ReadString();
            break;
          }
          case 42: {
            TitleLoc4 = input.ReadString();
            break;
          }
          case 50: {
            TitleLoc5 = input.ReadString();
            break;
          }
          case 58: {
            TitleLoc6 = input.ReadString();
            break;
          }
          case 66: {
            TitleLoc7 = input.ReadString();
            break;
          }
          case 74: {
            TitleLoc8 = input.ReadString();
            break;
          }
          case 82: {
            DetailsLoc1 = input.ReadString();
            break;
          }
          case 90: {
            DetailsLoc2 = input.ReadString();
            break;
          }
          case 98: {
            DetailsLoc3 = input.ReadString();
            break;
          }
          case 106: {
            DetailsLoc4 = input.ReadString();
            break;
          }
          case 114: {
            DetailsLoc5 = input.ReadString();
            break;
          }
          case 122: {
            DetailsLoc6 = input.ReadString();
            break;
          }
          case 130: {
            DetailsLoc7 = input.ReadString();
            break;
          }
          case 138: {
            DetailsLoc8 = input.ReadString();
            break;
          }
          case 146: {
            ObjectivesLoc1 = input.ReadString();
            break;
          }
          case 154: {
            ObjectivesLoc2 = input.ReadString();
            break;
          }
          case 162: {
            ObjectivesLoc3 = input.ReadString();
            break;
          }
          case 170: {
            ObjectivesLoc4 = input.ReadString();
            break;
          }
          case 178: {
            ObjectivesLoc5 = input.ReadString();
            break;
          }
          case 186: {
            ObjectivesLoc6 = input.ReadString();
            break;
          }
          case 194: {
            ObjectivesLoc7 = input.ReadString();
            break;
          }
          case 202: {
            ObjectivesLoc8 = input.ReadString();
            break;
          }
          case 210: {
            OfferRewardTextLoc1 = input.ReadString();
            break;
          }
          case 218: {
            OfferRewardTextLoc2 = input.ReadString();
            break;
          }
          case 226: {
            OfferRewardTextLoc3 = input.ReadString();
            break;
          }
          case 234: {
            OfferRewardTextLoc4 = input.ReadString();
            break;
          }
          case 242: {
            OfferRewardTextLoc5 = input.ReadString();
            break;
          }
          case 250: {
            OfferRewardTextLoc6 = input.ReadString();
            break;
          }
          case 258: {
            OfferRewardTextLoc7 = input.ReadString();
            break;
          }
          case 266: {
            OfferRewardTextLoc8 = input.ReadString();
            break;
          }
          case 274: {
            RequestItemsTextLoc1 = input.ReadString();
            break;
          }
          case 282: {
            RequestItemsTextLoc2 = input.ReadString();
            break;
          }
          case 290: {
            RequestItemsTextLoc3 = input.ReadString();
            break;
          }
          case 298: {
            RequestItemsTextLoc4 = input.ReadString();
            break;
          }
          case 306: {
            RequestItemsTextLoc5 = input.ReadString();
            break;
          }
          case 314: {
            RequestItemsTextLoc6 = input.ReadString();
            break;
          }
          case 322: {
            RequestItemsTextLoc7 = input.ReadString();
            break;
          }
          case 330: {
            RequestItemsTextLoc8 = input.ReadString();
            break;
          }
          case 338: {
            EndTextLoc1 = input.ReadString();
            break;
          }
          case 346: {
            EndTextLoc2 = input.ReadString();
            break;
          }
          case 354: {
            EndTextLoc3 = input.ReadString();
            break;
          }
          case 362: {
            EndTextLoc4 = input.ReadString();
            break;
          }
          case 370: {
            EndTextLoc5 = input.ReadString();
            break;
          }
          case 378: {
            EndTextLoc6 = input.ReadString();
            break;
          }
          case 386: {
            EndTextLoc7 = input.ReadString();
            break;
          }
          case 394: {
            EndTextLoc8 = input.ReadString();
            break;
          }
          case 402: {
            ObjectiveText1Loc1 = input.ReadString();
            break;
          }
          case 410: {
            ObjectiveText1Loc2 = input.ReadString();
            break;
          }
          case 418: {
            ObjectiveText1Loc3 = input.ReadString();
            break;
          }
          case 426: {
            ObjectiveText1Loc4 = input.ReadString();
            break;
          }
          case 434: {
            ObjectiveText1Loc5 = input.ReadString();
            break;
          }
          case 442: {
            ObjectiveText1Loc6 = input.ReadString();
            break;
          }
          case 450: {
            ObjectiveText1Loc7 = input.ReadString();
            break;
          }
          case 458: {
            ObjectiveText1Loc8 = input.ReadString();
            break;
          }
          case 466: {
            ObjectiveText2Loc1 = input.ReadString();
            break;
          }
          case 474: {
            ObjectiveText2Loc2 = input.ReadString();
            break;
          }
          case 482: {
            ObjectiveText2Loc3 = input.ReadString();
            break;
          }
          case 490: {
            ObjectiveText2Loc4 = input.ReadString();
            break;
          }
          case 498: {
            ObjectiveText2Loc5 = input.ReadString();
            break;
          }
          case 506: {
            ObjectiveText2Loc6 = input.ReadString();
            break;
          }
          case 514: {
            ObjectiveText2Loc7 = input.ReadString();
            break;
          }
          case 522: {
            ObjectiveText2Loc8 = input.ReadString();
            break;
          }
          case 530: {
            ObjectiveText3Loc1 = input.ReadString();
            break;
          }
          case 538: {
            ObjectiveText3Loc2 = input.ReadString();
            break;
          }
          case 546: {
            ObjectiveText3Loc3 = input.ReadString();
            break;
          }
          case 554: {
            ObjectiveText3Loc4 = input.ReadString();
            break;
          }
          case 562: {
            ObjectiveText3Loc5 = input.ReadString();
            break;
          }
          case 570: {
            ObjectiveText3Loc6 = input.ReadString();
            break;
          }
          case 578: {
            ObjectiveText3Loc7 = input.ReadString();
            break;
          }
          case 586: {
            ObjectiveText3Loc8 = input.ReadString();
            break;
          }
          case 594: {
            ObjectiveText4Loc1 = input.ReadString();
            break;
          }
          case 602: {
            ObjectiveText4Loc2 = input.ReadString();
            break;
          }
          case 610: {
            ObjectiveText4Loc3 = input.ReadString();
            break;
          }
          case 618: {
            ObjectiveText4Loc4 = input.ReadString();
            break;
          }
          case 626: {
            ObjectiveText4Loc5 = input.ReadString();
            break;
          }
          case 634: {
            ObjectiveText4Loc6 = input.ReadString();
            break;
          }
          case 642: {
            ObjectiveText4Loc7 = input.ReadString();
            break;
          }
          case 650: {
            ObjectiveText4Loc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MailLootTemplate : pb::IMessage<MailLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailLootTemplate> _parser = new pb::MessageParser<MailLootTemplate>(() => new MailLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MailLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailLootTemplate(MailLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MailLootTemplate Clone() {
      return new MailLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry identifier for mail loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "ChanceOrQuestChance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Probability or quest chance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincountOrRef" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private int mincountOrRef_;
    /// <summary>
    /// Minimum count or reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MailLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MailLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MailLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MangosString : pb::IMessage<MangosString>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MangosString> _parser = new pb::MessageParser<MangosString>(() => new MangosString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MangosString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MangosString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MangosString(MangosString other) : this() {
      entry_ = other.entry_;
      contentDefault_ = other.contentDefault_;
      contentLoc1_ = other.contentLoc1_;
      contentLoc2_ = other.contentLoc2_;
      contentLoc3_ = other.contentLoc3_;
      contentLoc4_ = other.contentLoc4_;
      contentLoc5_ = other.contentLoc5_;
      contentLoc6_ = other.contentLoc6_;
      contentLoc7_ = other.contentLoc7_;
      contentLoc8_ = other.contentLoc8_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MangosString Clone() {
      return new MangosString(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the string entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "content_default" field.</summary>
    public const int ContentDefaultFieldNumber = 2;
    private string contentDefault_ = "";
    /// <summary>
    /// Default content of the string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentDefault {
      get { return contentDefault_; }
      set {
        contentDefault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc1" field.</summary>
    public const int ContentLoc1FieldNumber = 3;
    private string contentLoc1_ = "";
    /// <summary>
    /// Content for locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc1 {
      get { return contentLoc1_; }
      set {
        contentLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc2" field.</summary>
    public const int ContentLoc2FieldNumber = 4;
    private string contentLoc2_ = "";
    /// <summary>
    /// Content for locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc2 {
      get { return contentLoc2_; }
      set {
        contentLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc3" field.</summary>
    public const int ContentLoc3FieldNumber = 5;
    private string contentLoc3_ = "";
    /// <summary>
    /// Content for locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc3 {
      get { return contentLoc3_; }
      set {
        contentLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc4" field.</summary>
    public const int ContentLoc4FieldNumber = 6;
    private string contentLoc4_ = "";
    /// <summary>
    /// Content for locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc4 {
      get { return contentLoc4_; }
      set {
        contentLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc5" field.</summary>
    public const int ContentLoc5FieldNumber = 7;
    private string contentLoc5_ = "";
    /// <summary>
    /// Content for locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc5 {
      get { return contentLoc5_; }
      set {
        contentLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc6" field.</summary>
    public const int ContentLoc6FieldNumber = 8;
    private string contentLoc6_ = "";
    /// <summary>
    /// Content for locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc6 {
      get { return contentLoc6_; }
      set {
        contentLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc7" field.</summary>
    public const int ContentLoc7FieldNumber = 9;
    private string contentLoc7_ = "";
    /// <summary>
    /// Content for locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc7 {
      get { return contentLoc7_; }
      set {
        contentLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc8" field.</summary>
    public const int ContentLoc8FieldNumber = 10;
    private string contentLoc8_ = "";
    /// <summary>
    /// Content for locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc8 {
      get { return contentLoc8_; }
      set {
        contentLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MangosString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MangosString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (ContentDefault != other.ContentDefault) return false;
      if (ContentLoc1 != other.ContentLoc1) return false;
      if (ContentLoc2 != other.ContentLoc2) return false;
      if (ContentLoc3 != other.ContentLoc3) return false;
      if (ContentLoc4 != other.ContentLoc4) return false;
      if (ContentLoc5 != other.ContentLoc5) return false;
      if (ContentLoc6 != other.ContentLoc6) return false;
      if (ContentLoc7 != other.ContentLoc7) return false;
      if (ContentLoc8 != other.ContentLoc8) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (ContentDefault.Length != 0) hash ^= ContentDefault.GetHashCode();
      if (ContentLoc1.Length != 0) hash ^= ContentLoc1.GetHashCode();
      if (ContentLoc2.Length != 0) hash ^= ContentLoc2.GetHashCode();
      if (ContentLoc3.Length != 0) hash ^= ContentLoc3.GetHashCode();
      if (ContentLoc4.Length != 0) hash ^= ContentLoc4.GetHashCode();
      if (ContentLoc5.Length != 0) hash ^= ContentLoc5.GetHashCode();
      if (ContentLoc6.Length != 0) hash ^= ContentLoc6.GetHashCode();
      if (ContentLoc7.Length != 0) hash ^= ContentLoc7.GetHashCode();
      if (ContentLoc8.Length != 0) hash ^= ContentLoc8.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (ContentDefault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc8);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MangosString other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.ContentDefault.Length != 0) {
        ContentDefault = other.ContentDefault;
      }
      if (other.ContentLoc1.Length != 0) {
        ContentLoc1 = other.ContentLoc1;
      }
      if (other.ContentLoc2.Length != 0) {
        ContentLoc2 = other.ContentLoc2;
      }
      if (other.ContentLoc3.Length != 0) {
        ContentLoc3 = other.ContentLoc3;
      }
      if (other.ContentLoc4.Length != 0) {
        ContentLoc4 = other.ContentLoc4;
      }
      if (other.ContentLoc5.Length != 0) {
        ContentLoc5 = other.ContentLoc5;
      }
      if (other.ContentLoc6.Length != 0) {
        ContentLoc6 = other.ContentLoc6;
      }
      if (other.ContentLoc7.Length != 0) {
        ContentLoc7 = other.ContentLoc7;
      }
      if (other.ContentLoc8.Length != 0) {
        ContentLoc8 = other.ContentLoc8;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MapLootDisabled : pb::IMessage<MapLootDisabled>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapLootDisabled> _parser = new pb::MessageParser<MapLootDisabled>(() => new MapLootDisabled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapLootDisabled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLootDisabled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLootDisabled(MapLootDisabled other) : this() {
      mapid_ = other.mapid_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapLootDisabled Clone() {
      return new MapLootDisabled(this);
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 1;
    private uint mapid_;
    /// <summary>
    /// Identifier for the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 2;
    private string comment_ = "";
    /// <summary>
    /// Optional comment for the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapLootDisabled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapLootDisabled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mapid != other.Mapid) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mapid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Mapid);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mapid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Mapid);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mapid);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapLootDisabled other) {
      if (other == null) {
        return;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mapid = input.ReadUInt32();
            break;
          }
          case 18: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Mapid = input.ReadUInt32();
            break;
          }
          case 18: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MapTemplate : pb::IMessage<MapTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapTemplate> _parser = new pb::MessageParser<MapTemplate>(() => new MapTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate(MapTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      parent_ = other.parent_;
      mapType_ = other.mapType_;
      linkedZone_ = other.linkedZone_;
      levelMin_ = other.levelMin_;
      levelMax_ = other.levelMax_;
      maxPlayers_ = other.maxPlayers_;
      resetDelay_ = other.resetDelay_;
      ghostEntranceMap_ = other.ghostEntranceMap_;
      ghostEntranceX_ = other.ghostEntranceX_;
      ghostEntranceY_ = other.ghostEntranceY_;
      mapName_ = other.mapName_;
      scriptName_ = other.scriptName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapTemplate Clone() {
      return new MapTemplate(this);
    }

    /// <summary>Field number for the "Entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the map entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version of the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "Parent" field.</summary>
    public const int ParentFieldNumber = 3;
    private uint parent_;
    /// <summary>
    /// Identifier for the parent map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "MapType" field.</summary>
    public const int MapTypeFieldNumber = 4;
    private uint mapType_;
    /// <summary>
    /// Type of the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapType {
      get { return mapType_; }
      set {
        mapType_ = value;
      }
    }

    /// <summary>Field number for the "LinkedZone" field.</summary>
    public const int LinkedZoneFieldNumber = 5;
    private uint linkedZone_;
    /// <summary>
    /// Linked zone identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LinkedZone {
      get { return linkedZone_; }
      set {
        linkedZone_ = value;
      }
    }

    /// <summary>Field number for the "LevelMin" field.</summary>
    public const int LevelMinFieldNumber = 6;
    private uint levelMin_;
    /// <summary>
    /// Minimum level for the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LevelMin {
      get { return levelMin_; }
      set {
        levelMin_ = value;
      }
    }

    /// <summary>Field number for the "LevelMax" field.</summary>
    public const int LevelMaxFieldNumber = 7;
    private uint levelMax_;
    /// <summary>
    /// Maximum level for the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LevelMax {
      get { return levelMax_; }
      set {
        levelMax_ = value;
      }
    }

    /// <summary>Field number for the "MaxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 8;
    private uint maxPlayers_;
    /// <summary>
    /// Maximum number of players allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "ResetDelay" field.</summary>
    public const int ResetDelayFieldNumber = 9;
    private uint resetDelay_;
    /// <summary>
    /// Delay before the map resets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResetDelay {
      get { return resetDelay_; }
      set {
        resetDelay_ = value;
      }
    }

    /// <summary>Field number for the "GhostEntranceMap" field.</summary>
    public const int GhostEntranceMapFieldNumber = 10;
    private int ghostEntranceMap_;
    /// <summary>
    /// Map ID for ghost entrance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GhostEntranceMap {
      get { return ghostEntranceMap_; }
      set {
        ghostEntranceMap_ = value;
      }
    }

    /// <summary>Field number for the "GhostEntranceX" field.</summary>
    public const int GhostEntranceXFieldNumber = 11;
    private float ghostEntranceX_;
    /// <summary>
    /// X coordinate for ghost entrance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GhostEntranceX {
      get { return ghostEntranceX_; }
      set {
        ghostEntranceX_ = value;
      }
    }

    /// <summary>Field number for the "GhostEntranceY" field.</summary>
    public const int GhostEntranceYFieldNumber = 12;
    private float ghostEntranceY_;
    /// <summary>
    /// Y coordinate for ghost entrance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GhostEntranceY {
      get { return ghostEntranceY_; }
      set {
        ghostEntranceY_ = value;
      }
    }

    /// <summary>Field number for the "MapName" field.</summary>
    public const int MapNameFieldNumber = 13;
    private string mapName_ = "";
    /// <summary>
    /// Name of the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MapName {
      get { return mapName_; }
      set {
        mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ScriptName" field.</summary>
    public const int ScriptNameFieldNumber = 14;
    private string scriptName_ = "";
    /// <summary>
    /// Script name associated with the map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Parent != other.Parent) return false;
      if (MapType != other.MapType) return false;
      if (LinkedZone != other.LinkedZone) return false;
      if (LevelMin != other.LevelMin) return false;
      if (LevelMax != other.LevelMax) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (ResetDelay != other.ResetDelay) return false;
      if (GhostEntranceMap != other.GhostEntranceMap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GhostEntranceX, other.GhostEntranceX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GhostEntranceY, other.GhostEntranceY)) return false;
      if (MapName != other.MapName) return false;
      if (ScriptName != other.ScriptName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Parent != 0) hash ^= Parent.GetHashCode();
      if (MapType != 0) hash ^= MapType.GetHashCode();
      if (LinkedZone != 0) hash ^= LinkedZone.GetHashCode();
      if (LevelMin != 0) hash ^= LevelMin.GetHashCode();
      if (LevelMax != 0) hash ^= LevelMax.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (ResetDelay != 0) hash ^= ResetDelay.GetHashCode();
      if (GhostEntranceMap != 0) hash ^= GhostEntranceMap.GetHashCode();
      if (GhostEntranceX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GhostEntranceX);
      if (GhostEntranceY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GhostEntranceY);
      if (MapName.Length != 0) hash ^= MapName.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Parent != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Parent);
      }
      if (MapType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MapType);
      }
      if (LinkedZone != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LinkedZone);
      }
      if (LevelMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(LevelMin);
      }
      if (LevelMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(LevelMax);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MaxPlayers);
      }
      if (ResetDelay != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ResetDelay);
      }
      if (GhostEntranceMap != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GhostEntranceMap);
      }
      if (GhostEntranceX != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(GhostEntranceX);
      }
      if (GhostEntranceY != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(GhostEntranceY);
      }
      if (MapName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MapName);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Parent != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Parent);
      }
      if (MapType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MapType);
      }
      if (LinkedZone != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LinkedZone);
      }
      if (LevelMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(LevelMin);
      }
      if (LevelMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(LevelMax);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MaxPlayers);
      }
      if (ResetDelay != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ResetDelay);
      }
      if (GhostEntranceMap != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GhostEntranceMap);
      }
      if (GhostEntranceX != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(GhostEntranceX);
      }
      if (GhostEntranceY != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(GhostEntranceY);
      }
      if (MapName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MapName);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Parent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Parent);
      }
      if (MapType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapType);
      }
      if (LinkedZone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LinkedZone);
      }
      if (LevelMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelMin);
      }
      if (LevelMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelMax);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPlayers);
      }
      if (ResetDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResetDelay);
      }
      if (GhostEntranceMap != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GhostEntranceMap);
      }
      if (GhostEntranceX != 0F) {
        size += 1 + 4;
      }
      if (GhostEntranceY != 0F) {
        size += 1 + 4;
      }
      if (MapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
      }
      if (ScriptName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Parent != 0) {
        Parent = other.Parent;
      }
      if (other.MapType != 0) {
        MapType = other.MapType;
      }
      if (other.LinkedZone != 0) {
        LinkedZone = other.LinkedZone;
      }
      if (other.LevelMin != 0) {
        LevelMin = other.LevelMin;
      }
      if (other.LevelMax != 0) {
        LevelMax = other.LevelMax;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.ResetDelay != 0) {
        ResetDelay = other.ResetDelay;
      }
      if (other.GhostEntranceMap != 0) {
        GhostEntranceMap = other.GhostEntranceMap;
      }
      if (other.GhostEntranceX != 0F) {
        GhostEntranceX = other.GhostEntranceX;
      }
      if (other.GhostEntranceY != 0F) {
        GhostEntranceY = other.GhostEntranceY;
      }
      if (other.MapName.Length != 0) {
        MapName = other.MapName;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Parent = input.ReadUInt32();
            break;
          }
          case 32: {
            MapType = input.ReadUInt32();
            break;
          }
          case 40: {
            LinkedZone = input.ReadUInt32();
            break;
          }
          case 48: {
            LevelMin = input.ReadUInt32();
            break;
          }
          case 56: {
            LevelMax = input.ReadUInt32();
            break;
          }
          case 64: {
            MaxPlayers = input.ReadUInt32();
            break;
          }
          case 72: {
            ResetDelay = input.ReadUInt32();
            break;
          }
          case 80: {
            GhostEntranceMap = input.ReadInt32();
            break;
          }
          case 93: {
            GhostEntranceX = input.ReadFloat();
            break;
          }
          case 101: {
            GhostEntranceY = input.ReadFloat();
            break;
          }
          case 106: {
            MapName = input.ReadString();
            break;
          }
          case 114: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Parent = input.ReadUInt32();
            break;
          }
          case 32: {
            MapType = input.ReadUInt32();
            break;
          }
          case 40: {
            LinkedZone = input.ReadUInt32();
            break;
          }
          case 48: {
            LevelMin = input.ReadUInt32();
            break;
          }
          case 56: {
            LevelMax = input.ReadUInt32();
            break;
          }
          case 64: {
            MaxPlayers = input.ReadUInt32();
            break;
          }
          case 72: {
            ResetDelay = input.ReadUInt32();
            break;
          }
          case 80: {
            GhostEntranceMap = input.ReadInt32();
            break;
          }
          case 93: {
            GhostEntranceX = input.ReadFloat();
            break;
          }
          case 101: {
            GhostEntranceY = input.ReadFloat();
            break;
          }
          case 106: {
            MapName = input.ReadString();
            break;
          }
          case 114: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Migrations : pb::IMessage<Migrations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Migrations> _parser = new pb::MessageParser<Migrations>(() => new Migrations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Migrations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Migrations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Migrations(Migrations other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Migrations Clone() {
      return new Migrations(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Identifier for the migration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Migrations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Migrations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Migrations other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcGossip : pb::IMessage<NpcGossip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcGossip> _parser = new pb::MessageParser<NpcGossip>(() => new NpcGossip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcGossip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcGossip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcGossip(NpcGossip other) : this() {
      npcGuid_ = other.npcGuid_;
      textid_ = other.textid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcGossip Clone() {
      return new NpcGossip(this);
    }

    /// <summary>Field number for the "npc_guid" field.</summary>
    public const int NpcGuidFieldNumber = 1;
    private uint npcGuid_;
    /// <summary>
    /// Unique identifier for the NPC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NpcGuid {
      get { return npcGuid_; }
      set {
        npcGuid_ = value;
      }
    }

    /// <summary>Field number for the "textid" field.</summary>
    public const int TextidFieldNumber = 2;
    private uint textid_;
    /// <summary>
    /// Identifier for the gossip text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Textid {
      get { return textid_; }
      set {
        textid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcGossip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcGossip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NpcGuid != other.NpcGuid) return false;
      if (Textid != other.Textid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NpcGuid != 0) hash ^= NpcGuid.GetHashCode();
      if (Textid != 0) hash ^= Textid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NpcGuid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NpcGuid);
      }
      if (Textid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Textid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NpcGuid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NpcGuid);
      }
      if (Textid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Textid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NpcGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NpcGuid);
      }
      if (Textid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Textid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcGossip other) {
      if (other == null) {
        return;
      }
      if (other.NpcGuid != 0) {
        NpcGuid = other.NpcGuid;
      }
      if (other.Textid != 0) {
        Textid = other.Textid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NpcGuid = input.ReadUInt32();
            break;
          }
          case 16: {
            Textid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NpcGuid = input.ReadUInt32();
            break;
          }
          case 16: {
            Textid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcText : pb::IMessage<NpcText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcText> _parser = new pb::MessageParser<NpcText>(() => new NpcText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcText(NpcText other) : this() {
      iD_ = other.iD_;
      broadcastTextID0_ = other.broadcastTextID0_;
      probability0_ = other.probability0_;
      broadcastTextID1_ = other.broadcastTextID1_;
      probability1_ = other.probability1_;
      broadcastTextID2_ = other.broadcastTextID2_;
      probability2_ = other.probability2_;
      broadcastTextID3_ = other.broadcastTextID3_;
      probability3_ = other.probability3_;
      broadcastTextID4_ = other.broadcastTextID4_;
      probability4_ = other.probability4_;
      broadcastTextID5_ = other.broadcastTextID5_;
      probability5_ = other.probability5_;
      broadcastTextID6_ = other.broadcastTextID6_;
      probability6_ = other.probability6_;
      broadcastTextID7_ = other.broadcastTextID7_;
      probability7_ = other.probability7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcText Clone() {
      return new NpcText(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private uint iD_;
    /// <summary>
    /// Unique identifier for the NPC text entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID0" field.</summary>
    public const int BroadcastTextID0FieldNumber = 2;
    private uint broadcastTextID0_;
    /// <summary>
    /// Identifier for broadcast text 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID0 {
      get { return broadcastTextID0_; }
      set {
        broadcastTextID0_ = value;
      }
    }

    /// <summary>Field number for the "Probability0" field.</summary>
    public const int Probability0FieldNumber = 3;
    private float probability0_;
    /// <summary>
    /// Probability for broadcast text 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability0 {
      get { return probability0_; }
      set {
        probability0_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID1" field.</summary>
    public const int BroadcastTextID1FieldNumber = 4;
    private uint broadcastTextID1_;
    /// <summary>
    /// Identifier for broadcast text 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID1 {
      get { return broadcastTextID1_; }
      set {
        broadcastTextID1_ = value;
      }
    }

    /// <summary>Field number for the "Probability1" field.</summary>
    public const int Probability1FieldNumber = 5;
    private float probability1_;
    /// <summary>
    /// Probability for broadcast text 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability1 {
      get { return probability1_; }
      set {
        probability1_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID2" field.</summary>
    public const int BroadcastTextID2FieldNumber = 6;
    private uint broadcastTextID2_;
    /// <summary>
    /// Identifier for broadcast text 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID2 {
      get { return broadcastTextID2_; }
      set {
        broadcastTextID2_ = value;
      }
    }

    /// <summary>Field number for the "Probability2" field.</summary>
    public const int Probability2FieldNumber = 7;
    private float probability2_;
    /// <summary>
    /// Probability for broadcast text 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability2 {
      get { return probability2_; }
      set {
        probability2_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID3" field.</summary>
    public const int BroadcastTextID3FieldNumber = 8;
    private uint broadcastTextID3_;
    /// <summary>
    /// Identifier for broadcast text 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID3 {
      get { return broadcastTextID3_; }
      set {
        broadcastTextID3_ = value;
      }
    }

    /// <summary>Field number for the "Probability3" field.</summary>
    public const int Probability3FieldNumber = 9;
    private float probability3_;
    /// <summary>
    /// Probability for broadcast text 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability3 {
      get { return probability3_; }
      set {
        probability3_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID4" field.</summary>
    public const int BroadcastTextID4FieldNumber = 10;
    private uint broadcastTextID4_;
    /// <summary>
    /// Identifier for broadcast text 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID4 {
      get { return broadcastTextID4_; }
      set {
        broadcastTextID4_ = value;
      }
    }

    /// <summary>Field number for the "Probability4" field.</summary>
    public const int Probability4FieldNumber = 11;
    private float probability4_;
    /// <summary>
    /// Probability for broadcast text 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability4 {
      get { return probability4_; }
      set {
        probability4_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID5" field.</summary>
    public const int BroadcastTextID5FieldNumber = 12;
    private uint broadcastTextID5_;
    /// <summary>
    /// Identifier for broadcast text 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID5 {
      get { return broadcastTextID5_; }
      set {
        broadcastTextID5_ = value;
      }
    }

    /// <summary>Field number for the "Probability5" field.</summary>
    public const int Probability5FieldNumber = 13;
    private float probability5_;
    /// <summary>
    /// Probability for broadcast text 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability5 {
      get { return probability5_; }
      set {
        probability5_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID6" field.</summary>
    public const int BroadcastTextID6FieldNumber = 14;
    private uint broadcastTextID6_;
    /// <summary>
    /// Identifier for broadcast text 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID6 {
      get { return broadcastTextID6_; }
      set {
        broadcastTextID6_ = value;
      }
    }

    /// <summary>Field number for the "Probability6" field.</summary>
    public const int Probability6FieldNumber = 15;
    private float probability6_;
    /// <summary>
    /// Probability for broadcast text 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability6 {
      get { return probability6_; }
      set {
        probability6_ = value;
      }
    }

    /// <summary>Field number for the "BroadcastTextID7" field.</summary>
    public const int BroadcastTextID7FieldNumber = 16;
    private uint broadcastTextID7_;
    /// <summary>
    /// Identifier for broadcast text 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BroadcastTextID7 {
      get { return broadcastTextID7_; }
      set {
        broadcastTextID7_ = value;
      }
    }

    /// <summary>Field number for the "Probability7" field.</summary>
    public const int Probability7FieldNumber = 17;
    private float probability7_;
    /// <summary>
    /// Probability for broadcast text 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Probability7 {
      get { return probability7_; }
      set {
        probability7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (BroadcastTextID0 != other.BroadcastTextID0) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability0, other.Probability0)) return false;
      if (BroadcastTextID1 != other.BroadcastTextID1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability1, other.Probability1)) return false;
      if (BroadcastTextID2 != other.BroadcastTextID2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability2, other.Probability2)) return false;
      if (BroadcastTextID3 != other.BroadcastTextID3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability3, other.Probability3)) return false;
      if (BroadcastTextID4 != other.BroadcastTextID4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability4, other.Probability4)) return false;
      if (BroadcastTextID5 != other.BroadcastTextID5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability5, other.Probability5)) return false;
      if (BroadcastTextID6 != other.BroadcastTextID6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability6, other.Probability6)) return false;
      if (BroadcastTextID7 != other.BroadcastTextID7) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Probability7, other.Probability7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (BroadcastTextID0 != 0) hash ^= BroadcastTextID0.GetHashCode();
      if (Probability0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability0);
      if (BroadcastTextID1 != 0) hash ^= BroadcastTextID1.GetHashCode();
      if (Probability1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability1);
      if (BroadcastTextID2 != 0) hash ^= BroadcastTextID2.GetHashCode();
      if (Probability2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability2);
      if (BroadcastTextID3 != 0) hash ^= BroadcastTextID3.GetHashCode();
      if (Probability3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability3);
      if (BroadcastTextID4 != 0) hash ^= BroadcastTextID4.GetHashCode();
      if (Probability4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability4);
      if (BroadcastTextID5 != 0) hash ^= BroadcastTextID5.GetHashCode();
      if (Probability5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability5);
      if (BroadcastTextID6 != 0) hash ^= BroadcastTextID6.GetHashCode();
      if (Probability6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability6);
      if (BroadcastTextID7 != 0) hash ^= BroadcastTextID7.GetHashCode();
      if (Probability7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Probability7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ID);
      }
      if (BroadcastTextID0 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BroadcastTextID0);
      }
      if (Probability0 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Probability0);
      }
      if (BroadcastTextID1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BroadcastTextID1);
      }
      if (Probability1 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Probability1);
      }
      if (BroadcastTextID2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BroadcastTextID2);
      }
      if (Probability2 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Probability2);
      }
      if (BroadcastTextID3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BroadcastTextID3);
      }
      if (Probability3 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Probability3);
      }
      if (BroadcastTextID4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BroadcastTextID4);
      }
      if (Probability4 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Probability4);
      }
      if (BroadcastTextID5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(BroadcastTextID5);
      }
      if (Probability5 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(Probability5);
      }
      if (BroadcastTextID6 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BroadcastTextID6);
      }
      if (Probability6 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Probability6);
      }
      if (BroadcastTextID7 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(BroadcastTextID7);
      }
      if (Probability7 != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Probability7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ID);
      }
      if (BroadcastTextID0 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BroadcastTextID0);
      }
      if (Probability0 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Probability0);
      }
      if (BroadcastTextID1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BroadcastTextID1);
      }
      if (Probability1 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Probability1);
      }
      if (BroadcastTextID2 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(BroadcastTextID2);
      }
      if (Probability2 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Probability2);
      }
      if (BroadcastTextID3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(BroadcastTextID3);
      }
      if (Probability3 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Probability3);
      }
      if (BroadcastTextID4 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(BroadcastTextID4);
      }
      if (Probability4 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Probability4);
      }
      if (BroadcastTextID5 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(BroadcastTextID5);
      }
      if (Probability5 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(Probability5);
      }
      if (BroadcastTextID6 != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(BroadcastTextID6);
      }
      if (Probability6 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Probability6);
      }
      if (BroadcastTextID7 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(BroadcastTextID7);
      }
      if (Probability7 != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Probability7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ID);
      }
      if (BroadcastTextID0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID0);
      }
      if (Probability0 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID1);
      }
      if (Probability1 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID2);
      }
      if (Probability2 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID3);
      }
      if (Probability3 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID4);
      }
      if (Probability4 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID5);
      }
      if (Probability5 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID6);
      }
      if (Probability6 != 0F) {
        size += 1 + 4;
      }
      if (BroadcastTextID7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BroadcastTextID7);
      }
      if (Probability7 != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcText other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.BroadcastTextID0 != 0) {
        BroadcastTextID0 = other.BroadcastTextID0;
      }
      if (other.Probability0 != 0F) {
        Probability0 = other.Probability0;
      }
      if (other.BroadcastTextID1 != 0) {
        BroadcastTextID1 = other.BroadcastTextID1;
      }
      if (other.Probability1 != 0F) {
        Probability1 = other.Probability1;
      }
      if (other.BroadcastTextID2 != 0) {
        BroadcastTextID2 = other.BroadcastTextID2;
      }
      if (other.Probability2 != 0F) {
        Probability2 = other.Probability2;
      }
      if (other.BroadcastTextID3 != 0) {
        BroadcastTextID3 = other.BroadcastTextID3;
      }
      if (other.Probability3 != 0F) {
        Probability3 = other.Probability3;
      }
      if (other.BroadcastTextID4 != 0) {
        BroadcastTextID4 = other.BroadcastTextID4;
      }
      if (other.Probability4 != 0F) {
        Probability4 = other.Probability4;
      }
      if (other.BroadcastTextID5 != 0) {
        BroadcastTextID5 = other.BroadcastTextID5;
      }
      if (other.Probability5 != 0F) {
        Probability5 = other.Probability5;
      }
      if (other.BroadcastTextID6 != 0) {
        BroadcastTextID6 = other.BroadcastTextID6;
      }
      if (other.Probability6 != 0F) {
        Probability6 = other.Probability6;
      }
      if (other.BroadcastTextID7 != 0) {
        BroadcastTextID7 = other.BroadcastTextID7;
      }
      if (other.Probability7 != 0F) {
        Probability7 = other.Probability7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadUInt32();
            break;
          }
          case 16: {
            BroadcastTextID0 = input.ReadUInt32();
            break;
          }
          case 29: {
            Probability0 = input.ReadFloat();
            break;
          }
          case 32: {
            BroadcastTextID1 = input.ReadUInt32();
            break;
          }
          case 45: {
            Probability1 = input.ReadFloat();
            break;
          }
          case 48: {
            BroadcastTextID2 = input.ReadUInt32();
            break;
          }
          case 61: {
            Probability2 = input.ReadFloat();
            break;
          }
          case 64: {
            BroadcastTextID3 = input.ReadUInt32();
            break;
          }
          case 77: {
            Probability3 = input.ReadFloat();
            break;
          }
          case 80: {
            BroadcastTextID4 = input.ReadUInt32();
            break;
          }
          case 93: {
            Probability4 = input.ReadFloat();
            break;
          }
          case 96: {
            BroadcastTextID5 = input.ReadUInt32();
            break;
          }
          case 109: {
            Probability5 = input.ReadFloat();
            break;
          }
          case 112: {
            BroadcastTextID6 = input.ReadUInt32();
            break;
          }
          case 125: {
            Probability6 = input.ReadFloat();
            break;
          }
          case 128: {
            BroadcastTextID7 = input.ReadUInt32();
            break;
          }
          case 141: {
            Probability7 = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadUInt32();
            break;
          }
          case 16: {
            BroadcastTextID0 = input.ReadUInt32();
            break;
          }
          case 29: {
            Probability0 = input.ReadFloat();
            break;
          }
          case 32: {
            BroadcastTextID1 = input.ReadUInt32();
            break;
          }
          case 45: {
            Probability1 = input.ReadFloat();
            break;
          }
          case 48: {
            BroadcastTextID2 = input.ReadUInt32();
            break;
          }
          case 61: {
            Probability2 = input.ReadFloat();
            break;
          }
          case 64: {
            BroadcastTextID3 = input.ReadUInt32();
            break;
          }
          case 77: {
            Probability3 = input.ReadFloat();
            break;
          }
          case 80: {
            BroadcastTextID4 = input.ReadUInt32();
            break;
          }
          case 93: {
            Probability4 = input.ReadFloat();
            break;
          }
          case 96: {
            BroadcastTextID5 = input.ReadUInt32();
            break;
          }
          case 109: {
            Probability5 = input.ReadFloat();
            break;
          }
          case 112: {
            BroadcastTextID6 = input.ReadUInt32();
            break;
          }
          case 125: {
            Probability6 = input.ReadFloat();
            break;
          }
          case 128: {
            BroadcastTextID7 = input.ReadUInt32();
            break;
          }
          case 141: {
            Probability7 = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcTrainer : pb::IMessage<NpcTrainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcTrainer> _parser = new pb::MessageParser<NpcTrainer>(() => new NpcTrainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcTrainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainer(NpcTrainer other) : this() {
      entry_ = other.entry_;
      spell_ = other.spell_;
      spellcost_ = other.spellcost_;
      reqskill_ = other.reqskill_;
      reqskillvalue_ = other.reqskillvalue_;
      reqlevel_ = other.reqlevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainer Clone() {
      return new NpcTrainer(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the NPC trainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 2;
    private uint spell_;
    /// <summary>
    /// Identifier for the spell offered by the trainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "spellcost" field.</summary>
    public const int SpellcostFieldNumber = 3;
    private uint spellcost_;
    /// <summary>
    /// Cost of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spellcost {
      get { return spellcost_; }
      set {
        spellcost_ = value;
      }
    }

    /// <summary>Field number for the "reqskill" field.</summary>
    public const int ReqskillFieldNumber = 4;
    private uint reqskill_;
    /// <summary>
    /// Required skill for the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqskill {
      get { return reqskill_; }
      set {
        reqskill_ = value;
      }
    }

    /// <summary>Field number for the "reqskillvalue" field.</summary>
    public const int ReqskillvalueFieldNumber = 5;
    private uint reqskillvalue_;
    /// <summary>
    /// Required skill value for the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqskillvalue {
      get { return reqskillvalue_; }
      set {
        reqskillvalue_ = value;
      }
    }

    /// <summary>Field number for the "reqlevel" field.</summary>
    public const int ReqlevelFieldNumber = 6;
    private uint reqlevel_;
    /// <summary>
    /// Required level to learn the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqlevel {
      get { return reqlevel_; }
      set {
        reqlevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcTrainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcTrainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Spell != other.Spell) return false;
      if (Spellcost != other.Spellcost) return false;
      if (Reqskill != other.Reqskill) return false;
      if (Reqskillvalue != other.Reqskillvalue) return false;
      if (Reqlevel != other.Reqlevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Spellcost != 0) hash ^= Spellcost.GetHashCode();
      if (Reqskill != 0) hash ^= Reqskill.GetHashCode();
      if (Reqskillvalue != 0) hash ^= Reqskillvalue.GetHashCode();
      if (Reqlevel != 0) hash ^= Reqlevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell);
      }
      if (Spellcost != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spellcost);
      }
      if (Reqskill != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Reqskill);
      }
      if (Reqskillvalue != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Reqlevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell);
      }
      if (Spellcost != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spellcost);
      }
      if (Reqskill != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Reqskill);
      }
      if (Reqskillvalue != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Reqlevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Spellcost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spellcost);
      }
      if (Reqskill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqskill);
      }
      if (Reqskillvalue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqlevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcTrainer other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Spellcost != 0) {
        Spellcost = other.Spellcost;
      }
      if (other.Reqskill != 0) {
        Reqskill = other.Reqskill;
      }
      if (other.Reqskillvalue != 0) {
        Reqskillvalue = other.Reqskillvalue;
      }
      if (other.Reqlevel != 0) {
        Reqlevel = other.Reqlevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell = input.ReadUInt32();
            break;
          }
          case 24: {
            Spellcost = input.ReadUInt32();
            break;
          }
          case 32: {
            Reqskill = input.ReadUInt32();
            break;
          }
          case 40: {
            Reqskillvalue = input.ReadUInt32();
            break;
          }
          case 48: {
            Reqlevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell = input.ReadUInt32();
            break;
          }
          case 24: {
            Spellcost = input.ReadUInt32();
            break;
          }
          case 32: {
            Reqskill = input.ReadUInt32();
            break;
          }
          case 40: {
            Reqskillvalue = input.ReadUInt32();
            break;
          }
          case 48: {
            Reqlevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcTrainerTemplate : pb::IMessage<NpcTrainerTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcTrainerTemplate> _parser = new pb::MessageParser<NpcTrainerTemplate>(() => new NpcTrainerTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcTrainerTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainerTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainerTemplate(NpcTrainerTemplate other) : this() {
      entry_ = other.entry_;
      spell_ = other.spell_;
      spellcost_ = other.spellcost_;
      reqskill_ = other.reqskill_;
      reqskillvalue_ = other.reqskillvalue_;
      reqlevel_ = other.reqlevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcTrainerTemplate Clone() {
      return new NpcTrainerTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the NPC trainer template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 2;
    private uint spell_;
    /// <summary>
    /// Identifier for the spell offered by the trainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "spellcost" field.</summary>
    public const int SpellcostFieldNumber = 3;
    private uint spellcost_;
    /// <summary>
    /// Cost of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spellcost {
      get { return spellcost_; }
      set {
        spellcost_ = value;
      }
    }

    /// <summary>Field number for the "reqskill" field.</summary>
    public const int ReqskillFieldNumber = 4;
    private uint reqskill_;
    /// <summary>
    /// Required skill for the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqskill {
      get { return reqskill_; }
      set {
        reqskill_ = value;
      }
    }

    /// <summary>Field number for the "reqskillvalue" field.</summary>
    public const int ReqskillvalueFieldNumber = 5;
    private uint reqskillvalue_;
    /// <summary>
    /// Required skill value for the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqskillvalue {
      get { return reqskillvalue_; }
      set {
        reqskillvalue_ = value;
      }
    }

    /// <summary>Field number for the "reqlevel" field.</summary>
    public const int ReqlevelFieldNumber = 6;
    private uint reqlevel_;
    /// <summary>
    /// Required level to learn the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reqlevel {
      get { return reqlevel_; }
      set {
        reqlevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcTrainerTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcTrainerTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Spell != other.Spell) return false;
      if (Spellcost != other.Spellcost) return false;
      if (Reqskill != other.Reqskill) return false;
      if (Reqskillvalue != other.Reqskillvalue) return false;
      if (Reqlevel != other.Reqlevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Spellcost != 0) hash ^= Spellcost.GetHashCode();
      if (Reqskill != 0) hash ^= Reqskill.GetHashCode();
      if (Reqskillvalue != 0) hash ^= Reqskillvalue.GetHashCode();
      if (Reqlevel != 0) hash ^= Reqlevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell);
      }
      if (Spellcost != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spellcost);
      }
      if (Reqskill != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Reqskill);
      }
      if (Reqskillvalue != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Reqlevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell);
      }
      if (Spellcost != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spellcost);
      }
      if (Reqskill != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Reqskill);
      }
      if (Reqskillvalue != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Reqlevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Spellcost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spellcost);
      }
      if (Reqskill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqskill);
      }
      if (Reqskillvalue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqskillvalue);
      }
      if (Reqlevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reqlevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcTrainerTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Spellcost != 0) {
        Spellcost = other.Spellcost;
      }
      if (other.Reqskill != 0) {
        Reqskill = other.Reqskill;
      }
      if (other.Reqskillvalue != 0) {
        Reqskillvalue = other.Reqskillvalue;
      }
      if (other.Reqlevel != 0) {
        Reqlevel = other.Reqlevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell = input.ReadUInt32();
            break;
          }
          case 24: {
            Spellcost = input.ReadUInt32();
            break;
          }
          case 32: {
            Reqskill = input.ReadUInt32();
            break;
          }
          case 40: {
            Reqskillvalue = input.ReadUInt32();
            break;
          }
          case 48: {
            Reqlevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell = input.ReadUInt32();
            break;
          }
          case 24: {
            Spellcost = input.ReadUInt32();
            break;
          }
          case 32: {
            Reqskill = input.ReadUInt32();
            break;
          }
          case 40: {
            Reqskillvalue = input.ReadUInt32();
            break;
          }
          case 48: {
            Reqlevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcVendor : pb::IMessage<NpcVendor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcVendor> _parser = new pb::MessageParser<NpcVendor>(() => new NpcVendor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcVendor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendor(NpcVendor other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      maxcount_ = other.maxcount_;
      incrtime_ = other.incrtime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendor Clone() {
      return new NpcVendor(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the NPC vendor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Identifier for the item sold by the vendor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 3;
    private uint maxcount_;
    /// <summary>
    /// Maximum count of the item available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "incrtime" field.</summary>
    public const int IncrtimeFieldNumber = 4;
    private uint incrtime_;
    /// <summary>
    /// Time interval for restocking the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Incrtime {
      get { return incrtime_; }
      set {
        incrtime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcVendor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcVendor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (Maxcount != other.Maxcount) return false;
      if (Incrtime != other.Incrtime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (Incrtime != 0) hash ^= Incrtime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Maxcount);
      }
      if (Incrtime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Incrtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Maxcount);
      }
      if (Incrtime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Incrtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (Incrtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Incrtime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcVendor other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.Incrtime != 0) {
        Incrtime = other.Incrtime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 24: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 32: {
            Incrtime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 24: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 32: {
            Incrtime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NpcVendorTemplate : pb::IMessage<NpcVendorTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NpcVendorTemplate> _parser = new pb::MessageParser<NpcVendorTemplate>(() => new NpcVendorTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NpcVendorTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendorTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendorTemplate(NpcVendorTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      maxcount_ = other.maxcount_;
      incrtime_ = other.incrtime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NpcVendorTemplate Clone() {
      return new NpcVendorTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the NPC vendor template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Identifier for the item sold by the vendor
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 3;
    private uint maxcount_;
    /// <summary>
    /// Maximum count of the item available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "incrtime" field.</summary>
    public const int IncrtimeFieldNumber = 4;
    private uint incrtime_;
    /// <summary>
    /// Time interval for restocking the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Incrtime {
      get { return incrtime_; }
      set {
        incrtime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NpcVendorTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NpcVendorTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (Maxcount != other.Maxcount) return false;
      if (Incrtime != other.Incrtime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (Incrtime != 0) hash ^= Incrtime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Maxcount);
      }
      if (Incrtime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Incrtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Maxcount);
      }
      if (Incrtime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Incrtime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (Incrtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Incrtime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NpcVendorTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.Incrtime != 0) {
        Incrtime = other.Incrtime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 24: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 32: {
            Incrtime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 24: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 32: {
            Incrtime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PageText : pb::IMessage<PageText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PageText> _parser = new pb::MessageParser<PageText>(() => new PageText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PageText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PageText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PageText(PageText other) : this() {
      entry_ = other.entry_;
      text_ = other.text_;
      nextPage_ = other.nextPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PageText Clone() {
      return new PageText(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the page text entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    /// Text content of the page
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_page" field.</summary>
    public const int NextPageFieldNumber = 3;
    private uint nextPage_;
    /// <summary>
    /// Identifier for the next page in the sequence
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextPage {
      get { return nextPage_; }
      set {
        nextPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PageText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PageText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Text != other.Text) return false;
      if (NextPage != other.NextPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (NextPage != 0) hash ^= NextPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (NextPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (NextPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (NextPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PageText other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.NextPage != 0) {
        NextPage = other.NextPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            NextPage = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            NextPage = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PetCreateInfoSpell : pb::IMessage<PetCreateInfoSpell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PetCreateInfoSpell> _parser = new pb::MessageParser<PetCreateInfoSpell>(() => new PetCreateInfoSpell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PetCreateInfoSpell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetCreateInfoSpell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetCreateInfoSpell(PetCreateInfoSpell other) : this() {
      entry_ = other.entry_;
      spell1_ = other.spell1_;
      spell2_ = other.spell2_;
      spell3_ = other.spell3_;
      spell4_ = other.spell4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetCreateInfoSpell Clone() {
      return new PetCreateInfoSpell(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the pet creation entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "Spell1" field.</summary>
    public const int Spell1FieldNumber = 2;
    private uint spell1_;
    /// <summary>
    /// Identifier for the first spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell1 {
      get { return spell1_; }
      set {
        spell1_ = value;
      }
    }

    /// <summary>Field number for the "Spell2" field.</summary>
    public const int Spell2FieldNumber = 3;
    private uint spell2_;
    /// <summary>
    /// Identifier for the second spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell2 {
      get { return spell2_; }
      set {
        spell2_ = value;
      }
    }

    /// <summary>Field number for the "Spell3" field.</summary>
    public const int Spell3FieldNumber = 4;
    private uint spell3_;
    /// <summary>
    /// Identifier for the third spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell3 {
      get { return spell3_; }
      set {
        spell3_ = value;
      }
    }

    /// <summary>Field number for the "Spell4" field.</summary>
    public const int Spell4FieldNumber = 5;
    private uint spell4_;
    /// <summary>
    /// Identifier for the fourth spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell4 {
      get { return spell4_; }
      set {
        spell4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PetCreateInfoSpell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PetCreateInfoSpell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Spell1 != other.Spell1) return false;
      if (Spell2 != other.Spell2) return false;
      if (Spell3 != other.Spell3) return false;
      if (Spell4 != other.Spell4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Spell1 != 0) hash ^= Spell1.GetHashCode();
      if (Spell2 != 0) hash ^= Spell2.GetHashCode();
      if (Spell3 != 0) hash ^= Spell3.GetHashCode();
      if (Spell4 != 0) hash ^= Spell4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell1);
      }
      if (Spell2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spell2);
      }
      if (Spell3 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Spell3);
      }
      if (Spell4 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Spell4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Spell1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Spell1);
      }
      if (Spell2 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spell2);
      }
      if (Spell3 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Spell3);
      }
      if (Spell4 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Spell4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Spell1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell1);
      }
      if (Spell2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell2);
      }
      if (Spell3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell3);
      }
      if (Spell4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PetCreateInfoSpell other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Spell1 != 0) {
        Spell1 = other.Spell1;
      }
      if (other.Spell2 != 0) {
        Spell2 = other.Spell2;
      }
      if (other.Spell3 != 0) {
        Spell3 = other.Spell3;
      }
      if (other.Spell4 != 0) {
        Spell4 = other.Spell4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Spell2 = input.ReadUInt32();
            break;
          }
          case 32: {
            Spell3 = input.ReadUInt32();
            break;
          }
          case 40: {
            Spell4 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Spell1 = input.ReadUInt32();
            break;
          }
          case 24: {
            Spell2 = input.ReadUInt32();
            break;
          }
          case 32: {
            Spell3 = input.ReadUInt32();
            break;
          }
          case 40: {
            Spell4 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PetLevelStats : pb::IMessage<PetLevelStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PetLevelStats> _parser = new pb::MessageParser<PetLevelStats>(() => new PetLevelStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PetLevelStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetLevelStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetLevelStats(PetLevelStats other) : this() {
      creatureEntry_ = other.creatureEntry_;
      level_ = other.level_;
      hp_ = other.hp_;
      mana_ = other.mana_;
      armor_ = other.armor_;
      str_ = other.str_;
      agi_ = other.agi_;
      sta_ = other.sta_;
      inte_ = other.inte_;
      spi_ = other.spi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetLevelStats Clone() {
      return new PetLevelStats(this);
    }

    /// <summary>Field number for the "creature_entry" field.</summary>
    public const int CreatureEntryFieldNumber = 1;
    private uint creatureEntry_;
    /// <summary>
    /// Unique identifier for the creature entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureEntry {
      get { return creatureEntry_; }
      set {
        creatureEntry_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private uint level_;
    /// <summary>
    /// Level of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private uint hp_;
    /// <summary>
    /// Health points of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "mana" field.</summary>
    public const int ManaFieldNumber = 4;
    private uint mana_;
    /// <summary>
    /// Mana points of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mana {
      get { return mana_; }
      set {
        mana_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 5;
    private uint armor_;
    /// <summary>
    /// Armor value of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 6;
    private uint str_;
    /// <summary>
    /// Strength of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "agi" field.</summary>
    public const int AgiFieldNumber = 7;
    private uint agi_;
    /// <summary>
    /// Agility of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Agi {
      get { return agi_; }
      set {
        agi_ = value;
      }
    }

    /// <summary>Field number for the "sta" field.</summary>
    public const int StaFieldNumber = 8;
    private uint sta_;
    /// <summary>
    /// Stamina of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sta {
      get { return sta_; }
      set {
        sta_ = value;
      }
    }

    /// <summary>Field number for the "inte" field.</summary>
    public const int InteFieldNumber = 9;
    private uint inte_;
    /// <summary>
    /// Intelligence of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Inte {
      get { return inte_; }
      set {
        inte_ = value;
      }
    }

    /// <summary>Field number for the "spi" field.</summary>
    public const int SpiFieldNumber = 10;
    private uint spi_;
    /// <summary>
    /// Spirit of the pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spi {
      get { return spi_; }
      set {
        spi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PetLevelStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PetLevelStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreatureEntry != other.CreatureEntry) return false;
      if (Level != other.Level) return false;
      if (Hp != other.Hp) return false;
      if (Mana != other.Mana) return false;
      if (Armor != other.Armor) return false;
      if (Str != other.Str) return false;
      if (Agi != other.Agi) return false;
      if (Sta != other.Sta) return false;
      if (Inte != other.Inte) return false;
      if (Spi != other.Spi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CreatureEntry != 0) hash ^= CreatureEntry.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Mana != 0) hash ^= Mana.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Agi != 0) hash ^= Agi.GetHashCode();
      if (Sta != 0) hash ^= Sta.GetHashCode();
      if (Inte != 0) hash ^= Inte.GetHashCode();
      if (Spi != 0) hash ^= Spi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CreatureEntry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureEntry);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Hp);
      }
      if (Mana != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Mana);
      }
      if (Armor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Armor);
      }
      if (Str != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Str);
      }
      if (Agi != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Agi);
      }
      if (Sta != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Sta);
      }
      if (Inte != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Inte);
      }
      if (Spi != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Spi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CreatureEntry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureEntry);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Hp);
      }
      if (Mana != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Mana);
      }
      if (Armor != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Armor);
      }
      if (Str != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Str);
      }
      if (Agi != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Agi);
      }
      if (Sta != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Sta);
      }
      if (Inte != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Inte);
      }
      if (Spi != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Spi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CreatureEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureEntry);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hp);
      }
      if (Mana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mana);
      }
      if (Armor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Armor);
      }
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Str);
      }
      if (Agi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Agi);
      }
      if (Sta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sta);
      }
      if (Inte != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Inte);
      }
      if (Spi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PetLevelStats other) {
      if (other == null) {
        return;
      }
      if (other.CreatureEntry != 0) {
        CreatureEntry = other.CreatureEntry;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Mana != 0) {
        Mana = other.Mana;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Agi != 0) {
        Agi = other.Agi;
      }
      if (other.Sta != 0) {
        Sta = other.Sta;
      }
      if (other.Inte != 0) {
        Inte = other.Inte;
      }
      if (other.Spi != 0) {
        Spi = other.Spi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
          case 24: {
            Hp = input.ReadUInt32();
            break;
          }
          case 32: {
            Mana = input.ReadUInt32();
            break;
          }
          case 40: {
            Armor = input.ReadUInt32();
            break;
          }
          case 48: {
            Str = input.ReadUInt32();
            break;
          }
          case 56: {
            Agi = input.ReadUInt32();
            break;
          }
          case 64: {
            Sta = input.ReadUInt32();
            break;
          }
          case 72: {
            Inte = input.ReadUInt32();
            break;
          }
          case 80: {
            Spi = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CreatureEntry = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
          case 24: {
            Hp = input.ReadUInt32();
            break;
          }
          case 32: {
            Mana = input.ReadUInt32();
            break;
          }
          case 40: {
            Armor = input.ReadUInt32();
            break;
          }
          case 48: {
            Str = input.ReadUInt32();
            break;
          }
          case 56: {
            Agi = input.ReadUInt32();
            break;
          }
          case 64: {
            Sta = input.ReadUInt32();
            break;
          }
          case 72: {
            Inte = input.ReadUInt32();
            break;
          }
          case 80: {
            Spi = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PetNameGeneration : pb::IMessage<PetNameGeneration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PetNameGeneration> _parser = new pb::MessageParser<PetNameGeneration>(() => new PetNameGeneration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PetNameGeneration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetNameGeneration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetNameGeneration(PetNameGeneration other) : this() {
      id_ = other.id_;
      word_ = other.word_;
      entry_ = other.entry_;
      half_ = other.half_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PetNameGeneration Clone() {
      return new PetNameGeneration(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the pet name entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "word" field.</summary>
    public const int WordFieldNumber = 2;
    private string word_ = "";
    /// <summary>
    /// Word used for generating the pet name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Word {
      get { return word_; }
      set {
        word_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 3;
    private uint entry_;
    /// <summary>
    /// Associated entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "half" field.</summary>
    public const int HalfFieldNumber = 4;
    private uint half_;
    /// <summary>
    /// Indicates which half of the name this word represents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Half {
      get { return half_; }
      set {
        half_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PetNameGeneration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PetNameGeneration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Word != other.Word) return false;
      if (Entry != other.Entry) return false;
      if (Half != other.Half) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Word.Length != 0) hash ^= Word.GetHashCode();
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Half != 0) hash ^= Half.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Word.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Word);
      }
      if (Entry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Entry);
      }
      if (Half != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Half);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Word.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Word);
      }
      if (Entry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Entry);
      }
      if (Half != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Half);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Word.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Word);
      }
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Half != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Half);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PetNameGeneration other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Word.Length != 0) {
        Word = other.Word;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Half != 0) {
        Half = other.Half;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Word = input.ReadString();
            break;
          }
          case 24: {
            Entry = input.ReadUInt32();
            break;
          }
          case 32: {
            Half = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Word = input.ReadString();
            break;
          }
          case 24: {
            Entry = input.ReadUInt32();
            break;
          }
          case 32: {
            Half = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PickpocketingLootTemplate : pb::IMessage<PickpocketingLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PickpocketingLootTemplate> _parser = new pb::MessageParser<PickpocketingLootTemplate>(() => new PickpocketingLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PickpocketingLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PickpocketingLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PickpocketingLootTemplate(PickpocketingLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupid_ = other.groupid_;
      mincountOrRef_ = other.mincountOrRef_;
      maxcount_ = other.maxcount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PickpocketingLootTemplate Clone() {
      return new PickpocketingLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the pickpocketing loot entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Identifier for the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "ChanceOrQuestChance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance or quest chance of the item being looted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "groupid" field.</summary>
    public const int GroupidFieldNumber = 4;
    private uint groupid_;
    /// <summary>
    /// Group ID for the loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Groupid {
      get { return groupid_; }
      set {
        groupid_ = value;
      }
    }

    /// <summary>Field number for the "mincountOrRef" field.</summary>
    public const int MincountOrRefFieldNumber = 5;
    private uint mincountOrRef_;
    /// <summary>
    /// Minimum count or reference for the loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MincountOrRef {
      get { return mincountOrRef_; }
      set {
        mincountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "maxcount" field.</summary>
    public const int MaxcountFieldNumber = 6;
    private uint maxcount_;
    /// <summary>
    /// Maximum count of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Maxcount {
      get { return maxcount_; }
      set {
        maxcount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID for the loot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PickpocketingLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PickpocketingLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (Groupid != other.Groupid) return false;
      if (MincountOrRef != other.MincountOrRef) return false;
      if (Maxcount != other.Maxcount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (Groupid != 0) hash ^= Groupid.GetHashCode();
      if (MincountOrRef != 0) hash ^= MincountOrRef.GetHashCode();
      if (Maxcount != 0) hash ^= Maxcount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (Groupid != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Groupid);
      }
      if (MincountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MincountOrRef);
      }
      if (Maxcount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Maxcount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (Groupid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Groupid);
      }
      if (MincountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MincountOrRef);
      }
      if (Maxcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Maxcount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PickpocketingLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.Groupid != 0) {
        Groupid = other.Groupid;
      }
      if (other.MincountOrRef != 0) {
        MincountOrRef = other.MincountOrRef;
      }
      if (other.Maxcount != 0) {
        Maxcount = other.Maxcount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            Groupid = input.ReadUInt32();
            break;
          }
          case 40: {
            MincountOrRef = input.ReadUInt32();
            break;
          }
          case 48: {
            Maxcount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerBot : pb::IMessage<PlayerBot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerBot> _parser = new pb::MessageParser<PlayerBot>(() => new PlayerBot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerBot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerBot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerBot(PlayerBot other) : this() {
      charGuid_ = other.charGuid_;
      chance_ = other.chance_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerBot Clone() {
      return new PlayerBot(this);
    }

    /// <summary>Field number for the "char_guid" field.</summary>
    public const int CharGuidFieldNumber = 1;
    private ulong charGuid_;
    /// <summary>
    /// Unique identifier for the character GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CharGuid {
      get { return charGuid_; }
      set {
        charGuid_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 2;
    private uint chance_;
    /// <summary>
    /// Chance value associated with the player bot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    /// <summary>
    /// Optional comment for the player bot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerBot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerBot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharGuid != other.CharGuid) return false;
      if (Chance != other.Chance) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CharGuid != 0UL) hash ^= CharGuid.GetHashCode();
      if (Chance != 0) hash ^= Chance.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CharGuid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(CharGuid);
      }
      if (Chance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Chance);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CharGuid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(CharGuid);
      }
      if (Chance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Chance);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CharGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CharGuid);
      }
      if (Chance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Chance);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerBot other) {
      if (other == null) {
        return;
      }
      if (other.CharGuid != 0UL) {
        CharGuid = other.CharGuid;
      }
      if (other.Chance != 0) {
        Chance = other.Chance;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CharGuid = input.ReadUInt64();
            break;
          }
          case 16: {
            Chance = input.ReadUInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CharGuid = input.ReadUInt64();
            break;
          }
          case 16: {
            Chance = input.ReadUInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerCreateInfo : pb::IMessage<PlayerCreateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCreateInfo> _parser = new pb::MessageParser<PlayerCreateInfo>(() => new PlayerCreateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCreateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfo(PlayerCreateInfo other) : this() {
      race_ = other.race_;
      class_ = other.class_;
      map_ = other.map_;
      zone_ = other.zone_;
      positionX_ = other.positionX_;
      positionY_ = other.positionY_;
      positionZ_ = other.positionZ_;
      orientation_ = other.orientation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfo Clone() {
      return new PlayerCreateInfo(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private uint race_;
    /// <summary>
    /// Race of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 2;
    private uint class_;
    /// <summary>
    /// Class of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 3;
    private uint map_;
    /// <summary>
    /// Map ID where the player starts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 4;
    private uint zone_;
    /// <summary>
    /// Zone ID where the player starts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 5;
    private float positionX_;
    /// <summary>
    /// X coordinate of the starting position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 6;
    private float positionY_;
    /// <summary>
    /// Y coordinate of the starting position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 7;
    private float positionZ_;
    /// <summary>
    /// Z coordinate of the starting position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 8;
    private float orientation_;
    /// <summary>
    /// Orientation of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCreateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Race != other.Race) return false;
      if (Class != other.Class) return false;
      if (Map != other.Map) return false;
      if (Zone != other.Zone) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionY, other.PositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Map != 0) hash ^= Map.GetHashCode();
      if (Zone != 0) hash ^= Zone.GetHashCode();
      if (PositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionX);
      if (PositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionY);
      if (PositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PositionZ);
      if (Orientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (Zone != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Zone);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Orientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Map != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Map);
      }
      if (Zone != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Zone);
      }
      if (PositionX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(PositionX);
      }
      if (PositionY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PositionY);
      }
      if (PositionZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(PositionZ);
      }
      if (Orientation != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Orientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Map != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Map);
      }
      if (Zone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Zone);
      }
      if (PositionX != 0F) {
        size += 1 + 4;
      }
      if (PositionY != 0F) {
        size += 1 + 4;
      }
      if (PositionZ != 0F) {
        size += 1 + 4;
      }
      if (Orientation != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCreateInfo other) {
      if (other == null) {
        return;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Map != 0) {
        Map = other.Map;
      }
      if (other.Zone != 0) {
        Zone = other.Zone;
      }
      if (other.PositionX != 0F) {
        PositionX = other.PositionX;
      }
      if (other.PositionY != 0F) {
        PositionY = other.PositionY;
      }
      if (other.PositionZ != 0F) {
        PositionZ = other.PositionZ;
      }
      if (other.Orientation != 0F) {
        Orientation = other.Orientation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 32: {
            Zone = input.ReadUInt32();
            break;
          }
          case 45: {
            PositionX = input.ReadFloat();
            break;
          }
          case 53: {
            PositionY = input.ReadFloat();
            break;
          }
          case 61: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 69: {
            Orientation = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Map = input.ReadUInt32();
            break;
          }
          case 32: {
            Zone = input.ReadUInt32();
            break;
          }
          case 45: {
            PositionX = input.ReadFloat();
            break;
          }
          case 53: {
            PositionY = input.ReadFloat();
            break;
          }
          case 61: {
            PositionZ = input.ReadFloat();
            break;
          }
          case 69: {
            Orientation = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerCreateInfoAction : pb::IMessage<PlayerCreateInfoAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCreateInfoAction> _parser = new pb::MessageParser<PlayerCreateInfoAction>(() => new PlayerCreateInfoAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCreateInfoAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoAction(PlayerCreateInfoAction other) : this() {
      race_ = other.race_;
      class_ = other.class_;
      button_ = other.button_;
      action_ = other.action_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoAction Clone() {
      return new PlayerCreateInfoAction(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private uint race_;
    /// <summary>
    /// Race of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 2;
    private uint class_;
    /// <summary>
    /// Class of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 3;
    private uint button_;
    /// <summary>
    /// Button index for the action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Button {
      get { return button_; }
      set {
        button_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private uint action_;
    /// <summary>
    /// Action identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private uint type_;
    /// <summary>
    /// Type of the action
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateInfoAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCreateInfoAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Race != other.Race) return false;
      if (Class != other.Class) return false;
      if (Button != other.Button) return false;
      if (Action != other.Action) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Button != 0) hash ^= Button.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Button != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Button);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Action);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Button != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Button);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Action);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Button != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Button);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCreateInfoAction other) {
      if (other == null) {
        return;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Button != 0) {
        Button = other.Button;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Button = input.ReadUInt32();
            break;
          }
          case 32: {
            Action = input.ReadUInt32();
            break;
          }
          case 40: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Button = input.ReadUInt32();
            break;
          }
          case 32: {
            Action = input.ReadUInt32();
            break;
          }
          case 40: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerCreateInfoItem : pb::IMessage<PlayerCreateInfoItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCreateInfoItem> _parser = new pb::MessageParser<PlayerCreateInfoItem>(() => new PlayerCreateInfoItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCreateInfoItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoItem(PlayerCreateInfoItem other) : this() {
      race_ = other.race_;
      class_ = other.class_;
      itemid_ = other.itemid_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoItem Clone() {
      return new PlayerCreateInfoItem(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private uint race_;
    /// <summary>
    /// Race of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 2;
    private uint class_;
    /// <summary>
    /// Class of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "itemid" field.</summary>
    public const int ItemidFieldNumber = 3;
    private uint itemid_;
    /// <summary>
    /// Item identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Itemid {
      get { return itemid_; }
      set {
        itemid_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private uint amount_;
    /// <summary>
    /// Amount of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateInfoItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCreateInfoItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Race != other.Race) return false;
      if (Class != other.Class) return false;
      if (Itemid != other.Itemid) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Itemid != 0) hash ^= Itemid.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Itemid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Itemid);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Itemid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Itemid);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Itemid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Itemid);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCreateInfoItem other) {
      if (other == null) {
        return;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Itemid != 0) {
        Itemid = other.Itemid;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Itemid = input.ReadUInt32();
            break;
          }
          case 32: {
            Amount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Itemid = input.ReadUInt32();
            break;
          }
          case 32: {
            Amount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerCreateInfoSpell : pb::IMessage<PlayerCreateInfoSpell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCreateInfoSpell> _parser = new pb::MessageParser<PlayerCreateInfoSpell>(() => new PlayerCreateInfoSpell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCreateInfoSpell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoSpell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoSpell(PlayerCreateInfoSpell other) : this() {
      race_ = other.race_;
      class_ = other.class_;
      spell_ = other.spell_;
      note_ = other.note_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCreateInfoSpell Clone() {
      return new PlayerCreateInfoSpell(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private uint race_;
    /// <summary>
    /// Race of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 2;
    private uint class_;
    /// <summary>
    /// Class of the player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "Spell" field.</summary>
    public const int SpellFieldNumber = 3;
    private uint spell_;
    /// <summary>
    /// Spell identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "Note" field.</summary>
    public const int NoteFieldNumber = 4;
    private string note_ = "";
    /// <summary>
    /// Optional note about the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Note {
      get { return note_; }
      set {
        note_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCreateInfoSpell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCreateInfoSpell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Race != other.Race) return false;
      if (Class != other.Class) return false;
      if (Spell != other.Spell) return false;
      if (Note != other.Note) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Note.Length != 0) hash ^= Note.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Spell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spell);
      }
      if (Note.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Note);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Spell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Spell);
      }
      if (Note.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Note);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Note.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Note);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCreateInfoSpell other) {
      if (other == null) {
        return;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Note.Length != 0) {
        Note = other.Note;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Spell = input.ReadUInt32();
            break;
          }
          case 34: {
            Note = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Spell = input.ReadUInt32();
            break;
          }
          case 34: {
            Note = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerClassLevelStats : pb::IMessage<PlayerClassLevelStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerClassLevelStats> _parser = new pb::MessageParser<PlayerClassLevelStats>(() => new PlayerClassLevelStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerClassLevelStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerClassLevelStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerClassLevelStats(PlayerClassLevelStats other) : this() {
      class_ = other.class_;
      level_ = other.level_;
      basehp_ = other.basehp_;
      basemana_ = other.basemana_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerClassLevelStats Clone() {
      return new PlayerClassLevelStats(this);
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 1;
    private uint class_;
    /// <summary>
    /// Class identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private uint level_;
    /// <summary>
    /// Level of the character
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "basehp" field.</summary>
    public const int BasehpFieldNumber = 3;
    private uint basehp_;
    /// <summary>
    /// Base health points for the level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Basehp {
      get { return basehp_; }
      set {
        basehp_ = value;
      }
    }

    /// <summary>Field number for the "basemana" field.</summary>
    public const int BasemanaFieldNumber = 4;
    private uint basemana_;
    /// <summary>
    /// Base mana points for the level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Basemana {
      get { return basemana_; }
      set {
        basemana_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerClassLevelStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerClassLevelStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Class != other.Class) return false;
      if (Level != other.Level) return false;
      if (Basehp != other.Basehp) return false;
      if (Basemana != other.Basemana) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Basehp != 0) hash ^= Basehp.GetHashCode();
      if (Basemana != 0) hash ^= Basemana.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Class != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Class);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (Basehp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Basehp);
      }
      if (Basemana != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Basemana);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Class != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Class);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Level);
      }
      if (Basehp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Basehp);
      }
      if (Basemana != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Basemana);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Basehp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Basehp);
      }
      if (Basemana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Basemana);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerClassLevelStats other) {
      if (other == null) {
        return;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Basehp != 0) {
        Basehp = other.Basehp;
      }
      if (other.Basemana != 0) {
        Basemana = other.Basemana;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Class = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
          case 24: {
            Basehp = input.ReadUInt32();
            break;
          }
          case 32: {
            Basemana = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Class = input.ReadUInt32();
            break;
          }
          case 16: {
            Level = input.ReadUInt32();
            break;
          }
          case 24: {
            Basehp = input.ReadUInt32();
            break;
          }
          case 32: {
            Basemana = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerFactionChangeItems : pb::IMessage<PlayerFactionChangeItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFactionChangeItems> _parser = new pb::MessageParser<PlayerFactionChangeItems>(() => new PlayerFactionChangeItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFactionChangeItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeItems(PlayerFactionChangeItems other) : this() {
      allianceId_ = other.allianceId_;
      hordeId_ = other.hordeId_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeItems Clone() {
      return new PlayerFactionChangeItems(this);
    }

    /// <summary>Field number for the "alliance_id" field.</summary>
    public const int AllianceIdFieldNumber = 1;
    private int allianceId_;
    /// <summary>
    /// Item identifier for the Alliance faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllianceId {
      get { return allianceId_; }
      set {
        allianceId_ = value;
      }
    }

    /// <summary>Field number for the "horde_id" field.</summary>
    public const int HordeIdFieldNumber = 2;
    private int hordeId_;
    /// <summary>
    /// Item identifier for the Horde faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HordeId {
      get { return hordeId_; }
      set {
        hordeId_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    /// <summary>
    /// Description or comment for the faction change item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFactionChangeItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFactionChangeItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AllianceId != other.AllianceId) return false;
      if (HordeId != other.HordeId) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AllianceId != 0) hash ^= AllianceId.GetHashCode();
      if (HordeId != 0) hash ^= HordeId.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AllianceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllianceId);
      }
      if (HordeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HordeId);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFactionChangeItems other) {
      if (other == null) {
        return;
      }
      if (other.AllianceId != 0) {
        AllianceId = other.AllianceId;
      }
      if (other.HordeId != 0) {
        HordeId = other.HordeId;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerFactionChangeMounts : pb::IMessage<PlayerFactionChangeMounts>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFactionChangeMounts> _parser = new pb::MessageParser<PlayerFactionChangeMounts>(() => new PlayerFactionChangeMounts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFactionChangeMounts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeMounts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeMounts(PlayerFactionChangeMounts other) : this() {
      raceId_ = other.raceId_;
      mountNum_ = other.mountNum_;
      itemEntry_ = other.itemEntry_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeMounts Clone() {
      return new PlayerFactionChangeMounts(this);
    }

    /// <summary>Field number for the "RaceId" field.</summary>
    public const int RaceIdFieldNumber = 1;
    private int raceId_;
    /// <summary>
    /// Race identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RaceId {
      get { return raceId_; }
      set {
        raceId_ = value;
      }
    }

    /// <summary>Field number for the "MountNum" field.</summary>
    public const int MountNumFieldNumber = 2;
    private int mountNum_;
    /// <summary>
    /// Mount number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MountNum {
      get { return mountNum_; }
      set {
        mountNum_ = value;
      }
    }

    /// <summary>Field number for the "ItemEntry" field.</summary>
    public const int ItemEntryFieldNumber = 3;
    private int itemEntry_;
    /// <summary>
    /// Item identifier for the mount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemEntry {
      get { return itemEntry_; }
      set {
        itemEntry_ = value;
      }
    }

    /// <summary>Field number for the "Comment" field.</summary>
    public const int CommentFieldNumber = 4;
    private string comment_ = "";
    /// <summary>
    /// Description or comment about the mount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFactionChangeMounts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFactionChangeMounts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RaceId != other.RaceId) return false;
      if (MountNum != other.MountNum) return false;
      if (ItemEntry != other.ItemEntry) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RaceId != 0) hash ^= RaceId.GetHashCode();
      if (MountNum != 0) hash ^= MountNum.GetHashCode();
      if (ItemEntry != 0) hash ^= ItemEntry.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RaceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RaceId);
      }
      if (MountNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MountNum);
      }
      if (ItemEntry != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemEntry);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RaceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RaceId);
      }
      if (MountNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MountNum);
      }
      if (ItemEntry != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemEntry);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaceId);
      }
      if (MountNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MountNum);
      }
      if (ItemEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemEntry);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFactionChangeMounts other) {
      if (other == null) {
        return;
      }
      if (other.RaceId != 0) {
        RaceId = other.RaceId;
      }
      if (other.MountNum != 0) {
        MountNum = other.MountNum;
      }
      if (other.ItemEntry != 0) {
        ItemEntry = other.ItemEntry;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RaceId = input.ReadInt32();
            break;
          }
          case 16: {
            MountNum = input.ReadInt32();
            break;
          }
          case 24: {
            ItemEntry = input.ReadInt32();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RaceId = input.ReadInt32();
            break;
          }
          case 16: {
            MountNum = input.ReadInt32();
            break;
          }
          case 24: {
            ItemEntry = input.ReadInt32();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerFactionChangeQuests : pb::IMessage<PlayerFactionChangeQuests>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFactionChangeQuests> _parser = new pb::MessageParser<PlayerFactionChangeQuests>(() => new PlayerFactionChangeQuests());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFactionChangeQuests> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeQuests() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeQuests(PlayerFactionChangeQuests other) : this() {
      allianceId_ = other.allianceId_;
      hordeId_ = other.hordeId_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeQuests Clone() {
      return new PlayerFactionChangeQuests(this);
    }

    /// <summary>Field number for the "alliance_id" field.</summary>
    public const int AllianceIdFieldNumber = 1;
    private int allianceId_;
    /// <summary>
    /// Quest identifier for the Alliance faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllianceId {
      get { return allianceId_; }
      set {
        allianceId_ = value;
      }
    }

    /// <summary>Field number for the "horde_id" field.</summary>
    public const int HordeIdFieldNumber = 2;
    private int hordeId_;
    /// <summary>
    /// Quest identifier for the Horde faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HordeId {
      get { return hordeId_; }
      set {
        hordeId_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    /// <summary>
    /// Description or comment about the faction change quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFactionChangeQuests);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFactionChangeQuests other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AllianceId != other.AllianceId) return false;
      if (HordeId != other.HordeId) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AllianceId != 0) hash ^= AllianceId.GetHashCode();
      if (HordeId != 0) hash ^= HordeId.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AllianceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllianceId);
      }
      if (HordeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HordeId);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFactionChangeQuests other) {
      if (other == null) {
        return;
      }
      if (other.AllianceId != 0) {
        AllianceId = other.AllianceId;
      }
      if (other.HordeId != 0) {
        HordeId = other.HordeId;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerFactionChangeReputations : pb::IMessage<PlayerFactionChangeReputations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFactionChangeReputations> _parser = new pb::MessageParser<PlayerFactionChangeReputations>(() => new PlayerFactionChangeReputations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFactionChangeReputations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeReputations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeReputations(PlayerFactionChangeReputations other) : this() {
      allianceId_ = other.allianceId_;
      hordeId_ = other.hordeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeReputations Clone() {
      return new PlayerFactionChangeReputations(this);
    }

    /// <summary>Field number for the "alliance_id" field.</summary>
    public const int AllianceIdFieldNumber = 1;
    private int allianceId_;
    /// <summary>
    /// Reputation identifier for the Alliance faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllianceId {
      get { return allianceId_; }
      set {
        allianceId_ = value;
      }
    }

    /// <summary>Field number for the "horde_id" field.</summary>
    public const int HordeIdFieldNumber = 2;
    private int hordeId_;
    /// <summary>
    /// Reputation identifier for the Horde faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HordeId {
      get { return hordeId_; }
      set {
        hordeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFactionChangeReputations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFactionChangeReputations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AllianceId != other.AllianceId) return false;
      if (HordeId != other.HordeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AllianceId != 0) hash ^= AllianceId.GetHashCode();
      if (HordeId != 0) hash ^= HordeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AllianceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllianceId);
      }
      if (HordeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HordeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFactionChangeReputations other) {
      if (other == null) {
        return;
      }
      if (other.AllianceId != 0) {
        AllianceId = other.AllianceId;
      }
      if (other.HordeId != 0) {
        HordeId = other.HordeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerFactionChangeSpells : pb::IMessage<PlayerFactionChangeSpells>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerFactionChangeSpells> _parser = new pb::MessageParser<PlayerFactionChangeSpells>(() => new PlayerFactionChangeSpells());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerFactionChangeSpells> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeSpells() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeSpells(PlayerFactionChangeSpells other) : this() {
      allianceId_ = other.allianceId_;
      hordeId_ = other.hordeId_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerFactionChangeSpells Clone() {
      return new PlayerFactionChangeSpells(this);
    }

    /// <summary>Field number for the "alliance_id" field.</summary>
    public const int AllianceIdFieldNumber = 1;
    private int allianceId_;
    /// <summary>
    /// Spell identifier for the Alliance faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllianceId {
      get { return allianceId_; }
      set {
        allianceId_ = value;
      }
    }

    /// <summary>Field number for the "horde_id" field.</summary>
    public const int HordeIdFieldNumber = 2;
    private int hordeId_;
    /// <summary>
    /// Spell identifier for the Horde faction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HordeId {
      get { return hordeId_; }
      set {
        hordeId_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    /// <summary>
    /// Description or comment about the faction change spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerFactionChangeSpells);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerFactionChangeSpells other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AllianceId != other.AllianceId) return false;
      if (HordeId != other.HordeId) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AllianceId != 0) hash ^= AllianceId.GetHashCode();
      if (HordeId != 0) hash ^= HordeId.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AllianceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AllianceId);
      }
      if (HordeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HordeId);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AllianceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllianceId);
      }
      if (HordeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HordeId);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerFactionChangeSpells other) {
      if (other == null) {
        return;
      }
      if (other.AllianceId != 0) {
        AllianceId = other.AllianceId;
      }
      if (other.HordeId != 0) {
        HordeId = other.HordeId;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AllianceId = input.ReadInt32();
            break;
          }
          case 16: {
            HordeId = input.ReadInt32();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerLevelStats : pb::IMessage<PlayerLevelStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerLevelStats> _parser = new pb::MessageParser<PlayerLevelStats>(() => new PlayerLevelStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerLevelStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelStats(PlayerLevelStats other) : this() {
      race_ = other.race_;
      class_ = other.class_;
      level_ = other.level_;
      str_ = other.str_;
      agi_ = other.agi_;
      sta_ = other.sta_;
      inte_ = other.inte_;
      spi_ = other.spi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerLevelStats Clone() {
      return new PlayerLevelStats(this);
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 1;
    private uint race_;
    /// <summary>
    /// Race identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "class" field.</summary>
    public const int ClassFieldNumber = 2;
    private uint class_;
    /// <summary>
    /// Class identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Class {
      get { return class_; }
      set {
        class_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private uint level_;
    /// <summary>
    /// Level of the character
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 4;
    private uint str_;
    /// <summary>
    /// Strength stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "agi" field.</summary>
    public const int AgiFieldNumber = 5;
    private uint agi_;
    /// <summary>
    /// Agility stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Agi {
      get { return agi_; }
      set {
        agi_ = value;
      }
    }

    /// <summary>Field number for the "sta" field.</summary>
    public const int StaFieldNumber = 6;
    private uint sta_;
    /// <summary>
    /// Stamina stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sta {
      get { return sta_; }
      set {
        sta_ = value;
      }
    }

    /// <summary>Field number for the "inte" field.</summary>
    public const int InteFieldNumber = 7;
    private uint inte_;
    /// <summary>
    /// Intelligence stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Inte {
      get { return inte_; }
      set {
        inte_ = value;
      }
    }

    /// <summary>Field number for the "spi" field.</summary>
    public const int SpiFieldNumber = 8;
    private uint spi_;
    /// <summary>
    /// Spirit stat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spi {
      get { return spi_; }
      set {
        spi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerLevelStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerLevelStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Race != other.Race) return false;
      if (Class != other.Class) return false;
      if (Level != other.Level) return false;
      if (Str != other.Str) return false;
      if (Agi != other.Agi) return false;
      if (Sta != other.Sta) return false;
      if (Inte != other.Inte) return false;
      if (Spi != other.Spi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Class != 0) hash ^= Class.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Agi != 0) hash ^= Agi.GetHashCode();
      if (Sta != 0) hash ^= Sta.GetHashCode();
      if (Inte != 0) hash ^= Inte.GetHashCode();
      if (Spi != 0) hash ^= Spi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (Str != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Str);
      }
      if (Agi != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Agi);
      }
      if (Sta != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Sta);
      }
      if (Inte != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Inte);
      }
      if (Spi != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Spi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Race != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Race);
      }
      if (Class != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Class);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (Str != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Str);
      }
      if (Agi != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Agi);
      }
      if (Sta != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Sta);
      }
      if (Inte != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Inte);
      }
      if (Spi != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Spi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Class != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Class);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Str);
      }
      if (Agi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Agi);
      }
      if (Sta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sta);
      }
      if (Inte != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Inte);
      }
      if (Spi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerLevelStats other) {
      if (other == null) {
        return;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Class != 0) {
        Class = other.Class;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Agi != 0) {
        Agi = other.Agi;
      }
      if (other.Sta != 0) {
        Sta = other.Sta;
      }
      if (other.Inte != 0) {
        Inte = other.Inte;
      }
      if (other.Spi != 0) {
        Spi = other.Spi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            Str = input.ReadUInt32();
            break;
          }
          case 40: {
            Agi = input.ReadUInt32();
            break;
          }
          case 48: {
            Sta = input.ReadUInt32();
            break;
          }
          case 56: {
            Inte = input.ReadUInt32();
            break;
          }
          case 64: {
            Spi = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Race = input.ReadUInt32();
            break;
          }
          case 16: {
            Class = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            Str = input.ReadUInt32();
            break;
          }
          case 40: {
            Agi = input.ReadUInt32();
            break;
          }
          case 48: {
            Sta = input.ReadUInt32();
            break;
          }
          case 56: {
            Inte = input.ReadUInt32();
            break;
          }
          case 64: {
            Spi = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerXpForLevel : pb::IMessage<PlayerXpForLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerXpForLevel> _parser = new pb::MessageParser<PlayerXpForLevel>(() => new PlayerXpForLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerXpForLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerXpForLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerXpForLevel(PlayerXpForLevel other) : this() {
      lvl_ = other.lvl_;
      xpForNextLevel_ = other.xpForNextLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerXpForLevel Clone() {
      return new PlayerXpForLevel(this);
    }

    /// <summary>Field number for the "lvl" field.</summary>
    public const int LvlFieldNumber = 1;
    private uint lvl_;
    /// <summary>
    /// Level of the character
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Lvl {
      get { return lvl_; }
      set {
        lvl_ = value;
      }
    }

    /// <summary>Field number for the "xp_for_next_level" field.</summary>
    public const int XpForNextLevelFieldNumber = 2;
    private uint xpForNextLevel_;
    /// <summary>
    /// Experience required to reach the next level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint XpForNextLevel {
      get { return xpForNextLevel_; }
      set {
        xpForNextLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerXpForLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerXpForLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lvl != other.Lvl) return false;
      if (XpForNextLevel != other.XpForNextLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Lvl != 0) hash ^= Lvl.GetHashCode();
      if (XpForNextLevel != 0) hash ^= XpForNextLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Lvl != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Lvl);
      }
      if (XpForNextLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(XpForNextLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Lvl != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Lvl);
      }
      if (XpForNextLevel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(XpForNextLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Lvl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lvl);
      }
      if (XpForNextLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpForNextLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerXpForLevel other) {
      if (other == null) {
        return;
      }
      if (other.Lvl != 0) {
        Lvl = other.Lvl;
      }
      if (other.XpForNextLevel != 0) {
        XpForNextLevel = other.XpForNextLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lvl = input.ReadUInt32();
            break;
          }
          case 16: {
            XpForNextLevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Lvl = input.ReadUInt32();
            break;
          }
          case 16: {
            XpForNextLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PointsOfInterest : pb::IMessage<PointsOfInterest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointsOfInterest> _parser = new pb::MessageParser<PointsOfInterest>(() => new PointsOfInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PointsOfInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsOfInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsOfInterest(PointsOfInterest other) : this() {
      entry_ = other.entry_;
      x_ = other.x_;
      y_ = other.y_;
      icon_ = other.icon_;
      flags_ = other.flags_;
      data_ = other.data_;
      iconName_ = other.iconName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsOfInterest Clone() {
      return new PointsOfInterest(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Identifier for the point of interest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    /// <summary>
    /// X coordinate of the point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    /// <summary>
    /// Y coordinate of the point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private uint icon_;
    /// <summary>
    /// Icon identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Icon {
      get { return icon_; }
      set {
        icon_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private uint data_;
    /// <summary>
    /// Additional data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "icon_name" field.</summary>
    public const int IconNameFieldNumber = 7;
    private string iconName_ = "";
    /// <summary>
    /// Name of the icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconName {
      get { return iconName_; }
      set {
        iconName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PointsOfInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PointsOfInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (Icon != other.Icon) return false;
      if (Flags != other.Flags) return false;
      if (Data != other.Data) return false;
      if (IconName != other.IconName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Icon != 0) hash ^= Icon.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (Data != 0) hash ^= Data.GetHashCode();
      if (IconName.Length != 0) hash ^= IconName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Icon != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Icon);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (Data != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Data);
      }
      if (IconName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IconName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Icon != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Icon);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (Data != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Data);
      }
      if (IconName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IconName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Icon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Icon);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (Data != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Data);
      }
      if (IconName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PointsOfInterest other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Icon != 0) {
        Icon = other.Icon;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.Data != 0) {
        Data = other.Data;
      }
      if (other.IconName.Length != 0) {
        IconName = other.IconName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 32: {
            Icon = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            Data = input.ReadUInt32();
            break;
          }
          case 58: {
            IconName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 32: {
            Icon = input.ReadUInt32();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            Data = input.ReadUInt32();
            break;
          }
          case 58: {
            IconName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolCreature : pb::IMessage<PoolCreature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolCreature> _parser = new pb::MessageParser<PoolCreature>(() => new PoolCreature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolCreature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreature(PoolCreature other) : this() {
      guid_ = other.guid_;
      poolEntry_ = other.poolEntry_;
      chance_ = other.chance_;
      description_ = other.description_;
      flags_ = other.flags_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreature Clone() {
      return new PoolCreature(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Unique identifier for the pool creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "pool_entry" field.</summary>
    public const int PoolEntryFieldNumber = 2;
    private uint poolEntry_;
    /// <summary>
    /// Pool entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PoolEntry {
      get { return poolEntry_; }
      set {
        poolEntry_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of appearance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the pool creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool creature (e.g., FLAG_SPAWN_ENABLE_IF_WORLD_POP_OVER_BLIZZLIKE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 6;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 7;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolCreature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolCreature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (PoolEntry != other.PoolEntry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (PoolEntry != 0) hash ^= PoolEntry.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (PoolEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PoolEntry);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolCreature other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.PoolEntry != 0) {
        PoolEntry = other.PoolEntry;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolCreatureTemplate : pb::IMessage<PoolCreatureTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolCreatureTemplate> _parser = new pb::MessageParser<PoolCreatureTemplate>(() => new PoolCreatureTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolCreatureTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreatureTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreatureTemplate(PoolCreatureTemplate other) : this() {
      id_ = other.id_;
      poolEntry_ = other.poolEntry_;
      chance_ = other.chance_;
      description_ = other.description_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolCreatureTemplate Clone() {
      return new PoolCreatureTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the pool creature template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pool_entry" field.</summary>
    public const int PoolEntryFieldNumber = 2;
    private uint poolEntry_;
    /// <summary>
    /// Pool entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PoolEntry {
      get { return poolEntry_; }
      set {
        poolEntry_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of appearance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the pool creature template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool creature template (e.g., FLAG_SPAWN_ENABLE_IF_WORLD_POP_OVER_BLIZZLIKE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolCreatureTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolCreatureTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PoolEntry != other.PoolEntry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PoolEntry != 0) hash ^= PoolEntry.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (PoolEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PoolEntry);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolCreatureTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PoolEntry != 0) {
        PoolEntry = other.PoolEntry;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolGameObject : pb::IMessage<PoolGameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolGameObject> _parser = new pb::MessageParser<PoolGameObject>(() => new PoolGameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolGameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObject(PoolGameObject other) : this() {
      guid_ = other.guid_;
      poolEntry_ = other.poolEntry_;
      chance_ = other.chance_;
      description_ = other.description_;
      flags_ = other.flags_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObject Clone() {
      return new PoolGameObject(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Unique identifier for the pool game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "pool_entry" field.</summary>
    public const int PoolEntryFieldNumber = 2;
    private uint poolEntry_;
    /// <summary>
    /// Pool entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PoolEntry {
      get { return poolEntry_; }
      set {
        poolEntry_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of appearance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the pool game object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool game object (e.g., FLAG_SPAWN_ENABLE_IF_WORLD_POP_OVER_BLIZZLIKE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 6;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 7;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolGameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolGameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (PoolEntry != other.PoolEntry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (PoolEntry != 0) hash ^= PoolEntry.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (PoolEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PoolEntry);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolGameObject other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.PoolEntry != 0) {
        PoolEntry = other.PoolEntry;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolGameObjectTemplate : pb::IMessage<PoolGameObjectTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolGameObjectTemplate> _parser = new pb::MessageParser<PoolGameObjectTemplate>(() => new PoolGameObjectTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolGameObjectTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObjectTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObjectTemplate(PoolGameObjectTemplate other) : this() {
      id_ = other.id_;
      poolEntry_ = other.poolEntry_;
      chance_ = other.chance_;
      description_ = other.description_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolGameObjectTemplate Clone() {
      return new PoolGameObjectTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the pool game object template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pool_entry" field.</summary>
    public const int PoolEntryFieldNumber = 2;
    private uint poolEntry_;
    /// <summary>
    /// Pool entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PoolEntry {
      get { return poolEntry_; }
      set {
        poolEntry_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of appearance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the pool game object template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool game object template (e.g., FLAG_SPAWN_ENABLE_IF_WORLD_POP_OVER_BLIZZLIKE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolGameObjectTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolGameObjectTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PoolEntry != other.PoolEntry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PoolEntry != 0) hash ^= PoolEntry.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (PoolEntry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PoolEntry);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (PoolEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PoolEntry);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolGameObjectTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PoolEntry != 0) {
        PoolEntry = other.PoolEntry;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            PoolEntry = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolPool : pb::IMessage<PoolPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolPool> _parser = new pb::MessageParser<PoolPool>(() => new PoolPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolPool(PoolPool other) : this() {
      poolId_ = other.poolId_;
      motherPool_ = other.motherPool_;
      chance_ = other.chance_;
      description_ = other.description_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolPool Clone() {
      return new PoolPool(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private uint poolId_;
    /// <summary>
    /// Unique identifier for the pool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "mother_pool" field.</summary>
    public const int MotherPoolFieldNumber = 2;
    private uint motherPool_;
    /// <summary>
    /// Identifier for the parent pool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MotherPool {
      get { return motherPool_; }
      set {
        motherPool_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance of appearance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the pool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 5;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool (e.g., FLAG_SPAWN_ENABLE_IF_WORLD_POP_OVER_BLIZZLIKE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoolId != other.PoolId) return false;
      if (MotherPool != other.MotherPool) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PoolId != 0) hash ^= PoolId.GetHashCode();
      if (MotherPool != 0) hash ^= MotherPool.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PoolId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PoolId);
      }
      if (MotherPool != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MotherPool);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PoolId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PoolId);
      }
      if (MotherPool != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MotherPool);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PoolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PoolId);
      }
      if (MotherPool != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MotherPool);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolPool other) {
      if (other == null) {
        return;
      }
      if (other.PoolId != 0) {
        PoolId = other.PoolId;
      }
      if (other.MotherPool != 0) {
        MotherPool = other.MotherPool;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PoolId = input.ReadUInt32();
            break;
          }
          case 16: {
            MotherPool = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PoolId = input.ReadUInt32();
            break;
          }
          case 16: {
            MotherPool = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Flags = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PoolTemplate : pb::IMessage<PoolTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolTemplate> _parser = new pb::MessageParser<PoolTemplate>(() => new PoolTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolTemplate(PoolTemplate other) : this() {
      entry_ = other.entry_;
      maxLimit_ = other.maxLimit_;
      description_ = other.description_;
      flags_ = other.flags_;
      instance_ = other.instance_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolTemplate Clone() {
      return new PoolTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Pool entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "max_limit" field.</summary>
    public const int MaxLimitFieldNumber = 2;
    private uint maxLimit_;
    /// <summary>
    /// Max number of objects (0 means no limit)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLimit {
      get { return maxLimit_; }
      set {
        maxLimit_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the pool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 4;
    private uint flags_;
    /// <summary>
    /// Flags related to the pool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 5;
    private uint instance_;
    /// <summary>
    /// Instance identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 6;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 7;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (MaxLimit != other.MaxLimit) return false;
      if (Description != other.Description) return false;
      if (Flags != other.Flags) return false;
      if (Instance != other.Instance) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (MaxLimit != 0) hash ^= MaxLimit.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (Instance != 0) hash ^= Instance.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (MaxLimit != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxLimit);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (Instance != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Instance);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (MaxLimit != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxLimit);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Flags != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Flags);
      }
      if (Instance != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Instance);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (MaxLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLimit);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
      }
      if (Instance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Instance);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.MaxLimit != 0) {
        MaxLimit = other.MaxLimit;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      if (other.Instance != 0) {
        Instance = other.Instance;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxLimit = input.ReadUInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
          case 40: {
            Instance = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxLimit = input.ReadUInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Flags = input.ReadUInt32();
            break;
          }
          case 40: {
            Instance = input.ReadUInt32();
            break;
          }
          case 48: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 56: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class QuestEndScripts : pb::IMessage<QuestEndScripts>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestEndScripts> _parser = new pb::MessageParser<QuestEndScripts>(() => new QuestEndScripts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestEndScripts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestEndScripts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestEndScripts(QuestEndScripts other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestEndScripts Clone() {
      return new QuestEndScripts(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Script ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before executing the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command to be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// Data long parameter 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Data long parameter 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Data long parameter 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Data long parameter 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// Target parameter 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Target parameter 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Target type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Data flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// Data integer 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Data integer 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Data integer 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Data integer 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments about the script
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestEndScripts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestEndScripts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestEndScripts other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class QuestGreeting : pb::IMessage<QuestGreeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestGreeting> _parser = new pb::MessageParser<QuestGreeting>(() => new QuestGreeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestGreeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestGreeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestGreeting(QuestGreeting other) : this() {
      entry_ = other.entry_;
      type_ = other.type_;
      contentDefault_ = other.contentDefault_;
      contentLoc1_ = other.contentLoc1_;
      contentLoc2_ = other.contentLoc2_;
      contentLoc3_ = other.contentLoc3_;
      contentLoc4_ = other.contentLoc4_;
      contentLoc5_ = other.contentLoc5_;
      contentLoc6_ = other.contentLoc6_;
      contentLoc7_ = other.contentLoc7_;
      contentLoc8_ = other.contentLoc8_;
      emote_ = other.emote_;
      emoteDelay_ = other.emoteDelay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestGreeting Clone() {
      return new QuestGreeting(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Quest entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    /// <summary>
    /// Greeting type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "content_default" field.</summary>
    public const int ContentDefaultFieldNumber = 3;
    private string contentDefault_ = "";
    /// <summary>
    /// Default content
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentDefault {
      get { return contentDefault_; }
      set {
        contentDefault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc1" field.</summary>
    public const int ContentLoc1FieldNumber = 4;
    private string contentLoc1_ = "";
    /// <summary>
    /// Content for locale 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc1 {
      get { return contentLoc1_; }
      set {
        contentLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc2" field.</summary>
    public const int ContentLoc2FieldNumber = 5;
    private string contentLoc2_ = "";
    /// <summary>
    /// Content for locale 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc2 {
      get { return contentLoc2_; }
      set {
        contentLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc3" field.</summary>
    public const int ContentLoc3FieldNumber = 6;
    private string contentLoc3_ = "";
    /// <summary>
    /// Content for locale 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc3 {
      get { return contentLoc3_; }
      set {
        contentLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc4" field.</summary>
    public const int ContentLoc4FieldNumber = 7;
    private string contentLoc4_ = "";
    /// <summary>
    /// Content for locale 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc4 {
      get { return contentLoc4_; }
      set {
        contentLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc5" field.</summary>
    public const int ContentLoc5FieldNumber = 8;
    private string contentLoc5_ = "";
    /// <summary>
    /// Content for locale 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc5 {
      get { return contentLoc5_; }
      set {
        contentLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc6" field.</summary>
    public const int ContentLoc6FieldNumber = 9;
    private string contentLoc6_ = "";
    /// <summary>
    /// Content for locale 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc6 {
      get { return contentLoc6_; }
      set {
        contentLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc7" field.</summary>
    public const int ContentLoc7FieldNumber = 10;
    private string contentLoc7_ = "";
    /// <summary>
    /// Content for locale 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc7 {
      get { return contentLoc7_; }
      set {
        contentLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc8" field.</summary>
    public const int ContentLoc8FieldNumber = 11;
    private string contentLoc8_ = "";
    /// <summary>
    /// Content for locale 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc8 {
      get { return contentLoc8_; }
      set {
        contentLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 12;
    private uint emote_;
    /// <summary>
    /// Emote ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "emote_delay" field.</summary>
    public const int EmoteDelayFieldNumber = 13;
    private uint emoteDelay_;
    /// <summary>
    /// Emote delay in milliseconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EmoteDelay {
      get { return emoteDelay_; }
      set {
        emoteDelay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestGreeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestGreeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Type != other.Type) return false;
      if (ContentDefault != other.ContentDefault) return false;
      if (ContentLoc1 != other.ContentLoc1) return false;
      if (ContentLoc2 != other.ContentLoc2) return false;
      if (ContentLoc3 != other.ContentLoc3) return false;
      if (ContentLoc4 != other.ContentLoc4) return false;
      if (ContentLoc5 != other.ContentLoc5) return false;
      if (ContentLoc6 != other.ContentLoc6) return false;
      if (ContentLoc7 != other.ContentLoc7) return false;
      if (ContentLoc8 != other.ContentLoc8) return false;
      if (Emote != other.Emote) return false;
      if (EmoteDelay != other.EmoteDelay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ContentDefault.Length != 0) hash ^= ContentDefault.GetHashCode();
      if (ContentLoc1.Length != 0) hash ^= ContentLoc1.GetHashCode();
      if (ContentLoc2.Length != 0) hash ^= ContentLoc2.GetHashCode();
      if (ContentLoc3.Length != 0) hash ^= ContentLoc3.GetHashCode();
      if (ContentLoc4.Length != 0) hash ^= ContentLoc4.GetHashCode();
      if (ContentLoc5.Length != 0) hash ^= ContentLoc5.GetHashCode();
      if (ContentLoc6.Length != 0) hash ^= ContentLoc6.GetHashCode();
      if (ContentLoc7.Length != 0) hash ^= ContentLoc7.GetHashCode();
      if (ContentLoc8.Length != 0) hash ^= ContentLoc8.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (EmoteDelay != 0) hash ^= EmoteDelay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ContentLoc8);
      }
      if (Emote != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Emote);
      }
      if (EmoteDelay != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(EmoteDelay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ContentLoc8);
      }
      if (Emote != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Emote);
      }
      if (EmoteDelay != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(EmoteDelay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (ContentDefault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc8);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (EmoteDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EmoteDelay);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestGreeting other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ContentDefault.Length != 0) {
        ContentDefault = other.ContentDefault;
      }
      if (other.ContentLoc1.Length != 0) {
        ContentLoc1 = other.ContentLoc1;
      }
      if (other.ContentLoc2.Length != 0) {
        ContentLoc2 = other.ContentLoc2;
      }
      if (other.ContentLoc3.Length != 0) {
        ContentLoc3 = other.ContentLoc3;
      }
      if (other.ContentLoc4.Length != 0) {
        ContentLoc4 = other.ContentLoc4;
      }
      if (other.ContentLoc5.Length != 0) {
        ContentLoc5 = other.ContentLoc5;
      }
      if (other.ContentLoc6.Length != 0) {
        ContentLoc6 = other.ContentLoc6;
      }
      if (other.ContentLoc7.Length != 0) {
        ContentLoc7 = other.ContentLoc7;
      }
      if (other.ContentLoc8.Length != 0) {
        ContentLoc8 = other.ContentLoc8;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.EmoteDelay != 0) {
        EmoteDelay = other.EmoteDelay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 26: {
            ContentDefault = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 90: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 96: {
            Emote = input.ReadUInt32();
            break;
          }
          case 104: {
            EmoteDelay = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 26: {
            ContentDefault = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 90: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 96: {
            Emote = input.ReadUInt32();
            break;
          }
          case 104: {
            EmoteDelay = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class QuestStartScripts : pb::IMessage<QuestStartScripts>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestStartScripts> _parser = new pb::MessageParser<QuestStartScripts>(() => new QuestStartScripts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestStartScripts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestStartScripts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestStartScripts(QuestStartScripts other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestStartScripts Clone() {
      return new QuestStartScripts(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Script ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before script execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command to execute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// Long data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Second long data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Third long data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Fourth long data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// First target parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Second target parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Type of target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Flags for data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// Integer data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Second integer data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Third integer data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Fourth integer data parameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments or description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestStartScripts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestStartScripts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestStartScripts other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class QuestTemplate : pb::IMessage<QuestTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestTemplate> _parser = new pb::MessageParser<QuestTemplate>(() => new QuestTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestTemplate(QuestTemplate other) : this() {
      entry_ = other.entry_;
      patch_ = other.patch_;
      method_ = other.method_;
      zoneOrSort_ = other.zoneOrSort_;
      minLevel_ = other.minLevel_;
      maxLevel_ = other.maxLevel_;
      questLevel_ = other.questLevel_;
      type_ = other.type_;
      requiredClasses_ = other.requiredClasses_;
      requiredRaces_ = other.requiredRaces_;
      requiredSkill_ = other.requiredSkill_;
      requiredSkillValue_ = other.requiredSkillValue_;
      repObjectiveFaction_ = other.repObjectiveFaction_;
      repObjectiveValue_ = other.repObjectiveValue_;
      requiredMinRepFaction_ = other.requiredMinRepFaction_;
      requiredMinRepValue_ = other.requiredMinRepValue_;
      requiredMaxRepFaction_ = other.requiredMaxRepFaction_;
      requiredMaxRepValue_ = other.requiredMaxRepValue_;
      suggestedPlayers_ = other.suggestedPlayers_;
      limitTime_ = other.limitTime_;
      questFlags_ = other.questFlags_;
      specialFlags_ = other.specialFlags_;
      prevQuestId_ = other.prevQuestId_;
      nextQuestId_ = other.nextQuestId_;
      exclusiveGroup_ = other.exclusiveGroup_;
      nextQuestInChain_ = other.nextQuestInChain_;
      srcItemId_ = other.srcItemId_;
      srcItemCount_ = other.srcItemCount_;
      srcSpell_ = other.srcSpell_;
      title_ = other.title_;
      details_ = other.details_;
      objectives_ = other.objectives_;
      offerRewardText_ = other.offerRewardText_;
      requestItemsText_ = other.requestItemsText_;
      endText_ = other.endText_;
      objectiveText1_ = other.objectiveText1_;
      objectiveText2_ = other.objectiveText2_;
      objectiveText3_ = other.objectiveText3_;
      objectiveText4_ = other.objectiveText4_;
      reqItemId1_ = other.reqItemId1_;
      reqItemId2_ = other.reqItemId2_;
      reqItemId3_ = other.reqItemId3_;
      reqItemId4_ = other.reqItemId4_;
      reqItemCount1_ = other.reqItemCount1_;
      reqItemCount2_ = other.reqItemCount2_;
      reqItemCount3_ = other.reqItemCount3_;
      reqItemCount4_ = other.reqItemCount4_;
      reqSourceId1_ = other.reqSourceId1_;
      reqSourceId2_ = other.reqSourceId2_;
      reqSourceId3_ = other.reqSourceId3_;
      reqSourceId4_ = other.reqSourceId4_;
      reqSourceCount1_ = other.reqSourceCount1_;
      reqSourceCount2_ = other.reqSourceCount2_;
      reqSourceCount3_ = other.reqSourceCount3_;
      reqSourceCount4_ = other.reqSourceCount4_;
      reqCreatureOrGoId1_ = other.reqCreatureOrGoId1_;
      reqCreatureOrGoId2_ = other.reqCreatureOrGoId2_;
      reqCreatureOrGoId3_ = other.reqCreatureOrGoId3_;
      reqCreatureOrGoId4_ = other.reqCreatureOrGoId4_;
      reqCreatureOrGoCount1_ = other.reqCreatureOrGoCount1_;
      reqCreatureOrGoCount2_ = other.reqCreatureOrGoCount2_;
      reqCreatureOrGoCount3_ = other.reqCreatureOrGoCount3_;
      reqCreatureOrGoCount4_ = other.reqCreatureOrGoCount4_;
      reqSpellCast1_ = other.reqSpellCast1_;
      reqSpellCast2_ = other.reqSpellCast2_;
      reqSpellCast3_ = other.reqSpellCast3_;
      reqSpellCast4_ = other.reqSpellCast4_;
      rewChoiceItemId1_ = other.rewChoiceItemId1_;
      rewChoiceItemId2_ = other.rewChoiceItemId2_;
      rewChoiceItemId3_ = other.rewChoiceItemId3_;
      rewChoiceItemId4_ = other.rewChoiceItemId4_;
      rewChoiceItemId5_ = other.rewChoiceItemId5_;
      rewChoiceItemId6_ = other.rewChoiceItemId6_;
      rewChoiceItemCount1_ = other.rewChoiceItemCount1_;
      rewChoiceItemCount2_ = other.rewChoiceItemCount2_;
      rewChoiceItemCount3_ = other.rewChoiceItemCount3_;
      rewChoiceItemCount4_ = other.rewChoiceItemCount4_;
      rewChoiceItemCount5_ = other.rewChoiceItemCount5_;
      rewChoiceItemCount6_ = other.rewChoiceItemCount6_;
      rewItemId1_ = other.rewItemId1_;
      rewItemId2_ = other.rewItemId2_;
      rewItemId3_ = other.rewItemId3_;
      rewItemId4_ = other.rewItemId4_;
      rewItemCount1_ = other.rewItemCount1_;
      rewItemCount2_ = other.rewItemCount2_;
      rewItemCount3_ = other.rewItemCount3_;
      rewItemCount4_ = other.rewItemCount4_;
      rewRepFaction1_ = other.rewRepFaction1_;
      rewRepFaction2_ = other.rewRepFaction2_;
      rewRepFaction3_ = other.rewRepFaction3_;
      rewRepFaction4_ = other.rewRepFaction4_;
      rewRepFaction5_ = other.rewRepFaction5_;
      rewRepValue1_ = other.rewRepValue1_;
      rewRepValue2_ = other.rewRepValue2_;
      rewRepValue3_ = other.rewRepValue3_;
      rewRepValue4_ = other.rewRepValue4_;
      rewRepValue5_ = other.rewRepValue5_;
      rewOrReqMoney_ = other.rewOrReqMoney_;
      rewMoneyMaxLevel_ = other.rewMoneyMaxLevel_;
      rewSpell_ = other.rewSpell_;
      rewSpellCast_ = other.rewSpellCast_;
      rewMailTemplateId_ = other.rewMailTemplateId_;
      rewMailDelaySecs_ = other.rewMailDelaySecs_;
      pointMapId_ = other.pointMapId_;
      pointX_ = other.pointX_;
      pointY_ = other.pointY_;
      pointOpt_ = other.pointOpt_;
      detailsEmote1_ = other.detailsEmote1_;
      detailsEmote2_ = other.detailsEmote2_;
      detailsEmote3_ = other.detailsEmote3_;
      detailsEmote4_ = other.detailsEmote4_;
      detailsEmoteDelay1_ = other.detailsEmoteDelay1_;
      detailsEmoteDelay2_ = other.detailsEmoteDelay2_;
      detailsEmoteDelay3_ = other.detailsEmoteDelay3_;
      detailsEmoteDelay4_ = other.detailsEmoteDelay4_;
      incompleteEmote_ = other.incompleteEmote_;
      completeEmote_ = other.completeEmote_;
      offerRewardEmote1_ = other.offerRewardEmote1_;
      offerRewardEmote2_ = other.offerRewardEmote2_;
      offerRewardEmote3_ = other.offerRewardEmote3_;
      offerRewardEmote4_ = other.offerRewardEmote4_;
      offerRewardEmoteDelay1_ = other.offerRewardEmoteDelay1_;
      offerRewardEmoteDelay2_ = other.offerRewardEmoteDelay2_;
      offerRewardEmoteDelay3_ = other.offerRewardEmoteDelay3_;
      offerRewardEmoteDelay4_ = other.offerRewardEmoteDelay4_;
      startScript_ = other.startScript_;
      completeScript_ = other.completeScript_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestTemplate Clone() {
      return new QuestTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "patch" field.</summary>
    public const int PatchFieldNumber = 2;
    private uint patch_;
    /// <summary>
    /// Patch version of the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 3;
    private uint method_;
    /// <summary>
    /// Method of the quest (e.g., quest completion method)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    /// <summary>Field number for the "zone_or_sort" field.</summary>
    public const int ZoneOrSortFieldNumber = 4;
    private int zoneOrSort_;
    /// <summary>
    /// Zone or sort ID (can represent a zone or sorting group)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ZoneOrSort {
      get { return zoneOrSort_; }
      set {
        zoneOrSort_ = value;
      }
    }

    /// <summary>Field number for the "min_level" field.</summary>
    public const int MinLevelFieldNumber = 5;
    private uint minLevel_;
    /// <summary>
    /// Minimum player level required for the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinLevel {
      get { return minLevel_; }
      set {
        minLevel_ = value;
      }
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 6;
    private uint maxLevel_;
    /// <summary>
    /// Maximum player level for the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "quest_level" field.</summary>
    public const int QuestLevelFieldNumber = 7;
    private uint questLevel_;
    /// <summary>
    /// Level of the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestLevel {
      get { return questLevel_; }
      set {
        questLevel_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 8;
    private uint type_;
    /// <summary>
    /// Type of quest (e.g., normal, elite, dungeon, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "required_classes" field.</summary>
    public const int RequiredClassesFieldNumber = 9;
    private uint requiredClasses_;
    /// <summary>
    /// Required classes to start the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredClasses {
      get { return requiredClasses_; }
      set {
        requiredClasses_ = value;
      }
    }

    /// <summary>Field number for the "required_races" field.</summary>
    public const int RequiredRacesFieldNumber = 10;
    private uint requiredRaces_;
    /// <summary>
    /// Required races to start the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredRaces {
      get { return requiredRaces_; }
      set {
        requiredRaces_ = value;
      }
    }

    /// <summary>Field number for the "required_skill" field.</summary>
    public const int RequiredSkillFieldNumber = 11;
    private uint requiredSkill_;
    /// <summary>
    /// Required skill to start the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSkill {
      get { return requiredSkill_; }
      set {
        requiredSkill_ = value;
      }
    }

    /// <summary>Field number for the "required_skill_value" field.</summary>
    public const int RequiredSkillValueFieldNumber = 12;
    private uint requiredSkillValue_;
    /// <summary>
    /// Required skill value to start the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSkillValue {
      get { return requiredSkillValue_; }
      set {
        requiredSkillValue_ = value;
      }
    }

    /// <summary>Field number for the "rep_objective_faction" field.</summary>
    public const int RepObjectiveFactionFieldNumber = 13;
    private uint repObjectiveFaction_;
    /// <summary>
    /// Reputation objective faction ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RepObjectiveFaction {
      get { return repObjectiveFaction_; }
      set {
        repObjectiveFaction_ = value;
      }
    }

    /// <summary>Field number for the "rep_objective_value" field.</summary>
    public const int RepObjectiveValueFieldNumber = 14;
    private int repObjectiveValue_;
    /// <summary>
    /// Reputation objective value required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RepObjectiveValue {
      get { return repObjectiveValue_; }
      set {
        repObjectiveValue_ = value;
      }
    }

    /// <summary>Field number for the "required_min_rep_faction" field.</summary>
    public const int RequiredMinRepFactionFieldNumber = 15;
    private uint requiredMinRepFaction_;
    /// <summary>
    /// Minimum reputation faction required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredMinRepFaction {
      get { return requiredMinRepFaction_; }
      set {
        requiredMinRepFaction_ = value;
      }
    }

    /// <summary>Field number for the "required_min_rep_value" field.</summary>
    public const int RequiredMinRepValueFieldNumber = 16;
    private int requiredMinRepValue_;
    /// <summary>
    /// Minimum reputation value required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredMinRepValue {
      get { return requiredMinRepValue_; }
      set {
        requiredMinRepValue_ = value;
      }
    }

    /// <summary>Field number for the "required_max_rep_faction" field.</summary>
    public const int RequiredMaxRepFactionFieldNumber = 17;
    private uint requiredMaxRepFaction_;
    /// <summary>
    /// Maximum reputation faction allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredMaxRepFaction {
      get { return requiredMaxRepFaction_; }
      set {
        requiredMaxRepFaction_ = value;
      }
    }

    /// <summary>Field number for the "required_max_rep_value" field.</summary>
    public const int RequiredMaxRepValueFieldNumber = 18;
    private int requiredMaxRepValue_;
    /// <summary>
    /// Maximum reputation value allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredMaxRepValue {
      get { return requiredMaxRepValue_; }
      set {
        requiredMaxRepValue_ = value;
      }
    }

    /// <summary>Field number for the "suggested_players" field.</summary>
    public const int SuggestedPlayersFieldNumber = 19;
    private uint suggestedPlayers_;
    /// <summary>
    /// Suggested number of players for the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SuggestedPlayers {
      get { return suggestedPlayers_; }
      set {
        suggestedPlayers_ = value;
      }
    }

    /// <summary>Field number for the "limit_time" field.</summary>
    public const int LimitTimeFieldNumber = 20;
    private uint limitTime_;
    /// <summary>
    /// Time limit for the quest in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LimitTime {
      get { return limitTime_; }
      set {
        limitTime_ = value;
      }
    }

    /// <summary>Field number for the "quest_flags" field.</summary>
    public const int QuestFlagsFieldNumber = 21;
    private uint questFlags_;
    /// <summary>
    /// Quest flags (e.g., repeatable, daily, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestFlags {
      get { return questFlags_; }
      set {
        questFlags_ = value;
      }
    }

    /// <summary>Field number for the "special_flags" field.</summary>
    public const int SpecialFlagsFieldNumber = 22;
    private uint specialFlags_;
    /// <summary>
    /// Special flags for the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpecialFlags {
      get { return specialFlags_; }
      set {
        specialFlags_ = value;
      }
    }

    /// <summary>Field number for the "prev_quest_id" field.</summary>
    public const int PrevQuestIdFieldNumber = 23;
    private int prevQuestId_;
    /// <summary>
    /// Previous quest in the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrevQuestId {
      get { return prevQuestId_; }
      set {
        prevQuestId_ = value;
      }
    }

    /// <summary>Field number for the "next_quest_id" field.</summary>
    public const int NextQuestIdFieldNumber = 24;
    private int nextQuestId_;
    /// <summary>
    /// Next quest in the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextQuestId {
      get { return nextQuestId_; }
      set {
        nextQuestId_ = value;
      }
    }

    /// <summary>Field number for the "exclusive_group" field.</summary>
    public const int ExclusiveGroupFieldNumber = 25;
    private int exclusiveGroup_;
    /// <summary>
    /// Exclusive group identifier (mutually exclusive quests)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExclusiveGroup {
      get { return exclusiveGroup_; }
      set {
        exclusiveGroup_ = value;
      }
    }

    /// <summary>Field number for the "next_quest_in_chain" field.</summary>
    public const int NextQuestInChainFieldNumber = 26;
    private uint nextQuestInChain_;
    /// <summary>
    /// Next quest in the quest chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextQuestInChain {
      get { return nextQuestInChain_; }
      set {
        nextQuestInChain_ = value;
      }
    }

    /// <summary>Field number for the "src_item_id" field.</summary>
    public const int SrcItemIdFieldNumber = 27;
    private uint srcItemId_;
    /// <summary>
    /// Source item ID (if the quest gives an item)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SrcItemId {
      get { return srcItemId_; }
      set {
        srcItemId_ = value;
      }
    }

    /// <summary>Field number for the "src_item_count" field.</summary>
    public const int SrcItemCountFieldNumber = 28;
    private uint srcItemCount_;
    /// <summary>
    /// Source item count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SrcItemCount {
      get { return srcItemCount_; }
      set {
        srcItemCount_ = value;
      }
    }

    /// <summary>Field number for the "src_spell" field.</summary>
    public const int SrcSpellFieldNumber = 29;
    private uint srcSpell_;
    /// <summary>
    /// Source spell ID related to the quest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SrcSpell {
      get { return srcSpell_; }
      set {
        srcSpell_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 30;
    private string title_ = "";
    /// <summary>
    /// Quest title
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 31;
    private string details_ = "";
    /// <summary>
    /// Quest details (description)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Details {
      get { return details_; }
      set {
        details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objectives" field.</summary>
    public const int ObjectivesFieldNumber = 32;
    private string objectives_ = "";
    /// <summary>
    /// Quest objectives
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Objectives {
      get { return objectives_; }
      set {
        objectives_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offer_reward_text" field.</summary>
    public const int OfferRewardTextFieldNumber = 33;
    private string offerRewardText_ = "";
    /// <summary>
    /// Offer reward text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferRewardText {
      get { return offerRewardText_; }
      set {
        offerRewardText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_items_text" field.</summary>
    public const int RequestItemsTextFieldNumber = 34;
    private string requestItemsText_ = "";
    /// <summary>
    /// Request items text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestItemsText {
      get { return requestItemsText_; }
      set {
        requestItemsText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_text" field.</summary>
    public const int EndTextFieldNumber = 35;
    private string endText_ = "";
    /// <summary>
    /// End text when the quest is completed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndText {
      get { return endText_; }
      set {
        endText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objective_text1" field.</summary>
    public const int ObjectiveText1FieldNumber = 36;
    private string objectiveText1_ = "";
    /// <summary>
    /// First objective text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText1 {
      get { return objectiveText1_; }
      set {
        objectiveText1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objective_text2" field.</summary>
    public const int ObjectiveText2FieldNumber = 37;
    private string objectiveText2_ = "";
    /// <summary>
    /// Second objective text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText2 {
      get { return objectiveText2_; }
      set {
        objectiveText2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objective_text3" field.</summary>
    public const int ObjectiveText3FieldNumber = 38;
    private string objectiveText3_ = "";
    /// <summary>
    /// Third objective text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText3 {
      get { return objectiveText3_; }
      set {
        objectiveText3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objective_text4" field.</summary>
    public const int ObjectiveText4FieldNumber = 39;
    private string objectiveText4_ = "";
    /// <summary>
    /// Fourth objective text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectiveText4 {
      get { return objectiveText4_; }
      set {
        objectiveText4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "req_item_id1" field.</summary>
    public const int ReqItemId1FieldNumber = 40;
    private uint reqItemId1_;
    /// <summary>
    /// Required item ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemId1 {
      get { return reqItemId1_; }
      set {
        reqItemId1_ = value;
      }
    }

    /// <summary>Field number for the "req_item_id2" field.</summary>
    public const int ReqItemId2FieldNumber = 41;
    private uint reqItemId2_;
    /// <summary>
    /// Required item ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemId2 {
      get { return reqItemId2_; }
      set {
        reqItemId2_ = value;
      }
    }

    /// <summary>Field number for the "req_item_id3" field.</summary>
    public const int ReqItemId3FieldNumber = 42;
    private uint reqItemId3_;
    /// <summary>
    /// Required item ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemId3 {
      get { return reqItemId3_; }
      set {
        reqItemId3_ = value;
      }
    }

    /// <summary>Field number for the "req_item_id4" field.</summary>
    public const int ReqItemId4FieldNumber = 43;
    private uint reqItemId4_;
    /// <summary>
    /// Required item ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemId4 {
      get { return reqItemId4_; }
      set {
        reqItemId4_ = value;
      }
    }

    /// <summary>Field number for the "req_item_count1" field.</summary>
    public const int ReqItemCount1FieldNumber = 44;
    private uint reqItemCount1_;
    /// <summary>
    /// Required item count 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemCount1 {
      get { return reqItemCount1_; }
      set {
        reqItemCount1_ = value;
      }
    }

    /// <summary>Field number for the "req_item_count2" field.</summary>
    public const int ReqItemCount2FieldNumber = 45;
    private uint reqItemCount2_;
    /// <summary>
    /// Required item count 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemCount2 {
      get { return reqItemCount2_; }
      set {
        reqItemCount2_ = value;
      }
    }

    /// <summary>Field number for the "req_item_count3" field.</summary>
    public const int ReqItemCount3FieldNumber = 46;
    private uint reqItemCount3_;
    /// <summary>
    /// Required item count 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemCount3 {
      get { return reqItemCount3_; }
      set {
        reqItemCount3_ = value;
      }
    }

    /// <summary>Field number for the "req_item_count4" field.</summary>
    public const int ReqItemCount4FieldNumber = 47;
    private uint reqItemCount4_;
    /// <summary>
    /// Required item count 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqItemCount4 {
      get { return reqItemCount4_; }
      set {
        reqItemCount4_ = value;
      }
    }

    /// <summary>Field number for the "req_source_id1" field.</summary>
    public const int ReqSourceId1FieldNumber = 48;
    private uint reqSourceId1_;
    /// <summary>
    /// Required source ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceId1 {
      get { return reqSourceId1_; }
      set {
        reqSourceId1_ = value;
      }
    }

    /// <summary>Field number for the "req_source_id2" field.</summary>
    public const int ReqSourceId2FieldNumber = 49;
    private uint reqSourceId2_;
    /// <summary>
    /// Required source ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceId2 {
      get { return reqSourceId2_; }
      set {
        reqSourceId2_ = value;
      }
    }

    /// <summary>Field number for the "req_source_id3" field.</summary>
    public const int ReqSourceId3FieldNumber = 50;
    private uint reqSourceId3_;
    /// <summary>
    /// Required source ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceId3 {
      get { return reqSourceId3_; }
      set {
        reqSourceId3_ = value;
      }
    }

    /// <summary>Field number for the "req_source_id4" field.</summary>
    public const int ReqSourceId4FieldNumber = 51;
    private uint reqSourceId4_;
    /// <summary>
    /// Required source ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceId4 {
      get { return reqSourceId4_; }
      set {
        reqSourceId4_ = value;
      }
    }

    /// <summary>Field number for the "req_source_count1" field.</summary>
    public const int ReqSourceCount1FieldNumber = 52;
    private uint reqSourceCount1_;
    /// <summary>
    /// Required source count 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceCount1 {
      get { return reqSourceCount1_; }
      set {
        reqSourceCount1_ = value;
      }
    }

    /// <summary>Field number for the "req_source_count2" field.</summary>
    public const int ReqSourceCount2FieldNumber = 53;
    private uint reqSourceCount2_;
    /// <summary>
    /// Required source count 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceCount2 {
      get { return reqSourceCount2_; }
      set {
        reqSourceCount2_ = value;
      }
    }

    /// <summary>Field number for the "req_source_count3" field.</summary>
    public const int ReqSourceCount3FieldNumber = 54;
    private uint reqSourceCount3_;
    /// <summary>
    /// Required source count 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceCount3 {
      get { return reqSourceCount3_; }
      set {
        reqSourceCount3_ = value;
      }
    }

    /// <summary>Field number for the "req_source_count4" field.</summary>
    public const int ReqSourceCount4FieldNumber = 55;
    private uint reqSourceCount4_;
    /// <summary>
    /// Required source count 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSourceCount4 {
      get { return reqSourceCount4_; }
      set {
        reqSourceCount4_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_id1" field.</summary>
    public const int ReqCreatureOrGoId1FieldNumber = 56;
    private int reqCreatureOrGoId1_;
    /// <summary>
    /// Required creature or game object ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqCreatureOrGoId1 {
      get { return reqCreatureOrGoId1_; }
      set {
        reqCreatureOrGoId1_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_id2" field.</summary>
    public const int ReqCreatureOrGoId2FieldNumber = 57;
    private int reqCreatureOrGoId2_;
    /// <summary>
    /// Required creature or game object ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqCreatureOrGoId2 {
      get { return reqCreatureOrGoId2_; }
      set {
        reqCreatureOrGoId2_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_id3" field.</summary>
    public const int ReqCreatureOrGoId3FieldNumber = 58;
    private int reqCreatureOrGoId3_;
    /// <summary>
    /// Required creature or game object ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqCreatureOrGoId3 {
      get { return reqCreatureOrGoId3_; }
      set {
        reqCreatureOrGoId3_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_id4" field.</summary>
    public const int ReqCreatureOrGoId4FieldNumber = 59;
    private int reqCreatureOrGoId4_;
    /// <summary>
    /// Required creature or game object ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReqCreatureOrGoId4 {
      get { return reqCreatureOrGoId4_; }
      set {
        reqCreatureOrGoId4_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_count1" field.</summary>
    public const int ReqCreatureOrGoCount1FieldNumber = 60;
    private uint reqCreatureOrGoCount1_;
    /// <summary>
    /// Required creature or game object count 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqCreatureOrGoCount1 {
      get { return reqCreatureOrGoCount1_; }
      set {
        reqCreatureOrGoCount1_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_count2" field.</summary>
    public const int ReqCreatureOrGoCount2FieldNumber = 61;
    private uint reqCreatureOrGoCount2_;
    /// <summary>
    /// Required creature or game object count 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqCreatureOrGoCount2 {
      get { return reqCreatureOrGoCount2_; }
      set {
        reqCreatureOrGoCount2_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_count3" field.</summary>
    public const int ReqCreatureOrGoCount3FieldNumber = 62;
    private uint reqCreatureOrGoCount3_;
    /// <summary>
    /// Required creature or game object count 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqCreatureOrGoCount3 {
      get { return reqCreatureOrGoCount3_; }
      set {
        reqCreatureOrGoCount3_ = value;
      }
    }

    /// <summary>Field number for the "req_creature_or_go_count4" field.</summary>
    public const int ReqCreatureOrGoCount4FieldNumber = 63;
    private uint reqCreatureOrGoCount4_;
    /// <summary>
    /// Required creature or game object count 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqCreatureOrGoCount4 {
      get { return reqCreatureOrGoCount4_; }
      set {
        reqCreatureOrGoCount4_ = value;
      }
    }

    /// <summary>Field number for the "req_spell_cast1" field.</summary>
    public const int ReqSpellCast1FieldNumber = 64;
    private uint reqSpellCast1_;
    /// <summary>
    /// Required spell cast 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpellCast1 {
      get { return reqSpellCast1_; }
      set {
        reqSpellCast1_ = value;
      }
    }

    /// <summary>Field number for the "req_spell_cast2" field.</summary>
    public const int ReqSpellCast2FieldNumber = 65;
    private uint reqSpellCast2_;
    /// <summary>
    /// Required spell cast 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpellCast2 {
      get { return reqSpellCast2_; }
      set {
        reqSpellCast2_ = value;
      }
    }

    /// <summary>Field number for the "req_spell_cast3" field.</summary>
    public const int ReqSpellCast3FieldNumber = 66;
    private uint reqSpellCast3_;
    /// <summary>
    /// Required spell cast 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpellCast3 {
      get { return reqSpellCast3_; }
      set {
        reqSpellCast3_ = value;
      }
    }

    /// <summary>Field number for the "req_spell_cast4" field.</summary>
    public const int ReqSpellCast4FieldNumber = 67;
    private uint reqSpellCast4_;
    /// <summary>
    /// Required spell cast 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpellCast4 {
      get { return reqSpellCast4_; }
      set {
        reqSpellCast4_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id1" field.</summary>
    public const int RewChoiceItemId1FieldNumber = 68;
    private uint rewChoiceItemId1_;
    /// <summary>
    /// Reward choice item ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId1 {
      get { return rewChoiceItemId1_; }
      set {
        rewChoiceItemId1_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id2" field.</summary>
    public const int RewChoiceItemId2FieldNumber = 69;
    private uint rewChoiceItemId2_;
    /// <summary>
    /// Reward choice item ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId2 {
      get { return rewChoiceItemId2_; }
      set {
        rewChoiceItemId2_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id3" field.</summary>
    public const int RewChoiceItemId3FieldNumber = 70;
    private uint rewChoiceItemId3_;
    /// <summary>
    /// Reward choice item ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId3 {
      get { return rewChoiceItemId3_; }
      set {
        rewChoiceItemId3_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id4" field.</summary>
    public const int RewChoiceItemId4FieldNumber = 71;
    private uint rewChoiceItemId4_;
    /// <summary>
    /// Reward choice item ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId4 {
      get { return rewChoiceItemId4_; }
      set {
        rewChoiceItemId4_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id5" field.</summary>
    public const int RewChoiceItemId5FieldNumber = 72;
    private uint rewChoiceItemId5_;
    /// <summary>
    /// Reward choice item ID 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId5 {
      get { return rewChoiceItemId5_; }
      set {
        rewChoiceItemId5_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_id6" field.</summary>
    public const int RewChoiceItemId6FieldNumber = 73;
    private uint rewChoiceItemId6_;
    /// <summary>
    /// Reward choice item ID 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemId6 {
      get { return rewChoiceItemId6_; }
      set {
        rewChoiceItemId6_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count1" field.</summary>
    public const int RewChoiceItemCount1FieldNumber = 74;
    private uint rewChoiceItemCount1_;
    /// <summary>
    /// Reward choice item count 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount1 {
      get { return rewChoiceItemCount1_; }
      set {
        rewChoiceItemCount1_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count2" field.</summary>
    public const int RewChoiceItemCount2FieldNumber = 75;
    private uint rewChoiceItemCount2_;
    /// <summary>
    /// Reward choice item count 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount2 {
      get { return rewChoiceItemCount2_; }
      set {
        rewChoiceItemCount2_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count3" field.</summary>
    public const int RewChoiceItemCount3FieldNumber = 76;
    private uint rewChoiceItemCount3_;
    /// <summary>
    /// Reward choice item count 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount3 {
      get { return rewChoiceItemCount3_; }
      set {
        rewChoiceItemCount3_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count4" field.</summary>
    public const int RewChoiceItemCount4FieldNumber = 77;
    private uint rewChoiceItemCount4_;
    /// <summary>
    /// Reward choice item count 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount4 {
      get { return rewChoiceItemCount4_; }
      set {
        rewChoiceItemCount4_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count5" field.</summary>
    public const int RewChoiceItemCount5FieldNumber = 78;
    private uint rewChoiceItemCount5_;
    /// <summary>
    /// Reward choice item count 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount5 {
      get { return rewChoiceItemCount5_; }
      set {
        rewChoiceItemCount5_ = value;
      }
    }

    /// <summary>Field number for the "rew_choice_item_count6" field.</summary>
    public const int RewChoiceItemCount6FieldNumber = 79;
    private uint rewChoiceItemCount6_;
    /// <summary>
    /// Reward choice item count 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewChoiceItemCount6 {
      get { return rewChoiceItemCount6_; }
      set {
        rewChoiceItemCount6_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_id1" field.</summary>
    public const int RewItemId1FieldNumber = 80;
    private uint rewItemId1_;
    /// <summary>
    /// Reward item ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemId1 {
      get { return rewItemId1_; }
      set {
        rewItemId1_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_id2" field.</summary>
    public const int RewItemId2FieldNumber = 81;
    private uint rewItemId2_;
    /// <summary>
    /// Reward item ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemId2 {
      get { return rewItemId2_; }
      set {
        rewItemId2_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_id3" field.</summary>
    public const int RewItemId3FieldNumber = 82;
    private uint rewItemId3_;
    /// <summary>
    /// Reward item ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemId3 {
      get { return rewItemId3_; }
      set {
        rewItemId3_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_id4" field.</summary>
    public const int RewItemId4FieldNumber = 83;
    private uint rewItemId4_;
    /// <summary>
    /// Reward item ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemId4 {
      get { return rewItemId4_; }
      set {
        rewItemId4_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_count1" field.</summary>
    public const int RewItemCount1FieldNumber = 84;
    private uint rewItemCount1_;
    /// <summary>
    /// Reward item count 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemCount1 {
      get { return rewItemCount1_; }
      set {
        rewItemCount1_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_count2" field.</summary>
    public const int RewItemCount2FieldNumber = 85;
    private uint rewItemCount2_;
    /// <summary>
    /// Reward item count 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemCount2 {
      get { return rewItemCount2_; }
      set {
        rewItemCount2_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_count3" field.</summary>
    public const int RewItemCount3FieldNumber = 86;
    private uint rewItemCount3_;
    /// <summary>
    /// Reward item count 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemCount3 {
      get { return rewItemCount3_; }
      set {
        rewItemCount3_ = value;
      }
    }

    /// <summary>Field number for the "rew_item_count4" field.</summary>
    public const int RewItemCount4FieldNumber = 87;
    private uint rewItemCount4_;
    /// <summary>
    /// Reward item count 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewItemCount4 {
      get { return rewItemCount4_; }
      set {
        rewItemCount4_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_faction1" field.</summary>
    public const int RewRepFaction1FieldNumber = 88;
    private uint rewRepFaction1_;
    /// <summary>
    /// Reward reputation faction ID 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewRepFaction1 {
      get { return rewRepFaction1_; }
      set {
        rewRepFaction1_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_faction2" field.</summary>
    public const int RewRepFaction2FieldNumber = 89;
    private uint rewRepFaction2_;
    /// <summary>
    /// Reward reputation faction ID 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewRepFaction2 {
      get { return rewRepFaction2_; }
      set {
        rewRepFaction2_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_faction3" field.</summary>
    public const int RewRepFaction3FieldNumber = 90;
    private uint rewRepFaction3_;
    /// <summary>
    /// Reward reputation faction ID 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewRepFaction3 {
      get { return rewRepFaction3_; }
      set {
        rewRepFaction3_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_faction4" field.</summary>
    public const int RewRepFaction4FieldNumber = 91;
    private uint rewRepFaction4_;
    /// <summary>
    /// Reward reputation faction ID 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewRepFaction4 {
      get { return rewRepFaction4_; }
      set {
        rewRepFaction4_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_faction5" field.</summary>
    public const int RewRepFaction5FieldNumber = 92;
    private uint rewRepFaction5_;
    /// <summary>
    /// Reward reputation faction ID 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewRepFaction5 {
      get { return rewRepFaction5_; }
      set {
        rewRepFaction5_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_value1" field.</summary>
    public const int RewRepValue1FieldNumber = 93;
    private int rewRepValue1_;
    /// <summary>
    /// Reward reputation value 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewRepValue1 {
      get { return rewRepValue1_; }
      set {
        rewRepValue1_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_value2" field.</summary>
    public const int RewRepValue2FieldNumber = 94;
    private int rewRepValue2_;
    /// <summary>
    /// Reward reputation value 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewRepValue2 {
      get { return rewRepValue2_; }
      set {
        rewRepValue2_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_value3" field.</summary>
    public const int RewRepValue3FieldNumber = 95;
    private int rewRepValue3_;
    /// <summary>
    /// Reward reputation value 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewRepValue3 {
      get { return rewRepValue3_; }
      set {
        rewRepValue3_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_value4" field.</summary>
    public const int RewRepValue4FieldNumber = 96;
    private int rewRepValue4_;
    /// <summary>
    /// Reward reputation value 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewRepValue4 {
      get { return rewRepValue4_; }
      set {
        rewRepValue4_ = value;
      }
    }

    /// <summary>Field number for the "rew_rep_value5" field.</summary>
    public const int RewRepValue5FieldNumber = 97;
    private int rewRepValue5_;
    /// <summary>
    /// Reward reputation value 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewRepValue5 {
      get { return rewRepValue5_; }
      set {
        rewRepValue5_ = value;
      }
    }

    /// <summary>Field number for the "rew_or_req_money" field.</summary>
    public const int RewOrReqMoneyFieldNumber = 98;
    private int rewOrReqMoney_;
    /// <summary>
    /// Reward or required money
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewOrReqMoney {
      get { return rewOrReqMoney_; }
      set {
        rewOrReqMoney_ = value;
      }
    }

    /// <summary>Field number for the "rew_money_max_level" field.</summary>
    public const int RewMoneyMaxLevelFieldNumber = 99;
    private uint rewMoneyMaxLevel_;
    /// <summary>
    /// Reward money at max level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewMoneyMaxLevel {
      get { return rewMoneyMaxLevel_; }
      set {
        rewMoneyMaxLevel_ = value;
      }
    }

    /// <summary>Field number for the "rew_spell" field.</summary>
    public const int RewSpellFieldNumber = 100;
    private uint rewSpell_;
    /// <summary>
    /// Reward spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewSpell {
      get { return rewSpell_; }
      set {
        rewSpell_ = value;
      }
    }

    /// <summary>Field number for the "rew_spell_cast" field.</summary>
    public const int RewSpellCastFieldNumber = 101;
    private uint rewSpellCast_;
    /// <summary>
    /// Reward spell cast ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewSpellCast {
      get { return rewSpellCast_; }
      set {
        rewSpellCast_ = value;
      }
    }

    /// <summary>Field number for the "rew_mail_template_id" field.</summary>
    public const int RewMailTemplateIdFieldNumber = 102;
    private uint rewMailTemplateId_;
    /// <summary>
    /// Reward mail template ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewMailTemplateId {
      get { return rewMailTemplateId_; }
      set {
        rewMailTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "rew_mail_delay_secs" field.</summary>
    public const int RewMailDelaySecsFieldNumber = 103;
    private uint rewMailDelaySecs_;
    /// <summary>
    /// Reward mail delay in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RewMailDelaySecs {
      get { return rewMailDelaySecs_; }
      set {
        rewMailDelaySecs_ = value;
      }
    }

    /// <summary>Field number for the "point_map_id" field.</summary>
    public const int PointMapIdFieldNumber = 104;
    private uint pointMapId_;
    /// <summary>
    /// Point map ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PointMapId {
      get { return pointMapId_; }
      set {
        pointMapId_ = value;
      }
    }

    /// <summary>Field number for the "point_x" field.</summary>
    public const int PointXFieldNumber = 105;
    private float pointX_;
    /// <summary>
    /// Point X coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PointX {
      get { return pointX_; }
      set {
        pointX_ = value;
      }
    }

    /// <summary>Field number for the "point_y" field.</summary>
    public const int PointYFieldNumber = 106;
    private float pointY_;
    /// <summary>
    /// Point Y coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PointY {
      get { return pointY_; }
      set {
        pointY_ = value;
      }
    }

    /// <summary>Field number for the "point_opt" field.</summary>
    public const int PointOptFieldNumber = 107;
    private uint pointOpt_;
    /// <summary>
    /// Point option (optional parameters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PointOpt {
      get { return pointOpt_; }
      set {
        pointOpt_ = value;
      }
    }

    /// <summary>Field number for the "details_emote1" field.</summary>
    public const int DetailsEmote1FieldNumber = 108;
    private uint detailsEmote1_;
    /// <summary>
    /// Details emote 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmote1 {
      get { return detailsEmote1_; }
      set {
        detailsEmote1_ = value;
      }
    }

    /// <summary>Field number for the "details_emote2" field.</summary>
    public const int DetailsEmote2FieldNumber = 109;
    private uint detailsEmote2_;
    /// <summary>
    /// Details emote 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmote2 {
      get { return detailsEmote2_; }
      set {
        detailsEmote2_ = value;
      }
    }

    /// <summary>Field number for the "details_emote3" field.</summary>
    public const int DetailsEmote3FieldNumber = 110;
    private uint detailsEmote3_;
    /// <summary>
    /// Details emote 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmote3 {
      get { return detailsEmote3_; }
      set {
        detailsEmote3_ = value;
      }
    }

    /// <summary>Field number for the "details_emote4" field.</summary>
    public const int DetailsEmote4FieldNumber = 111;
    private uint detailsEmote4_;
    /// <summary>
    /// Details emote 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmote4 {
      get { return detailsEmote4_; }
      set {
        detailsEmote4_ = value;
      }
    }

    /// <summary>Field number for the "details_emote_delay1" field.</summary>
    public const int DetailsEmoteDelay1FieldNumber = 112;
    private uint detailsEmoteDelay1_;
    /// <summary>
    /// Details emote delay 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmoteDelay1 {
      get { return detailsEmoteDelay1_; }
      set {
        detailsEmoteDelay1_ = value;
      }
    }

    /// <summary>Field number for the "details_emote_delay2" field.</summary>
    public const int DetailsEmoteDelay2FieldNumber = 113;
    private uint detailsEmoteDelay2_;
    /// <summary>
    /// Details emote delay 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmoteDelay2 {
      get { return detailsEmoteDelay2_; }
      set {
        detailsEmoteDelay2_ = value;
      }
    }

    /// <summary>Field number for the "details_emote_delay3" field.</summary>
    public const int DetailsEmoteDelay3FieldNumber = 114;
    private uint detailsEmoteDelay3_;
    /// <summary>
    /// Details emote delay 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmoteDelay3 {
      get { return detailsEmoteDelay3_; }
      set {
        detailsEmoteDelay3_ = value;
      }
    }

    /// <summary>Field number for the "details_emote_delay4" field.</summary>
    public const int DetailsEmoteDelay4FieldNumber = 115;
    private uint detailsEmoteDelay4_;
    /// <summary>
    /// Details emote delay 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DetailsEmoteDelay4 {
      get { return detailsEmoteDelay4_; }
      set {
        detailsEmoteDelay4_ = value;
      }
    }

    /// <summary>Field number for the "incomplete_emote" field.</summary>
    public const int IncompleteEmoteFieldNumber = 116;
    private uint incompleteEmote_;
    /// <summary>
    /// Incomplete quest emote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint IncompleteEmote {
      get { return incompleteEmote_; }
      set {
        incompleteEmote_ = value;
      }
    }

    /// <summary>Field number for the "complete_emote" field.</summary>
    public const int CompleteEmoteFieldNumber = 117;
    private uint completeEmote_;
    /// <summary>
    /// Complete quest emote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CompleteEmote {
      get { return completeEmote_; }
      set {
        completeEmote_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote1" field.</summary>
    public const int OfferRewardEmote1FieldNumber = 118;
    private uint offerRewardEmote1_;
    /// <summary>
    /// Offer reward emote 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmote1 {
      get { return offerRewardEmote1_; }
      set {
        offerRewardEmote1_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote2" field.</summary>
    public const int OfferRewardEmote2FieldNumber = 119;
    private uint offerRewardEmote2_;
    /// <summary>
    /// Offer reward emote 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmote2 {
      get { return offerRewardEmote2_; }
      set {
        offerRewardEmote2_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote3" field.</summary>
    public const int OfferRewardEmote3FieldNumber = 120;
    private uint offerRewardEmote3_;
    /// <summary>
    /// Offer reward emote 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmote3 {
      get { return offerRewardEmote3_; }
      set {
        offerRewardEmote3_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote4" field.</summary>
    public const int OfferRewardEmote4FieldNumber = 121;
    private uint offerRewardEmote4_;
    /// <summary>
    /// Offer reward emote 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmote4 {
      get { return offerRewardEmote4_; }
      set {
        offerRewardEmote4_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote_delay1" field.</summary>
    public const int OfferRewardEmoteDelay1FieldNumber = 122;
    private uint offerRewardEmoteDelay1_;
    /// <summary>
    /// Offer reward emote delay 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmoteDelay1 {
      get { return offerRewardEmoteDelay1_; }
      set {
        offerRewardEmoteDelay1_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote_delay2" field.</summary>
    public const int OfferRewardEmoteDelay2FieldNumber = 123;
    private uint offerRewardEmoteDelay2_;
    /// <summary>
    /// Offer reward emote delay 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmoteDelay2 {
      get { return offerRewardEmoteDelay2_; }
      set {
        offerRewardEmoteDelay2_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote_delay3" field.</summary>
    public const int OfferRewardEmoteDelay3FieldNumber = 124;
    private uint offerRewardEmoteDelay3_;
    /// <summary>
    /// Offer reward emote delay 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmoteDelay3 {
      get { return offerRewardEmoteDelay3_; }
      set {
        offerRewardEmoteDelay3_ = value;
      }
    }

    /// <summary>Field number for the "offer_reward_emote_delay4" field.</summary>
    public const int OfferRewardEmoteDelay4FieldNumber = 125;
    private uint offerRewardEmoteDelay4_;
    /// <summary>
    /// Offer reward emote delay 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OfferRewardEmoteDelay4 {
      get { return offerRewardEmoteDelay4_; }
      set {
        offerRewardEmoteDelay4_ = value;
      }
    }

    /// <summary>Field number for the "start_script" field.</summary>
    public const int StartScriptFieldNumber = 126;
    private uint startScript_;
    /// <summary>
    /// Start script ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartScript {
      get { return startScript_; }
      set {
        startScript_ = value;
      }
    }

    /// <summary>Field number for the "complete_script" field.</summary>
    public const int CompleteScriptFieldNumber = 127;
    private uint completeScript_;
    /// <summary>
    /// Complete script ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CompleteScript {
      get { return completeScript_; }
      set {
        completeScript_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Patch != other.Patch) return false;
      if (Method != other.Method) return false;
      if (ZoneOrSort != other.ZoneOrSort) return false;
      if (MinLevel != other.MinLevel) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (QuestLevel != other.QuestLevel) return false;
      if (Type != other.Type) return false;
      if (RequiredClasses != other.RequiredClasses) return false;
      if (RequiredRaces != other.RequiredRaces) return false;
      if (RequiredSkill != other.RequiredSkill) return false;
      if (RequiredSkillValue != other.RequiredSkillValue) return false;
      if (RepObjectiveFaction != other.RepObjectiveFaction) return false;
      if (RepObjectiveValue != other.RepObjectiveValue) return false;
      if (RequiredMinRepFaction != other.RequiredMinRepFaction) return false;
      if (RequiredMinRepValue != other.RequiredMinRepValue) return false;
      if (RequiredMaxRepFaction != other.RequiredMaxRepFaction) return false;
      if (RequiredMaxRepValue != other.RequiredMaxRepValue) return false;
      if (SuggestedPlayers != other.SuggestedPlayers) return false;
      if (LimitTime != other.LimitTime) return false;
      if (QuestFlags != other.QuestFlags) return false;
      if (SpecialFlags != other.SpecialFlags) return false;
      if (PrevQuestId != other.PrevQuestId) return false;
      if (NextQuestId != other.NextQuestId) return false;
      if (ExclusiveGroup != other.ExclusiveGroup) return false;
      if (NextQuestInChain != other.NextQuestInChain) return false;
      if (SrcItemId != other.SrcItemId) return false;
      if (SrcItemCount != other.SrcItemCount) return false;
      if (SrcSpell != other.SrcSpell) return false;
      if (Title != other.Title) return false;
      if (Details != other.Details) return false;
      if (Objectives != other.Objectives) return false;
      if (OfferRewardText != other.OfferRewardText) return false;
      if (RequestItemsText != other.RequestItemsText) return false;
      if (EndText != other.EndText) return false;
      if (ObjectiveText1 != other.ObjectiveText1) return false;
      if (ObjectiveText2 != other.ObjectiveText2) return false;
      if (ObjectiveText3 != other.ObjectiveText3) return false;
      if (ObjectiveText4 != other.ObjectiveText4) return false;
      if (ReqItemId1 != other.ReqItemId1) return false;
      if (ReqItemId2 != other.ReqItemId2) return false;
      if (ReqItemId3 != other.ReqItemId3) return false;
      if (ReqItemId4 != other.ReqItemId4) return false;
      if (ReqItemCount1 != other.ReqItemCount1) return false;
      if (ReqItemCount2 != other.ReqItemCount2) return false;
      if (ReqItemCount3 != other.ReqItemCount3) return false;
      if (ReqItemCount4 != other.ReqItemCount4) return false;
      if (ReqSourceId1 != other.ReqSourceId1) return false;
      if (ReqSourceId2 != other.ReqSourceId2) return false;
      if (ReqSourceId3 != other.ReqSourceId3) return false;
      if (ReqSourceId4 != other.ReqSourceId4) return false;
      if (ReqSourceCount1 != other.ReqSourceCount1) return false;
      if (ReqSourceCount2 != other.ReqSourceCount2) return false;
      if (ReqSourceCount3 != other.ReqSourceCount3) return false;
      if (ReqSourceCount4 != other.ReqSourceCount4) return false;
      if (ReqCreatureOrGoId1 != other.ReqCreatureOrGoId1) return false;
      if (ReqCreatureOrGoId2 != other.ReqCreatureOrGoId2) return false;
      if (ReqCreatureOrGoId3 != other.ReqCreatureOrGoId3) return false;
      if (ReqCreatureOrGoId4 != other.ReqCreatureOrGoId4) return false;
      if (ReqCreatureOrGoCount1 != other.ReqCreatureOrGoCount1) return false;
      if (ReqCreatureOrGoCount2 != other.ReqCreatureOrGoCount2) return false;
      if (ReqCreatureOrGoCount3 != other.ReqCreatureOrGoCount3) return false;
      if (ReqCreatureOrGoCount4 != other.ReqCreatureOrGoCount4) return false;
      if (ReqSpellCast1 != other.ReqSpellCast1) return false;
      if (ReqSpellCast2 != other.ReqSpellCast2) return false;
      if (ReqSpellCast3 != other.ReqSpellCast3) return false;
      if (ReqSpellCast4 != other.ReqSpellCast4) return false;
      if (RewChoiceItemId1 != other.RewChoiceItemId1) return false;
      if (RewChoiceItemId2 != other.RewChoiceItemId2) return false;
      if (RewChoiceItemId3 != other.RewChoiceItemId3) return false;
      if (RewChoiceItemId4 != other.RewChoiceItemId4) return false;
      if (RewChoiceItemId5 != other.RewChoiceItemId5) return false;
      if (RewChoiceItemId6 != other.RewChoiceItemId6) return false;
      if (RewChoiceItemCount1 != other.RewChoiceItemCount1) return false;
      if (RewChoiceItemCount2 != other.RewChoiceItemCount2) return false;
      if (RewChoiceItemCount3 != other.RewChoiceItemCount3) return false;
      if (RewChoiceItemCount4 != other.RewChoiceItemCount4) return false;
      if (RewChoiceItemCount5 != other.RewChoiceItemCount5) return false;
      if (RewChoiceItemCount6 != other.RewChoiceItemCount6) return false;
      if (RewItemId1 != other.RewItemId1) return false;
      if (RewItemId2 != other.RewItemId2) return false;
      if (RewItemId3 != other.RewItemId3) return false;
      if (RewItemId4 != other.RewItemId4) return false;
      if (RewItemCount1 != other.RewItemCount1) return false;
      if (RewItemCount2 != other.RewItemCount2) return false;
      if (RewItemCount3 != other.RewItemCount3) return false;
      if (RewItemCount4 != other.RewItemCount4) return false;
      if (RewRepFaction1 != other.RewRepFaction1) return false;
      if (RewRepFaction2 != other.RewRepFaction2) return false;
      if (RewRepFaction3 != other.RewRepFaction3) return false;
      if (RewRepFaction4 != other.RewRepFaction4) return false;
      if (RewRepFaction5 != other.RewRepFaction5) return false;
      if (RewRepValue1 != other.RewRepValue1) return false;
      if (RewRepValue2 != other.RewRepValue2) return false;
      if (RewRepValue3 != other.RewRepValue3) return false;
      if (RewRepValue4 != other.RewRepValue4) return false;
      if (RewRepValue5 != other.RewRepValue5) return false;
      if (RewOrReqMoney != other.RewOrReqMoney) return false;
      if (RewMoneyMaxLevel != other.RewMoneyMaxLevel) return false;
      if (RewSpell != other.RewSpell) return false;
      if (RewSpellCast != other.RewSpellCast) return false;
      if (RewMailTemplateId != other.RewMailTemplateId) return false;
      if (RewMailDelaySecs != other.RewMailDelaySecs) return false;
      if (PointMapId != other.PointMapId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PointX, other.PointX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PointY, other.PointY)) return false;
      if (PointOpt != other.PointOpt) return false;
      if (DetailsEmote1 != other.DetailsEmote1) return false;
      if (DetailsEmote2 != other.DetailsEmote2) return false;
      if (DetailsEmote3 != other.DetailsEmote3) return false;
      if (DetailsEmote4 != other.DetailsEmote4) return false;
      if (DetailsEmoteDelay1 != other.DetailsEmoteDelay1) return false;
      if (DetailsEmoteDelay2 != other.DetailsEmoteDelay2) return false;
      if (DetailsEmoteDelay3 != other.DetailsEmoteDelay3) return false;
      if (DetailsEmoteDelay4 != other.DetailsEmoteDelay4) return false;
      if (IncompleteEmote != other.IncompleteEmote) return false;
      if (CompleteEmote != other.CompleteEmote) return false;
      if (OfferRewardEmote1 != other.OfferRewardEmote1) return false;
      if (OfferRewardEmote2 != other.OfferRewardEmote2) return false;
      if (OfferRewardEmote3 != other.OfferRewardEmote3) return false;
      if (OfferRewardEmote4 != other.OfferRewardEmote4) return false;
      if (OfferRewardEmoteDelay1 != other.OfferRewardEmoteDelay1) return false;
      if (OfferRewardEmoteDelay2 != other.OfferRewardEmoteDelay2) return false;
      if (OfferRewardEmoteDelay3 != other.OfferRewardEmoteDelay3) return false;
      if (OfferRewardEmoteDelay4 != other.OfferRewardEmoteDelay4) return false;
      if (StartScript != other.StartScript) return false;
      if (CompleteScript != other.CompleteScript) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (Method != 0) hash ^= Method.GetHashCode();
      if (ZoneOrSort != 0) hash ^= ZoneOrSort.GetHashCode();
      if (MinLevel != 0) hash ^= MinLevel.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (QuestLevel != 0) hash ^= QuestLevel.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (RequiredClasses != 0) hash ^= RequiredClasses.GetHashCode();
      if (RequiredRaces != 0) hash ^= RequiredRaces.GetHashCode();
      if (RequiredSkill != 0) hash ^= RequiredSkill.GetHashCode();
      if (RequiredSkillValue != 0) hash ^= RequiredSkillValue.GetHashCode();
      if (RepObjectiveFaction != 0) hash ^= RepObjectiveFaction.GetHashCode();
      if (RepObjectiveValue != 0) hash ^= RepObjectiveValue.GetHashCode();
      if (RequiredMinRepFaction != 0) hash ^= RequiredMinRepFaction.GetHashCode();
      if (RequiredMinRepValue != 0) hash ^= RequiredMinRepValue.GetHashCode();
      if (RequiredMaxRepFaction != 0) hash ^= RequiredMaxRepFaction.GetHashCode();
      if (RequiredMaxRepValue != 0) hash ^= RequiredMaxRepValue.GetHashCode();
      if (SuggestedPlayers != 0) hash ^= SuggestedPlayers.GetHashCode();
      if (LimitTime != 0) hash ^= LimitTime.GetHashCode();
      if (QuestFlags != 0) hash ^= QuestFlags.GetHashCode();
      if (SpecialFlags != 0) hash ^= SpecialFlags.GetHashCode();
      if (PrevQuestId != 0) hash ^= PrevQuestId.GetHashCode();
      if (NextQuestId != 0) hash ^= NextQuestId.GetHashCode();
      if (ExclusiveGroup != 0) hash ^= ExclusiveGroup.GetHashCode();
      if (NextQuestInChain != 0) hash ^= NextQuestInChain.GetHashCode();
      if (SrcItemId != 0) hash ^= SrcItemId.GetHashCode();
      if (SrcItemCount != 0) hash ^= SrcItemCount.GetHashCode();
      if (SrcSpell != 0) hash ^= SrcSpell.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Details.Length != 0) hash ^= Details.GetHashCode();
      if (Objectives.Length != 0) hash ^= Objectives.GetHashCode();
      if (OfferRewardText.Length != 0) hash ^= OfferRewardText.GetHashCode();
      if (RequestItemsText.Length != 0) hash ^= RequestItemsText.GetHashCode();
      if (EndText.Length != 0) hash ^= EndText.GetHashCode();
      if (ObjectiveText1.Length != 0) hash ^= ObjectiveText1.GetHashCode();
      if (ObjectiveText2.Length != 0) hash ^= ObjectiveText2.GetHashCode();
      if (ObjectiveText3.Length != 0) hash ^= ObjectiveText3.GetHashCode();
      if (ObjectiveText4.Length != 0) hash ^= ObjectiveText4.GetHashCode();
      if (ReqItemId1 != 0) hash ^= ReqItemId1.GetHashCode();
      if (ReqItemId2 != 0) hash ^= ReqItemId2.GetHashCode();
      if (ReqItemId3 != 0) hash ^= ReqItemId3.GetHashCode();
      if (ReqItemId4 != 0) hash ^= ReqItemId4.GetHashCode();
      if (ReqItemCount1 != 0) hash ^= ReqItemCount1.GetHashCode();
      if (ReqItemCount2 != 0) hash ^= ReqItemCount2.GetHashCode();
      if (ReqItemCount3 != 0) hash ^= ReqItemCount3.GetHashCode();
      if (ReqItemCount4 != 0) hash ^= ReqItemCount4.GetHashCode();
      if (ReqSourceId1 != 0) hash ^= ReqSourceId1.GetHashCode();
      if (ReqSourceId2 != 0) hash ^= ReqSourceId2.GetHashCode();
      if (ReqSourceId3 != 0) hash ^= ReqSourceId3.GetHashCode();
      if (ReqSourceId4 != 0) hash ^= ReqSourceId4.GetHashCode();
      if (ReqSourceCount1 != 0) hash ^= ReqSourceCount1.GetHashCode();
      if (ReqSourceCount2 != 0) hash ^= ReqSourceCount2.GetHashCode();
      if (ReqSourceCount3 != 0) hash ^= ReqSourceCount3.GetHashCode();
      if (ReqSourceCount4 != 0) hash ^= ReqSourceCount4.GetHashCode();
      if (ReqCreatureOrGoId1 != 0) hash ^= ReqCreatureOrGoId1.GetHashCode();
      if (ReqCreatureOrGoId2 != 0) hash ^= ReqCreatureOrGoId2.GetHashCode();
      if (ReqCreatureOrGoId3 != 0) hash ^= ReqCreatureOrGoId3.GetHashCode();
      if (ReqCreatureOrGoId4 != 0) hash ^= ReqCreatureOrGoId4.GetHashCode();
      if (ReqCreatureOrGoCount1 != 0) hash ^= ReqCreatureOrGoCount1.GetHashCode();
      if (ReqCreatureOrGoCount2 != 0) hash ^= ReqCreatureOrGoCount2.GetHashCode();
      if (ReqCreatureOrGoCount3 != 0) hash ^= ReqCreatureOrGoCount3.GetHashCode();
      if (ReqCreatureOrGoCount4 != 0) hash ^= ReqCreatureOrGoCount4.GetHashCode();
      if (ReqSpellCast1 != 0) hash ^= ReqSpellCast1.GetHashCode();
      if (ReqSpellCast2 != 0) hash ^= ReqSpellCast2.GetHashCode();
      if (ReqSpellCast3 != 0) hash ^= ReqSpellCast3.GetHashCode();
      if (ReqSpellCast4 != 0) hash ^= ReqSpellCast4.GetHashCode();
      if (RewChoiceItemId1 != 0) hash ^= RewChoiceItemId1.GetHashCode();
      if (RewChoiceItemId2 != 0) hash ^= RewChoiceItemId2.GetHashCode();
      if (RewChoiceItemId3 != 0) hash ^= RewChoiceItemId3.GetHashCode();
      if (RewChoiceItemId4 != 0) hash ^= RewChoiceItemId4.GetHashCode();
      if (RewChoiceItemId5 != 0) hash ^= RewChoiceItemId5.GetHashCode();
      if (RewChoiceItemId6 != 0) hash ^= RewChoiceItemId6.GetHashCode();
      if (RewChoiceItemCount1 != 0) hash ^= RewChoiceItemCount1.GetHashCode();
      if (RewChoiceItemCount2 != 0) hash ^= RewChoiceItemCount2.GetHashCode();
      if (RewChoiceItemCount3 != 0) hash ^= RewChoiceItemCount3.GetHashCode();
      if (RewChoiceItemCount4 != 0) hash ^= RewChoiceItemCount4.GetHashCode();
      if (RewChoiceItemCount5 != 0) hash ^= RewChoiceItemCount5.GetHashCode();
      if (RewChoiceItemCount6 != 0) hash ^= RewChoiceItemCount6.GetHashCode();
      if (RewItemId1 != 0) hash ^= RewItemId1.GetHashCode();
      if (RewItemId2 != 0) hash ^= RewItemId2.GetHashCode();
      if (RewItemId3 != 0) hash ^= RewItemId3.GetHashCode();
      if (RewItemId4 != 0) hash ^= RewItemId4.GetHashCode();
      if (RewItemCount1 != 0) hash ^= RewItemCount1.GetHashCode();
      if (RewItemCount2 != 0) hash ^= RewItemCount2.GetHashCode();
      if (RewItemCount3 != 0) hash ^= RewItemCount3.GetHashCode();
      if (RewItemCount4 != 0) hash ^= RewItemCount4.GetHashCode();
      if (RewRepFaction1 != 0) hash ^= RewRepFaction1.GetHashCode();
      if (RewRepFaction2 != 0) hash ^= RewRepFaction2.GetHashCode();
      if (RewRepFaction3 != 0) hash ^= RewRepFaction3.GetHashCode();
      if (RewRepFaction4 != 0) hash ^= RewRepFaction4.GetHashCode();
      if (RewRepFaction5 != 0) hash ^= RewRepFaction5.GetHashCode();
      if (RewRepValue1 != 0) hash ^= RewRepValue1.GetHashCode();
      if (RewRepValue2 != 0) hash ^= RewRepValue2.GetHashCode();
      if (RewRepValue3 != 0) hash ^= RewRepValue3.GetHashCode();
      if (RewRepValue4 != 0) hash ^= RewRepValue4.GetHashCode();
      if (RewRepValue5 != 0) hash ^= RewRepValue5.GetHashCode();
      if (RewOrReqMoney != 0) hash ^= RewOrReqMoney.GetHashCode();
      if (RewMoneyMaxLevel != 0) hash ^= RewMoneyMaxLevel.GetHashCode();
      if (RewSpell != 0) hash ^= RewSpell.GetHashCode();
      if (RewSpellCast != 0) hash ^= RewSpellCast.GetHashCode();
      if (RewMailTemplateId != 0) hash ^= RewMailTemplateId.GetHashCode();
      if (RewMailDelaySecs != 0) hash ^= RewMailDelaySecs.GetHashCode();
      if (PointMapId != 0) hash ^= PointMapId.GetHashCode();
      if (PointX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PointX);
      if (PointY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PointY);
      if (PointOpt != 0) hash ^= PointOpt.GetHashCode();
      if (DetailsEmote1 != 0) hash ^= DetailsEmote1.GetHashCode();
      if (DetailsEmote2 != 0) hash ^= DetailsEmote2.GetHashCode();
      if (DetailsEmote3 != 0) hash ^= DetailsEmote3.GetHashCode();
      if (DetailsEmote4 != 0) hash ^= DetailsEmote4.GetHashCode();
      if (DetailsEmoteDelay1 != 0) hash ^= DetailsEmoteDelay1.GetHashCode();
      if (DetailsEmoteDelay2 != 0) hash ^= DetailsEmoteDelay2.GetHashCode();
      if (DetailsEmoteDelay3 != 0) hash ^= DetailsEmoteDelay3.GetHashCode();
      if (DetailsEmoteDelay4 != 0) hash ^= DetailsEmoteDelay4.GetHashCode();
      if (IncompleteEmote != 0) hash ^= IncompleteEmote.GetHashCode();
      if (CompleteEmote != 0) hash ^= CompleteEmote.GetHashCode();
      if (OfferRewardEmote1 != 0) hash ^= OfferRewardEmote1.GetHashCode();
      if (OfferRewardEmote2 != 0) hash ^= OfferRewardEmote2.GetHashCode();
      if (OfferRewardEmote3 != 0) hash ^= OfferRewardEmote3.GetHashCode();
      if (OfferRewardEmote4 != 0) hash ^= OfferRewardEmote4.GetHashCode();
      if (OfferRewardEmoteDelay1 != 0) hash ^= OfferRewardEmoteDelay1.GetHashCode();
      if (OfferRewardEmoteDelay2 != 0) hash ^= OfferRewardEmoteDelay2.GetHashCode();
      if (OfferRewardEmoteDelay3 != 0) hash ^= OfferRewardEmoteDelay3.GetHashCode();
      if (OfferRewardEmoteDelay4 != 0) hash ^= OfferRewardEmoteDelay4.GetHashCode();
      if (StartScript != 0) hash ^= StartScript.GetHashCode();
      if (CompleteScript != 0) hash ^= CompleteScript.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Method != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Method);
      }
      if (ZoneOrSort != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ZoneOrSort);
      }
      if (MinLevel != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinLevel);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxLevel);
      }
      if (QuestLevel != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(QuestLevel);
      }
      if (Type != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Type);
      }
      if (RequiredClasses != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RequiredClasses);
      }
      if (RequiredRaces != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RequiredRaces);
      }
      if (RequiredSkill != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(RequiredSkill);
      }
      if (RequiredSkillValue != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(RequiredSkillValue);
      }
      if (RepObjectiveFaction != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RepObjectiveFaction);
      }
      if (RepObjectiveValue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RepObjectiveValue);
      }
      if (RequiredMinRepFaction != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RequiredMinRepFaction);
      }
      if (RequiredMinRepValue != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RequiredMinRepValue);
      }
      if (RequiredMaxRepFaction != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RequiredMaxRepFaction);
      }
      if (RequiredMaxRepValue != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(RequiredMaxRepValue);
      }
      if (SuggestedPlayers != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(SuggestedPlayers);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(LimitTime);
      }
      if (QuestFlags != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(QuestFlags);
      }
      if (SpecialFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(SpecialFlags);
      }
      if (PrevQuestId != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(PrevQuestId);
      }
      if (NextQuestId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NextQuestId);
      }
      if (ExclusiveGroup != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(ExclusiveGroup);
      }
      if (NextQuestInChain != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(NextQuestInChain);
      }
      if (SrcItemId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(SrcItemId);
      }
      if (SrcItemCount != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(SrcItemCount);
      }
      if (SrcSpell != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(SrcSpell);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(Title);
      }
      if (Details.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Details);
      }
      if (Objectives.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(Objectives);
      }
      if (OfferRewardText.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OfferRewardText);
      }
      if (RequestItemsText.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(RequestItemsText);
      }
      if (EndText.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(EndText);
      }
      if (ObjectiveText1.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ObjectiveText1);
      }
      if (ObjectiveText2.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(ObjectiveText2);
      }
      if (ObjectiveText3.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ObjectiveText3);
      }
      if (ObjectiveText4.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(ObjectiveText4);
      }
      if (ReqItemId1 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(ReqItemId1);
      }
      if (ReqItemId2 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(ReqItemId2);
      }
      if (ReqItemId3 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(ReqItemId3);
      }
      if (ReqItemId4 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(ReqItemId4);
      }
      if (ReqItemCount1 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(ReqItemCount1);
      }
      if (ReqItemCount2 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(ReqItemCount2);
      }
      if (ReqItemCount3 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ReqItemCount3);
      }
      if (ReqItemCount4 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(ReqItemCount4);
      }
      if (ReqSourceId1 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(ReqSourceId1);
      }
      if (ReqSourceId2 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(ReqSourceId2);
      }
      if (ReqSourceId3 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(ReqSourceId3);
      }
      if (ReqSourceId4 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(ReqSourceId4);
      }
      if (ReqSourceCount1 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(ReqSourceCount1);
      }
      if (ReqSourceCount2 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(ReqSourceCount2);
      }
      if (ReqSourceCount3 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(ReqSourceCount3);
      }
      if (ReqSourceCount4 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(ReqSourceCount4);
      }
      if (ReqCreatureOrGoId1 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ReqCreatureOrGoId1);
      }
      if (ReqCreatureOrGoId2 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(ReqCreatureOrGoId2);
      }
      if (ReqCreatureOrGoId3 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(ReqCreatureOrGoId3);
      }
      if (ReqCreatureOrGoId4 != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(ReqCreatureOrGoId4);
      }
      if (ReqCreatureOrGoCount1 != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(ReqCreatureOrGoCount1);
      }
      if (ReqCreatureOrGoCount2 != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(ReqCreatureOrGoCount2);
      }
      if (ReqCreatureOrGoCount3 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(ReqCreatureOrGoCount3);
      }
      if (ReqCreatureOrGoCount4 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(ReqCreatureOrGoCount4);
      }
      if (ReqSpellCast1 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(ReqSpellCast1);
      }
      if (ReqSpellCast2 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(ReqSpellCast2);
      }
      if (ReqSpellCast3 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(ReqSpellCast3);
      }
      if (ReqSpellCast4 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(ReqSpellCast4);
      }
      if (RewChoiceItemId1 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(RewChoiceItemId1);
      }
      if (RewChoiceItemId2 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(RewChoiceItemId2);
      }
      if (RewChoiceItemId3 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(RewChoiceItemId3);
      }
      if (RewChoiceItemId4 != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(RewChoiceItemId4);
      }
      if (RewChoiceItemId5 != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(RewChoiceItemId5);
      }
      if (RewChoiceItemId6 != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(RewChoiceItemId6);
      }
      if (RewChoiceItemCount1 != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(RewChoiceItemCount1);
      }
      if (RewChoiceItemCount2 != 0) {
        output.WriteRawTag(216, 4);
        output.WriteUInt32(RewChoiceItemCount2);
      }
      if (RewChoiceItemCount3 != 0) {
        output.WriteRawTag(224, 4);
        output.WriteUInt32(RewChoiceItemCount3);
      }
      if (RewChoiceItemCount4 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteUInt32(RewChoiceItemCount4);
      }
      if (RewChoiceItemCount5 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteUInt32(RewChoiceItemCount5);
      }
      if (RewChoiceItemCount6 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteUInt32(RewChoiceItemCount6);
      }
      if (RewItemId1 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(RewItemId1);
      }
      if (RewItemId2 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(RewItemId2);
      }
      if (RewItemId3 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(RewItemId3);
      }
      if (RewItemId4 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(RewItemId4);
      }
      if (RewItemCount1 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(RewItemCount1);
      }
      if (RewItemCount2 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(RewItemCount2);
      }
      if (RewItemCount3 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(RewItemCount3);
      }
      if (RewItemCount4 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(RewItemCount4);
      }
      if (RewRepFaction1 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(RewRepFaction1);
      }
      if (RewRepFaction2 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(RewRepFaction2);
      }
      if (RewRepFaction3 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(RewRepFaction3);
      }
      if (RewRepFaction4 != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(RewRepFaction4);
      }
      if (RewRepFaction5 != 0) {
        output.WriteRawTag(224, 5);
        output.WriteUInt32(RewRepFaction5);
      }
      if (RewRepValue1 != 0) {
        output.WriteRawTag(232, 5);
        output.WriteInt32(RewRepValue1);
      }
      if (RewRepValue2 != 0) {
        output.WriteRawTag(240, 5);
        output.WriteInt32(RewRepValue2);
      }
      if (RewRepValue3 != 0) {
        output.WriteRawTag(248, 5);
        output.WriteInt32(RewRepValue3);
      }
      if (RewRepValue4 != 0) {
        output.WriteRawTag(128, 6);
        output.WriteInt32(RewRepValue4);
      }
      if (RewRepValue5 != 0) {
        output.WriteRawTag(136, 6);
        output.WriteInt32(RewRepValue5);
      }
      if (RewOrReqMoney != 0) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(RewOrReqMoney);
      }
      if (RewMoneyMaxLevel != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(RewMoneyMaxLevel);
      }
      if (RewSpell != 0) {
        output.WriteRawTag(160, 6);
        output.WriteUInt32(RewSpell);
      }
      if (RewSpellCast != 0) {
        output.WriteRawTag(168, 6);
        output.WriteUInt32(RewSpellCast);
      }
      if (RewMailTemplateId != 0) {
        output.WriteRawTag(176, 6);
        output.WriteUInt32(RewMailTemplateId);
      }
      if (RewMailDelaySecs != 0) {
        output.WriteRawTag(184, 6);
        output.WriteUInt32(RewMailDelaySecs);
      }
      if (PointMapId != 0) {
        output.WriteRawTag(192, 6);
        output.WriteUInt32(PointMapId);
      }
      if (PointX != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(PointX);
      }
      if (PointY != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PointY);
      }
      if (PointOpt != 0) {
        output.WriteRawTag(216, 6);
        output.WriteUInt32(PointOpt);
      }
      if (DetailsEmote1 != 0) {
        output.WriteRawTag(224, 6);
        output.WriteUInt32(DetailsEmote1);
      }
      if (DetailsEmote2 != 0) {
        output.WriteRawTag(232, 6);
        output.WriteUInt32(DetailsEmote2);
      }
      if (DetailsEmote3 != 0) {
        output.WriteRawTag(240, 6);
        output.WriteUInt32(DetailsEmote3);
      }
      if (DetailsEmote4 != 0) {
        output.WriteRawTag(248, 6);
        output.WriteUInt32(DetailsEmote4);
      }
      if (DetailsEmoteDelay1 != 0) {
        output.WriteRawTag(128, 7);
        output.WriteUInt32(DetailsEmoteDelay1);
      }
      if (DetailsEmoteDelay2 != 0) {
        output.WriteRawTag(136, 7);
        output.WriteUInt32(DetailsEmoteDelay2);
      }
      if (DetailsEmoteDelay3 != 0) {
        output.WriteRawTag(144, 7);
        output.WriteUInt32(DetailsEmoteDelay3);
      }
      if (DetailsEmoteDelay4 != 0) {
        output.WriteRawTag(152, 7);
        output.WriteUInt32(DetailsEmoteDelay4);
      }
      if (IncompleteEmote != 0) {
        output.WriteRawTag(160, 7);
        output.WriteUInt32(IncompleteEmote);
      }
      if (CompleteEmote != 0) {
        output.WriteRawTag(168, 7);
        output.WriteUInt32(CompleteEmote);
      }
      if (OfferRewardEmote1 != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(OfferRewardEmote1);
      }
      if (OfferRewardEmote2 != 0) {
        output.WriteRawTag(184, 7);
        output.WriteUInt32(OfferRewardEmote2);
      }
      if (OfferRewardEmote3 != 0) {
        output.WriteRawTag(192, 7);
        output.WriteUInt32(OfferRewardEmote3);
      }
      if (OfferRewardEmote4 != 0) {
        output.WriteRawTag(200, 7);
        output.WriteUInt32(OfferRewardEmote4);
      }
      if (OfferRewardEmoteDelay1 != 0) {
        output.WriteRawTag(208, 7);
        output.WriteUInt32(OfferRewardEmoteDelay1);
      }
      if (OfferRewardEmoteDelay2 != 0) {
        output.WriteRawTag(216, 7);
        output.WriteUInt32(OfferRewardEmoteDelay2);
      }
      if (OfferRewardEmoteDelay3 != 0) {
        output.WriteRawTag(224, 7);
        output.WriteUInt32(OfferRewardEmoteDelay3);
      }
      if (OfferRewardEmoteDelay4 != 0) {
        output.WriteRawTag(232, 7);
        output.WriteUInt32(OfferRewardEmoteDelay4);
      }
      if (StartScript != 0) {
        output.WriteRawTag(240, 7);
        output.WriteUInt32(StartScript);
      }
      if (CompleteScript != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(CompleteScript);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Patch != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Patch);
      }
      if (Method != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Method);
      }
      if (ZoneOrSort != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ZoneOrSort);
      }
      if (MinLevel != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MinLevel);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxLevel);
      }
      if (QuestLevel != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(QuestLevel);
      }
      if (Type != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Type);
      }
      if (RequiredClasses != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RequiredClasses);
      }
      if (RequiredRaces != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RequiredRaces);
      }
      if (RequiredSkill != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(RequiredSkill);
      }
      if (RequiredSkillValue != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(RequiredSkillValue);
      }
      if (RepObjectiveFaction != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RepObjectiveFaction);
      }
      if (RepObjectiveValue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(RepObjectiveValue);
      }
      if (RequiredMinRepFaction != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RequiredMinRepFaction);
      }
      if (RequiredMinRepValue != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RequiredMinRepValue);
      }
      if (RequiredMaxRepFaction != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RequiredMaxRepFaction);
      }
      if (RequiredMaxRepValue != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(RequiredMaxRepValue);
      }
      if (SuggestedPlayers != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(SuggestedPlayers);
      }
      if (LimitTime != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(LimitTime);
      }
      if (QuestFlags != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(QuestFlags);
      }
      if (SpecialFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(SpecialFlags);
      }
      if (PrevQuestId != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(PrevQuestId);
      }
      if (NextQuestId != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(NextQuestId);
      }
      if (ExclusiveGroup != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(ExclusiveGroup);
      }
      if (NextQuestInChain != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(NextQuestInChain);
      }
      if (SrcItemId != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(SrcItemId);
      }
      if (SrcItemCount != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(SrcItemCount);
      }
      if (SrcSpell != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(SrcSpell);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(Title);
      }
      if (Details.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Details);
      }
      if (Objectives.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(Objectives);
      }
      if (OfferRewardText.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(OfferRewardText);
      }
      if (RequestItemsText.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(RequestItemsText);
      }
      if (EndText.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(EndText);
      }
      if (ObjectiveText1.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ObjectiveText1);
      }
      if (ObjectiveText2.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(ObjectiveText2);
      }
      if (ObjectiveText3.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ObjectiveText3);
      }
      if (ObjectiveText4.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(ObjectiveText4);
      }
      if (ReqItemId1 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(ReqItemId1);
      }
      if (ReqItemId2 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(ReqItemId2);
      }
      if (ReqItemId3 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(ReqItemId3);
      }
      if (ReqItemId4 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(ReqItemId4);
      }
      if (ReqItemCount1 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(ReqItemCount1);
      }
      if (ReqItemCount2 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(ReqItemCount2);
      }
      if (ReqItemCount3 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(ReqItemCount3);
      }
      if (ReqItemCount4 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(ReqItemCount4);
      }
      if (ReqSourceId1 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(ReqSourceId1);
      }
      if (ReqSourceId2 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(ReqSourceId2);
      }
      if (ReqSourceId3 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(ReqSourceId3);
      }
      if (ReqSourceId4 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(ReqSourceId4);
      }
      if (ReqSourceCount1 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(ReqSourceCount1);
      }
      if (ReqSourceCount2 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(ReqSourceCount2);
      }
      if (ReqSourceCount3 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(ReqSourceCount3);
      }
      if (ReqSourceCount4 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(ReqSourceCount4);
      }
      if (ReqCreatureOrGoId1 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ReqCreatureOrGoId1);
      }
      if (ReqCreatureOrGoId2 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(ReqCreatureOrGoId2);
      }
      if (ReqCreatureOrGoId3 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(ReqCreatureOrGoId3);
      }
      if (ReqCreatureOrGoId4 != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(ReqCreatureOrGoId4);
      }
      if (ReqCreatureOrGoCount1 != 0) {
        output.WriteRawTag(224, 3);
        output.WriteUInt32(ReqCreatureOrGoCount1);
      }
      if (ReqCreatureOrGoCount2 != 0) {
        output.WriteRawTag(232, 3);
        output.WriteUInt32(ReqCreatureOrGoCount2);
      }
      if (ReqCreatureOrGoCount3 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(ReqCreatureOrGoCount3);
      }
      if (ReqCreatureOrGoCount4 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(ReqCreatureOrGoCount4);
      }
      if (ReqSpellCast1 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(ReqSpellCast1);
      }
      if (ReqSpellCast2 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteUInt32(ReqSpellCast2);
      }
      if (ReqSpellCast3 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteUInt32(ReqSpellCast3);
      }
      if (ReqSpellCast4 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteUInt32(ReqSpellCast4);
      }
      if (RewChoiceItemId1 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteUInt32(RewChoiceItemId1);
      }
      if (RewChoiceItemId2 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteUInt32(RewChoiceItemId2);
      }
      if (RewChoiceItemId3 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(RewChoiceItemId3);
      }
      if (RewChoiceItemId4 != 0) {
        output.WriteRawTag(184, 4);
        output.WriteUInt32(RewChoiceItemId4);
      }
      if (RewChoiceItemId5 != 0) {
        output.WriteRawTag(192, 4);
        output.WriteUInt32(RewChoiceItemId5);
      }
      if (RewChoiceItemId6 != 0) {
        output.WriteRawTag(200, 4);
        output.WriteUInt32(RewChoiceItemId6);
      }
      if (RewChoiceItemCount1 != 0) {
        output.WriteRawTag(208, 4);
        output.WriteUInt32(RewChoiceItemCount1);
      }
      if (RewChoiceItemCount2 != 0) {
        output.WriteRawTag(216, 4);
        output.WriteUInt32(RewChoiceItemCount2);
      }
      if (RewChoiceItemCount3 != 0) {
        output.WriteRawTag(224, 4);
        output.WriteUInt32(RewChoiceItemCount3);
      }
      if (RewChoiceItemCount4 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteUInt32(RewChoiceItemCount4);
      }
      if (RewChoiceItemCount5 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteUInt32(RewChoiceItemCount5);
      }
      if (RewChoiceItemCount6 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteUInt32(RewChoiceItemCount6);
      }
      if (RewItemId1 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(RewItemId1);
      }
      if (RewItemId2 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(RewItemId2);
      }
      if (RewItemId3 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(RewItemId3);
      }
      if (RewItemId4 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(RewItemId4);
      }
      if (RewItemCount1 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(RewItemCount1);
      }
      if (RewItemCount2 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(RewItemCount2);
      }
      if (RewItemCount3 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(RewItemCount3);
      }
      if (RewItemCount4 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(RewItemCount4);
      }
      if (RewRepFaction1 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(RewRepFaction1);
      }
      if (RewRepFaction2 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(RewRepFaction2);
      }
      if (RewRepFaction3 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(RewRepFaction3);
      }
      if (RewRepFaction4 != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(RewRepFaction4);
      }
      if (RewRepFaction5 != 0) {
        output.WriteRawTag(224, 5);
        output.WriteUInt32(RewRepFaction5);
      }
      if (RewRepValue1 != 0) {
        output.WriteRawTag(232, 5);
        output.WriteInt32(RewRepValue1);
      }
      if (RewRepValue2 != 0) {
        output.WriteRawTag(240, 5);
        output.WriteInt32(RewRepValue2);
      }
      if (RewRepValue3 != 0) {
        output.WriteRawTag(248, 5);
        output.WriteInt32(RewRepValue3);
      }
      if (RewRepValue4 != 0) {
        output.WriteRawTag(128, 6);
        output.WriteInt32(RewRepValue4);
      }
      if (RewRepValue5 != 0) {
        output.WriteRawTag(136, 6);
        output.WriteInt32(RewRepValue5);
      }
      if (RewOrReqMoney != 0) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(RewOrReqMoney);
      }
      if (RewMoneyMaxLevel != 0) {
        output.WriteRawTag(152, 6);
        output.WriteUInt32(RewMoneyMaxLevel);
      }
      if (RewSpell != 0) {
        output.WriteRawTag(160, 6);
        output.WriteUInt32(RewSpell);
      }
      if (RewSpellCast != 0) {
        output.WriteRawTag(168, 6);
        output.WriteUInt32(RewSpellCast);
      }
      if (RewMailTemplateId != 0) {
        output.WriteRawTag(176, 6);
        output.WriteUInt32(RewMailTemplateId);
      }
      if (RewMailDelaySecs != 0) {
        output.WriteRawTag(184, 6);
        output.WriteUInt32(RewMailDelaySecs);
      }
      if (PointMapId != 0) {
        output.WriteRawTag(192, 6);
        output.WriteUInt32(PointMapId);
      }
      if (PointX != 0F) {
        output.WriteRawTag(205, 6);
        output.WriteFloat(PointX);
      }
      if (PointY != 0F) {
        output.WriteRawTag(213, 6);
        output.WriteFloat(PointY);
      }
      if (PointOpt != 0) {
        output.WriteRawTag(216, 6);
        output.WriteUInt32(PointOpt);
      }
      if (DetailsEmote1 != 0) {
        output.WriteRawTag(224, 6);
        output.WriteUInt32(DetailsEmote1);
      }
      if (DetailsEmote2 != 0) {
        output.WriteRawTag(232, 6);
        output.WriteUInt32(DetailsEmote2);
      }
      if (DetailsEmote3 != 0) {
        output.WriteRawTag(240, 6);
        output.WriteUInt32(DetailsEmote3);
      }
      if (DetailsEmote4 != 0) {
        output.WriteRawTag(248, 6);
        output.WriteUInt32(DetailsEmote4);
      }
      if (DetailsEmoteDelay1 != 0) {
        output.WriteRawTag(128, 7);
        output.WriteUInt32(DetailsEmoteDelay1);
      }
      if (DetailsEmoteDelay2 != 0) {
        output.WriteRawTag(136, 7);
        output.WriteUInt32(DetailsEmoteDelay2);
      }
      if (DetailsEmoteDelay3 != 0) {
        output.WriteRawTag(144, 7);
        output.WriteUInt32(DetailsEmoteDelay3);
      }
      if (DetailsEmoteDelay4 != 0) {
        output.WriteRawTag(152, 7);
        output.WriteUInt32(DetailsEmoteDelay4);
      }
      if (IncompleteEmote != 0) {
        output.WriteRawTag(160, 7);
        output.WriteUInt32(IncompleteEmote);
      }
      if (CompleteEmote != 0) {
        output.WriteRawTag(168, 7);
        output.WriteUInt32(CompleteEmote);
      }
      if (OfferRewardEmote1 != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(OfferRewardEmote1);
      }
      if (OfferRewardEmote2 != 0) {
        output.WriteRawTag(184, 7);
        output.WriteUInt32(OfferRewardEmote2);
      }
      if (OfferRewardEmote3 != 0) {
        output.WriteRawTag(192, 7);
        output.WriteUInt32(OfferRewardEmote3);
      }
      if (OfferRewardEmote4 != 0) {
        output.WriteRawTag(200, 7);
        output.WriteUInt32(OfferRewardEmote4);
      }
      if (OfferRewardEmoteDelay1 != 0) {
        output.WriteRawTag(208, 7);
        output.WriteUInt32(OfferRewardEmoteDelay1);
      }
      if (OfferRewardEmoteDelay2 != 0) {
        output.WriteRawTag(216, 7);
        output.WriteUInt32(OfferRewardEmoteDelay2);
      }
      if (OfferRewardEmoteDelay3 != 0) {
        output.WriteRawTag(224, 7);
        output.WriteUInt32(OfferRewardEmoteDelay3);
      }
      if (OfferRewardEmoteDelay4 != 0) {
        output.WriteRawTag(232, 7);
        output.WriteUInt32(OfferRewardEmoteDelay4);
      }
      if (StartScript != 0) {
        output.WriteRawTag(240, 7);
        output.WriteUInt32(StartScript);
      }
      if (CompleteScript != 0) {
        output.WriteRawTag(248, 7);
        output.WriteUInt32(CompleteScript);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Patch);
      }
      if (Method != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Method);
      }
      if (ZoneOrSort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZoneOrSort);
      }
      if (MinLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinLevel);
      }
      if (MaxLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLevel);
      }
      if (QuestLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestLevel);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (RequiredClasses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredClasses);
      }
      if (RequiredRaces != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredRaces);
      }
      if (RequiredSkill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSkill);
      }
      if (RequiredSkillValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSkillValue);
      }
      if (RepObjectiveFaction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RepObjectiveFaction);
      }
      if (RepObjectiveValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RepObjectiveValue);
      }
      if (RequiredMinRepFaction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredMinRepFaction);
      }
      if (RequiredMinRepValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RequiredMinRepValue);
      }
      if (RequiredMaxRepFaction != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredMaxRepFaction);
      }
      if (RequiredMaxRepValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RequiredMaxRepValue);
      }
      if (SuggestedPlayers != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SuggestedPlayers);
      }
      if (LimitTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LimitTime);
      }
      if (QuestFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QuestFlags);
      }
      if (SpecialFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpecialFlags);
      }
      if (PrevQuestId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrevQuestId);
      }
      if (NextQuestId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NextQuestId);
      }
      if (ExclusiveGroup != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExclusiveGroup);
      }
      if (NextQuestInChain != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NextQuestInChain);
      }
      if (SrcItemId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SrcItemId);
      }
      if (SrcItemCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SrcItemCount);
      }
      if (SrcSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SrcSpell);
      }
      if (Title.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Details.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Details);
      }
      if (Objectives.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Objectives);
      }
      if (OfferRewardText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfferRewardText);
      }
      if (RequestItemsText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RequestItemsText);
      }
      if (EndText.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndText);
      }
      if (ObjectiveText1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText1);
      }
      if (ObjectiveText2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText2);
      }
      if (ObjectiveText3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText3);
      }
      if (ObjectiveText4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ObjectiveText4);
      }
      if (ReqItemId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemId1);
      }
      if (ReqItemId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemId2);
      }
      if (ReqItemId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemId3);
      }
      if (ReqItemId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemId4);
      }
      if (ReqItemCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemCount1);
      }
      if (ReqItemCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemCount2);
      }
      if (ReqItemCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemCount3);
      }
      if (ReqItemCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqItemCount4);
      }
      if (ReqSourceId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceId1);
      }
      if (ReqSourceId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceId2);
      }
      if (ReqSourceId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceId3);
      }
      if (ReqSourceId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceId4);
      }
      if (ReqSourceCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceCount1);
      }
      if (ReqSourceCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceCount2);
      }
      if (ReqSourceCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceCount3);
      }
      if (ReqSourceCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSourceCount4);
      }
      if (ReqCreatureOrGoId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReqCreatureOrGoId1);
      }
      if (ReqCreatureOrGoId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReqCreatureOrGoId2);
      }
      if (ReqCreatureOrGoId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReqCreatureOrGoId3);
      }
      if (ReqCreatureOrGoId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ReqCreatureOrGoId4);
      }
      if (ReqCreatureOrGoCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqCreatureOrGoCount1);
      }
      if (ReqCreatureOrGoCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqCreatureOrGoCount2);
      }
      if (ReqCreatureOrGoCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqCreatureOrGoCount3);
      }
      if (ReqCreatureOrGoCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqCreatureOrGoCount4);
      }
      if (ReqSpellCast1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpellCast1);
      }
      if (ReqSpellCast2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpellCast2);
      }
      if (ReqSpellCast3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpellCast3);
      }
      if (ReqSpellCast4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpellCast4);
      }
      if (RewChoiceItemId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId1);
      }
      if (RewChoiceItemId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId2);
      }
      if (RewChoiceItemId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId3);
      }
      if (RewChoiceItemId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId4);
      }
      if (RewChoiceItemId5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId5);
      }
      if (RewChoiceItemId6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemId6);
      }
      if (RewChoiceItemCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount1);
      }
      if (RewChoiceItemCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount2);
      }
      if (RewChoiceItemCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount3);
      }
      if (RewChoiceItemCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount4);
      }
      if (RewChoiceItemCount5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount5);
      }
      if (RewChoiceItemCount6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewChoiceItemCount6);
      }
      if (RewItemId1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemId1);
      }
      if (RewItemId2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemId2);
      }
      if (RewItemId3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemId3);
      }
      if (RewItemId4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemId4);
      }
      if (RewItemCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemCount1);
      }
      if (RewItemCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemCount2);
      }
      if (RewItemCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemCount3);
      }
      if (RewItemCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewItemCount4);
      }
      if (RewRepFaction1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewRepFaction1);
      }
      if (RewRepFaction2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewRepFaction2);
      }
      if (RewRepFaction3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewRepFaction3);
      }
      if (RewRepFaction4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewRepFaction4);
      }
      if (RewRepFaction5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewRepFaction5);
      }
      if (RewRepValue1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewRepValue1);
      }
      if (RewRepValue2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewRepValue2);
      }
      if (RewRepValue3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewRepValue3);
      }
      if (RewRepValue4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewRepValue4);
      }
      if (RewRepValue5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewRepValue5);
      }
      if (RewOrReqMoney != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RewOrReqMoney);
      }
      if (RewMoneyMaxLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewMoneyMaxLevel);
      }
      if (RewSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewSpell);
      }
      if (RewSpellCast != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewSpellCast);
      }
      if (RewMailTemplateId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewMailTemplateId);
      }
      if (RewMailDelaySecs != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RewMailDelaySecs);
      }
      if (PointMapId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PointMapId);
      }
      if (PointX != 0F) {
        size += 2 + 4;
      }
      if (PointY != 0F) {
        size += 2 + 4;
      }
      if (PointOpt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PointOpt);
      }
      if (DetailsEmote1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmote1);
      }
      if (DetailsEmote2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmote2);
      }
      if (DetailsEmote3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmote3);
      }
      if (DetailsEmote4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmote4);
      }
      if (DetailsEmoteDelay1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmoteDelay1);
      }
      if (DetailsEmoteDelay2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmoteDelay2);
      }
      if (DetailsEmoteDelay3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmoteDelay3);
      }
      if (DetailsEmoteDelay4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DetailsEmoteDelay4);
      }
      if (IncompleteEmote != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(IncompleteEmote);
      }
      if (CompleteEmote != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CompleteEmote);
      }
      if (OfferRewardEmote1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmote1);
      }
      if (OfferRewardEmote2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmote2);
      }
      if (OfferRewardEmote3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmote3);
      }
      if (OfferRewardEmote4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmote4);
      }
      if (OfferRewardEmoteDelay1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmoteDelay1);
      }
      if (OfferRewardEmoteDelay2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmoteDelay2);
      }
      if (OfferRewardEmoteDelay3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmoteDelay3);
      }
      if (OfferRewardEmoteDelay4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OfferRewardEmoteDelay4);
      }
      if (StartScript != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StartScript);
      }
      if (CompleteScript != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CompleteScript);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      if (other.Method != 0) {
        Method = other.Method;
      }
      if (other.ZoneOrSort != 0) {
        ZoneOrSort = other.ZoneOrSort;
      }
      if (other.MinLevel != 0) {
        MinLevel = other.MinLevel;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.QuestLevel != 0) {
        QuestLevel = other.QuestLevel;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.RequiredClasses != 0) {
        RequiredClasses = other.RequiredClasses;
      }
      if (other.RequiredRaces != 0) {
        RequiredRaces = other.RequiredRaces;
      }
      if (other.RequiredSkill != 0) {
        RequiredSkill = other.RequiredSkill;
      }
      if (other.RequiredSkillValue != 0) {
        RequiredSkillValue = other.RequiredSkillValue;
      }
      if (other.RepObjectiveFaction != 0) {
        RepObjectiveFaction = other.RepObjectiveFaction;
      }
      if (other.RepObjectiveValue != 0) {
        RepObjectiveValue = other.RepObjectiveValue;
      }
      if (other.RequiredMinRepFaction != 0) {
        RequiredMinRepFaction = other.RequiredMinRepFaction;
      }
      if (other.RequiredMinRepValue != 0) {
        RequiredMinRepValue = other.RequiredMinRepValue;
      }
      if (other.RequiredMaxRepFaction != 0) {
        RequiredMaxRepFaction = other.RequiredMaxRepFaction;
      }
      if (other.RequiredMaxRepValue != 0) {
        RequiredMaxRepValue = other.RequiredMaxRepValue;
      }
      if (other.SuggestedPlayers != 0) {
        SuggestedPlayers = other.SuggestedPlayers;
      }
      if (other.LimitTime != 0) {
        LimitTime = other.LimitTime;
      }
      if (other.QuestFlags != 0) {
        QuestFlags = other.QuestFlags;
      }
      if (other.SpecialFlags != 0) {
        SpecialFlags = other.SpecialFlags;
      }
      if (other.PrevQuestId != 0) {
        PrevQuestId = other.PrevQuestId;
      }
      if (other.NextQuestId != 0) {
        NextQuestId = other.NextQuestId;
      }
      if (other.ExclusiveGroup != 0) {
        ExclusiveGroup = other.ExclusiveGroup;
      }
      if (other.NextQuestInChain != 0) {
        NextQuestInChain = other.NextQuestInChain;
      }
      if (other.SrcItemId != 0) {
        SrcItemId = other.SrcItemId;
      }
      if (other.SrcItemCount != 0) {
        SrcItemCount = other.SrcItemCount;
      }
      if (other.SrcSpell != 0) {
        SrcSpell = other.SrcSpell;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Details.Length != 0) {
        Details = other.Details;
      }
      if (other.Objectives.Length != 0) {
        Objectives = other.Objectives;
      }
      if (other.OfferRewardText.Length != 0) {
        OfferRewardText = other.OfferRewardText;
      }
      if (other.RequestItemsText.Length != 0) {
        RequestItemsText = other.RequestItemsText;
      }
      if (other.EndText.Length != 0) {
        EndText = other.EndText;
      }
      if (other.ObjectiveText1.Length != 0) {
        ObjectiveText1 = other.ObjectiveText1;
      }
      if (other.ObjectiveText2.Length != 0) {
        ObjectiveText2 = other.ObjectiveText2;
      }
      if (other.ObjectiveText3.Length != 0) {
        ObjectiveText3 = other.ObjectiveText3;
      }
      if (other.ObjectiveText4.Length != 0) {
        ObjectiveText4 = other.ObjectiveText4;
      }
      if (other.ReqItemId1 != 0) {
        ReqItemId1 = other.ReqItemId1;
      }
      if (other.ReqItemId2 != 0) {
        ReqItemId2 = other.ReqItemId2;
      }
      if (other.ReqItemId3 != 0) {
        ReqItemId3 = other.ReqItemId3;
      }
      if (other.ReqItemId4 != 0) {
        ReqItemId4 = other.ReqItemId4;
      }
      if (other.ReqItemCount1 != 0) {
        ReqItemCount1 = other.ReqItemCount1;
      }
      if (other.ReqItemCount2 != 0) {
        ReqItemCount2 = other.ReqItemCount2;
      }
      if (other.ReqItemCount3 != 0) {
        ReqItemCount3 = other.ReqItemCount3;
      }
      if (other.ReqItemCount4 != 0) {
        ReqItemCount4 = other.ReqItemCount4;
      }
      if (other.ReqSourceId1 != 0) {
        ReqSourceId1 = other.ReqSourceId1;
      }
      if (other.ReqSourceId2 != 0) {
        ReqSourceId2 = other.ReqSourceId2;
      }
      if (other.ReqSourceId3 != 0) {
        ReqSourceId3 = other.ReqSourceId3;
      }
      if (other.ReqSourceId4 != 0) {
        ReqSourceId4 = other.ReqSourceId4;
      }
      if (other.ReqSourceCount1 != 0) {
        ReqSourceCount1 = other.ReqSourceCount1;
      }
      if (other.ReqSourceCount2 != 0) {
        ReqSourceCount2 = other.ReqSourceCount2;
      }
      if (other.ReqSourceCount3 != 0) {
        ReqSourceCount3 = other.ReqSourceCount3;
      }
      if (other.ReqSourceCount4 != 0) {
        ReqSourceCount4 = other.ReqSourceCount4;
      }
      if (other.ReqCreatureOrGoId1 != 0) {
        ReqCreatureOrGoId1 = other.ReqCreatureOrGoId1;
      }
      if (other.ReqCreatureOrGoId2 != 0) {
        ReqCreatureOrGoId2 = other.ReqCreatureOrGoId2;
      }
      if (other.ReqCreatureOrGoId3 != 0) {
        ReqCreatureOrGoId3 = other.ReqCreatureOrGoId3;
      }
      if (other.ReqCreatureOrGoId4 != 0) {
        ReqCreatureOrGoId4 = other.ReqCreatureOrGoId4;
      }
      if (other.ReqCreatureOrGoCount1 != 0) {
        ReqCreatureOrGoCount1 = other.ReqCreatureOrGoCount1;
      }
      if (other.ReqCreatureOrGoCount2 != 0) {
        ReqCreatureOrGoCount2 = other.ReqCreatureOrGoCount2;
      }
      if (other.ReqCreatureOrGoCount3 != 0) {
        ReqCreatureOrGoCount3 = other.ReqCreatureOrGoCount3;
      }
      if (other.ReqCreatureOrGoCount4 != 0) {
        ReqCreatureOrGoCount4 = other.ReqCreatureOrGoCount4;
      }
      if (other.ReqSpellCast1 != 0) {
        ReqSpellCast1 = other.ReqSpellCast1;
      }
      if (other.ReqSpellCast2 != 0) {
        ReqSpellCast2 = other.ReqSpellCast2;
      }
      if (other.ReqSpellCast3 != 0) {
        ReqSpellCast3 = other.ReqSpellCast3;
      }
      if (other.ReqSpellCast4 != 0) {
        ReqSpellCast4 = other.ReqSpellCast4;
      }
      if (other.RewChoiceItemId1 != 0) {
        RewChoiceItemId1 = other.RewChoiceItemId1;
      }
      if (other.RewChoiceItemId2 != 0) {
        RewChoiceItemId2 = other.RewChoiceItemId2;
      }
      if (other.RewChoiceItemId3 != 0) {
        RewChoiceItemId3 = other.RewChoiceItemId3;
      }
      if (other.RewChoiceItemId4 != 0) {
        RewChoiceItemId4 = other.RewChoiceItemId4;
      }
      if (other.RewChoiceItemId5 != 0) {
        RewChoiceItemId5 = other.RewChoiceItemId5;
      }
      if (other.RewChoiceItemId6 != 0) {
        RewChoiceItemId6 = other.RewChoiceItemId6;
      }
      if (other.RewChoiceItemCount1 != 0) {
        RewChoiceItemCount1 = other.RewChoiceItemCount1;
      }
      if (other.RewChoiceItemCount2 != 0) {
        RewChoiceItemCount2 = other.RewChoiceItemCount2;
      }
      if (other.RewChoiceItemCount3 != 0) {
        RewChoiceItemCount3 = other.RewChoiceItemCount3;
      }
      if (other.RewChoiceItemCount4 != 0) {
        RewChoiceItemCount4 = other.RewChoiceItemCount4;
      }
      if (other.RewChoiceItemCount5 != 0) {
        RewChoiceItemCount5 = other.RewChoiceItemCount5;
      }
      if (other.RewChoiceItemCount6 != 0) {
        RewChoiceItemCount6 = other.RewChoiceItemCount6;
      }
      if (other.RewItemId1 != 0) {
        RewItemId1 = other.RewItemId1;
      }
      if (other.RewItemId2 != 0) {
        RewItemId2 = other.RewItemId2;
      }
      if (other.RewItemId3 != 0) {
        RewItemId3 = other.RewItemId3;
      }
      if (other.RewItemId4 != 0) {
        RewItemId4 = other.RewItemId4;
      }
      if (other.RewItemCount1 != 0) {
        RewItemCount1 = other.RewItemCount1;
      }
      if (other.RewItemCount2 != 0) {
        RewItemCount2 = other.RewItemCount2;
      }
      if (other.RewItemCount3 != 0) {
        RewItemCount3 = other.RewItemCount3;
      }
      if (other.RewItemCount4 != 0) {
        RewItemCount4 = other.RewItemCount4;
      }
      if (other.RewRepFaction1 != 0) {
        RewRepFaction1 = other.RewRepFaction1;
      }
      if (other.RewRepFaction2 != 0) {
        RewRepFaction2 = other.RewRepFaction2;
      }
      if (other.RewRepFaction3 != 0) {
        RewRepFaction3 = other.RewRepFaction3;
      }
      if (other.RewRepFaction4 != 0) {
        RewRepFaction4 = other.RewRepFaction4;
      }
      if (other.RewRepFaction5 != 0) {
        RewRepFaction5 = other.RewRepFaction5;
      }
      if (other.RewRepValue1 != 0) {
        RewRepValue1 = other.RewRepValue1;
      }
      if (other.RewRepValue2 != 0) {
        RewRepValue2 = other.RewRepValue2;
      }
      if (other.RewRepValue3 != 0) {
        RewRepValue3 = other.RewRepValue3;
      }
      if (other.RewRepValue4 != 0) {
        RewRepValue4 = other.RewRepValue4;
      }
      if (other.RewRepValue5 != 0) {
        RewRepValue5 = other.RewRepValue5;
      }
      if (other.RewOrReqMoney != 0) {
        RewOrReqMoney = other.RewOrReqMoney;
      }
      if (other.RewMoneyMaxLevel != 0) {
        RewMoneyMaxLevel = other.RewMoneyMaxLevel;
      }
      if (other.RewSpell != 0) {
        RewSpell = other.RewSpell;
      }
      if (other.RewSpellCast != 0) {
        RewSpellCast = other.RewSpellCast;
      }
      if (other.RewMailTemplateId != 0) {
        RewMailTemplateId = other.RewMailTemplateId;
      }
      if (other.RewMailDelaySecs != 0) {
        RewMailDelaySecs = other.RewMailDelaySecs;
      }
      if (other.PointMapId != 0) {
        PointMapId = other.PointMapId;
      }
      if (other.PointX != 0F) {
        PointX = other.PointX;
      }
      if (other.PointY != 0F) {
        PointY = other.PointY;
      }
      if (other.PointOpt != 0) {
        PointOpt = other.PointOpt;
      }
      if (other.DetailsEmote1 != 0) {
        DetailsEmote1 = other.DetailsEmote1;
      }
      if (other.DetailsEmote2 != 0) {
        DetailsEmote2 = other.DetailsEmote2;
      }
      if (other.DetailsEmote3 != 0) {
        DetailsEmote3 = other.DetailsEmote3;
      }
      if (other.DetailsEmote4 != 0) {
        DetailsEmote4 = other.DetailsEmote4;
      }
      if (other.DetailsEmoteDelay1 != 0) {
        DetailsEmoteDelay1 = other.DetailsEmoteDelay1;
      }
      if (other.DetailsEmoteDelay2 != 0) {
        DetailsEmoteDelay2 = other.DetailsEmoteDelay2;
      }
      if (other.DetailsEmoteDelay3 != 0) {
        DetailsEmoteDelay3 = other.DetailsEmoteDelay3;
      }
      if (other.DetailsEmoteDelay4 != 0) {
        DetailsEmoteDelay4 = other.DetailsEmoteDelay4;
      }
      if (other.IncompleteEmote != 0) {
        IncompleteEmote = other.IncompleteEmote;
      }
      if (other.CompleteEmote != 0) {
        CompleteEmote = other.CompleteEmote;
      }
      if (other.OfferRewardEmote1 != 0) {
        OfferRewardEmote1 = other.OfferRewardEmote1;
      }
      if (other.OfferRewardEmote2 != 0) {
        OfferRewardEmote2 = other.OfferRewardEmote2;
      }
      if (other.OfferRewardEmote3 != 0) {
        OfferRewardEmote3 = other.OfferRewardEmote3;
      }
      if (other.OfferRewardEmote4 != 0) {
        OfferRewardEmote4 = other.OfferRewardEmote4;
      }
      if (other.OfferRewardEmoteDelay1 != 0) {
        OfferRewardEmoteDelay1 = other.OfferRewardEmoteDelay1;
      }
      if (other.OfferRewardEmoteDelay2 != 0) {
        OfferRewardEmoteDelay2 = other.OfferRewardEmoteDelay2;
      }
      if (other.OfferRewardEmoteDelay3 != 0) {
        OfferRewardEmoteDelay3 = other.OfferRewardEmoteDelay3;
      }
      if (other.OfferRewardEmoteDelay4 != 0) {
        OfferRewardEmoteDelay4 = other.OfferRewardEmoteDelay4;
      }
      if (other.StartScript != 0) {
        StartScript = other.StartScript;
      }
      if (other.CompleteScript != 0) {
        CompleteScript = other.CompleteScript;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Method = input.ReadUInt32();
            break;
          }
          case 32: {
            ZoneOrSort = input.ReadInt32();
            break;
          }
          case 40: {
            MinLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 56: {
            QuestLevel = input.ReadUInt32();
            break;
          }
          case 64: {
            Type = input.ReadUInt32();
            break;
          }
          case 72: {
            RequiredClasses = input.ReadUInt32();
            break;
          }
          case 80: {
            RequiredRaces = input.ReadUInt32();
            break;
          }
          case 88: {
            RequiredSkill = input.ReadUInt32();
            break;
          }
          case 96: {
            RequiredSkillValue = input.ReadUInt32();
            break;
          }
          case 104: {
            RepObjectiveFaction = input.ReadUInt32();
            break;
          }
          case 112: {
            RepObjectiveValue = input.ReadInt32();
            break;
          }
          case 120: {
            RequiredMinRepFaction = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiredMinRepValue = input.ReadInt32();
            break;
          }
          case 136: {
            RequiredMaxRepFaction = input.ReadUInt32();
            break;
          }
          case 144: {
            RequiredMaxRepValue = input.ReadInt32();
            break;
          }
          case 152: {
            SuggestedPlayers = input.ReadUInt32();
            break;
          }
          case 160: {
            LimitTime = input.ReadUInt32();
            break;
          }
          case 168: {
            QuestFlags = input.ReadUInt32();
            break;
          }
          case 176: {
            SpecialFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            PrevQuestId = input.ReadInt32();
            break;
          }
          case 192: {
            NextQuestId = input.ReadInt32();
            break;
          }
          case 200: {
            ExclusiveGroup = input.ReadInt32();
            break;
          }
          case 208: {
            NextQuestInChain = input.ReadUInt32();
            break;
          }
          case 216: {
            SrcItemId = input.ReadUInt32();
            break;
          }
          case 224: {
            SrcItemCount = input.ReadUInt32();
            break;
          }
          case 232: {
            SrcSpell = input.ReadUInt32();
            break;
          }
          case 242: {
            Title = input.ReadString();
            break;
          }
          case 250: {
            Details = input.ReadString();
            break;
          }
          case 258: {
            Objectives = input.ReadString();
            break;
          }
          case 266: {
            OfferRewardText = input.ReadString();
            break;
          }
          case 274: {
            RequestItemsText = input.ReadString();
            break;
          }
          case 282: {
            EndText = input.ReadString();
            break;
          }
          case 290: {
            ObjectiveText1 = input.ReadString();
            break;
          }
          case 298: {
            ObjectiveText2 = input.ReadString();
            break;
          }
          case 306: {
            ObjectiveText3 = input.ReadString();
            break;
          }
          case 314: {
            ObjectiveText4 = input.ReadString();
            break;
          }
          case 320: {
            ReqItemId1 = input.ReadUInt32();
            break;
          }
          case 328: {
            ReqItemId2 = input.ReadUInt32();
            break;
          }
          case 336: {
            ReqItemId3 = input.ReadUInt32();
            break;
          }
          case 344: {
            ReqItemId4 = input.ReadUInt32();
            break;
          }
          case 352: {
            ReqItemCount1 = input.ReadUInt32();
            break;
          }
          case 360: {
            ReqItemCount2 = input.ReadUInt32();
            break;
          }
          case 368: {
            ReqItemCount3 = input.ReadUInt32();
            break;
          }
          case 376: {
            ReqItemCount4 = input.ReadUInt32();
            break;
          }
          case 384: {
            ReqSourceId1 = input.ReadUInt32();
            break;
          }
          case 392: {
            ReqSourceId2 = input.ReadUInt32();
            break;
          }
          case 400: {
            ReqSourceId3 = input.ReadUInt32();
            break;
          }
          case 408: {
            ReqSourceId4 = input.ReadUInt32();
            break;
          }
          case 416: {
            ReqSourceCount1 = input.ReadUInt32();
            break;
          }
          case 424: {
            ReqSourceCount2 = input.ReadUInt32();
            break;
          }
          case 432: {
            ReqSourceCount3 = input.ReadUInt32();
            break;
          }
          case 440: {
            ReqSourceCount4 = input.ReadUInt32();
            break;
          }
          case 448: {
            ReqCreatureOrGoId1 = input.ReadInt32();
            break;
          }
          case 456: {
            ReqCreatureOrGoId2 = input.ReadInt32();
            break;
          }
          case 464: {
            ReqCreatureOrGoId3 = input.ReadInt32();
            break;
          }
          case 472: {
            ReqCreatureOrGoId4 = input.ReadInt32();
            break;
          }
          case 480: {
            ReqCreatureOrGoCount1 = input.ReadUInt32();
            break;
          }
          case 488: {
            ReqCreatureOrGoCount2 = input.ReadUInt32();
            break;
          }
          case 496: {
            ReqCreatureOrGoCount3 = input.ReadUInt32();
            break;
          }
          case 504: {
            ReqCreatureOrGoCount4 = input.ReadUInt32();
            break;
          }
          case 512: {
            ReqSpellCast1 = input.ReadUInt32();
            break;
          }
          case 520: {
            ReqSpellCast2 = input.ReadUInt32();
            break;
          }
          case 528: {
            ReqSpellCast3 = input.ReadUInt32();
            break;
          }
          case 536: {
            ReqSpellCast4 = input.ReadUInt32();
            break;
          }
          case 544: {
            RewChoiceItemId1 = input.ReadUInt32();
            break;
          }
          case 552: {
            RewChoiceItemId2 = input.ReadUInt32();
            break;
          }
          case 560: {
            RewChoiceItemId3 = input.ReadUInt32();
            break;
          }
          case 568: {
            RewChoiceItemId4 = input.ReadUInt32();
            break;
          }
          case 576: {
            RewChoiceItemId5 = input.ReadUInt32();
            break;
          }
          case 584: {
            RewChoiceItemId6 = input.ReadUInt32();
            break;
          }
          case 592: {
            RewChoiceItemCount1 = input.ReadUInt32();
            break;
          }
          case 600: {
            RewChoiceItemCount2 = input.ReadUInt32();
            break;
          }
          case 608: {
            RewChoiceItemCount3 = input.ReadUInt32();
            break;
          }
          case 616: {
            RewChoiceItemCount4 = input.ReadUInt32();
            break;
          }
          case 624: {
            RewChoiceItemCount5 = input.ReadUInt32();
            break;
          }
          case 632: {
            RewChoiceItemCount6 = input.ReadUInt32();
            break;
          }
          case 640: {
            RewItemId1 = input.ReadUInt32();
            break;
          }
          case 648: {
            RewItemId2 = input.ReadUInt32();
            break;
          }
          case 656: {
            RewItemId3 = input.ReadUInt32();
            break;
          }
          case 664: {
            RewItemId4 = input.ReadUInt32();
            break;
          }
          case 672: {
            RewItemCount1 = input.ReadUInt32();
            break;
          }
          case 680: {
            RewItemCount2 = input.ReadUInt32();
            break;
          }
          case 688: {
            RewItemCount3 = input.ReadUInt32();
            break;
          }
          case 696: {
            RewItemCount4 = input.ReadUInt32();
            break;
          }
          case 704: {
            RewRepFaction1 = input.ReadUInt32();
            break;
          }
          case 712: {
            RewRepFaction2 = input.ReadUInt32();
            break;
          }
          case 720: {
            RewRepFaction3 = input.ReadUInt32();
            break;
          }
          case 728: {
            RewRepFaction4 = input.ReadUInt32();
            break;
          }
          case 736: {
            RewRepFaction5 = input.ReadUInt32();
            break;
          }
          case 744: {
            RewRepValue1 = input.ReadInt32();
            break;
          }
          case 752: {
            RewRepValue2 = input.ReadInt32();
            break;
          }
          case 760: {
            RewRepValue3 = input.ReadInt32();
            break;
          }
          case 768: {
            RewRepValue4 = input.ReadInt32();
            break;
          }
          case 776: {
            RewRepValue5 = input.ReadInt32();
            break;
          }
          case 784: {
            RewOrReqMoney = input.ReadInt32();
            break;
          }
          case 792: {
            RewMoneyMaxLevel = input.ReadUInt32();
            break;
          }
          case 800: {
            RewSpell = input.ReadUInt32();
            break;
          }
          case 808: {
            RewSpellCast = input.ReadUInt32();
            break;
          }
          case 816: {
            RewMailTemplateId = input.ReadUInt32();
            break;
          }
          case 824: {
            RewMailDelaySecs = input.ReadUInt32();
            break;
          }
          case 832: {
            PointMapId = input.ReadUInt32();
            break;
          }
          case 845: {
            PointX = input.ReadFloat();
            break;
          }
          case 853: {
            PointY = input.ReadFloat();
            break;
          }
          case 856: {
            PointOpt = input.ReadUInt32();
            break;
          }
          case 864: {
            DetailsEmote1 = input.ReadUInt32();
            break;
          }
          case 872: {
            DetailsEmote2 = input.ReadUInt32();
            break;
          }
          case 880: {
            DetailsEmote3 = input.ReadUInt32();
            break;
          }
          case 888: {
            DetailsEmote4 = input.ReadUInt32();
            break;
          }
          case 896: {
            DetailsEmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 904: {
            DetailsEmoteDelay2 = input.ReadUInt32();
            break;
          }
          case 912: {
            DetailsEmoteDelay3 = input.ReadUInt32();
            break;
          }
          case 920: {
            DetailsEmoteDelay4 = input.ReadUInt32();
            break;
          }
          case 928: {
            IncompleteEmote = input.ReadUInt32();
            break;
          }
          case 936: {
            CompleteEmote = input.ReadUInt32();
            break;
          }
          case 944: {
            OfferRewardEmote1 = input.ReadUInt32();
            break;
          }
          case 952: {
            OfferRewardEmote2 = input.ReadUInt32();
            break;
          }
          case 960: {
            OfferRewardEmote3 = input.ReadUInt32();
            break;
          }
          case 968: {
            OfferRewardEmote4 = input.ReadUInt32();
            break;
          }
          case 976: {
            OfferRewardEmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 984: {
            OfferRewardEmoteDelay2 = input.ReadUInt32();
            break;
          }
          case 992: {
            OfferRewardEmoteDelay3 = input.ReadUInt32();
            break;
          }
          case 1000: {
            OfferRewardEmoteDelay4 = input.ReadUInt32();
            break;
          }
          case 1008: {
            StartScript = input.ReadUInt32();
            break;
          }
          case 1016: {
            CompleteScript = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Patch = input.ReadUInt32();
            break;
          }
          case 24: {
            Method = input.ReadUInt32();
            break;
          }
          case 32: {
            ZoneOrSort = input.ReadInt32();
            break;
          }
          case 40: {
            MinLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 56: {
            QuestLevel = input.ReadUInt32();
            break;
          }
          case 64: {
            Type = input.ReadUInt32();
            break;
          }
          case 72: {
            RequiredClasses = input.ReadUInt32();
            break;
          }
          case 80: {
            RequiredRaces = input.ReadUInt32();
            break;
          }
          case 88: {
            RequiredSkill = input.ReadUInt32();
            break;
          }
          case 96: {
            RequiredSkillValue = input.ReadUInt32();
            break;
          }
          case 104: {
            RepObjectiveFaction = input.ReadUInt32();
            break;
          }
          case 112: {
            RepObjectiveValue = input.ReadInt32();
            break;
          }
          case 120: {
            RequiredMinRepFaction = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiredMinRepValue = input.ReadInt32();
            break;
          }
          case 136: {
            RequiredMaxRepFaction = input.ReadUInt32();
            break;
          }
          case 144: {
            RequiredMaxRepValue = input.ReadInt32();
            break;
          }
          case 152: {
            SuggestedPlayers = input.ReadUInt32();
            break;
          }
          case 160: {
            LimitTime = input.ReadUInt32();
            break;
          }
          case 168: {
            QuestFlags = input.ReadUInt32();
            break;
          }
          case 176: {
            SpecialFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            PrevQuestId = input.ReadInt32();
            break;
          }
          case 192: {
            NextQuestId = input.ReadInt32();
            break;
          }
          case 200: {
            ExclusiveGroup = input.ReadInt32();
            break;
          }
          case 208: {
            NextQuestInChain = input.ReadUInt32();
            break;
          }
          case 216: {
            SrcItemId = input.ReadUInt32();
            break;
          }
          case 224: {
            SrcItemCount = input.ReadUInt32();
            break;
          }
          case 232: {
            SrcSpell = input.ReadUInt32();
            break;
          }
          case 242: {
            Title = input.ReadString();
            break;
          }
          case 250: {
            Details = input.ReadString();
            break;
          }
          case 258: {
            Objectives = input.ReadString();
            break;
          }
          case 266: {
            OfferRewardText = input.ReadString();
            break;
          }
          case 274: {
            RequestItemsText = input.ReadString();
            break;
          }
          case 282: {
            EndText = input.ReadString();
            break;
          }
          case 290: {
            ObjectiveText1 = input.ReadString();
            break;
          }
          case 298: {
            ObjectiveText2 = input.ReadString();
            break;
          }
          case 306: {
            ObjectiveText3 = input.ReadString();
            break;
          }
          case 314: {
            ObjectiveText4 = input.ReadString();
            break;
          }
          case 320: {
            ReqItemId1 = input.ReadUInt32();
            break;
          }
          case 328: {
            ReqItemId2 = input.ReadUInt32();
            break;
          }
          case 336: {
            ReqItemId3 = input.ReadUInt32();
            break;
          }
          case 344: {
            ReqItemId4 = input.ReadUInt32();
            break;
          }
          case 352: {
            ReqItemCount1 = input.ReadUInt32();
            break;
          }
          case 360: {
            ReqItemCount2 = input.ReadUInt32();
            break;
          }
          case 368: {
            ReqItemCount3 = input.ReadUInt32();
            break;
          }
          case 376: {
            ReqItemCount4 = input.ReadUInt32();
            break;
          }
          case 384: {
            ReqSourceId1 = input.ReadUInt32();
            break;
          }
          case 392: {
            ReqSourceId2 = input.ReadUInt32();
            break;
          }
          case 400: {
            ReqSourceId3 = input.ReadUInt32();
            break;
          }
          case 408: {
            ReqSourceId4 = input.ReadUInt32();
            break;
          }
          case 416: {
            ReqSourceCount1 = input.ReadUInt32();
            break;
          }
          case 424: {
            ReqSourceCount2 = input.ReadUInt32();
            break;
          }
          case 432: {
            ReqSourceCount3 = input.ReadUInt32();
            break;
          }
          case 440: {
            ReqSourceCount4 = input.ReadUInt32();
            break;
          }
          case 448: {
            ReqCreatureOrGoId1 = input.ReadInt32();
            break;
          }
          case 456: {
            ReqCreatureOrGoId2 = input.ReadInt32();
            break;
          }
          case 464: {
            ReqCreatureOrGoId3 = input.ReadInt32();
            break;
          }
          case 472: {
            ReqCreatureOrGoId4 = input.ReadInt32();
            break;
          }
          case 480: {
            ReqCreatureOrGoCount1 = input.ReadUInt32();
            break;
          }
          case 488: {
            ReqCreatureOrGoCount2 = input.ReadUInt32();
            break;
          }
          case 496: {
            ReqCreatureOrGoCount3 = input.ReadUInt32();
            break;
          }
          case 504: {
            ReqCreatureOrGoCount4 = input.ReadUInt32();
            break;
          }
          case 512: {
            ReqSpellCast1 = input.ReadUInt32();
            break;
          }
          case 520: {
            ReqSpellCast2 = input.ReadUInt32();
            break;
          }
          case 528: {
            ReqSpellCast3 = input.ReadUInt32();
            break;
          }
          case 536: {
            ReqSpellCast4 = input.ReadUInt32();
            break;
          }
          case 544: {
            RewChoiceItemId1 = input.ReadUInt32();
            break;
          }
          case 552: {
            RewChoiceItemId2 = input.ReadUInt32();
            break;
          }
          case 560: {
            RewChoiceItemId3 = input.ReadUInt32();
            break;
          }
          case 568: {
            RewChoiceItemId4 = input.ReadUInt32();
            break;
          }
          case 576: {
            RewChoiceItemId5 = input.ReadUInt32();
            break;
          }
          case 584: {
            RewChoiceItemId6 = input.ReadUInt32();
            break;
          }
          case 592: {
            RewChoiceItemCount1 = input.ReadUInt32();
            break;
          }
          case 600: {
            RewChoiceItemCount2 = input.ReadUInt32();
            break;
          }
          case 608: {
            RewChoiceItemCount3 = input.ReadUInt32();
            break;
          }
          case 616: {
            RewChoiceItemCount4 = input.ReadUInt32();
            break;
          }
          case 624: {
            RewChoiceItemCount5 = input.ReadUInt32();
            break;
          }
          case 632: {
            RewChoiceItemCount6 = input.ReadUInt32();
            break;
          }
          case 640: {
            RewItemId1 = input.ReadUInt32();
            break;
          }
          case 648: {
            RewItemId2 = input.ReadUInt32();
            break;
          }
          case 656: {
            RewItemId3 = input.ReadUInt32();
            break;
          }
          case 664: {
            RewItemId4 = input.ReadUInt32();
            break;
          }
          case 672: {
            RewItemCount1 = input.ReadUInt32();
            break;
          }
          case 680: {
            RewItemCount2 = input.ReadUInt32();
            break;
          }
          case 688: {
            RewItemCount3 = input.ReadUInt32();
            break;
          }
          case 696: {
            RewItemCount4 = input.ReadUInt32();
            break;
          }
          case 704: {
            RewRepFaction1 = input.ReadUInt32();
            break;
          }
          case 712: {
            RewRepFaction2 = input.ReadUInt32();
            break;
          }
          case 720: {
            RewRepFaction3 = input.ReadUInt32();
            break;
          }
          case 728: {
            RewRepFaction4 = input.ReadUInt32();
            break;
          }
          case 736: {
            RewRepFaction5 = input.ReadUInt32();
            break;
          }
          case 744: {
            RewRepValue1 = input.ReadInt32();
            break;
          }
          case 752: {
            RewRepValue2 = input.ReadInt32();
            break;
          }
          case 760: {
            RewRepValue3 = input.ReadInt32();
            break;
          }
          case 768: {
            RewRepValue4 = input.ReadInt32();
            break;
          }
          case 776: {
            RewRepValue5 = input.ReadInt32();
            break;
          }
          case 784: {
            RewOrReqMoney = input.ReadInt32();
            break;
          }
          case 792: {
            RewMoneyMaxLevel = input.ReadUInt32();
            break;
          }
          case 800: {
            RewSpell = input.ReadUInt32();
            break;
          }
          case 808: {
            RewSpellCast = input.ReadUInt32();
            break;
          }
          case 816: {
            RewMailTemplateId = input.ReadUInt32();
            break;
          }
          case 824: {
            RewMailDelaySecs = input.ReadUInt32();
            break;
          }
          case 832: {
            PointMapId = input.ReadUInt32();
            break;
          }
          case 845: {
            PointX = input.ReadFloat();
            break;
          }
          case 853: {
            PointY = input.ReadFloat();
            break;
          }
          case 856: {
            PointOpt = input.ReadUInt32();
            break;
          }
          case 864: {
            DetailsEmote1 = input.ReadUInt32();
            break;
          }
          case 872: {
            DetailsEmote2 = input.ReadUInt32();
            break;
          }
          case 880: {
            DetailsEmote3 = input.ReadUInt32();
            break;
          }
          case 888: {
            DetailsEmote4 = input.ReadUInt32();
            break;
          }
          case 896: {
            DetailsEmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 904: {
            DetailsEmoteDelay2 = input.ReadUInt32();
            break;
          }
          case 912: {
            DetailsEmoteDelay3 = input.ReadUInt32();
            break;
          }
          case 920: {
            DetailsEmoteDelay4 = input.ReadUInt32();
            break;
          }
          case 928: {
            IncompleteEmote = input.ReadUInt32();
            break;
          }
          case 936: {
            CompleteEmote = input.ReadUInt32();
            break;
          }
          case 944: {
            OfferRewardEmote1 = input.ReadUInt32();
            break;
          }
          case 952: {
            OfferRewardEmote2 = input.ReadUInt32();
            break;
          }
          case 960: {
            OfferRewardEmote3 = input.ReadUInt32();
            break;
          }
          case 968: {
            OfferRewardEmote4 = input.ReadUInt32();
            break;
          }
          case 976: {
            OfferRewardEmoteDelay1 = input.ReadUInt32();
            break;
          }
          case 984: {
            OfferRewardEmoteDelay2 = input.ReadUInt32();
            break;
          }
          case 992: {
            OfferRewardEmoteDelay3 = input.ReadUInt32();
            break;
          }
          case 1000: {
            OfferRewardEmoteDelay4 = input.ReadUInt32();
            break;
          }
          case 1008: {
            StartScript = input.ReadUInt32();
            break;
          }
          case 1016: {
            CompleteScript = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReferenceLootTemplate : pb::IMessage<ReferenceLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReferenceLootTemplate> _parser = new pb::MessageParser<ReferenceLootTemplate>(() => new ReferenceLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReferenceLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReferenceLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReferenceLootTemplate(ReferenceLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupId_ = other.groupId_;
      minCountOrRef_ = other.minCountOrRef_;
      maxCount_ = other.maxCount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReferenceLootTemplate Clone() {
      return new ReferenceLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry identifier for the loot template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item identifier in the loot template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chance_or_quest_chance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance or quest-related chance for the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 4;
    private uint groupId_;
    /// <summary>
    /// Group ID of the loot item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "min_count_or_ref" field.</summary>
    public const int MinCountOrRefFieldNumber = 5;
    private int minCountOrRef_;
    /// <summary>
    /// Minimum count of the item or reference entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinCountOrRef {
      get { return minCountOrRef_; }
      set {
        minCountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 6;
    private uint maxCount_;
    /// <summary>
    /// Maximum count of the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID associated with the item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version where the item is available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version where the item is available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReferenceLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReferenceLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (GroupId != other.GroupId) return false;
      if (MinCountOrRef != other.MinCountOrRef) return false;
      if (MaxCount != other.MaxCount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (MinCountOrRef != 0) hash ^= MinCountOrRef.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (MinCountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinCountOrRef);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReferenceLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.MinCountOrRef != 0) {
        MinCountOrRef = other.MinCountOrRef;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReputationRewardRate : pb::IMessage<ReputationRewardRate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReputationRewardRate> _parser = new pb::MessageParser<ReputationRewardRate>(() => new ReputationRewardRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReputationRewardRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationRewardRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationRewardRate(ReputationRewardRate other) : this() {
      faction_ = other.faction_;
      questRate_ = other.questRate_;
      creatureRate_ = other.creatureRate_;
      spellRate_ = other.spellRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationRewardRate Clone() {
      return new ReputationRewardRate(this);
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 1;
    private uint faction_;
    /// <summary>
    /// Faction identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "quest_rate" field.</summary>
    public const int QuestRateFieldNumber = 2;
    private float questRate_;
    /// <summary>
    /// Rate at which reputation is gained from quests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float QuestRate {
      get { return questRate_; }
      set {
        questRate_ = value;
      }
    }

    /// <summary>Field number for the "creature_rate" field.</summary>
    public const int CreatureRateFieldNumber = 3;
    private float creatureRate_;
    /// <summary>
    /// Rate at which reputation is gained from creatures
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CreatureRate {
      get { return creatureRate_; }
      set {
        creatureRate_ = value;
      }
    }

    /// <summary>Field number for the "spell_rate" field.</summary>
    public const int SpellRateFieldNumber = 4;
    private float spellRate_;
    /// <summary>
    /// Rate at which reputation is gained from spells
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpellRate {
      get { return spellRate_; }
      set {
        spellRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReputationRewardRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReputationRewardRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Faction != other.Faction) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(QuestRate, other.QuestRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CreatureRate, other.CreatureRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpellRate, other.SpellRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (QuestRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(QuestRate);
      if (CreatureRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CreatureRate);
      if (SpellRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpellRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Faction != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Faction);
      }
      if (QuestRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(QuestRate);
      }
      if (CreatureRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CreatureRate);
      }
      if (SpellRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpellRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Faction != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Faction);
      }
      if (QuestRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(QuestRate);
      }
      if (CreatureRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CreatureRate);
      }
      if (SpellRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpellRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction);
      }
      if (QuestRate != 0F) {
        size += 1 + 4;
      }
      if (CreatureRate != 0F) {
        size += 1 + 4;
      }
      if (SpellRate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReputationRewardRate other) {
      if (other == null) {
        return;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      if (other.QuestRate != 0F) {
        QuestRate = other.QuestRate;
      }
      if (other.CreatureRate != 0F) {
        CreatureRate = other.CreatureRate;
      }
      if (other.SpellRate != 0F) {
        SpellRate = other.SpellRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Faction = input.ReadUInt32();
            break;
          }
          case 21: {
            QuestRate = input.ReadFloat();
            break;
          }
          case 29: {
            CreatureRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpellRate = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Faction = input.ReadUInt32();
            break;
          }
          case 21: {
            QuestRate = input.ReadFloat();
            break;
          }
          case 29: {
            CreatureRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpellRate = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReputationSpilloverTemplate : pb::IMessage<ReputationSpilloverTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReputationSpilloverTemplate> _parser = new pb::MessageParser<ReputationSpilloverTemplate>(() => new ReputationSpilloverTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReputationSpilloverTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationSpilloverTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationSpilloverTemplate(ReputationSpilloverTemplate other) : this() {
      faction_ = other.faction_;
      faction1_ = other.faction1_;
      rate1_ = other.rate1_;
      rank1_ = other.rank1_;
      faction2_ = other.faction2_;
      rate2_ = other.rate2_;
      rank2_ = other.rank2_;
      faction3_ = other.faction3_;
      rate3_ = other.rate3_;
      rank3_ = other.rank3_;
      faction4_ = other.faction4_;
      rate4_ = other.rate4_;
      rank4_ = other.rank4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReputationSpilloverTemplate Clone() {
      return new ReputationSpilloverTemplate(this);
    }

    /// <summary>Field number for the "faction" field.</summary>
    public const int FactionFieldNumber = 1;
    private uint faction_;
    /// <summary>
    /// Faction entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction {
      get { return faction_; }
      set {
        faction_ = value;
      }
    }

    /// <summary>Field number for the "faction1" field.</summary>
    public const int Faction1FieldNumber = 2;
    private uint faction1_;
    /// <summary>
    /// Faction to give spillover for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction1 {
      get { return faction1_; }
      set {
        faction1_ = value;
      }
    }

    /// <summary>Field number for the "rate_1" field.</summary>
    public const int Rate1FieldNumber = 3;
    private float rate1_;
    /// <summary>
    /// The given reputation points * rate for faction 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate1 {
      get { return rate1_; }
      set {
        rate1_ = value;
      }
    }

    /// <summary>Field number for the "rank_1" field.</summary>
    public const int Rank1FieldNumber = 4;
    private uint rank1_;
    /// <summary>
    /// Max rank for faction 1, no spillover above this rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank1 {
      get { return rank1_; }
      set {
        rank1_ = value;
      }
    }

    /// <summary>Field number for the "faction2" field.</summary>
    public const int Faction2FieldNumber = 5;
    private uint faction2_;
    /// <summary>
    /// Faction 2 to give spillover for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction2 {
      get { return faction2_; }
      set {
        faction2_ = value;
      }
    }

    /// <summary>Field number for the "rate_2" field.</summary>
    public const int Rate2FieldNumber = 6;
    private float rate2_;
    /// <summary>
    /// The given reputation points * rate for faction 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate2 {
      get { return rate2_; }
      set {
        rate2_ = value;
      }
    }

    /// <summary>Field number for the "rank_2" field.</summary>
    public const int Rank2FieldNumber = 7;
    private uint rank2_;
    /// <summary>
    /// Max rank for faction 2, no spillover above this rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank2 {
      get { return rank2_; }
      set {
        rank2_ = value;
      }
    }

    /// <summary>Field number for the "faction3" field.</summary>
    public const int Faction3FieldNumber = 8;
    private uint faction3_;
    /// <summary>
    /// Faction 3 to give spillover for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction3 {
      get { return faction3_; }
      set {
        faction3_ = value;
      }
    }

    /// <summary>Field number for the "rate_3" field.</summary>
    public const int Rate3FieldNumber = 9;
    private float rate3_;
    /// <summary>
    /// The given reputation points * rate for faction 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate3 {
      get { return rate3_; }
      set {
        rate3_ = value;
      }
    }

    /// <summary>Field number for the "rank_3" field.</summary>
    public const int Rank3FieldNumber = 10;
    private uint rank3_;
    /// <summary>
    /// Max rank for faction 3, no spillover above this rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank3 {
      get { return rank3_; }
      set {
        rank3_ = value;
      }
    }

    /// <summary>Field number for the "faction4" field.</summary>
    public const int Faction4FieldNumber = 11;
    private uint faction4_;
    /// <summary>
    /// Faction 4 to give spillover for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Faction4 {
      get { return faction4_; }
      set {
        faction4_ = value;
      }
    }

    /// <summary>Field number for the "rate_4" field.</summary>
    public const int Rate4FieldNumber = 12;
    private float rate4_;
    /// <summary>
    /// The given reputation points * rate for faction 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Rate4 {
      get { return rate4_; }
      set {
        rate4_ = value;
      }
    }

    /// <summary>Field number for the "rank_4" field.</summary>
    public const int Rank4FieldNumber = 13;
    private uint rank4_;
    /// <summary>
    /// Max rank for faction 4, no spillover above this rank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank4 {
      get { return rank4_; }
      set {
        rank4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReputationSpilloverTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReputationSpilloverTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Faction != other.Faction) return false;
      if (Faction1 != other.Faction1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate1, other.Rate1)) return false;
      if (Rank1 != other.Rank1) return false;
      if (Faction2 != other.Faction2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate2, other.Rate2)) return false;
      if (Rank2 != other.Rank2) return false;
      if (Faction3 != other.Faction3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate3, other.Rate3)) return false;
      if (Rank3 != other.Rank3) return false;
      if (Faction4 != other.Faction4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate4, other.Rate4)) return false;
      if (Rank4 != other.Rank4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Faction != 0) hash ^= Faction.GetHashCode();
      if (Faction1 != 0) hash ^= Faction1.GetHashCode();
      if (Rate1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate1);
      if (Rank1 != 0) hash ^= Rank1.GetHashCode();
      if (Faction2 != 0) hash ^= Faction2.GetHashCode();
      if (Rate2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate2);
      if (Rank2 != 0) hash ^= Rank2.GetHashCode();
      if (Faction3 != 0) hash ^= Faction3.GetHashCode();
      if (Rate3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate3);
      if (Rank3 != 0) hash ^= Rank3.GetHashCode();
      if (Faction4 != 0) hash ^= Faction4.GetHashCode();
      if (Rate4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate4);
      if (Rank4 != 0) hash ^= Rank4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Faction != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Faction);
      }
      if (Faction1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Faction1);
      }
      if (Rate1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Rate1);
      }
      if (Rank1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Rank1);
      }
      if (Faction2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Faction2);
      }
      if (Rate2 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Rate2);
      }
      if (Rank2 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Rank2);
      }
      if (Faction3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Faction3);
      }
      if (Rate3 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Rate3);
      }
      if (Rank3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Rank3);
      }
      if (Faction4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Faction4);
      }
      if (Rate4 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Rate4);
      }
      if (Rank4 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Rank4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Faction != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Faction);
      }
      if (Faction1 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Faction1);
      }
      if (Rate1 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Rate1);
      }
      if (Rank1 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Rank1);
      }
      if (Faction2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Faction2);
      }
      if (Rate2 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Rate2);
      }
      if (Rank2 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Rank2);
      }
      if (Faction3 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Faction3);
      }
      if (Rate3 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Rate3);
      }
      if (Rank3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Rank3);
      }
      if (Faction4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Faction4);
      }
      if (Rate4 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Rate4);
      }
      if (Rank4 != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Rank4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Faction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction);
      }
      if (Faction1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction1);
      }
      if (Rate1 != 0F) {
        size += 1 + 4;
      }
      if (Rank1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank1);
      }
      if (Faction2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction2);
      }
      if (Rate2 != 0F) {
        size += 1 + 4;
      }
      if (Rank2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank2);
      }
      if (Faction3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction3);
      }
      if (Rate3 != 0F) {
        size += 1 + 4;
      }
      if (Rank3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank3);
      }
      if (Faction4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Faction4);
      }
      if (Rate4 != 0F) {
        size += 1 + 4;
      }
      if (Rank4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReputationSpilloverTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Faction != 0) {
        Faction = other.Faction;
      }
      if (other.Faction1 != 0) {
        Faction1 = other.Faction1;
      }
      if (other.Rate1 != 0F) {
        Rate1 = other.Rate1;
      }
      if (other.Rank1 != 0) {
        Rank1 = other.Rank1;
      }
      if (other.Faction2 != 0) {
        Faction2 = other.Faction2;
      }
      if (other.Rate2 != 0F) {
        Rate2 = other.Rate2;
      }
      if (other.Rank2 != 0) {
        Rank2 = other.Rank2;
      }
      if (other.Faction3 != 0) {
        Faction3 = other.Faction3;
      }
      if (other.Rate3 != 0F) {
        Rate3 = other.Rate3;
      }
      if (other.Rank3 != 0) {
        Rank3 = other.Rank3;
      }
      if (other.Faction4 != 0) {
        Faction4 = other.Faction4;
      }
      if (other.Rate4 != 0F) {
        Rate4 = other.Rate4;
      }
      if (other.Rank4 != 0) {
        Rank4 = other.Rank4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Faction = input.ReadUInt32();
            break;
          }
          case 16: {
            Faction1 = input.ReadUInt32();
            break;
          }
          case 29: {
            Rate1 = input.ReadFloat();
            break;
          }
          case 32: {
            Rank1 = input.ReadUInt32();
            break;
          }
          case 40: {
            Faction2 = input.ReadUInt32();
            break;
          }
          case 53: {
            Rate2 = input.ReadFloat();
            break;
          }
          case 56: {
            Rank2 = input.ReadUInt32();
            break;
          }
          case 64: {
            Faction3 = input.ReadUInt32();
            break;
          }
          case 77: {
            Rate3 = input.ReadFloat();
            break;
          }
          case 80: {
            Rank3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Faction4 = input.ReadUInt32();
            break;
          }
          case 101: {
            Rate4 = input.ReadFloat();
            break;
          }
          case 104: {
            Rank4 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Faction = input.ReadUInt32();
            break;
          }
          case 16: {
            Faction1 = input.ReadUInt32();
            break;
          }
          case 29: {
            Rate1 = input.ReadFloat();
            break;
          }
          case 32: {
            Rank1 = input.ReadUInt32();
            break;
          }
          case 40: {
            Faction2 = input.ReadUInt32();
            break;
          }
          case 53: {
            Rate2 = input.ReadFloat();
            break;
          }
          case 56: {
            Rank2 = input.ReadUInt32();
            break;
          }
          case 64: {
            Faction3 = input.ReadUInt32();
            break;
          }
          case 77: {
            Rate3 = input.ReadFloat();
            break;
          }
          case 80: {
            Rank3 = input.ReadUInt32();
            break;
          }
          case 88: {
            Faction4 = input.ReadUInt32();
            break;
          }
          case 101: {
            Rate4 = input.ReadFloat();
            break;
          }
          case 104: {
            Rank4 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReservedName : pb::IMessage<ReservedName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReservedName> _parser = new pb::MessageParser<ReservedName>(() => new ReservedName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReservedName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedName(ReservedName other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservedName Clone() {
      return new ReservedName(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Player reserved name, max length of 12 characters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReservedName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReservedName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReservedName other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScriptedAreatrigger : pb::IMessage<ScriptedAreatrigger>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScriptedAreatrigger> _parser = new pb::MessageParser<ScriptedAreatrigger>(() => new ScriptedAreatrigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScriptedAreatrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedAreatrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedAreatrigger(ScriptedAreatrigger other) : this() {
      entry_ = other.entry_;
      scriptName_ = other.scriptName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedAreatrigger Clone() {
      return new ScriptedAreatrigger(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the area trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "script_name" field.</summary>
    public const int ScriptNameFieldNumber = 2;
    private string scriptName_ = "";
    /// <summary>
    /// Script name associated with the area trigger, max length of 64 characters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScriptedAreatrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScriptedAreatrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (ScriptName != other.ScriptName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (ScriptName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScriptedAreatrigger other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScriptedEventId : pb::IMessage<ScriptedEventId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScriptedEventId> _parser = new pb::MessageParser<ScriptedEventId>(() => new ScriptedEventId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScriptedEventId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedEventId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedEventId(ScriptedEventId other) : this() {
      id_ = other.id_;
      scriptName_ = other.scriptName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptedEventId Clone() {
      return new ScriptedEventId(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the scripted event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "script_name" field.</summary>
    public const int ScriptNameFieldNumber = 2;
    private string scriptName_ = "";
    /// <summary>
    /// Script name associated with the event, max length of 64 characters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScriptName {
      get { return scriptName_; }
      set {
        scriptName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScriptedEventId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScriptedEventId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ScriptName != other.ScriptName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ScriptName.Length != 0) hash ^= ScriptName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ScriptName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ScriptName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScriptedEventId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ScriptName.Length != 0) {
        ScriptName = other.ScriptName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScriptEscortData : pb::IMessage<ScriptEscortData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScriptEscortData> _parser = new pb::MessageParser<ScriptEscortData>(() => new ScriptEscortData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScriptEscortData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptEscortData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptEscortData(ScriptEscortData other) : this() {
      creatureId_ = other.creatureId_;
      quest_ = other.quest_;
      escortFaction_ = other.escortFaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptEscortData Clone() {
      return new ScriptEscortData(this);
    }

    /// <summary>Field number for the "creature_id" field.</summary>
    public const int CreatureIdFieldNumber = 1;
    private uint creatureId_;
    /// <summary>
    /// Unique identifier for the creature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CreatureId {
      get { return creatureId_; }
      set {
        creatureId_ = value;
      }
    }

    /// <summary>Field number for the "quest" field.</summary>
    public const int QuestFieldNumber = 2;
    private uint quest_;
    /// <summary>
    /// Quest associated with the escort event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quest {
      get { return quest_; }
      set {
        quest_ = value;
      }
    }

    /// <summary>Field number for the "escort_faction" field.</summary>
    public const int EscortFactionFieldNumber = 3;
    private uint escortFaction_;
    /// <summary>
    /// Faction associated with the escort event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EscortFaction {
      get { return escortFaction_; }
      set {
        escortFaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScriptEscortData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScriptEscortData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreatureId != other.CreatureId) return false;
      if (Quest != other.Quest) return false;
      if (EscortFaction != other.EscortFaction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CreatureId != 0) hash ^= CreatureId.GetHashCode();
      if (Quest != 0) hash ^= Quest.GetHashCode();
      if (EscortFaction != 0) hash ^= EscortFaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CreatureId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureId);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (EscortFaction != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EscortFaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CreatureId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CreatureId);
      }
      if (Quest != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quest);
      }
      if (EscortFaction != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EscortFaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CreatureId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatureId);
      }
      if (Quest != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quest);
      }
      if (EscortFaction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EscortFaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScriptEscortData other) {
      if (other == null) {
        return;
      }
      if (other.CreatureId != 0) {
        CreatureId = other.CreatureId;
      }
      if (other.Quest != 0) {
        Quest = other.Quest;
      }
      if (other.EscortFaction != 0) {
        EscortFaction = other.EscortFaction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            EscortFaction = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CreatureId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quest = input.ReadUInt32();
            break;
          }
          case 24: {
            EscortFaction = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScriptText : pb::IMessage<ScriptText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScriptText> _parser = new pb::MessageParser<ScriptText>(() => new ScriptText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScriptText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptText(ScriptText other) : this() {
      entry_ = other.entry_;
      contentDefault_ = other.contentDefault_;
      contentLoc1_ = other.contentLoc1_;
      contentLoc2_ = other.contentLoc2_;
      contentLoc3_ = other.contentLoc3_;
      contentLoc4_ = other.contentLoc4_;
      contentLoc5_ = other.contentLoc5_;
      contentLoc6_ = other.contentLoc6_;
      contentLoc7_ = other.contentLoc7_;
      contentLoc8_ = other.contentLoc8_;
      sound_ = other.sound_;
      type_ = other.type_;
      language_ = other.language_;
      emote_ = other.emote_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptText Clone() {
      return new ScriptText(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private int entry_;
    /// <summary>
    /// Unique identifier for the script text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "content_default" field.</summary>
    public const int ContentDefaultFieldNumber = 2;
    private string contentDefault_ = "";
    /// <summary>
    /// Default content text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentDefault {
      get { return contentDefault_; }
      set {
        contentDefault_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc1" field.</summary>
    public const int ContentLoc1FieldNumber = 3;
    private string contentLoc1_ = "";
    /// <summary>
    /// Localized content for location 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc1 {
      get { return contentLoc1_; }
      set {
        contentLoc1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc2" field.</summary>
    public const int ContentLoc2FieldNumber = 4;
    private string contentLoc2_ = "";
    /// <summary>
    /// Localized content for location 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc2 {
      get { return contentLoc2_; }
      set {
        contentLoc2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc3" field.</summary>
    public const int ContentLoc3FieldNumber = 5;
    private string contentLoc3_ = "";
    /// <summary>
    /// Localized content for location 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc3 {
      get { return contentLoc3_; }
      set {
        contentLoc3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc4" field.</summary>
    public const int ContentLoc4FieldNumber = 6;
    private string contentLoc4_ = "";
    /// <summary>
    /// Localized content for location 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc4 {
      get { return contentLoc4_; }
      set {
        contentLoc4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc5" field.</summary>
    public const int ContentLoc5FieldNumber = 7;
    private string contentLoc5_ = "";
    /// <summary>
    /// Localized content for location 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc5 {
      get { return contentLoc5_; }
      set {
        contentLoc5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc6" field.</summary>
    public const int ContentLoc6FieldNumber = 8;
    private string contentLoc6_ = "";
    /// <summary>
    /// Localized content for location 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc6 {
      get { return contentLoc6_; }
      set {
        contentLoc6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc7" field.</summary>
    public const int ContentLoc7FieldNumber = 9;
    private string contentLoc7_ = "";
    /// <summary>
    /// Localized content for location 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc7 {
      get { return contentLoc7_; }
      set {
        contentLoc7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_loc8" field.</summary>
    public const int ContentLoc8FieldNumber = 10;
    private string contentLoc8_ = "";
    /// <summary>
    /// Localized content for location 8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContentLoc8 {
      get { return contentLoc8_; }
      set {
        contentLoc8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound" field.</summary>
    public const int SoundFieldNumber = 11;
    private uint sound_;
    /// <summary>
    /// Sound ID associated with the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Sound {
      get { return sound_; }
      set {
        sound_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private uint type_;
    /// <summary>
    /// Type of script text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 13;
    private uint language_;
    /// <summary>
    /// Language ID for the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "emote" field.</summary>
    public const int EmoteFieldNumber = 14;
    private uint emote_;
    /// <summary>
    /// Emote ID linked to the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Emote {
      get { return emote_; }
      set {
        emote_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 15;
    private string comment_ = "";
    /// <summary>
    /// Optional comment associated with the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScriptText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScriptText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (ContentDefault != other.ContentDefault) return false;
      if (ContentLoc1 != other.ContentLoc1) return false;
      if (ContentLoc2 != other.ContentLoc2) return false;
      if (ContentLoc3 != other.ContentLoc3) return false;
      if (ContentLoc4 != other.ContentLoc4) return false;
      if (ContentLoc5 != other.ContentLoc5) return false;
      if (ContentLoc6 != other.ContentLoc6) return false;
      if (ContentLoc7 != other.ContentLoc7) return false;
      if (ContentLoc8 != other.ContentLoc8) return false;
      if (Sound != other.Sound) return false;
      if (Type != other.Type) return false;
      if (Language != other.Language) return false;
      if (Emote != other.Emote) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (ContentDefault.Length != 0) hash ^= ContentDefault.GetHashCode();
      if (ContentLoc1.Length != 0) hash ^= ContentLoc1.GetHashCode();
      if (ContentLoc2.Length != 0) hash ^= ContentLoc2.GetHashCode();
      if (ContentLoc3.Length != 0) hash ^= ContentLoc3.GetHashCode();
      if (ContentLoc4.Length != 0) hash ^= ContentLoc4.GetHashCode();
      if (ContentLoc5.Length != 0) hash ^= ContentLoc5.GetHashCode();
      if (ContentLoc6.Length != 0) hash ^= ContentLoc6.GetHashCode();
      if (ContentLoc7.Length != 0) hash ^= ContentLoc7.GetHashCode();
      if (ContentLoc8.Length != 0) hash ^= ContentLoc8.GetHashCode();
      if (Sound != 0) hash ^= Sound.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Language != 0) hash ^= Language.GetHashCode();
      if (Emote != 0) hash ^= Emote.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (Sound != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Language);
      }
      if (Emote != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Emote);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Entry);
      }
      if (ContentDefault.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContentLoc8);
      }
      if (Sound != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Sound);
      }
      if (Type != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Type);
      }
      if (Language != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Language);
      }
      if (Emote != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Emote);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entry);
      }
      if (ContentDefault.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentDefault);
      }
      if (ContentLoc1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc1);
      }
      if (ContentLoc2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc2);
      }
      if (ContentLoc3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc3);
      }
      if (ContentLoc4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc4);
      }
      if (ContentLoc5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc5);
      }
      if (ContentLoc6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc6);
      }
      if (ContentLoc7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc7);
      }
      if (ContentLoc8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentLoc8);
      }
      if (Sound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sound);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Language != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Language);
      }
      if (Emote != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Emote);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScriptText other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.ContentDefault.Length != 0) {
        ContentDefault = other.ContentDefault;
      }
      if (other.ContentLoc1.Length != 0) {
        ContentLoc1 = other.ContentLoc1;
      }
      if (other.ContentLoc2.Length != 0) {
        ContentLoc2 = other.ContentLoc2;
      }
      if (other.ContentLoc3.Length != 0) {
        ContentLoc3 = other.ContentLoc3;
      }
      if (other.ContentLoc4.Length != 0) {
        ContentLoc4 = other.ContentLoc4;
      }
      if (other.ContentLoc5.Length != 0) {
        ContentLoc5 = other.ContentLoc5;
      }
      if (other.ContentLoc6.Length != 0) {
        ContentLoc6 = other.ContentLoc6;
      }
      if (other.ContentLoc7.Length != 0) {
        ContentLoc7 = other.ContentLoc7;
      }
      if (other.ContentLoc8.Length != 0) {
        ContentLoc8 = other.ContentLoc8;
      }
      if (other.Sound != 0) {
        Sound = other.Sound;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Language != 0) {
        Language = other.Language;
      }
      if (other.Emote != 0) {
        Emote = other.Emote;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 88: {
            Sound = input.ReadUInt32();
            break;
          }
          case 96: {
            Type = input.ReadUInt32();
            break;
          }
          case 104: {
            Language = input.ReadUInt32();
            break;
          }
          case 112: {
            Emote = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadInt32();
            break;
          }
          case 18: {
            ContentDefault = input.ReadString();
            break;
          }
          case 26: {
            ContentLoc1 = input.ReadString();
            break;
          }
          case 34: {
            ContentLoc2 = input.ReadString();
            break;
          }
          case 42: {
            ContentLoc3 = input.ReadString();
            break;
          }
          case 50: {
            ContentLoc4 = input.ReadString();
            break;
          }
          case 58: {
            ContentLoc5 = input.ReadString();
            break;
          }
          case 66: {
            ContentLoc6 = input.ReadString();
            break;
          }
          case 74: {
            ContentLoc7 = input.ReadString();
            break;
          }
          case 82: {
            ContentLoc8 = input.ReadString();
            break;
          }
          case 88: {
            Sound = input.ReadUInt32();
            break;
          }
          case 96: {
            Type = input.ReadUInt32();
            break;
          }
          case 104: {
            Language = input.ReadUInt32();
            break;
          }
          case 112: {
            Emote = input.ReadUInt32();
            break;
          }
          case 122: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScriptWaypoint : pb::IMessage<ScriptWaypoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScriptWaypoint> _parser = new pb::MessageParser<ScriptWaypoint>(() => new ScriptWaypoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScriptWaypoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptWaypoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptWaypoint(ScriptWaypoint other) : this() {
      entry_ = other.entry_;
      pointid_ = other.pointid_;
      locationX_ = other.locationX_;
      locationY_ = other.locationY_;
      locationZ_ = other.locationZ_;
      waittime_ = other.waittime_;
      pointComment_ = other.pointComment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScriptWaypoint Clone() {
      return new ScriptWaypoint(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Creature template entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "pointid" field.</summary>
    public const int PointidFieldNumber = 2;
    private uint pointid_;
    /// <summary>
    /// Unique identifier for the waypoint point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pointid {
      get { return pointid_; }
      set {
        pointid_ = value;
      }
    }

    /// <summary>Field number for the "location_x" field.</summary>
    public const int LocationXFieldNumber = 3;
    private float locationX_;
    /// <summary>
    /// X coordinate of the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LocationX {
      get { return locationX_; }
      set {
        locationX_ = value;
      }
    }

    /// <summary>Field number for the "location_y" field.</summary>
    public const int LocationYFieldNumber = 4;
    private float locationY_;
    /// <summary>
    /// Y coordinate of the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LocationY {
      get { return locationY_; }
      set {
        locationY_ = value;
      }
    }

    /// <summary>Field number for the "location_z" field.</summary>
    public const int LocationZFieldNumber = 5;
    private float locationZ_;
    /// <summary>
    /// Z coordinate of the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LocationZ {
      get { return locationZ_; }
      set {
        locationZ_ = value;
      }
    }

    /// <summary>Field number for the "waittime" field.</summary>
    public const int WaittimeFieldNumber = 6;
    private uint waittime_;
    /// <summary>
    /// Wait time at the waypoint in milliseconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Waittime {
      get { return waittime_; }
      set {
        waittime_ = value;
      }
    }

    /// <summary>Field number for the "point_comment" field.</summary>
    public const int PointCommentFieldNumber = 7;
    private string pointComment_ = "";
    /// <summary>
    /// Optional comment for the waypoint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PointComment {
      get { return pointComment_; }
      set {
        pointComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScriptWaypoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScriptWaypoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Pointid != other.Pointid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationX, other.LocationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationY, other.LocationY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LocationZ, other.LocationZ)) return false;
      if (Waittime != other.Waittime) return false;
      if (PointComment != other.PointComment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Pointid != 0) hash ^= Pointid.GetHashCode();
      if (LocationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationX);
      if (LocationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationY);
      if (LocationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LocationZ);
      if (Waittime != 0) hash ^= Waittime.GetHashCode();
      if (PointComment.Length != 0) hash ^= PointComment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Pointid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pointid);
      }
      if (LocationX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(LocationX);
      }
      if (LocationY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(LocationY);
      }
      if (LocationZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LocationZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (PointComment.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PointComment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Pointid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pointid);
      }
      if (LocationX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(LocationX);
      }
      if (LocationY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(LocationY);
      }
      if (LocationZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LocationZ);
      }
      if (Waittime != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Waittime);
      }
      if (PointComment.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PointComment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Pointid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pointid);
      }
      if (LocationX != 0F) {
        size += 1 + 4;
      }
      if (LocationY != 0F) {
        size += 1 + 4;
      }
      if (LocationZ != 0F) {
        size += 1 + 4;
      }
      if (Waittime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Waittime);
      }
      if (PointComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PointComment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScriptWaypoint other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Pointid != 0) {
        Pointid = other.Pointid;
      }
      if (other.LocationX != 0F) {
        LocationX = other.LocationX;
      }
      if (other.LocationY != 0F) {
        LocationY = other.LocationY;
      }
      if (other.LocationZ != 0F) {
        LocationZ = other.LocationZ;
      }
      if (other.Waittime != 0) {
        Waittime = other.Waittime;
      }
      if (other.PointComment.Length != 0) {
        PointComment = other.PointComment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Pointid = input.ReadUInt32();
            break;
          }
          case 29: {
            LocationX = input.ReadFloat();
            break;
          }
          case 37: {
            LocationY = input.ReadFloat();
            break;
          }
          case 45: {
            LocationZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 58: {
            PointComment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Pointid = input.ReadUInt32();
            break;
          }
          case 29: {
            LocationX = input.ReadFloat();
            break;
          }
          case 37: {
            LocationY = input.ReadFloat();
            break;
          }
          case 45: {
            LocationZ = input.ReadFloat();
            break;
          }
          case 48: {
            Waittime = input.ReadUInt32();
            break;
          }
          case 58: {
            PointComment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SkillDiscoveryTemplate : pb::IMessage<SkillDiscoveryTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillDiscoveryTemplate> _parser = new pb::MessageParser<SkillDiscoveryTemplate>(() => new SkillDiscoveryTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillDiscoveryTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillDiscoveryTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillDiscoveryTemplate(SkillDiscoveryTemplate other) : this() {
      spellId_ = other.spellId_;
      reqSpell_ = other.reqSpell_;
      chance_ = other.chance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillDiscoveryTemplate Clone() {
      return new SkillDiscoveryTemplate(this);
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 1;
    private uint spellId_;
    /// <summary>
    /// SpellId of the discoverable spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    /// <summary>Field number for the "req_spell" field.</summary>
    public const int ReqSpellFieldNumber = 2;
    private uint reqSpell_;
    /// <summary>
    /// Spell requirement for discovery
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpell {
      get { return reqSpell_; }
      set {
        reqSpell_ = value;
      }
    }

    /// <summary>Field number for the "chance" field.</summary>
    public const int ChanceFieldNumber = 3;
    private float chance_;
    /// <summary>
    /// Chance to discover the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Chance {
      get { return chance_; }
      set {
        chance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillDiscoveryTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillDiscoveryTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellId != other.SpellId) return false;
      if (ReqSpell != other.ReqSpell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Chance, other.Chance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (ReqSpell != 0) hash ^= ReqSpell.GetHashCode();
      if (Chance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Chance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (ReqSpell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReqSpell);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (ReqSpell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReqSpell);
      }
      if (Chance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Chance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (ReqSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpell);
      }
      if (Chance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillDiscoveryTemplate other) {
      if (other == null) {
        return;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      if (other.ReqSpell != 0) {
        ReqSpell = other.ReqSpell;
      }
      if (other.Chance != 0F) {
        Chance = other.Chance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            ReqSpell = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            ReqSpell = input.ReadUInt32();
            break;
          }
          case 29: {
            Chance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SkillExtraItemTemplate : pb::IMessage<SkillExtraItemTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillExtraItemTemplate> _parser = new pb::MessageParser<SkillExtraItemTemplate>(() => new SkillExtraItemTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillExtraItemTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillExtraItemTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillExtraItemTemplate(SkillExtraItemTemplate other) : this() {
      spellId_ = other.spellId_;
      requiredSpecialization_ = other.requiredSpecialization_;
      additionalCreateChance_ = other.additionalCreateChance_;
      additionalMaxNum_ = other.additionalMaxNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillExtraItemTemplate Clone() {
      return new SkillExtraItemTemplate(this);
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 1;
    private uint spellId_;
    /// <summary>
    /// SpellId of the item creation spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    /// <summary>Field number for the "required_specialization" field.</summary>
    public const int RequiredSpecializationFieldNumber = 2;
    private uint requiredSpecialization_;
    /// <summary>
    /// Specialization spell id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredSpecialization {
      get { return requiredSpecialization_; }
      set {
        requiredSpecialization_ = value;
      }
    }

    /// <summary>Field number for the "additional_create_chance" field.</summary>
    public const int AdditionalCreateChanceFieldNumber = 3;
    private float additionalCreateChance_;
    /// <summary>
    /// Chance to create additional items
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AdditionalCreateChance {
      get { return additionalCreateChance_; }
      set {
        additionalCreateChance_ = value;
      }
    }

    /// <summary>Field number for the "additional_max_num" field.</summary>
    public const int AdditionalMaxNumFieldNumber = 4;
    private uint additionalMaxNum_;
    /// <summary>
    /// Max number of additional items that can be created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AdditionalMaxNum {
      get { return additionalMaxNum_; }
      set {
        additionalMaxNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillExtraItemTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillExtraItemTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellId != other.SpellId) return false;
      if (RequiredSpecialization != other.RequiredSpecialization) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AdditionalCreateChance, other.AdditionalCreateChance)) return false;
      if (AdditionalMaxNum != other.AdditionalMaxNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (RequiredSpecialization != 0) hash ^= RequiredSpecialization.GetHashCode();
      if (AdditionalCreateChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AdditionalCreateChance);
      if (AdditionalMaxNum != 0) hash ^= AdditionalMaxNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (RequiredSpecialization != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequiredSpecialization);
      }
      if (AdditionalCreateChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AdditionalCreateChance);
      }
      if (AdditionalMaxNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AdditionalMaxNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (RequiredSpecialization != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RequiredSpecialization);
      }
      if (AdditionalCreateChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AdditionalCreateChance);
      }
      if (AdditionalMaxNum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(AdditionalMaxNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (RequiredSpecialization != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredSpecialization);
      }
      if (AdditionalCreateChance != 0F) {
        size += 1 + 4;
      }
      if (AdditionalMaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdditionalMaxNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillExtraItemTemplate other) {
      if (other == null) {
        return;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      if (other.RequiredSpecialization != 0) {
        RequiredSpecialization = other.RequiredSpecialization;
      }
      if (other.AdditionalCreateChance != 0F) {
        AdditionalCreateChance = other.AdditionalCreateChance;
      }
      if (other.AdditionalMaxNum != 0) {
        AdditionalMaxNum = other.AdditionalMaxNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            RequiredSpecialization = input.ReadUInt32();
            break;
          }
          case 29: {
            AdditionalCreateChance = input.ReadFloat();
            break;
          }
          case 32: {
            AdditionalMaxNum = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            RequiredSpecialization = input.ReadUInt32();
            break;
          }
          case 29: {
            AdditionalCreateChance = input.ReadFloat();
            break;
          }
          case 32: {
            AdditionalMaxNum = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SkillFishingBaseLevel : pb::IMessage<SkillFishingBaseLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillFishingBaseLevel> _parser = new pb::MessageParser<SkillFishingBaseLevel>(() => new SkillFishingBaseLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkillFishingBaseLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillFishingBaseLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillFishingBaseLevel(SkillFishingBaseLevel other) : this() {
      entry_ = other.entry_;
      skill_ = other.skill_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkillFishingBaseLevel Clone() {
      return new SkillFishingBaseLevel(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Area identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 2;
    private int skill_;
    /// <summary>
    /// Base skill level requirement
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skill {
      get { return skill_; }
      set {
        skill_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkillFishingBaseLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkillFishingBaseLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Skill != other.Skill) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Skill != 0) hash ^= Skill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Skill != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Skill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Skill != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Skill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Skill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skill);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkillFishingBaseLevel other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Skill != 0) {
        Skill = other.Skill;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Skill = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Skill = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SkinningLootTemplate : pb::IMessage<SkinningLootTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkinningLootTemplate> _parser = new pb::MessageParser<SkinningLootTemplate>(() => new SkinningLootTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SkinningLootTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinningLootTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinningLootTemplate(SkinningLootTemplate other) : this() {
      entry_ = other.entry_;
      item_ = other.item_;
      chanceOrQuestChance_ = other.chanceOrQuestChance_;
      groupId_ = other.groupId_;
      minCountOrRef_ = other.minCountOrRef_;
      maxCount_ = other.maxCount_;
      conditionId_ = other.conditionId_;
      patchMin_ = other.patchMin_;
      patchMax_ = other.patchMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SkinningLootTemplate Clone() {
      return new SkinningLootTemplate(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry for the loot template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private uint item_;
    /// <summary>
    /// Item identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "chance_or_quest_chance" field.</summary>
    public const int ChanceOrQuestChanceFieldNumber = 3;
    private float chanceOrQuestChance_;
    /// <summary>
    /// Chance or quest-specific chance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChanceOrQuestChance {
      get { return chanceOrQuestChance_; }
      set {
        chanceOrQuestChance_ = value;
      }
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 4;
    private uint groupId_;
    /// <summary>
    /// Group ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "min_count_or_ref" field.</summary>
    public const int MinCountOrRefFieldNumber = 5;
    private int minCountOrRef_;
    /// <summary>
    /// Minimum count or reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinCountOrRef {
      get { return minCountOrRef_; }
      set {
        minCountOrRef_ = value;
      }
    }

    /// <summary>Field number for the "max_count" field.</summary>
    public const int MaxCountFieldNumber = 6;
    private uint maxCount_;
    /// <summary>
    /// Maximum count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 7;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "patch_min" field.</summary>
    public const int PatchMinFieldNumber = 8;
    private uint patchMin_;
    /// <summary>
    /// Minimum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMin {
      get { return patchMin_; }
      set {
        patchMin_ = value;
      }
    }

    /// <summary>Field number for the "patch_max" field.</summary>
    public const int PatchMaxFieldNumber = 9;
    private uint patchMax_;
    /// <summary>
    /// Maximum patch version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PatchMax {
      get { return patchMax_; }
      set {
        patchMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SkinningLootTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SkinningLootTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Item != other.Item) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChanceOrQuestChance, other.ChanceOrQuestChance)) return false;
      if (GroupId != other.GroupId) return false;
      if (MinCountOrRef != other.MinCountOrRef) return false;
      if (MaxCount != other.MaxCount) return false;
      if (ConditionId != other.ConditionId) return false;
      if (PatchMin != other.PatchMin) return false;
      if (PatchMax != other.PatchMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (ChanceOrQuestChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChanceOrQuestChance);
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (MinCountOrRef != 0) hash ^= MinCountOrRef.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (PatchMin != 0) hash ^= PatchMin.GetHashCode();
      if (PatchMax != 0) hash ^= PatchMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ChanceOrQuestChance);
      }
      if (GroupId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(GroupId);
      }
      if (MinCountOrRef != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinCountOrRef);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCount);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ConditionId);
      }
      if (PatchMin != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PatchMin);
      }
      if (PatchMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(PatchMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (ChanceOrQuestChance != 0F) {
        size += 1 + 4;
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (MinCountOrRef != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinCountOrRef);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCount);
      }
      if (ConditionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (PatchMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMin);
      }
      if (PatchMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SkinningLootTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.ChanceOrQuestChance != 0F) {
        ChanceOrQuestChance = other.ChanceOrQuestChance;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.MinCountOrRef != 0) {
        MinCountOrRef = other.MinCountOrRef;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.PatchMin != 0) {
        PatchMin = other.PatchMin;
      }
      if (other.PatchMax != 0) {
        PatchMax = other.PatchMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Item = input.ReadUInt32();
            break;
          }
          case 29: {
            ChanceOrQuestChance = input.ReadFloat();
            break;
          }
          case 32: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 40: {
            MinCountOrRef = input.ReadInt32();
            break;
          }
          case 48: {
            MaxCount = input.ReadUInt32();
            break;
          }
          case 56: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 64: {
            PatchMin = input.ReadUInt32();
            break;
          }
          case 72: {
            PatchMax = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SoundEntries : pb::IMessage<SoundEntries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundEntries> _parser = new pb::MessageParser<SoundEntries>(() => new SoundEntries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SoundEntries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundEntries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundEntries(SoundEntries other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundEntries Clone() {
      return new SoundEntries(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Sound entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the sound entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SoundEntries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SoundEntries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SoundEntries other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellAffect : pb::IMessage<SpellAffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellAffect> _parser = new pb::MessageParser<SpellAffect>(() => new SpellAffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellAffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellAffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellAffect(SpellAffect other) : this() {
      entry_ = other.entry_;
      effectId_ = other.effectId_;
      spellFamilyMask_ = other.spellFamilyMask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellAffect Clone() {
      return new SpellAffect(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID for the spell affect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 2;
    private uint effectId_;
    /// <summary>
    /// Effect ID associated with the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_mask" field.</summary>
    public const int SpellFamilyMaskFieldNumber = 3;
    private ulong spellFamilyMask_;
    /// <summary>
    /// Spell family mask represented as a 64-bit unsigned integer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyMask {
      get { return spellFamilyMask_; }
      set {
        spellFamilyMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellAffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellAffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (EffectId != other.EffectId) return false;
      if (SpellFamilyMask != other.SpellFamilyMask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      if (SpellFamilyMask != 0UL) hash ^= SpellFamilyMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (EffectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EffectId);
      }
      if (SpellFamilyMask != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(SpellFamilyMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (EffectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EffectId);
      }
      if (SpellFamilyMask != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(SpellFamilyMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EffectId);
      }
      if (SpellFamilyMask != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellAffect other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      if (other.SpellFamilyMask != 0UL) {
        SpellFamilyMask = other.SpellFamilyMask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellFamilyMask = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellFamilyMask = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellArea : pb::IMessage<SpellArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellArea> _parser = new pb::MessageParser<SpellArea>(() => new SpellArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellArea(SpellArea other) : this() {
      spell_ = other.spell_;
      area_ = other.area_;
      questStart_ = other.questStart_;
      questStartActive_ = other.questStartActive_;
      questEnd_ = other.questEnd_;
      auraSpell_ = other.auraSpell_;
      racemask_ = other.racemask_;
      gender_ = other.gender_;
      autocast_ = other.autocast_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellArea Clone() {
      return new SpellArea(this);
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 1;
    private uint spell_;
    /// <summary>
    /// Spell ID associated with the area
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private uint area_;
    /// <summary>
    /// Area ID where the spell is active
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "quest_start" field.</summary>
    public const int QuestStartFieldNumber = 3;
    private uint questStart_;
    /// <summary>
    /// Quest ID required to start the spell effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestStart {
      get { return questStart_; }
      set {
        questStart_ = value;
      }
    }

    /// <summary>Field number for the "quest_start_active" field.</summary>
    public const int QuestStartActiveFieldNumber = 4;
    private uint questStartActive_;
    /// <summary>
    /// Indicates if the quest is active (0 or 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestStartActive {
      get { return questStartActive_; }
      set {
        questStartActive_ = value;
      }
    }

    /// <summary>Field number for the "quest_end" field.</summary>
    public const int QuestEndFieldNumber = 5;
    private uint questEnd_;
    /// <summary>
    /// Quest ID required to end the spell effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestEnd {
      get { return questEnd_; }
      set {
        questEnd_ = value;
      }
    }

    /// <summary>Field number for the "aura_spell" field.</summary>
    public const int AuraSpellFieldNumber = 6;
    private uint auraSpell_;
    /// <summary>
    /// Aura spell ID associated with the area
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuraSpell {
      get { return auraSpell_; }
      set {
        auraSpell_ = value;
      }
    }

    /// <summary>Field number for the "racemask" field.</summary>
    public const int RacemaskFieldNumber = 7;
    private uint racemask_;
    /// <summary>
    /// Race mask for applicable races
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Racemask {
      get { return racemask_; }
      set {
        racemask_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 8;
    private uint gender_;
    /// <summary>
    /// Gender restriction (0 = male, 1 = female, 2 = both)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "autocast" field.</summary>
    public const int AutocastFieldNumber = 9;
    private uint autocast_;
    /// <summary>
    /// Indicates if the spell autocasts (0 or 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Autocast {
      get { return autocast_; }
      set {
        autocast_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Spell != other.Spell) return false;
      if (Area != other.Area) return false;
      if (QuestStart != other.QuestStart) return false;
      if (QuestStartActive != other.QuestStartActive) return false;
      if (QuestEnd != other.QuestEnd) return false;
      if (AuraSpell != other.AuraSpell) return false;
      if (Racemask != other.Racemask) return false;
      if (Gender != other.Gender) return false;
      if (Autocast != other.Autocast) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (QuestStart != 0) hash ^= QuestStart.GetHashCode();
      if (QuestStartActive != 0) hash ^= QuestStartActive.GetHashCode();
      if (QuestEnd != 0) hash ^= QuestEnd.GetHashCode();
      if (AuraSpell != 0) hash ^= AuraSpell.GetHashCode();
      if (Racemask != 0) hash ^= Racemask.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (Autocast != 0) hash ^= Autocast.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spell);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Area);
      }
      if (QuestStart != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(QuestStart);
      }
      if (QuestStartActive != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(QuestStartActive);
      }
      if (QuestEnd != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(QuestEnd);
      }
      if (AuraSpell != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AuraSpell);
      }
      if (Racemask != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Racemask);
      }
      if (Gender != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Gender);
      }
      if (Autocast != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Autocast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spell);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Area);
      }
      if (QuestStart != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(QuestStart);
      }
      if (QuestStartActive != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(QuestStartActive);
      }
      if (QuestEnd != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(QuestEnd);
      }
      if (AuraSpell != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AuraSpell);
      }
      if (Racemask != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Racemask);
      }
      if (Gender != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Gender);
      }
      if (Autocast != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Autocast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Area);
      }
      if (QuestStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestStart);
      }
      if (QuestStartActive != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestStartActive);
      }
      if (QuestEnd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestEnd);
      }
      if (AuraSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuraSpell);
      }
      if (Racemask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Racemask);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gender);
      }
      if (Autocast != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Autocast);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellArea other) {
      if (other == null) {
        return;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      if (other.QuestStart != 0) {
        QuestStart = other.QuestStart;
      }
      if (other.QuestStartActive != 0) {
        QuestStartActive = other.QuestStartActive;
      }
      if (other.QuestEnd != 0) {
        QuestEnd = other.QuestEnd;
      }
      if (other.AuraSpell != 0) {
        AuraSpell = other.AuraSpell;
      }
      if (other.Racemask != 0) {
        Racemask = other.Racemask;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.Autocast != 0) {
        Autocast = other.Autocast;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Spell = input.ReadUInt32();
            break;
          }
          case 16: {
            Area = input.ReadUInt32();
            break;
          }
          case 24: {
            QuestStart = input.ReadUInt32();
            break;
          }
          case 32: {
            QuestStartActive = input.ReadUInt32();
            break;
          }
          case 40: {
            QuestEnd = input.ReadUInt32();
            break;
          }
          case 48: {
            AuraSpell = input.ReadUInt32();
            break;
          }
          case 56: {
            Racemask = input.ReadUInt32();
            break;
          }
          case 64: {
            Gender = input.ReadUInt32();
            break;
          }
          case 72: {
            Autocast = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Spell = input.ReadUInt32();
            break;
          }
          case 16: {
            Area = input.ReadUInt32();
            break;
          }
          case 24: {
            QuestStart = input.ReadUInt32();
            break;
          }
          case 32: {
            QuestStartActive = input.ReadUInt32();
            break;
          }
          case 40: {
            QuestEnd = input.ReadUInt32();
            break;
          }
          case 48: {
            AuraSpell = input.ReadUInt32();
            break;
          }
          case 56: {
            Racemask = input.ReadUInt32();
            break;
          }
          case 64: {
            Gender = input.ReadUInt32();
            break;
          }
          case 72: {
            Autocast = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellBonusData : pb::IMessage<SpellBonusData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellBonusData> _parser = new pb::MessageParser<SpellBonusData>(() => new SpellBonusData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellBonusData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellBonusData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellBonusData(SpellBonusData other) : this() {
      entry_ = other.entry_;
      directBonus_ = other.directBonus_;
      dotBonus_ = other.dotBonus_;
      apBonus_ = other.apBonus_;
      apDotBonus_ = other.apDotBonus_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellBonusData Clone() {
      return new SpellBonusData(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Spell entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "direct_bonus" field.</summary>
    public const int DirectBonusFieldNumber = 2;
    private float directBonus_;
    /// <summary>
    /// Direct bonus value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DirectBonus {
      get { return directBonus_; }
      set {
        directBonus_ = value;
      }
    }

    /// <summary>Field number for the "dot_bonus" field.</summary>
    public const int DotBonusFieldNumber = 3;
    private float dotBonus_;
    /// <summary>
    /// Damage over time bonus value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DotBonus {
      get { return dotBonus_; }
      set {
        dotBonus_ = value;
      }
    }

    /// <summary>Field number for the "ap_bonus" field.</summary>
    public const int ApBonusFieldNumber = 4;
    private float apBonus_;
    /// <summary>
    /// Attack power bonus value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ApBonus {
      get { return apBonus_; }
      set {
        apBonus_ = value;
      }
    }

    /// <summary>Field number for the "ap_dot_bonus" field.</summary>
    public const int ApDotBonusFieldNumber = 5;
    private float apDotBonus_;
    /// <summary>
    /// Attack power damage over time bonus value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ApDotBonus {
      get { return apDotBonus_; }
      set {
        apDotBonus_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 6;
    private string comments_ = "";
    /// <summary>
    /// Optional comments about the bonus
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellBonusData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellBonusData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DirectBonus, other.DirectBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DotBonus, other.DotBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ApBonus, other.ApBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ApDotBonus, other.ApDotBonus)) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (DirectBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DirectBonus);
      if (DotBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DotBonus);
      if (ApBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ApBonus);
      if (ApDotBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ApDotBonus);
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (DirectBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(DirectBonus);
      }
      if (DotBonus != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DotBonus);
      }
      if (ApBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ApBonus);
      }
      if (ApDotBonus != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ApDotBonus);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (DirectBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(DirectBonus);
      }
      if (DotBonus != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DotBonus);
      }
      if (ApBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ApBonus);
      }
      if (ApDotBonus != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ApDotBonus);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (DirectBonus != 0F) {
        size += 1 + 4;
      }
      if (DotBonus != 0F) {
        size += 1 + 4;
      }
      if (ApBonus != 0F) {
        size += 1 + 4;
      }
      if (ApDotBonus != 0F) {
        size += 1 + 4;
      }
      if (Comments.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellBonusData other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.DirectBonus != 0F) {
        DirectBonus = other.DirectBonus;
      }
      if (other.DotBonus != 0F) {
        DotBonus = other.DotBonus;
      }
      if (other.ApBonus != 0F) {
        ApBonus = other.ApBonus;
      }
      if (other.ApDotBonus != 0F) {
        ApDotBonus = other.ApDotBonus;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            DirectBonus = input.ReadFloat();
            break;
          }
          case 29: {
            DotBonus = input.ReadFloat();
            break;
          }
          case 37: {
            ApBonus = input.ReadFloat();
            break;
          }
          case 45: {
            ApDotBonus = input.ReadFloat();
            break;
          }
          case 50: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            DirectBonus = input.ReadFloat();
            break;
          }
          case 29: {
            DotBonus = input.ReadFloat();
            break;
          }
          case 37: {
            ApBonus = input.ReadFloat();
            break;
          }
          case 45: {
            ApDotBonus = input.ReadFloat();
            break;
          }
          case 50: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellChain : pb::IMessage<SpellChain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellChain> _parser = new pb::MessageParser<SpellChain>(() => new SpellChain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellChain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellChain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellChain(SpellChain other) : this() {
      spellId_ = other.spellId_;
      prevSpell_ = other.prevSpell_;
      firstSpell_ = other.firstSpell_;
      rank_ = other.rank_;
      reqSpell_ = other.reqSpell_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellChain Clone() {
      return new SpellChain(this);
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 1;
    private uint spellId_;
    /// <summary>
    /// Unique ID of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    /// <summary>Field number for the "prev_spell" field.</summary>
    public const int PrevSpellFieldNumber = 2;
    private uint prevSpell_;
    /// <summary>
    /// Previous spell in the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PrevSpell {
      get { return prevSpell_; }
      set {
        prevSpell_ = value;
      }
    }

    /// <summary>Field number for the "first_spell" field.</summary>
    public const int FirstSpellFieldNumber = 3;
    private uint firstSpell_;
    /// <summary>
    /// First spell in the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirstSpell {
      get { return firstSpell_; }
      set {
        firstSpell_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 4;
    private int rank_;
    /// <summary>
    /// Rank of the spell in the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "req_spell" field.</summary>
    public const int ReqSpellFieldNumber = 5;
    private uint reqSpell_;
    /// <summary>
    /// Required spell for the chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReqSpell {
      get { return reqSpell_; }
      set {
        reqSpell_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellChain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellChain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellId != other.SpellId) return false;
      if (PrevSpell != other.PrevSpell) return false;
      if (FirstSpell != other.FirstSpell) return false;
      if (Rank != other.Rank) return false;
      if (ReqSpell != other.ReqSpell) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (PrevSpell != 0) hash ^= PrevSpell.GetHashCode();
      if (FirstSpell != 0) hash ^= FirstSpell.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (ReqSpell != 0) hash ^= ReqSpell.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (PrevSpell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrevSpell);
      }
      if (FirstSpell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FirstSpell);
      }
      if (Rank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (ReqSpell != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ReqSpell);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SpellId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (PrevSpell != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrevSpell);
      }
      if (FirstSpell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FirstSpell);
      }
      if (Rank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (ReqSpell != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ReqSpell);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (PrevSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrevSpell);
      }
      if (FirstSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstSpell);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (ReqSpell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqSpell);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellChain other) {
      if (other == null) {
        return;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      if (other.PrevSpell != 0) {
        PrevSpell = other.PrevSpell;
      }
      if (other.FirstSpell != 0) {
        FirstSpell = other.FirstSpell;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      if (other.ReqSpell != 0) {
        ReqSpell = other.ReqSpell;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            PrevSpell = input.ReadUInt32();
            break;
          }
          case 24: {
            FirstSpell = input.ReadUInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 40: {
            ReqSpell = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            PrevSpell = input.ReadUInt32();
            break;
          }
          case 24: {
            FirstSpell = input.ReadUInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 40: {
            ReqSpell = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellCheck : pb::IMessage<SpellCheck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellCheck> _parser = new pb::MessageParser<SpellCheck>(() => new SpellCheck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellCheck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellCheck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellCheck(SpellCheck other) : this() {
      spellid_ = other.spellid_;
      spellFamilyName_ = other.spellFamilyName_;
      spellFamilyMask_ = other.spellFamilyMask_;
      spellIcon_ = other.spellIcon_;
      spellVisual_ = other.spellVisual_;
      spellCategory_ = other.spellCategory_;
      effectType_ = other.effectType_;
      effectAura_ = other.effectAura_;
      effectIdx_ = other.effectIdx_;
      name_ = other.name_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellCheck Clone() {
      return new SpellCheck(this);
    }

    /// <summary>Field number for the "spellid" field.</summary>
    public const int SpellidFieldNumber = 1;
    private uint spellid_;
    /// <summary>
    /// Spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spellid {
      get { return spellid_; }
      set {
        spellid_ = value;
      }
    }

    /// <summary>Field number for the "SpellFamilyName" field.</summary>
    public const int SpellFamilyNameFieldNumber = 2;
    private int spellFamilyName_;
    /// <summary>
    /// Family name of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellFamilyName {
      get { return spellFamilyName_; }
      set {
        spellFamilyName_ = value;
      }
    }

    /// <summary>Field number for the "SpellFamilyMask" field.</summary>
    public const int SpellFamilyMaskFieldNumber = 3;
    private long spellFamilyMask_;
    /// <summary>
    /// Family mask of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SpellFamilyMask {
      get { return spellFamilyMask_; }
      set {
        spellFamilyMask_ = value;
      }
    }

    /// <summary>Field number for the "SpellIcon" field.</summary>
    public const int SpellIconFieldNumber = 4;
    private int spellIcon_;
    /// <summary>
    /// Icon associated with the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellIcon {
      get { return spellIcon_; }
      set {
        spellIcon_ = value;
      }
    }

    /// <summary>Field number for the "SpellVisual" field.</summary>
    public const int SpellVisualFieldNumber = 5;
    private int spellVisual_;
    /// <summary>
    /// Visual effect associated with the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellVisual {
      get { return spellVisual_; }
      set {
        spellVisual_ = value;
      }
    }

    /// <summary>Field number for the "SpellCategory" field.</summary>
    public const int SpellCategoryFieldNumber = 6;
    private int spellCategory_;
    /// <summary>
    /// Category of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellCategory {
      get { return spellCategory_; }
      set {
        spellCategory_ = value;
      }
    }

    /// <summary>Field number for the "EffectType" field.</summary>
    public const int EffectTypeFieldNumber = 7;
    private int effectType_;
    /// <summary>
    /// Type of effect the spell has
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "EffectAura" field.</summary>
    public const int EffectAuraFieldNumber = 8;
    private int effectAura_;
    /// <summary>
    /// Aura effect of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectAura {
      get { return effectAura_; }
      set {
        effectAura_ = value;
      }
    }

    /// <summary>Field number for the "EffectIdx" field.</summary>
    public const int EffectIdxFieldNumber = 9;
    private int effectIdx_;
    /// <summary>
    /// Index of the spell effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectIdx {
      get { return effectIdx_; }
      set {
        effectIdx_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 10;
    private string name_ = "";
    /// <summary>
    /// Name of the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 11;
    private string code_ = "";
    /// <summary>
    /// Code related to the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellCheck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellCheck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Spellid != other.Spellid) return false;
      if (SpellFamilyName != other.SpellFamilyName) return false;
      if (SpellFamilyMask != other.SpellFamilyMask) return false;
      if (SpellIcon != other.SpellIcon) return false;
      if (SpellVisual != other.SpellVisual) return false;
      if (SpellCategory != other.SpellCategory) return false;
      if (EffectType != other.EffectType) return false;
      if (EffectAura != other.EffectAura) return false;
      if (EffectIdx != other.EffectIdx) return false;
      if (Name != other.Name) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Spellid != 0) hash ^= Spellid.GetHashCode();
      if (SpellFamilyName != 0) hash ^= SpellFamilyName.GetHashCode();
      if (SpellFamilyMask != 0L) hash ^= SpellFamilyMask.GetHashCode();
      if (SpellIcon != 0) hash ^= SpellIcon.GetHashCode();
      if (SpellVisual != 0) hash ^= SpellVisual.GetHashCode();
      if (SpellCategory != 0) hash ^= SpellCategory.GetHashCode();
      if (EffectType != 0) hash ^= EffectType.GetHashCode();
      if (EffectAura != 0) hash ^= EffectAura.GetHashCode();
      if (EffectIdx != 0) hash ^= EffectIdx.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Spellid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spellid);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellFamilyName);
      }
      if (SpellFamilyMask != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SpellFamilyMask);
      }
      if (SpellIcon != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SpellIcon);
      }
      if (SpellVisual != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SpellVisual);
      }
      if (SpellCategory != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SpellCategory);
      }
      if (EffectType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EffectType);
      }
      if (EffectAura != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EffectAura);
      }
      if (EffectIdx != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectIdx);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Spellid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spellid);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellFamilyName);
      }
      if (SpellFamilyMask != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SpellFamilyMask);
      }
      if (SpellIcon != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SpellIcon);
      }
      if (SpellVisual != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SpellVisual);
      }
      if (SpellCategory != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SpellCategory);
      }
      if (EffectType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EffectType);
      }
      if (EffectAura != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EffectAura);
      }
      if (EffectIdx != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectIdx);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Spellid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spellid);
      }
      if (SpellFamilyName != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellFamilyName);
      }
      if (SpellFamilyMask != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SpellFamilyMask);
      }
      if (SpellIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellIcon);
      }
      if (SpellVisual != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellVisual);
      }
      if (SpellCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellCategory);
      }
      if (EffectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectType);
      }
      if (EffectAura != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectAura);
      }
      if (EffectIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectIdx);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellCheck other) {
      if (other == null) {
        return;
      }
      if (other.Spellid != 0) {
        Spellid = other.Spellid;
      }
      if (other.SpellFamilyName != 0) {
        SpellFamilyName = other.SpellFamilyName;
      }
      if (other.SpellFamilyMask != 0L) {
        SpellFamilyMask = other.SpellFamilyMask;
      }
      if (other.SpellIcon != 0) {
        SpellIcon = other.SpellIcon;
      }
      if (other.SpellVisual != 0) {
        SpellVisual = other.SpellVisual;
      }
      if (other.SpellCategory != 0) {
        SpellCategory = other.SpellCategory;
      }
      if (other.EffectType != 0) {
        EffectType = other.EffectType;
      }
      if (other.EffectAura != 0) {
        EffectAura = other.EffectAura;
      }
      if (other.EffectIdx != 0) {
        EffectIdx = other.EffectIdx;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Spellid = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellFamilyName = input.ReadInt32();
            break;
          }
          case 24: {
            SpellFamilyMask = input.ReadInt64();
            break;
          }
          case 32: {
            SpellIcon = input.ReadInt32();
            break;
          }
          case 40: {
            SpellVisual = input.ReadInt32();
            break;
          }
          case 48: {
            SpellCategory = input.ReadInt32();
            break;
          }
          case 56: {
            EffectType = input.ReadInt32();
            break;
          }
          case 64: {
            EffectAura = input.ReadInt32();
            break;
          }
          case 72: {
            EffectIdx = input.ReadInt32();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 90: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Spellid = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellFamilyName = input.ReadInt32();
            break;
          }
          case 24: {
            SpellFamilyMask = input.ReadInt64();
            break;
          }
          case 32: {
            SpellIcon = input.ReadInt32();
            break;
          }
          case 40: {
            SpellVisual = input.ReadInt32();
            break;
          }
          case 48: {
            SpellCategory = input.ReadInt32();
            break;
          }
          case 56: {
            EffectType = input.ReadInt32();
            break;
          }
          case 64: {
            EffectAura = input.ReadInt32();
            break;
          }
          case 72: {
            EffectIdx = input.ReadInt32();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 90: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellDisabled : pb::IMessage<SpellDisabled>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellDisabled> _parser = new pb::MessageParser<SpellDisabled>(() => new SpellDisabled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellDisabled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDisabled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDisabled(SpellDisabled other) : this() {
      entry_ = other.entry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDisabled Clone() {
      return new SpellDisabled(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Disabled spell entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellDisabled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellDisabled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellDisabled other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellEffectMod : pb::IMessage<SpellEffectMod>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellEffectMod> _parser = new pb::MessageParser<SpellEffectMod>(() => new SpellEffectMod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellEffectMod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellEffectMod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellEffectMod(SpellEffectMod other) : this() {
      id_ = other.id_;
      effectIndex_ = other.effectIndex_;
      effect_ = other.effect_;
      effectDieSides_ = other.effectDieSides_;
      effectBaseDice_ = other.effectBaseDice_;
      effectDicePerLevel_ = other.effectDicePerLevel_;
      effectRealPointsPerLevel_ = other.effectRealPointsPerLevel_;
      effectBasePoints_ = other.effectBasePoints_;
      effectAmplitude_ = other.effectAmplitude_;
      effectPointsPerComboPoint_ = other.effectPointsPerComboPoint_;
      effectChainTarget_ = other.effectChainTarget_;
      effectMultipleValue_ = other.effectMultipleValue_;
      effectMechanic_ = other.effectMechanic_;
      effectImplicitTargetA_ = other.effectImplicitTargetA_;
      effectImplicitTargetB_ = other.effectImplicitTargetB_;
      effectRadiusIndex_ = other.effectRadiusIndex_;
      effectApplyAuraName_ = other.effectApplyAuraName_;
      effectItemType_ = other.effectItemType_;
      effectMiscValue_ = other.effectMiscValue_;
      effectTriggerSpell_ = other.effectTriggerSpell_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellEffectMod Clone() {
      return new SpellEffectMod(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// ID of the spell effect modifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "effect_index" field.</summary>
    public const int EffectIndexFieldNumber = 2;
    private uint effectIndex_;
    /// <summary>
    /// Index of the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectIndex {
      get { return effectIndex_; }
      set {
        effectIndex_ = value;
      }
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 3;
    private int effect_;
    /// <summary>
    /// Effect type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Effect {
      get { return effect_; }
      set {
        effect_ = value;
      }
    }

    /// <summary>Field number for the "effect_die_sides" field.</summary>
    public const int EffectDieSidesFieldNumber = 4;
    private int effectDieSides_;
    /// <summary>
    /// Number of die sides for the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectDieSides {
      get { return effectDieSides_; }
      set {
        effectDieSides_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_dice" field.</summary>
    public const int EffectBaseDiceFieldNumber = 5;
    private int effectBaseDice_;
    /// <summary>
    /// Base dice value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBaseDice {
      get { return effectBaseDice_; }
      set {
        effectBaseDice_ = value;
      }
    }

    /// <summary>Field number for the "effect_dice_per_level" field.</summary>
    public const int EffectDicePerLevelFieldNumber = 6;
    private float effectDicePerLevel_;
    /// <summary>
    /// Dice per level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectDicePerLevel {
      get { return effectDicePerLevel_; }
      set {
        effectDicePerLevel_ = value;
      }
    }

    /// <summary>Field number for the "effect_real_points_per_level" field.</summary>
    public const int EffectRealPointsPerLevelFieldNumber = 7;
    private float effectRealPointsPerLevel_;
    /// <summary>
    /// Real points per level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectRealPointsPerLevel {
      get { return effectRealPointsPerLevel_; }
      set {
        effectRealPointsPerLevel_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_points" field.</summary>
    public const int EffectBasePointsFieldNumber = 8;
    private int effectBasePoints_;
    /// <summary>
    /// Base points of the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBasePoints {
      get { return effectBasePoints_; }
      set {
        effectBasePoints_ = value;
      }
    }

    /// <summary>Field number for the "effect_amplitude" field.</summary>
    public const int EffectAmplitudeFieldNumber = 9;
    private int effectAmplitude_;
    /// <summary>
    /// Amplitude of the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectAmplitude {
      get { return effectAmplitude_; }
      set {
        effectAmplitude_ = value;
      }
    }

    /// <summary>Field number for the "effect_points_per_combo_point" field.</summary>
    public const int EffectPointsPerComboPointFieldNumber = 10;
    private float effectPointsPerComboPoint_;
    /// <summary>
    /// Points per combo point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectPointsPerComboPoint {
      get { return effectPointsPerComboPoint_; }
      set {
        effectPointsPerComboPoint_ = value;
      }
    }

    /// <summary>Field number for the "effect_chain_target" field.</summary>
    public const int EffectChainTargetFieldNumber = 11;
    private int effectChainTarget_;
    /// <summary>
    /// Chain target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectChainTarget {
      get { return effectChainTarget_; }
      set {
        effectChainTarget_ = value;
      }
    }

    /// <summary>Field number for the "effect_multiple_value" field.</summary>
    public const int EffectMultipleValueFieldNumber = 12;
    private float effectMultipleValue_;
    /// <summary>
    /// Multiplier value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectMultipleValue {
      get { return effectMultipleValue_; }
      set {
        effectMultipleValue_ = value;
      }
    }

    /// <summary>Field number for the "effect_mechanic" field.</summary>
    public const int EffectMechanicFieldNumber = 13;
    private int effectMechanic_;
    /// <summary>
    /// Mechanic of the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectMechanic {
      get { return effectMechanic_; }
      set {
        effectMechanic_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_a" field.</summary>
    public const int EffectImplicitTargetAFieldNumber = 14;
    private int effectImplicitTargetA_;
    /// <summary>
    /// Implicit target A
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectImplicitTargetA {
      get { return effectImplicitTargetA_; }
      set {
        effectImplicitTargetA_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_b" field.</summary>
    public const int EffectImplicitTargetBFieldNumber = 15;
    private int effectImplicitTargetB_;
    /// <summary>
    /// Implicit target B
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectImplicitTargetB {
      get { return effectImplicitTargetB_; }
      set {
        effectImplicitTargetB_ = value;
      }
    }

    /// <summary>Field number for the "effect_radius_index" field.</summary>
    public const int EffectRadiusIndexFieldNumber = 16;
    private int effectRadiusIndex_;
    /// <summary>
    /// Radius index
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectRadiusIndex {
      get { return effectRadiusIndex_; }
      set {
        effectRadiusIndex_ = value;
      }
    }

    /// <summary>Field number for the "effect_apply_aura_name" field.</summary>
    public const int EffectApplyAuraNameFieldNumber = 17;
    private int effectApplyAuraName_;
    /// <summary>
    /// Name of the applied aura
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectApplyAuraName {
      get { return effectApplyAuraName_; }
      set {
        effectApplyAuraName_ = value;
      }
    }

    /// <summary>Field number for the "effect_item_type" field.</summary>
    public const int EffectItemTypeFieldNumber = 18;
    private int effectItemType_;
    /// <summary>
    /// Item type related to the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectItemType {
      get { return effectItemType_; }
      set {
        effectItemType_ = value;
      }
    }

    /// <summary>Field number for the "effect_misc_value" field.</summary>
    public const int EffectMiscValueFieldNumber = 19;
    private int effectMiscValue_;
    /// <summary>
    /// Miscellaneous value of the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectMiscValue {
      get { return effectMiscValue_; }
      set {
        effectMiscValue_ = value;
      }
    }

    /// <summary>Field number for the "effect_trigger_spell" field.</summary>
    public const int EffectTriggerSpellFieldNumber = 20;
    private int effectTriggerSpell_;
    /// <summary>
    /// Spell triggered by the effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectTriggerSpell {
      get { return effectTriggerSpell_; }
      set {
        effectTriggerSpell_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 21;
    private string comment_ = "";
    /// <summary>
    /// Comment or description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellEffectMod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellEffectMod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EffectIndex != other.EffectIndex) return false;
      if (Effect != other.Effect) return false;
      if (EffectDieSides != other.EffectDieSides) return false;
      if (EffectBaseDice != other.EffectBaseDice) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectDicePerLevel, other.EffectDicePerLevel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectRealPointsPerLevel, other.EffectRealPointsPerLevel)) return false;
      if (EffectBasePoints != other.EffectBasePoints) return false;
      if (EffectAmplitude != other.EffectAmplitude) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectPointsPerComboPoint, other.EffectPointsPerComboPoint)) return false;
      if (EffectChainTarget != other.EffectChainTarget) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectMultipleValue, other.EffectMultipleValue)) return false;
      if (EffectMechanic != other.EffectMechanic) return false;
      if (EffectImplicitTargetA != other.EffectImplicitTargetA) return false;
      if (EffectImplicitTargetB != other.EffectImplicitTargetB) return false;
      if (EffectRadiusIndex != other.EffectRadiusIndex) return false;
      if (EffectApplyAuraName != other.EffectApplyAuraName) return false;
      if (EffectItemType != other.EffectItemType) return false;
      if (EffectMiscValue != other.EffectMiscValue) return false;
      if (EffectTriggerSpell != other.EffectTriggerSpell) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EffectIndex != 0) hash ^= EffectIndex.GetHashCode();
      if (Effect != 0) hash ^= Effect.GetHashCode();
      if (EffectDieSides != 0) hash ^= EffectDieSides.GetHashCode();
      if (EffectBaseDice != 0) hash ^= EffectBaseDice.GetHashCode();
      if (EffectDicePerLevel != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectDicePerLevel);
      if (EffectRealPointsPerLevel != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectRealPointsPerLevel);
      if (EffectBasePoints != 0) hash ^= EffectBasePoints.GetHashCode();
      if (EffectAmplitude != 0) hash ^= EffectAmplitude.GetHashCode();
      if (EffectPointsPerComboPoint != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectPointsPerComboPoint);
      if (EffectChainTarget != 0) hash ^= EffectChainTarget.GetHashCode();
      if (EffectMultipleValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectMultipleValue);
      if (EffectMechanic != 0) hash ^= EffectMechanic.GetHashCode();
      if (EffectImplicitTargetA != 0) hash ^= EffectImplicitTargetA.GetHashCode();
      if (EffectImplicitTargetB != 0) hash ^= EffectImplicitTargetB.GetHashCode();
      if (EffectRadiusIndex != 0) hash ^= EffectRadiusIndex.GetHashCode();
      if (EffectApplyAuraName != 0) hash ^= EffectApplyAuraName.GetHashCode();
      if (EffectItemType != 0) hash ^= EffectItemType.GetHashCode();
      if (EffectMiscValue != 0) hash ^= EffectMiscValue.GetHashCode();
      if (EffectTriggerSpell != 0) hash ^= EffectTriggerSpell.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (EffectIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EffectIndex);
      }
      if (Effect != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Effect);
      }
      if (EffectDieSides != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EffectDieSides);
      }
      if (EffectBaseDice != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EffectBaseDice);
      }
      if (EffectDicePerLevel != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(EffectDicePerLevel);
      }
      if (EffectRealPointsPerLevel != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(EffectRealPointsPerLevel);
      }
      if (EffectBasePoints != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EffectBasePoints);
      }
      if (EffectAmplitude != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectAmplitude);
      }
      if (EffectPointsPerComboPoint != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(EffectPointsPerComboPoint);
      }
      if (EffectChainTarget != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(EffectChainTarget);
      }
      if (EffectMultipleValue != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(EffectMultipleValue);
      }
      if (EffectMechanic != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(EffectMechanic);
      }
      if (EffectImplicitTargetA != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(EffectImplicitTargetA);
      }
      if (EffectImplicitTargetB != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(EffectImplicitTargetB);
      }
      if (EffectRadiusIndex != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(EffectRadiusIndex);
      }
      if (EffectApplyAuraName != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(EffectApplyAuraName);
      }
      if (EffectItemType != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(EffectItemType);
      }
      if (EffectMiscValue != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(EffectMiscValue);
      }
      if (EffectTriggerSpell != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(EffectTriggerSpell);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (EffectIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EffectIndex);
      }
      if (Effect != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Effect);
      }
      if (EffectDieSides != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EffectDieSides);
      }
      if (EffectBaseDice != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EffectBaseDice);
      }
      if (EffectDicePerLevel != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(EffectDicePerLevel);
      }
      if (EffectRealPointsPerLevel != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(EffectRealPointsPerLevel);
      }
      if (EffectBasePoints != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EffectBasePoints);
      }
      if (EffectAmplitude != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectAmplitude);
      }
      if (EffectPointsPerComboPoint != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(EffectPointsPerComboPoint);
      }
      if (EffectChainTarget != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(EffectChainTarget);
      }
      if (EffectMultipleValue != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(EffectMultipleValue);
      }
      if (EffectMechanic != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(EffectMechanic);
      }
      if (EffectImplicitTargetA != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(EffectImplicitTargetA);
      }
      if (EffectImplicitTargetB != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(EffectImplicitTargetB);
      }
      if (EffectRadiusIndex != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(EffectRadiusIndex);
      }
      if (EffectApplyAuraName != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(EffectApplyAuraName);
      }
      if (EffectItemType != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(EffectItemType);
      }
      if (EffectMiscValue != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(EffectMiscValue);
      }
      if (EffectTriggerSpell != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(EffectTriggerSpell);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (EffectIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EffectIndex);
      }
      if (Effect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Effect);
      }
      if (EffectDieSides != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectDieSides);
      }
      if (EffectBaseDice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectBaseDice);
      }
      if (EffectDicePerLevel != 0F) {
        size += 1 + 4;
      }
      if (EffectRealPointsPerLevel != 0F) {
        size += 1 + 4;
      }
      if (EffectBasePoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectBasePoints);
      }
      if (EffectAmplitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectAmplitude);
      }
      if (EffectPointsPerComboPoint != 0F) {
        size += 1 + 4;
      }
      if (EffectChainTarget != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectChainTarget);
      }
      if (EffectMultipleValue != 0F) {
        size += 1 + 4;
      }
      if (EffectMechanic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectMechanic);
      }
      if (EffectImplicitTargetA != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectImplicitTargetA);
      }
      if (EffectImplicitTargetB != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectImplicitTargetB);
      }
      if (EffectRadiusIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectRadiusIndex);
      }
      if (EffectApplyAuraName != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectApplyAuraName);
      }
      if (EffectItemType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectItemType);
      }
      if (EffectMiscValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectMiscValue);
      }
      if (EffectTriggerSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectTriggerSpell);
      }
      if (Comment.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellEffectMod other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EffectIndex != 0) {
        EffectIndex = other.EffectIndex;
      }
      if (other.Effect != 0) {
        Effect = other.Effect;
      }
      if (other.EffectDieSides != 0) {
        EffectDieSides = other.EffectDieSides;
      }
      if (other.EffectBaseDice != 0) {
        EffectBaseDice = other.EffectBaseDice;
      }
      if (other.EffectDicePerLevel != 0F) {
        EffectDicePerLevel = other.EffectDicePerLevel;
      }
      if (other.EffectRealPointsPerLevel != 0F) {
        EffectRealPointsPerLevel = other.EffectRealPointsPerLevel;
      }
      if (other.EffectBasePoints != 0) {
        EffectBasePoints = other.EffectBasePoints;
      }
      if (other.EffectAmplitude != 0) {
        EffectAmplitude = other.EffectAmplitude;
      }
      if (other.EffectPointsPerComboPoint != 0F) {
        EffectPointsPerComboPoint = other.EffectPointsPerComboPoint;
      }
      if (other.EffectChainTarget != 0) {
        EffectChainTarget = other.EffectChainTarget;
      }
      if (other.EffectMultipleValue != 0F) {
        EffectMultipleValue = other.EffectMultipleValue;
      }
      if (other.EffectMechanic != 0) {
        EffectMechanic = other.EffectMechanic;
      }
      if (other.EffectImplicitTargetA != 0) {
        EffectImplicitTargetA = other.EffectImplicitTargetA;
      }
      if (other.EffectImplicitTargetB != 0) {
        EffectImplicitTargetB = other.EffectImplicitTargetB;
      }
      if (other.EffectRadiusIndex != 0) {
        EffectRadiusIndex = other.EffectRadiusIndex;
      }
      if (other.EffectApplyAuraName != 0) {
        EffectApplyAuraName = other.EffectApplyAuraName;
      }
      if (other.EffectItemType != 0) {
        EffectItemType = other.EffectItemType;
      }
      if (other.EffectMiscValue != 0) {
        EffectMiscValue = other.EffectMiscValue;
      }
      if (other.EffectTriggerSpell != 0) {
        EffectTriggerSpell = other.EffectTriggerSpell;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            EffectIndex = input.ReadUInt32();
            break;
          }
          case 24: {
            Effect = input.ReadInt32();
            break;
          }
          case 32: {
            EffectDieSides = input.ReadInt32();
            break;
          }
          case 40: {
            EffectBaseDice = input.ReadInt32();
            break;
          }
          case 53: {
            EffectDicePerLevel = input.ReadFloat();
            break;
          }
          case 61: {
            EffectRealPointsPerLevel = input.ReadFloat();
            break;
          }
          case 64: {
            EffectBasePoints = input.ReadInt32();
            break;
          }
          case 72: {
            EffectAmplitude = input.ReadInt32();
            break;
          }
          case 85: {
            EffectPointsPerComboPoint = input.ReadFloat();
            break;
          }
          case 88: {
            EffectChainTarget = input.ReadInt32();
            break;
          }
          case 101: {
            EffectMultipleValue = input.ReadFloat();
            break;
          }
          case 104: {
            EffectMechanic = input.ReadInt32();
            break;
          }
          case 112: {
            EffectImplicitTargetA = input.ReadInt32();
            break;
          }
          case 120: {
            EffectImplicitTargetB = input.ReadInt32();
            break;
          }
          case 128: {
            EffectRadiusIndex = input.ReadInt32();
            break;
          }
          case 136: {
            EffectApplyAuraName = input.ReadInt32();
            break;
          }
          case 144: {
            EffectItemType = input.ReadInt32();
            break;
          }
          case 152: {
            EffectMiscValue = input.ReadInt32();
            break;
          }
          case 160: {
            EffectTriggerSpell = input.ReadInt32();
            break;
          }
          case 170: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            EffectIndex = input.ReadUInt32();
            break;
          }
          case 24: {
            Effect = input.ReadInt32();
            break;
          }
          case 32: {
            EffectDieSides = input.ReadInt32();
            break;
          }
          case 40: {
            EffectBaseDice = input.ReadInt32();
            break;
          }
          case 53: {
            EffectDicePerLevel = input.ReadFloat();
            break;
          }
          case 61: {
            EffectRealPointsPerLevel = input.ReadFloat();
            break;
          }
          case 64: {
            EffectBasePoints = input.ReadInt32();
            break;
          }
          case 72: {
            EffectAmplitude = input.ReadInt32();
            break;
          }
          case 85: {
            EffectPointsPerComboPoint = input.ReadFloat();
            break;
          }
          case 88: {
            EffectChainTarget = input.ReadInt32();
            break;
          }
          case 101: {
            EffectMultipleValue = input.ReadFloat();
            break;
          }
          case 104: {
            EffectMechanic = input.ReadInt32();
            break;
          }
          case 112: {
            EffectImplicitTargetA = input.ReadInt32();
            break;
          }
          case 120: {
            EffectImplicitTargetB = input.ReadInt32();
            break;
          }
          case 128: {
            EffectRadiusIndex = input.ReadInt32();
            break;
          }
          case 136: {
            EffectApplyAuraName = input.ReadInt32();
            break;
          }
          case 144: {
            EffectItemType = input.ReadInt32();
            break;
          }
          case 152: {
            EffectMiscValue = input.ReadInt32();
            break;
          }
          case 160: {
            EffectTriggerSpell = input.ReadInt32();
            break;
          }
          case 170: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellElixir : pb::IMessage<SpellElixir>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellElixir> _parser = new pb::MessageParser<SpellElixir>(() => new SpellElixir());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellElixir> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellElixir() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellElixir(SpellElixir other) : this() {
      entry_ = other.entry_;
      mask_ = other.mask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellElixir Clone() {
      return new SpellElixir(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// SpellId of potion
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "mask" field.</summary>
    public const int MaskFieldNumber = 2;
    private uint mask_;
    /// <summary>
    /// Mask (0x1 battle, 0x2 guardian, 0x3 flask, 0x7 unstable flasks, 0xB shattrath flasks)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mask {
      get { return mask_; }
      set {
        mask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellElixir);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellElixir other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Mask != other.Mask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Mask != 0) hash ^= Mask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Mask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Mask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Mask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Mask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Mask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellElixir other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Mask != 0) {
        Mask = other.Mask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Mask = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Mask = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellFacing : pb::IMessage<SpellFacing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellFacing> _parser = new pb::MessageParser<SpellFacing>(() => new SpellFacing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellFacing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellFacing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellFacing(SpellFacing other) : this() {
      entry_ = other.entry_;
      facingcasterflag_ = other.facingcasterflag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellFacing Clone() {
      return new SpellFacing(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "facingcasterflag" field.</summary>
    public const int FacingcasterflagFieldNumber = 2;
    private uint facingcasterflag_;
    /// <summary>
    /// Flag for facing state, usually 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Facingcasterflag {
      get { return facingcasterflag_; }
      set {
        facingcasterflag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellFacing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellFacing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Facingcasterflag != other.Facingcasterflag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Facingcasterflag != 0) hash ^= Facingcasterflag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Facingcasterflag != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Facingcasterflag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Facingcasterflag != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Facingcasterflag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Facingcasterflag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Facingcasterflag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellFacing other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Facingcasterflag != 0) {
        Facingcasterflag = other.Facingcasterflag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Facingcasterflag = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Facingcasterflag = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellGroup : pb::IMessage<SpellGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellGroup> _parser = new pb::MessageParser<SpellGroup>(() => new SpellGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroup(SpellGroup other) : this() {
      groupId_ = other.groupId_;
      groupSpellId_ = other.groupSpellId_;
      spellId_ = other.spellId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroup Clone() {
      return new SpellGroup(this);
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private uint groupId_;
    /// <summary>
    /// Group identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "group_spell_id" field.</summary>
    public const int GroupSpellIdFieldNumber = 2;
    private uint groupSpellId_;
    /// <summary>
    /// Spell group identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupSpellId {
      get { return groupSpellId_; }
      set {
        groupSpellId_ = value;
      }
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 3;
    private uint spellId_;
    /// <summary>
    /// Spell identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (GroupSpellId != other.GroupSpellId) return false;
      if (SpellId != other.SpellId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (GroupSpellId != 0) hash ^= GroupSpellId.GetHashCode();
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupId);
      }
      if (GroupSpellId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GroupSpellId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupId);
      }
      if (GroupSpellId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GroupSpellId);
      }
      if (SpellId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (GroupSpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupSpellId);
      }
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellGroup other) {
      if (other == null) {
        return;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.GroupSpellId != 0) {
        GroupSpellId = other.GroupSpellId;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 16: {
            GroupSpellId = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 16: {
            GroupSpellId = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellGroupStackRules : pb::IMessage<SpellGroupStackRules>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellGroupStackRules> _parser = new pb::MessageParser<SpellGroupStackRules>(() => new SpellGroupStackRules());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellGroupStackRules> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroupStackRules() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroupStackRules(SpellGroupStackRules other) : this() {
      groupId_ = other.groupId_;
      stackRule_ = other.stackRule_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellGroupStackRules Clone() {
      return new SpellGroupStackRules(this);
    }

    /// <summary>Field number for the "group_id" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private uint groupId_;
    /// <summary>
    /// Group identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "stack_rule" field.</summary>
    public const int StackRuleFieldNumber = 2;
    private uint stackRule_;
    /// <summary>
    /// Stack rule (default 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StackRule {
      get { return stackRule_; }
      set {
        stackRule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellGroupStackRules);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellGroupStackRules other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (StackRule != other.StackRule) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (StackRule != 0) hash ^= StackRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupId);
      }
      if (StackRule != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StackRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GroupId);
      }
      if (StackRule != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StackRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (StackRule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StackRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellGroupStackRules other) {
      if (other == null) {
        return;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.StackRule != 0) {
        StackRule = other.StackRule;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 16: {
            StackRule = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GroupId = input.ReadUInt32();
            break;
          }
          case 16: {
            StackRule = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellLearnSpell : pb::IMessage<SpellLearnSpell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellLearnSpell> _parser = new pb::MessageParser<SpellLearnSpell>(() => new SpellLearnSpell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellLearnSpell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellLearnSpell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellLearnSpell(SpellLearnSpell other) : this() {
      entry_ = other.entry_;
      spellId_ = other.spellId_;
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellLearnSpell Clone() {
      return new SpellLearnSpell(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry identifier (e.g., item or trigger)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 2;
    private uint spellId_;
    /// <summary>
    /// Spell ID to learn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { return spellId_; }
      set {
        spellId_ = value;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 3;
    private uint active_;
    /// <summary>
    /// Indicates if the spell is active (default 1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellLearnSpell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellLearnSpell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (SpellId != other.SpellId) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (SpellId != 0) hash ^= SpellId.GetHashCode();
      if (Active != 0) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SpellId);
      }
      if (Active != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (SpellId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SpellId);
      }
      if (Active != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (SpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (Active != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Active);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellLearnSpell other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.SpellId != 0) {
        SpellId = other.SpellId;
      }
      if (other.Active != 0) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 24: {
            Active = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 24: {
            Active = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellMod : pb::IMessage<SpellMod>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellMod> _parser = new pb::MessageParser<SpellMod>(() => new SpellMod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellMod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellMod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellMod(SpellMod other) : this() {
      id_ = other.id_;
      procChance_ = other.procChance_;
      procFlags_ = other.procFlags_;
      procCharges_ = other.procCharges_;
      durationIndex_ = other.durationIndex_;
      category_ = other.category_;
      castingTimeIndex_ = other.castingTimeIndex_;
      stackAmount_ = other.stackAmount_;
      spellIconId_ = other.spellIconId_;
      activeIconId_ = other.activeIconId_;
      manaCost_ = other.manaCost_;
      attributes_ = other.attributes_;
      attributesEx_ = other.attributesEx_;
      attributesEx2_ = other.attributesEx2_;
      attributesEx3_ = other.attributesEx3_;
      attributesEx4_ = other.attributesEx4_;
      custom_ = other.custom_;
      interruptFlags_ = other.interruptFlags_;
      auraInterruptFlags_ = other.auraInterruptFlags_;
      channelInterruptFlags_ = other.channelInterruptFlags_;
      dispel_ = other.dispel_;
      stances_ = other.stances_;
      stancesNot_ = other.stancesNot_;
      spellVisual_ = other.spellVisual_;
      manaCostPercentage_ = other.manaCostPercentage_;
      startRecoveryCategory_ = other.startRecoveryCategory_;
      startRecoveryTime_ = other.startRecoveryTime_;
      maxAffectedTargets_ = other.maxAffectedTargets_;
      maxTargetLevel_ = other.maxTargetLevel_;
      dmgClass_ = other.dmgClass_;
      rangeIndex_ = other.rangeIndex_;
      recoveryTime_ = other.recoveryTime_;
      categoryRecoveryTime_ = other.categoryRecoveryTime_;
      spellFamilyName_ = other.spellFamilyName_;
      spellFamilyFlags_ = other.spellFamilyFlags_;
      mechanic_ = other.mechanic_;
      equippedItemClass_ = other.equippedItemClass_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellMod Clone() {
      return new SpellMod(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Unique identifier for the spell mod
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "proc_chance" field.</summary>
    public const int ProcChanceFieldNumber = 2;
    private int procChance_;
    /// <summary>
    /// Proc chance (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProcChance {
      get { return procChance_; }
      set {
        procChance_ = value;
      }
    }

    /// <summary>Field number for the "proc_flags" field.</summary>
    public const int ProcFlagsFieldNumber = 3;
    private int procFlags_;
    /// <summary>
    /// Proc flags (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProcFlags {
      get { return procFlags_; }
      set {
        procFlags_ = value;
      }
    }

    /// <summary>Field number for the "proc_charges" field.</summary>
    public const int ProcChargesFieldNumber = 4;
    private int procCharges_;
    /// <summary>
    /// Proc charges (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProcCharges {
      get { return procCharges_; }
      set {
        procCharges_ = value;
      }
    }

    /// <summary>Field number for the "duration_index" field.</summary>
    public const int DurationIndexFieldNumber = 5;
    private int durationIndex_;
    /// <summary>
    /// Duration index (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationIndex {
      get { return durationIndex_; }
      set {
        durationIndex_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 6;
    private int category_;
    /// <summary>
    /// Category (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "casting_time_index" field.</summary>
    public const int CastingTimeIndexFieldNumber = 7;
    private int castingTimeIndex_;
    /// <summary>
    /// Casting time index (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CastingTimeIndex {
      get { return castingTimeIndex_; }
      set {
        castingTimeIndex_ = value;
      }
    }

    /// <summary>Field number for the "stack_amount" field.</summary>
    public const int StackAmountFieldNumber = 8;
    private int stackAmount_;
    /// <summary>
    /// Stack amount (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StackAmount {
      get { return stackAmount_; }
      set {
        stackAmount_ = value;
      }
    }

    /// <summary>Field number for the "spell_icon_id" field.</summary>
    public const int SpellIconIdFieldNumber = 9;
    private int spellIconId_;
    /// <summary>
    /// Spell icon ID (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellIconId {
      get { return spellIconId_; }
      set {
        spellIconId_ = value;
      }
    }

    /// <summary>Field number for the "active_icon_id" field.</summary>
    public const int ActiveIconIdFieldNumber = 10;
    private int activeIconId_;
    /// <summary>
    /// Active icon ID (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveIconId {
      get { return activeIconId_; }
      set {
        activeIconId_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost" field.</summary>
    public const int ManaCostFieldNumber = 11;
    private int manaCost_;
    /// <summary>
    /// Mana cost (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManaCost {
      get { return manaCost_; }
      set {
        manaCost_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 12;
    private int attributes_;
    /// <summary>
    /// Spell attributes (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex" field.</summary>
    public const int AttributesExFieldNumber = 13;
    private int attributesEx_;
    /// <summary>
    /// Extra attributes (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttributesEx {
      get { return attributesEx_; }
      set {
        attributesEx_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex2" field.</summary>
    public const int AttributesEx2FieldNumber = 14;
    private int attributesEx2_;
    /// <summary>
    /// Extra attributes 2 (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttributesEx2 {
      get { return attributesEx2_; }
      set {
        attributesEx2_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex3" field.</summary>
    public const int AttributesEx3FieldNumber = 15;
    private int attributesEx3_;
    /// <summary>
    /// Extra attributes 3 (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttributesEx3 {
      get { return attributesEx3_; }
      set {
        attributesEx3_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex4" field.</summary>
    public const int AttributesEx4FieldNumber = 16;
    private int attributesEx4_;
    /// <summary>
    /// Extra attributes 4 (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttributesEx4 {
      get { return attributesEx4_; }
      set {
        attributesEx4_ = value;
      }
    }

    /// <summary>Field number for the "custom" field.</summary>
    public const int CustomFieldNumber = 17;
    private int custom_;
    /// <summary>
    /// Custom attribute (default 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Custom {
      get { return custom_; }
      set {
        custom_ = value;
      }
    }

    /// <summary>Field number for the "interrupt_flags" field.</summary>
    public const int InterruptFlagsFieldNumber = 18;
    private int interruptFlags_;
    /// <summary>
    /// Interrupt flags (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InterruptFlags {
      get { return interruptFlags_; }
      set {
        interruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "aura_interrupt_flags" field.</summary>
    public const int AuraInterruptFlagsFieldNumber = 19;
    private int auraInterruptFlags_;
    /// <summary>
    /// Aura interrupt flags (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuraInterruptFlags {
      get { return auraInterruptFlags_; }
      set {
        auraInterruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "channel_interrupt_flags" field.</summary>
    public const int ChannelInterruptFlagsFieldNumber = 20;
    private int channelInterruptFlags_;
    /// <summary>
    /// Channel interrupt flags (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelInterruptFlags {
      get { return channelInterruptFlags_; }
      set {
        channelInterruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "dispel" field.</summary>
    public const int DispelFieldNumber = 21;
    private int dispel_;
    /// <summary>
    /// Dispel type (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dispel {
      get { return dispel_; }
      set {
        dispel_ = value;
      }
    }

    /// <summary>Field number for the "stances" field.</summary>
    public const int StancesFieldNumber = 22;
    private int stances_;
    /// <summary>
    /// Stances (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stances {
      get { return stances_; }
      set {
        stances_ = value;
      }
    }

    /// <summary>Field number for the "stances_not" field.</summary>
    public const int StancesNotFieldNumber = 23;
    private int stancesNot_;
    /// <summary>
    /// Stances not allowed (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StancesNot {
      get { return stancesNot_; }
      set {
        stancesNot_ = value;
      }
    }

    /// <summary>Field number for the "spell_visual" field.</summary>
    public const int SpellVisualFieldNumber = 24;
    private int spellVisual_;
    /// <summary>
    /// Spell visual (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellVisual {
      get { return spellVisual_; }
      set {
        spellVisual_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost_percentage" field.</summary>
    public const int ManaCostPercentageFieldNumber = 25;
    private int manaCostPercentage_;
    /// <summary>
    /// Mana cost as a percentage (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManaCostPercentage {
      get { return manaCostPercentage_; }
      set {
        manaCostPercentage_ = value;
      }
    }

    /// <summary>Field number for the "start_recovery_category" field.</summary>
    public const int StartRecoveryCategoryFieldNumber = 26;
    private int startRecoveryCategory_;
    /// <summary>
    /// Start recovery category (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartRecoveryCategory {
      get { return startRecoveryCategory_; }
      set {
        startRecoveryCategory_ = value;
      }
    }

    /// <summary>Field number for the "start_recovery_time" field.</summary>
    public const int StartRecoveryTimeFieldNumber = 27;
    private int startRecoveryTime_;
    /// <summary>
    /// Start recovery time (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartRecoveryTime {
      get { return startRecoveryTime_; }
      set {
        startRecoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "max_affected_targets" field.</summary>
    public const int MaxAffectedTargetsFieldNumber = 28;
    private int maxAffectedTargets_;
    /// <summary>
    /// Max affected targets (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxAffectedTargets {
      get { return maxAffectedTargets_; }
      set {
        maxAffectedTargets_ = value;
      }
    }

    /// <summary>Field number for the "max_target_level" field.</summary>
    public const int MaxTargetLevelFieldNumber = 29;
    private int maxTargetLevel_;
    /// <summary>
    /// Max target level (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxTargetLevel {
      get { return maxTargetLevel_; }
      set {
        maxTargetLevel_ = value;
      }
    }

    /// <summary>Field number for the "dmg_class" field.</summary>
    public const int DmgClassFieldNumber = 30;
    private int dmgClass_;
    /// <summary>
    /// Damage class (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DmgClass {
      get { return dmgClass_; }
      set {
        dmgClass_ = value;
      }
    }

    /// <summary>Field number for the "range_index" field.</summary>
    public const int RangeIndexFieldNumber = 31;
    private int rangeIndex_;
    /// <summary>
    /// Range index (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RangeIndex {
      get { return rangeIndex_; }
      set {
        rangeIndex_ = value;
      }
    }

    /// <summary>Field number for the "recovery_time" field.</summary>
    public const int RecoveryTimeFieldNumber = 32;
    private int recoveryTime_;
    /// <summary>
    /// Recovery time (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoveryTime {
      get { return recoveryTime_; }
      set {
        recoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "category_recovery_time" field.</summary>
    public const int CategoryRecoveryTimeFieldNumber = 33;
    private int categoryRecoveryTime_;
    /// <summary>
    /// Category recovery time (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CategoryRecoveryTime {
      get { return categoryRecoveryTime_; }
      set {
        categoryRecoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_name" field.</summary>
    public const int SpellFamilyNameFieldNumber = 34;
    private int spellFamilyName_;
    /// <summary>
    /// Spell family name (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellFamilyName {
      get { return spellFamilyName_; }
      set {
        spellFamilyName_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_flags" field.</summary>
    public const int SpellFamilyFlagsFieldNumber = 35;
    private ulong spellFamilyFlags_;
    /// <summary>
    /// Spell family flags (default 0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyFlags {
      get { return spellFamilyFlags_; }
      set {
        spellFamilyFlags_ = value;
      }
    }

    /// <summary>Field number for the "mechanic" field.</summary>
    public const int MechanicFieldNumber = 36;
    private int mechanic_;
    /// <summary>
    /// Mechanic (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mechanic {
      get { return mechanic_; }
      set {
        mechanic_ = value;
      }
    }

    /// <summary>Field number for the "equipped_item_class" field.</summary>
    public const int EquippedItemClassFieldNumber = 37;
    private int equippedItemClass_;
    /// <summary>
    /// Equipped item class (default -1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquippedItemClass {
      get { return equippedItemClass_; }
      set {
        equippedItemClass_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 38;
    private string comment_ = "";
    /// <summary>
    /// Optional comment for the spell mod
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellMod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellMod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProcChance != other.ProcChance) return false;
      if (ProcFlags != other.ProcFlags) return false;
      if (ProcCharges != other.ProcCharges) return false;
      if (DurationIndex != other.DurationIndex) return false;
      if (Category != other.Category) return false;
      if (CastingTimeIndex != other.CastingTimeIndex) return false;
      if (StackAmount != other.StackAmount) return false;
      if (SpellIconId != other.SpellIconId) return false;
      if (ActiveIconId != other.ActiveIconId) return false;
      if (ManaCost != other.ManaCost) return false;
      if (Attributes != other.Attributes) return false;
      if (AttributesEx != other.AttributesEx) return false;
      if (AttributesEx2 != other.AttributesEx2) return false;
      if (AttributesEx3 != other.AttributesEx3) return false;
      if (AttributesEx4 != other.AttributesEx4) return false;
      if (Custom != other.Custom) return false;
      if (InterruptFlags != other.InterruptFlags) return false;
      if (AuraInterruptFlags != other.AuraInterruptFlags) return false;
      if (ChannelInterruptFlags != other.ChannelInterruptFlags) return false;
      if (Dispel != other.Dispel) return false;
      if (Stances != other.Stances) return false;
      if (StancesNot != other.StancesNot) return false;
      if (SpellVisual != other.SpellVisual) return false;
      if (ManaCostPercentage != other.ManaCostPercentage) return false;
      if (StartRecoveryCategory != other.StartRecoveryCategory) return false;
      if (StartRecoveryTime != other.StartRecoveryTime) return false;
      if (MaxAffectedTargets != other.MaxAffectedTargets) return false;
      if (MaxTargetLevel != other.MaxTargetLevel) return false;
      if (DmgClass != other.DmgClass) return false;
      if (RangeIndex != other.RangeIndex) return false;
      if (RecoveryTime != other.RecoveryTime) return false;
      if (CategoryRecoveryTime != other.CategoryRecoveryTime) return false;
      if (SpellFamilyName != other.SpellFamilyName) return false;
      if (SpellFamilyFlags != other.SpellFamilyFlags) return false;
      if (Mechanic != other.Mechanic) return false;
      if (EquippedItemClass != other.EquippedItemClass) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ProcChance != 0) hash ^= ProcChance.GetHashCode();
      if (ProcFlags != 0) hash ^= ProcFlags.GetHashCode();
      if (ProcCharges != 0) hash ^= ProcCharges.GetHashCode();
      if (DurationIndex != 0) hash ^= DurationIndex.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (CastingTimeIndex != 0) hash ^= CastingTimeIndex.GetHashCode();
      if (StackAmount != 0) hash ^= StackAmount.GetHashCode();
      if (SpellIconId != 0) hash ^= SpellIconId.GetHashCode();
      if (ActiveIconId != 0) hash ^= ActiveIconId.GetHashCode();
      if (ManaCost != 0) hash ^= ManaCost.GetHashCode();
      if (Attributes != 0) hash ^= Attributes.GetHashCode();
      if (AttributesEx != 0) hash ^= AttributesEx.GetHashCode();
      if (AttributesEx2 != 0) hash ^= AttributesEx2.GetHashCode();
      if (AttributesEx3 != 0) hash ^= AttributesEx3.GetHashCode();
      if (AttributesEx4 != 0) hash ^= AttributesEx4.GetHashCode();
      if (Custom != 0) hash ^= Custom.GetHashCode();
      if (InterruptFlags != 0) hash ^= InterruptFlags.GetHashCode();
      if (AuraInterruptFlags != 0) hash ^= AuraInterruptFlags.GetHashCode();
      if (ChannelInterruptFlags != 0) hash ^= ChannelInterruptFlags.GetHashCode();
      if (Dispel != 0) hash ^= Dispel.GetHashCode();
      if (Stances != 0) hash ^= Stances.GetHashCode();
      if (StancesNot != 0) hash ^= StancesNot.GetHashCode();
      if (SpellVisual != 0) hash ^= SpellVisual.GetHashCode();
      if (ManaCostPercentage != 0) hash ^= ManaCostPercentage.GetHashCode();
      if (StartRecoveryCategory != 0) hash ^= StartRecoveryCategory.GetHashCode();
      if (StartRecoveryTime != 0) hash ^= StartRecoveryTime.GetHashCode();
      if (MaxAffectedTargets != 0) hash ^= MaxAffectedTargets.GetHashCode();
      if (MaxTargetLevel != 0) hash ^= MaxTargetLevel.GetHashCode();
      if (DmgClass != 0) hash ^= DmgClass.GetHashCode();
      if (RangeIndex != 0) hash ^= RangeIndex.GetHashCode();
      if (RecoveryTime != 0) hash ^= RecoveryTime.GetHashCode();
      if (CategoryRecoveryTime != 0) hash ^= CategoryRecoveryTime.GetHashCode();
      if (SpellFamilyName != 0) hash ^= SpellFamilyName.GetHashCode();
      if (SpellFamilyFlags != 0UL) hash ^= SpellFamilyFlags.GetHashCode();
      if (Mechanic != 0) hash ^= Mechanic.GetHashCode();
      if (EquippedItemClass != 0) hash ^= EquippedItemClass.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ProcChance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcChance);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ProcFlags);
      }
      if (ProcCharges != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProcCharges);
      }
      if (DurationIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DurationIndex);
      }
      if (Category != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Category);
      }
      if (CastingTimeIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CastingTimeIndex);
      }
      if (StackAmount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(StackAmount);
      }
      if (SpellIconId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpellIconId);
      }
      if (ActiveIconId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActiveIconId);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ManaCost);
      }
      if (Attributes != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Attributes);
      }
      if (AttributesEx != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AttributesEx4);
      }
      if (Custom != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Custom);
      }
      if (InterruptFlags != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ChannelInterruptFlags);
      }
      if (Dispel != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Dispel);
      }
      if (Stances != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Stances);
      }
      if (StancesNot != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(StancesNot);
      }
      if (SpellVisual != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SpellVisual);
      }
      if (ManaCostPercentage != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(StartRecoveryTime);
      }
      if (MaxAffectedTargets != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(MaxAffectedTargets);
      }
      if (MaxTargetLevel != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(MaxTargetLevel);
      }
      if (DmgClass != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(DmgClass);
      }
      if (RangeIndex != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(RangeIndex);
      }
      if (RecoveryTime != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(CategoryRecoveryTime);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        output.WriteRawTag(152, 2);
        output.WriteUInt64(SpellFamilyFlags);
      }
      if (Mechanic != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(Mechanic);
      }
      if (EquippedItemClass != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(EquippedItemClass);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ProcChance != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcChance);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ProcFlags);
      }
      if (ProcCharges != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProcCharges);
      }
      if (DurationIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DurationIndex);
      }
      if (Category != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Category);
      }
      if (CastingTimeIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CastingTimeIndex);
      }
      if (StackAmount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(StackAmount);
      }
      if (SpellIconId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpellIconId);
      }
      if (ActiveIconId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActiveIconId);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ManaCost);
      }
      if (Attributes != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Attributes);
      }
      if (AttributesEx != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AttributesEx4);
      }
      if (Custom != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Custom);
      }
      if (InterruptFlags != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(ChannelInterruptFlags);
      }
      if (Dispel != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Dispel);
      }
      if (Stances != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Stances);
      }
      if (StancesNot != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(StancesNot);
      }
      if (SpellVisual != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SpellVisual);
      }
      if (ManaCostPercentage != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(StartRecoveryTime);
      }
      if (MaxAffectedTargets != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(MaxAffectedTargets);
      }
      if (MaxTargetLevel != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(MaxTargetLevel);
      }
      if (DmgClass != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(DmgClass);
      }
      if (RangeIndex != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(RangeIndex);
      }
      if (RecoveryTime != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(CategoryRecoveryTime);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        output.WriteRawTag(152, 2);
        output.WriteUInt64(SpellFamilyFlags);
      }
      if (Mechanic != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(Mechanic);
      }
      if (EquippedItemClass != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(EquippedItemClass);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ProcChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcChance);
      }
      if (ProcFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcFlags);
      }
      if (ProcCharges != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcCharges);
      }
      if (DurationIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationIndex);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      if (CastingTimeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CastingTimeIndex);
      }
      if (StackAmount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackAmount);
      }
      if (SpellIconId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellIconId);
      }
      if (ActiveIconId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveIconId);
      }
      if (ManaCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ManaCost);
      }
      if (Attributes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attributes);
      }
      if (AttributesEx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AttributesEx4);
      }
      if (Custom != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Custom);
      }
      if (InterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChannelInterruptFlags);
      }
      if (Dispel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Dispel);
      }
      if (Stances != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Stances);
      }
      if (StancesNot != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StancesNot);
      }
      if (SpellVisual != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpellVisual);
      }
      if (ManaCostPercentage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StartRecoveryTime);
      }
      if (MaxAffectedTargets != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxAffectedTargets);
      }
      if (MaxTargetLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxTargetLevel);
      }
      if (DmgClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DmgClass);
      }
      if (RangeIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RangeIndex);
      }
      if (RecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CategoryRecoveryTime);
      }
      if (SpellFamilyName != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyFlags);
      }
      if (Mechanic != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Mechanic);
      }
      if (EquippedItemClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EquippedItemClass);
      }
      if (Comment.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellMod other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ProcChance != 0) {
        ProcChance = other.ProcChance;
      }
      if (other.ProcFlags != 0) {
        ProcFlags = other.ProcFlags;
      }
      if (other.ProcCharges != 0) {
        ProcCharges = other.ProcCharges;
      }
      if (other.DurationIndex != 0) {
        DurationIndex = other.DurationIndex;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.CastingTimeIndex != 0) {
        CastingTimeIndex = other.CastingTimeIndex;
      }
      if (other.StackAmount != 0) {
        StackAmount = other.StackAmount;
      }
      if (other.SpellIconId != 0) {
        SpellIconId = other.SpellIconId;
      }
      if (other.ActiveIconId != 0) {
        ActiveIconId = other.ActiveIconId;
      }
      if (other.ManaCost != 0) {
        ManaCost = other.ManaCost;
      }
      if (other.Attributes != 0) {
        Attributes = other.Attributes;
      }
      if (other.AttributesEx != 0) {
        AttributesEx = other.AttributesEx;
      }
      if (other.AttributesEx2 != 0) {
        AttributesEx2 = other.AttributesEx2;
      }
      if (other.AttributesEx3 != 0) {
        AttributesEx3 = other.AttributesEx3;
      }
      if (other.AttributesEx4 != 0) {
        AttributesEx4 = other.AttributesEx4;
      }
      if (other.Custom != 0) {
        Custom = other.Custom;
      }
      if (other.InterruptFlags != 0) {
        InterruptFlags = other.InterruptFlags;
      }
      if (other.AuraInterruptFlags != 0) {
        AuraInterruptFlags = other.AuraInterruptFlags;
      }
      if (other.ChannelInterruptFlags != 0) {
        ChannelInterruptFlags = other.ChannelInterruptFlags;
      }
      if (other.Dispel != 0) {
        Dispel = other.Dispel;
      }
      if (other.Stances != 0) {
        Stances = other.Stances;
      }
      if (other.StancesNot != 0) {
        StancesNot = other.StancesNot;
      }
      if (other.SpellVisual != 0) {
        SpellVisual = other.SpellVisual;
      }
      if (other.ManaCostPercentage != 0) {
        ManaCostPercentage = other.ManaCostPercentage;
      }
      if (other.StartRecoveryCategory != 0) {
        StartRecoveryCategory = other.StartRecoveryCategory;
      }
      if (other.StartRecoveryTime != 0) {
        StartRecoveryTime = other.StartRecoveryTime;
      }
      if (other.MaxAffectedTargets != 0) {
        MaxAffectedTargets = other.MaxAffectedTargets;
      }
      if (other.MaxTargetLevel != 0) {
        MaxTargetLevel = other.MaxTargetLevel;
      }
      if (other.DmgClass != 0) {
        DmgClass = other.DmgClass;
      }
      if (other.RangeIndex != 0) {
        RangeIndex = other.RangeIndex;
      }
      if (other.RecoveryTime != 0) {
        RecoveryTime = other.RecoveryTime;
      }
      if (other.CategoryRecoveryTime != 0) {
        CategoryRecoveryTime = other.CategoryRecoveryTime;
      }
      if (other.SpellFamilyName != 0) {
        SpellFamilyName = other.SpellFamilyName;
      }
      if (other.SpellFamilyFlags != 0UL) {
        SpellFamilyFlags = other.SpellFamilyFlags;
      }
      if (other.Mechanic != 0) {
        Mechanic = other.Mechanic;
      }
      if (other.EquippedItemClass != 0) {
        EquippedItemClass = other.EquippedItemClass;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ProcChance = input.ReadInt32();
            break;
          }
          case 24: {
            ProcFlags = input.ReadInt32();
            break;
          }
          case 32: {
            ProcCharges = input.ReadInt32();
            break;
          }
          case 40: {
            DurationIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Category = input.ReadInt32();
            break;
          }
          case 56: {
            CastingTimeIndex = input.ReadInt32();
            break;
          }
          case 64: {
            StackAmount = input.ReadInt32();
            break;
          }
          case 72: {
            SpellIconId = input.ReadInt32();
            break;
          }
          case 80: {
            ActiveIconId = input.ReadInt32();
            break;
          }
          case 88: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 96: {
            Attributes = input.ReadInt32();
            break;
          }
          case 104: {
            AttributesEx = input.ReadInt32();
            break;
          }
          case 112: {
            AttributesEx2 = input.ReadInt32();
            break;
          }
          case 120: {
            AttributesEx3 = input.ReadInt32();
            break;
          }
          case 128: {
            AttributesEx4 = input.ReadInt32();
            break;
          }
          case 136: {
            Custom = input.ReadInt32();
            break;
          }
          case 144: {
            InterruptFlags = input.ReadInt32();
            break;
          }
          case 152: {
            AuraInterruptFlags = input.ReadInt32();
            break;
          }
          case 160: {
            ChannelInterruptFlags = input.ReadInt32();
            break;
          }
          case 168: {
            Dispel = input.ReadInt32();
            break;
          }
          case 176: {
            Stances = input.ReadInt32();
            break;
          }
          case 184: {
            StancesNot = input.ReadInt32();
            break;
          }
          case 192: {
            SpellVisual = input.ReadInt32();
            break;
          }
          case 200: {
            ManaCostPercentage = input.ReadInt32();
            break;
          }
          case 208: {
            StartRecoveryCategory = input.ReadInt32();
            break;
          }
          case 216: {
            StartRecoveryTime = input.ReadInt32();
            break;
          }
          case 224: {
            MaxAffectedTargets = input.ReadInt32();
            break;
          }
          case 232: {
            MaxTargetLevel = input.ReadInt32();
            break;
          }
          case 240: {
            DmgClass = input.ReadInt32();
            break;
          }
          case 248: {
            RangeIndex = input.ReadInt32();
            break;
          }
          case 256: {
            RecoveryTime = input.ReadInt32();
            break;
          }
          case 264: {
            CategoryRecoveryTime = input.ReadInt32();
            break;
          }
          case 272: {
            SpellFamilyName = input.ReadInt32();
            break;
          }
          case 280: {
            SpellFamilyFlags = input.ReadUInt64();
            break;
          }
          case 288: {
            Mechanic = input.ReadInt32();
            break;
          }
          case 296: {
            EquippedItemClass = input.ReadInt32();
            break;
          }
          case 306: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ProcChance = input.ReadInt32();
            break;
          }
          case 24: {
            ProcFlags = input.ReadInt32();
            break;
          }
          case 32: {
            ProcCharges = input.ReadInt32();
            break;
          }
          case 40: {
            DurationIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Category = input.ReadInt32();
            break;
          }
          case 56: {
            CastingTimeIndex = input.ReadInt32();
            break;
          }
          case 64: {
            StackAmount = input.ReadInt32();
            break;
          }
          case 72: {
            SpellIconId = input.ReadInt32();
            break;
          }
          case 80: {
            ActiveIconId = input.ReadInt32();
            break;
          }
          case 88: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 96: {
            Attributes = input.ReadInt32();
            break;
          }
          case 104: {
            AttributesEx = input.ReadInt32();
            break;
          }
          case 112: {
            AttributesEx2 = input.ReadInt32();
            break;
          }
          case 120: {
            AttributesEx3 = input.ReadInt32();
            break;
          }
          case 128: {
            AttributesEx4 = input.ReadInt32();
            break;
          }
          case 136: {
            Custom = input.ReadInt32();
            break;
          }
          case 144: {
            InterruptFlags = input.ReadInt32();
            break;
          }
          case 152: {
            AuraInterruptFlags = input.ReadInt32();
            break;
          }
          case 160: {
            ChannelInterruptFlags = input.ReadInt32();
            break;
          }
          case 168: {
            Dispel = input.ReadInt32();
            break;
          }
          case 176: {
            Stances = input.ReadInt32();
            break;
          }
          case 184: {
            StancesNot = input.ReadInt32();
            break;
          }
          case 192: {
            SpellVisual = input.ReadInt32();
            break;
          }
          case 200: {
            ManaCostPercentage = input.ReadInt32();
            break;
          }
          case 208: {
            StartRecoveryCategory = input.ReadInt32();
            break;
          }
          case 216: {
            StartRecoveryTime = input.ReadInt32();
            break;
          }
          case 224: {
            MaxAffectedTargets = input.ReadInt32();
            break;
          }
          case 232: {
            MaxTargetLevel = input.ReadInt32();
            break;
          }
          case 240: {
            DmgClass = input.ReadInt32();
            break;
          }
          case 248: {
            RangeIndex = input.ReadInt32();
            break;
          }
          case 256: {
            RecoveryTime = input.ReadInt32();
            break;
          }
          case 264: {
            CategoryRecoveryTime = input.ReadInt32();
            break;
          }
          case 272: {
            SpellFamilyName = input.ReadInt32();
            break;
          }
          case 280: {
            SpellFamilyFlags = input.ReadUInt64();
            break;
          }
          case 288: {
            Mechanic = input.ReadInt32();
            break;
          }
          case 296: {
            EquippedItemClass = input.ReadInt32();
            break;
          }
          case 306: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellPetAura : pb::IMessage<SpellPetAura>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellPetAura> _parser = new pb::MessageParser<SpellPetAura>(() => new SpellPetAura());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellPetAura> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellPetAura() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellPetAura(SpellPetAura other) : this() {
      spell_ = other.spell_;
      pet_ = other.pet_;
      aura_ = other.aura_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellPetAura Clone() {
      return new SpellPetAura(this);
    }

    /// <summary>Field number for the "spell" field.</summary>
    public const int SpellFieldNumber = 1;
    private uint spell_;
    /// <summary>
    /// Dummy spell ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Spell {
      get { return spell_; }
      set {
        spell_ = value;
      }
    }

    /// <summary>Field number for the "pet" field.</summary>
    public const int PetFieldNumber = 2;
    private uint pet_;
    /// <summary>
    /// Pet ID (0 = all pets)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Pet {
      get { return pet_; }
      set {
        pet_ = value;
      }
    }

    /// <summary>Field number for the "aura" field.</summary>
    public const int AuraFieldNumber = 3;
    private uint aura_;
    /// <summary>
    /// Pet aura ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Aura {
      get { return aura_; }
      set {
        aura_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellPetAura);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellPetAura other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Spell != other.Spell) return false;
      if (Pet != other.Pet) return false;
      if (Aura != other.Aura) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Spell != 0) hash ^= Spell.GetHashCode();
      if (Pet != 0) hash ^= Pet.GetHashCode();
      if (Aura != 0) hash ^= Aura.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spell);
      }
      if (Pet != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pet);
      }
      if (Aura != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Aura);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Spell != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Spell);
      }
      if (Pet != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pet);
      }
      if (Aura != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Aura);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Spell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spell);
      }
      if (Pet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pet);
      }
      if (Aura != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Aura);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellPetAura other) {
      if (other == null) {
        return;
      }
      if (other.Spell != 0) {
        Spell = other.Spell;
      }
      if (other.Pet != 0) {
        Pet = other.Pet;
      }
      if (other.Aura != 0) {
        Aura = other.Aura;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Spell = input.ReadUInt32();
            break;
          }
          case 16: {
            Pet = input.ReadUInt32();
            break;
          }
          case 24: {
            Aura = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Spell = input.ReadUInt32();
            break;
          }
          case 16: {
            Pet = input.ReadUInt32();
            break;
          }
          case 24: {
            Aura = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellProcEvent : pb::IMessage<SpellProcEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellProcEvent> _parser = new pb::MessageParser<SpellProcEvent>(() => new SpellProcEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellProcEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcEvent(SpellProcEvent other) : this() {
      entry_ = other.entry_;
      schoolMask_ = other.schoolMask_;
      spellFamilyName_ = other.spellFamilyName_;
      spellFamilyMask0_ = other.spellFamilyMask0_;
      spellFamilyMask1_ = other.spellFamilyMask1_;
      spellFamilyMask2_ = other.spellFamilyMask2_;
      procFlags_ = other.procFlags_;
      procEx_ = other.procEx_;
      ppmRate_ = other.ppmRate_;
      customChance_ = other.customChance_;
      cooldown_ = other.cooldown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcEvent Clone() {
      return new SpellProcEvent(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the spell proc event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "school_mask" field.</summary>
    public const int SchoolMaskFieldNumber = 2;
    private uint schoolMask_;
    /// <summary>
    /// School mask for the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SchoolMask {
      get { return schoolMask_; }
      set {
        schoolMask_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_name" field.</summary>
    public const int SpellFamilyNameFieldNumber = 3;
    private uint spellFamilyName_;
    /// <summary>
    /// Spell family name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellFamilyName {
      get { return spellFamilyName_; }
      set {
        spellFamilyName_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_mask_0" field.</summary>
    public const int SpellFamilyMask0FieldNumber = 4;
    private ulong spellFamilyMask0_;
    /// <summary>
    /// Spell family mask 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyMask0 {
      get { return spellFamilyMask0_; }
      set {
        spellFamilyMask0_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_mask_1" field.</summary>
    public const int SpellFamilyMask1FieldNumber = 5;
    private ulong spellFamilyMask1_;
    /// <summary>
    /// Spell family mask 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyMask1 {
      get { return spellFamilyMask1_; }
      set {
        spellFamilyMask1_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_mask_2" field.</summary>
    public const int SpellFamilyMask2FieldNumber = 6;
    private ulong spellFamilyMask2_;
    /// <summary>
    /// Spell family mask 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyMask2 {
      get { return spellFamilyMask2_; }
      set {
        spellFamilyMask2_ = value;
      }
    }

    /// <summary>Field number for the "proc_flags" field.</summary>
    public const int ProcFlagsFieldNumber = 7;
    private uint procFlags_;
    /// <summary>
    /// Proc flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProcFlags {
      get { return procFlags_; }
      set {
        procFlags_ = value;
      }
    }

    /// <summary>Field number for the "proc_ex" field.</summary>
    public const int ProcExFieldNumber = 8;
    private uint procEx_;
    /// <summary>
    /// Proc extra flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProcEx {
      get { return procEx_; }
      set {
        procEx_ = value;
      }
    }

    /// <summary>Field number for the "ppm_rate" field.</summary>
    public const int PpmRateFieldNumber = 9;
    private float ppmRate_;
    /// <summary>
    /// Proc per minute rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PpmRate {
      get { return ppmRate_; }
      set {
        ppmRate_ = value;
      }
    }

    /// <summary>Field number for the "custom_chance" field.</summary>
    public const int CustomChanceFieldNumber = 10;
    private float customChance_;
    /// <summary>
    /// Custom chance of proc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CustomChance {
      get { return customChance_; }
      set {
        customChance_ = value;
      }
    }

    /// <summary>Field number for the "cooldown" field.</summary>
    public const int CooldownFieldNumber = 11;
    private uint cooldown_;
    /// <summary>
    /// Cooldown in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Cooldown {
      get { return cooldown_; }
      set {
        cooldown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellProcEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellProcEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (SchoolMask != other.SchoolMask) return false;
      if (SpellFamilyName != other.SpellFamilyName) return false;
      if (SpellFamilyMask0 != other.SpellFamilyMask0) return false;
      if (SpellFamilyMask1 != other.SpellFamilyMask1) return false;
      if (SpellFamilyMask2 != other.SpellFamilyMask2) return false;
      if (ProcFlags != other.ProcFlags) return false;
      if (ProcEx != other.ProcEx) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PpmRate, other.PpmRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CustomChance, other.CustomChance)) return false;
      if (Cooldown != other.Cooldown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (SchoolMask != 0) hash ^= SchoolMask.GetHashCode();
      if (SpellFamilyName != 0) hash ^= SpellFamilyName.GetHashCode();
      if (SpellFamilyMask0 != 0UL) hash ^= SpellFamilyMask0.GetHashCode();
      if (SpellFamilyMask1 != 0UL) hash ^= SpellFamilyMask1.GetHashCode();
      if (SpellFamilyMask2 != 0UL) hash ^= SpellFamilyMask2.GetHashCode();
      if (ProcFlags != 0) hash ^= ProcFlags.GetHashCode();
      if (ProcEx != 0) hash ^= ProcEx.GetHashCode();
      if (PpmRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PpmRate);
      if (CustomChance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CustomChance);
      if (Cooldown != 0) hash ^= Cooldown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (SchoolMask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SchoolMask);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellFamilyName);
      }
      if (SpellFamilyMask0 != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(SpellFamilyMask0);
      }
      if (SpellFamilyMask1 != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(SpellFamilyMask1);
      }
      if (SpellFamilyMask2 != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(SpellFamilyMask2);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProcFlags);
      }
      if (ProcEx != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProcEx);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PpmRate);
      }
      if (CustomChance != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(CustomChance);
      }
      if (Cooldown != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Cooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (SchoolMask != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SchoolMask);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpellFamilyName);
      }
      if (SpellFamilyMask0 != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(SpellFamilyMask0);
      }
      if (SpellFamilyMask1 != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(SpellFamilyMask1);
      }
      if (SpellFamilyMask2 != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(SpellFamilyMask2);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProcFlags);
      }
      if (ProcEx != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProcEx);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PpmRate);
      }
      if (CustomChance != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(CustomChance);
      }
      if (Cooldown != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Cooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (SchoolMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SchoolMask);
      }
      if (SpellFamilyName != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellFamilyName);
      }
      if (SpellFamilyMask0 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyMask0);
      }
      if (SpellFamilyMask1 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyMask1);
      }
      if (SpellFamilyMask2 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyMask2);
      }
      if (ProcFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcFlags);
      }
      if (ProcEx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcEx);
      }
      if (PpmRate != 0F) {
        size += 1 + 4;
      }
      if (CustomChance != 0F) {
        size += 1 + 4;
      }
      if (Cooldown != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cooldown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellProcEvent other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.SchoolMask != 0) {
        SchoolMask = other.SchoolMask;
      }
      if (other.SpellFamilyName != 0) {
        SpellFamilyName = other.SpellFamilyName;
      }
      if (other.SpellFamilyMask0 != 0UL) {
        SpellFamilyMask0 = other.SpellFamilyMask0;
      }
      if (other.SpellFamilyMask1 != 0UL) {
        SpellFamilyMask1 = other.SpellFamilyMask1;
      }
      if (other.SpellFamilyMask2 != 0UL) {
        SpellFamilyMask2 = other.SpellFamilyMask2;
      }
      if (other.ProcFlags != 0) {
        ProcFlags = other.ProcFlags;
      }
      if (other.ProcEx != 0) {
        ProcEx = other.ProcEx;
      }
      if (other.PpmRate != 0F) {
        PpmRate = other.PpmRate;
      }
      if (other.CustomChance != 0F) {
        CustomChance = other.CustomChance;
      }
      if (other.Cooldown != 0) {
        Cooldown = other.Cooldown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            SchoolMask = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellFamilyName = input.ReadUInt32();
            break;
          }
          case 32: {
            SpellFamilyMask0 = input.ReadUInt64();
            break;
          }
          case 40: {
            SpellFamilyMask1 = input.ReadUInt64();
            break;
          }
          case 48: {
            SpellFamilyMask2 = input.ReadUInt64();
            break;
          }
          case 56: {
            ProcFlags = input.ReadUInt32();
            break;
          }
          case 64: {
            ProcEx = input.ReadUInt32();
            break;
          }
          case 77: {
            PpmRate = input.ReadFloat();
            break;
          }
          case 85: {
            CustomChance = input.ReadFloat();
            break;
          }
          case 88: {
            Cooldown = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            SchoolMask = input.ReadUInt32();
            break;
          }
          case 24: {
            SpellFamilyName = input.ReadUInt32();
            break;
          }
          case 32: {
            SpellFamilyMask0 = input.ReadUInt64();
            break;
          }
          case 40: {
            SpellFamilyMask1 = input.ReadUInt64();
            break;
          }
          case 48: {
            SpellFamilyMask2 = input.ReadUInt64();
            break;
          }
          case 56: {
            ProcFlags = input.ReadUInt32();
            break;
          }
          case 64: {
            ProcEx = input.ReadUInt32();
            break;
          }
          case 77: {
            PpmRate = input.ReadFloat();
            break;
          }
          case 85: {
            CustomChance = input.ReadFloat();
            break;
          }
          case 88: {
            Cooldown = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellProcItemEnchant : pb::IMessage<SpellProcItemEnchant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellProcItemEnchant> _parser = new pb::MessageParser<SpellProcItemEnchant>(() => new SpellProcItemEnchant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellProcItemEnchant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcItemEnchant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcItemEnchant(SpellProcItemEnchant other) : this() {
      entry_ = other.entry_;
      ppmRate_ = other.ppmRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellProcItemEnchant Clone() {
      return new SpellProcItemEnchant(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID of the item enchant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "ppm_rate" field.</summary>
    public const int PpmRateFieldNumber = 2;
    private float ppmRate_;
    /// <summary>
    /// Proc per minute rate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PpmRate {
      get { return ppmRate_; }
      set {
        ppmRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellProcItemEnchant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellProcItemEnchant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PpmRate, other.PpmRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (PpmRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PpmRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PpmRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (PpmRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PpmRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (PpmRate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellProcItemEnchant other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.PpmRate != 0F) {
        PpmRate = other.PpmRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            PpmRate = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 21: {
            PpmRate = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellScript : pb::IMessage<SpellScript>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellScript> _parser = new pb::MessageParser<SpellScript>(() => new SpellScript());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellScript> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScript() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScript(SpellScript other) : this() {
      id_ = other.id_;
      delay_ = other.delay_;
      command_ = other.command_;
      datalong_ = other.datalong_;
      datalong2_ = other.datalong2_;
      datalong3_ = other.datalong3_;
      datalong4_ = other.datalong4_;
      targetParam1_ = other.targetParam1_;
      targetParam2_ = other.targetParam2_;
      targetType_ = other.targetType_;
      dataFlags_ = other.dataFlags_;
      dataint_ = other.dataint_;
      dataint2_ = other.dataint2_;
      dataint3_ = other.dataint3_;
      dataint4_ = other.dataint4_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      o_ = other.o_;
      conditionId_ = other.conditionId_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScript Clone() {
      return new SpellScript(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Spell script entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private uint delay_;
    /// <summary>
    /// Delay before execution
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    private uint command_;
    /// <summary>
    /// Command to execute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Command {
      get { return command_; }
      set {
        command_ = value;
      }
    }

    /// <summary>Field number for the "datalong" field.</summary>
    public const int DatalongFieldNumber = 4;
    private uint datalong_;
    /// <summary>
    /// Long data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong {
      get { return datalong_; }
      set {
        datalong_ = value;
      }
    }

    /// <summary>Field number for the "datalong2" field.</summary>
    public const int Datalong2FieldNumber = 5;
    private uint datalong2_;
    /// <summary>
    /// Second long data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong2 {
      get { return datalong2_; }
      set {
        datalong2_ = value;
      }
    }

    /// <summary>Field number for the "datalong3" field.</summary>
    public const int Datalong3FieldNumber = 6;
    private uint datalong3_;
    /// <summary>
    /// Third long data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong3 {
      get { return datalong3_; }
      set {
        datalong3_ = value;
      }
    }

    /// <summary>Field number for the "datalong4" field.</summary>
    public const int Datalong4FieldNumber = 7;
    private uint datalong4_;
    /// <summary>
    /// Fourth long data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Datalong4 {
      get { return datalong4_; }
      set {
        datalong4_ = value;
      }
    }

    /// <summary>Field number for the "target_param1" field.</summary>
    public const int TargetParam1FieldNumber = 8;
    private uint targetParam1_;
    /// <summary>
    /// Target parameter 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam1 {
      get { return targetParam1_; }
      set {
        targetParam1_ = value;
      }
    }

    /// <summary>Field number for the "target_param2" field.</summary>
    public const int TargetParam2FieldNumber = 9;
    private uint targetParam2_;
    /// <summary>
    /// Target parameter 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetParam2 {
      get { return targetParam2_; }
      set {
        targetParam2_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 10;
    private uint targetType_;
    /// <summary>
    /// Target type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "data_flags" field.</summary>
    public const int DataFlagsFieldNumber = 11;
    private uint dataFlags_;
    /// <summary>
    /// Data flags
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DataFlags {
      get { return dataFlags_; }
      set {
        dataFlags_ = value;
      }
    }

    /// <summary>Field number for the "dataint" field.</summary>
    public const int DataintFieldNumber = 12;
    private int dataint_;
    /// <summary>
    /// Integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint {
      get { return dataint_; }
      set {
        dataint_ = value;
      }
    }

    /// <summary>Field number for the "dataint2" field.</summary>
    public const int Dataint2FieldNumber = 13;
    private int dataint2_;
    /// <summary>
    /// Second integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint2 {
      get { return dataint2_; }
      set {
        dataint2_ = value;
      }
    }

    /// <summary>Field number for the "dataint3" field.</summary>
    public const int Dataint3FieldNumber = 14;
    private int dataint3_;
    /// <summary>
    /// Third integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint3 {
      get { return dataint3_; }
      set {
        dataint3_ = value;
      }
    }

    /// <summary>Field number for the "dataint4" field.</summary>
    public const int Dataint4FieldNumber = 15;
    private int dataint4_;
    /// <summary>
    /// Fourth integer data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dataint4 {
      get { return dataint4_; }
      set {
        dataint4_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 16;
    private float x_;
    /// <summary>
    /// X coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 17;
    private float y_;
    /// <summary>
    /// Y coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 18;
    private float z_;
    /// <summary>
    /// Z coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "o" field.</summary>
    public const int OFieldNumber = 19;
    private float o_;
    /// <summary>
    /// Orientation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float O {
      get { return o_; }
      set {
        o_ = value;
      }
    }

    /// <summary>Field number for the "condition_id" field.</summary>
    public const int ConditionIdFieldNumber = 20;
    private uint conditionId_;
    /// <summary>
    /// Condition ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ConditionId {
      get { return conditionId_; }
      set {
        conditionId_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 21;
    private string comments_ = "";
    /// <summary>
    /// Comments
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellScript);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellScript other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Delay != other.Delay) return false;
      if (Command != other.Command) return false;
      if (Datalong != other.Datalong) return false;
      if (Datalong2 != other.Datalong2) return false;
      if (Datalong3 != other.Datalong3) return false;
      if (Datalong4 != other.Datalong4) return false;
      if (TargetParam1 != other.TargetParam1) return false;
      if (TargetParam2 != other.TargetParam2) return false;
      if (TargetType != other.TargetType) return false;
      if (DataFlags != other.DataFlags) return false;
      if (Dataint != other.Dataint) return false;
      if (Dataint2 != other.Dataint2) return false;
      if (Dataint3 != other.Dataint3) return false;
      if (Dataint4 != other.Dataint4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(O, other.O)) return false;
      if (ConditionId != other.ConditionId) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Command != 0) hash ^= Command.GetHashCode();
      if (Datalong != 0) hash ^= Datalong.GetHashCode();
      if (Datalong2 != 0) hash ^= Datalong2.GetHashCode();
      if (Datalong3 != 0) hash ^= Datalong3.GetHashCode();
      if (Datalong4 != 0) hash ^= Datalong4.GetHashCode();
      if (TargetParam1 != 0) hash ^= TargetParam1.GetHashCode();
      if (TargetParam2 != 0) hash ^= TargetParam2.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (DataFlags != 0) hash ^= DataFlags.GetHashCode();
      if (Dataint != 0) hash ^= Dataint.GetHashCode();
      if (Dataint2 != 0) hash ^= Dataint2.GetHashCode();
      if (Dataint3 != 0) hash ^= Dataint3.GetHashCode();
      if (Dataint4 != 0) hash ^= Dataint4.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (O != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(O);
      if (ConditionId != 0) hash ^= ConditionId.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Delay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delay);
      }
      if (Command != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Command);
      }
      if (Datalong != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Datalong);
      }
      if (Datalong2 != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Datalong2);
      }
      if (Datalong3 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Datalong3);
      }
      if (Datalong4 != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Datalong4);
      }
      if (TargetParam1 != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(TargetParam1);
      }
      if (TargetParam2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(TargetParam2);
      }
      if (TargetType != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TargetType);
      }
      if (DataFlags != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(DataFlags);
      }
      if (Dataint != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Dataint);
      }
      if (Dataint2 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Dataint2);
      }
      if (Dataint3 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Dataint3);
      }
      if (Dataint4 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Dataint4);
      }
      if (X != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Z);
      }
      if (O != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(O);
      }
      if (ConditionId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConditionId);
      }
      if (Comments.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delay);
      }
      if (Command != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Command);
      }
      if (Datalong != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong);
      }
      if (Datalong2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong2);
      }
      if (Datalong3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong3);
      }
      if (Datalong4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Datalong4);
      }
      if (TargetParam1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam1);
      }
      if (TargetParam2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetParam2);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetType);
      }
      if (DataFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataFlags);
      }
      if (Dataint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint);
      }
      if (Dataint2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint2);
      }
      if (Dataint3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint3);
      }
      if (Dataint4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dataint4);
      }
      if (X != 0F) {
        size += 2 + 4;
      }
      if (Y != 0F) {
        size += 2 + 4;
      }
      if (Z != 0F) {
        size += 2 + 4;
      }
      if (O != 0F) {
        size += 2 + 4;
      }
      if (ConditionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConditionId);
      }
      if (Comments.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellScript other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Command != 0) {
        Command = other.Command;
      }
      if (other.Datalong != 0) {
        Datalong = other.Datalong;
      }
      if (other.Datalong2 != 0) {
        Datalong2 = other.Datalong2;
      }
      if (other.Datalong3 != 0) {
        Datalong3 = other.Datalong3;
      }
      if (other.Datalong4 != 0) {
        Datalong4 = other.Datalong4;
      }
      if (other.TargetParam1 != 0) {
        TargetParam1 = other.TargetParam1;
      }
      if (other.TargetParam2 != 0) {
        TargetParam2 = other.TargetParam2;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.DataFlags != 0) {
        DataFlags = other.DataFlags;
      }
      if (other.Dataint != 0) {
        Dataint = other.Dataint;
      }
      if (other.Dataint2 != 0) {
        Dataint2 = other.Dataint2;
      }
      if (other.Dataint3 != 0) {
        Dataint3 = other.Dataint3;
      }
      if (other.Dataint4 != 0) {
        Dataint4 = other.Dataint4;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.O != 0F) {
        O = other.O;
      }
      if (other.ConditionId != 0) {
        ConditionId = other.ConditionId;
      }
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Delay = input.ReadUInt32();
            break;
          }
          case 24: {
            Command = input.ReadUInt32();
            break;
          }
          case 32: {
            Datalong = input.ReadUInt32();
            break;
          }
          case 40: {
            Datalong2 = input.ReadUInt32();
            break;
          }
          case 48: {
            Datalong3 = input.ReadUInt32();
            break;
          }
          case 56: {
            Datalong4 = input.ReadUInt32();
            break;
          }
          case 64: {
            TargetParam1 = input.ReadUInt32();
            break;
          }
          case 72: {
            TargetParam2 = input.ReadUInt32();
            break;
          }
          case 80: {
            TargetType = input.ReadUInt32();
            break;
          }
          case 88: {
            DataFlags = input.ReadUInt32();
            break;
          }
          case 96: {
            Dataint = input.ReadInt32();
            break;
          }
          case 104: {
            Dataint2 = input.ReadInt32();
            break;
          }
          case 112: {
            Dataint3 = input.ReadInt32();
            break;
          }
          case 120: {
            Dataint4 = input.ReadInt32();
            break;
          }
          case 133: {
            X = input.ReadFloat();
            break;
          }
          case 141: {
            Y = input.ReadFloat();
            break;
          }
          case 149: {
            Z = input.ReadFloat();
            break;
          }
          case 157: {
            O = input.ReadFloat();
            break;
          }
          case 160: {
            ConditionId = input.ReadUInt32();
            break;
          }
          case 170: {
            Comments = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellScriptTarget : pb::IMessage<SpellScriptTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellScriptTarget> _parser = new pb::MessageParser<SpellScriptTarget>(() => new SpellScriptTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellScriptTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScriptTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScriptTarget(SpellScriptTarget other) : this() {
      entry_ = other.entry_;
      type_ = other.type_;
      targetEntry_ = other.targetEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellScriptTarget Clone() {
      return new SpellScriptTarget(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private uint type_;
    /// <summary>
    /// Type of target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "targetEntry" field.</summary>
    public const int TargetEntryFieldNumber = 3;
    private uint targetEntry_;
    /// <summary>
    /// Target entry ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetEntry {
      get { return targetEntry_; }
      set {
        targetEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellScriptTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellScriptTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Type != other.Type) return false;
      if (TargetEntry != other.TargetEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (TargetEntry != 0) hash ^= TargetEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (TargetEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TargetEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Type);
      }
      if (TargetEntry != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TargetEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (TargetEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellScriptTarget other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.TargetEntry != 0) {
        TargetEntry = other.TargetEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            TargetEntry = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Type = input.ReadUInt32();
            break;
          }
          case 24: {
            TargetEntry = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellTargetPosition : pb::IMessage<SpellTargetPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellTargetPosition> _parser = new pb::MessageParser<SpellTargetPosition>(() => new SpellTargetPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellTargetPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[165]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTargetPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTargetPosition(SpellTargetPosition other) : this() {
      id_ = other.id_;
      targetMap_ = other.targetMap_;
      targetPositionX_ = other.targetPositionX_;
      targetPositionY_ = other.targetPositionY_;
      targetPositionZ_ = other.targetPositionZ_;
      targetOrientation_ = other.targetOrientation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTargetPosition Clone() {
      return new SpellTargetPosition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    /// Identifier for the spell target position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "target_map" field.</summary>
    public const int TargetMapFieldNumber = 2;
    private uint targetMap_;
    /// <summary>
    /// Map where the target is located
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetMap {
      get { return targetMap_; }
      set {
        targetMap_ = value;
      }
    }

    /// <summary>Field number for the "target_position_x" field.</summary>
    public const int TargetPositionXFieldNumber = 3;
    private float targetPositionX_;
    /// <summary>
    /// X-coordinate of the target position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionX {
      get { return targetPositionX_; }
      set {
        targetPositionX_ = value;
      }
    }

    /// <summary>Field number for the "target_position_y" field.</summary>
    public const int TargetPositionYFieldNumber = 4;
    private float targetPositionY_;
    /// <summary>
    /// Y-coordinate of the target position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionY {
      get { return targetPositionY_; }
      set {
        targetPositionY_ = value;
      }
    }

    /// <summary>Field number for the "target_position_z" field.</summary>
    public const int TargetPositionZFieldNumber = 5;
    private float targetPositionZ_;
    /// <summary>
    /// Z-coordinate of the target position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetPositionZ {
      get { return targetPositionZ_; }
      set {
        targetPositionZ_ = value;
      }
    }

    /// <summary>Field number for the "target_orientation" field.</summary>
    public const int TargetOrientationFieldNumber = 6;
    private float targetOrientation_;
    /// <summary>
    /// Orientation of the target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetOrientation {
      get { return targetOrientation_; }
      set {
        targetOrientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellTargetPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellTargetPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TargetMap != other.TargetMap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionX, other.TargetPositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionY, other.TargetPositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetPositionZ, other.TargetPositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetOrientation, other.TargetOrientation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TargetMap != 0) hash ^= TargetMap.GetHashCode();
      if (TargetPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionX);
      if (TargetPositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionY);
      if (TargetPositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetPositionZ);
      if (TargetOrientation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetOrientation);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (TargetMap != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetMap);
      }
      if (TargetPositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetPositionX);
      }
      if (TargetPositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TargetPositionY);
      }
      if (TargetPositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(TargetPositionZ);
      }
      if (TargetOrientation != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TargetOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (TargetMap != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetMap);
      }
      if (TargetPositionX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(TargetPositionX);
      }
      if (TargetPositionY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(TargetPositionY);
      }
      if (TargetPositionZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(TargetPositionZ);
      }
      if (TargetOrientation != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TargetOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (TargetMap != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetMap);
      }
      if (TargetPositionX != 0F) {
        size += 1 + 4;
      }
      if (TargetPositionY != 0F) {
        size += 1 + 4;
      }
      if (TargetPositionZ != 0F) {
        size += 1 + 4;
      }
      if (TargetOrientation != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellTargetPosition other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TargetMap != 0) {
        TargetMap = other.TargetMap;
      }
      if (other.TargetPositionX != 0F) {
        TargetPositionX = other.TargetPositionX;
      }
      if (other.TargetPositionY != 0F) {
        TargetPositionY = other.TargetPositionY;
      }
      if (other.TargetPositionZ != 0F) {
        TargetPositionZ = other.TargetPositionZ;
      }
      if (other.TargetOrientation != 0F) {
        TargetOrientation = other.TargetOrientation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetMap = input.ReadUInt32();
            break;
          }
          case 29: {
            TargetPositionX = input.ReadFloat();
            break;
          }
          case 37: {
            TargetPositionY = input.ReadFloat();
            break;
          }
          case 45: {
            TargetPositionZ = input.ReadFloat();
            break;
          }
          case 53: {
            TargetOrientation = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetMap = input.ReadUInt32();
            break;
          }
          case 29: {
            TargetPositionX = input.ReadFloat();
            break;
          }
          case 37: {
            TargetPositionY = input.ReadFloat();
            break;
          }
          case 45: {
            TargetPositionZ = input.ReadFloat();
            break;
          }
          case 53: {
            TargetOrientation = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellTemplate : pb::IMessage<SpellTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellTemplate> _parser = new pb::MessageParser<SpellTemplate>(() => new SpellTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[166]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTemplate(SpellTemplate other) : this() {
      id_ = other.id_;
      school_ = other.school_;
      category_ = other.category_;
      castUi_ = other.castUi_;
      dispel_ = other.dispel_;
      mechanic_ = other.mechanic_;
      attributes_ = other.attributes_;
      attributesEx_ = other.attributesEx_;
      attributesEx2_ = other.attributesEx2_;
      attributesEx3_ = other.attributesEx3_;
      attributesEx4_ = other.attributesEx4_;
      stances_ = other.stances_;
      stancesNot_ = other.stancesNot_;
      targets_ = other.targets_;
      targetCreatureType_ = other.targetCreatureType_;
      requiresSpellFocus_ = other.requiresSpellFocus_;
      casterAuraState_ = other.casterAuraState_;
      targetAuraState_ = other.targetAuraState_;
      castingTimeIndex_ = other.castingTimeIndex_;
      recoveryTime_ = other.recoveryTime_;
      categoryRecoveryTime_ = other.categoryRecoveryTime_;
      interruptFlags_ = other.interruptFlags_;
      auraInterruptFlags_ = other.auraInterruptFlags_;
      channelInterruptFlags_ = other.channelInterruptFlags_;
      procFlags_ = other.procFlags_;
      procChance_ = other.procChance_;
      procCharges_ = other.procCharges_;
      maxLevel_ = other.maxLevel_;
      baseLevel_ = other.baseLevel_;
      spellLevel_ = other.spellLevel_;
      durationIndex_ = other.durationIndex_;
      powerType_ = other.powerType_;
      manaCost_ = other.manaCost_;
      manaCostPerLevel_ = other.manaCostPerLevel_;
      manaPerSecond_ = other.manaPerSecond_;
      manaPerSecondPerLevel_ = other.manaPerSecondPerLevel_;
      rangeIndex_ = other.rangeIndex_;
      speed_ = other.speed_;
      modelNextSpell_ = other.modelNextSpell_;
      stackAmount_ = other.stackAmount_;
      totem1_ = other.totem1_;
      totem2_ = other.totem2_;
      reagent1_ = other.reagent1_;
      reagent2_ = other.reagent2_;
      reagent3_ = other.reagent3_;
      reagent4_ = other.reagent4_;
      reagent5_ = other.reagent5_;
      reagent6_ = other.reagent6_;
      reagent7_ = other.reagent7_;
      reagent8_ = other.reagent8_;
      reagentCount1_ = other.reagentCount1_;
      reagentCount2_ = other.reagentCount2_;
      reagentCount3_ = other.reagentCount3_;
      reagentCount4_ = other.reagentCount4_;
      reagentCount5_ = other.reagentCount5_;
      reagentCount6_ = other.reagentCount6_;
      reagentCount7_ = other.reagentCount7_;
      reagentCount8_ = other.reagentCount8_;
      equippedItemClass_ = other.equippedItemClass_;
      equippedItemSubClassMask_ = other.equippedItemSubClassMask_;
      equippedItemInventoryTypeMask_ = other.equippedItemInventoryTypeMask_;
      effect1_ = other.effect1_;
      effect2_ = other.effect2_;
      effect3_ = other.effect3_;
      effectDieSides1_ = other.effectDieSides1_;
      effectDieSides2_ = other.effectDieSides2_;
      effectDieSides3_ = other.effectDieSides3_;
      effectBaseDice1_ = other.effectBaseDice1_;
      effectBaseDice2_ = other.effectBaseDice2_;
      effectBaseDice3_ = other.effectBaseDice3_;
      effectDicePerLevel1_ = other.effectDicePerLevel1_;
      effectDicePerLevel2_ = other.effectDicePerLevel2_;
      effectDicePerLevel3_ = other.effectDicePerLevel3_;
      effectRealPointsPerLevel1_ = other.effectRealPointsPerLevel1_;
      effectRealPointsPerLevel2_ = other.effectRealPointsPerLevel2_;
      effectRealPointsPerLevel3_ = other.effectRealPointsPerLevel3_;
      effectBasePoints1_ = other.effectBasePoints1_;
      effectBasePoints2_ = other.effectBasePoints2_;
      effectBasePoints3_ = other.effectBasePoints3_;
      effectMechanic1_ = other.effectMechanic1_;
      effectMechanic2_ = other.effectMechanic2_;
      effectMechanic3_ = other.effectMechanic3_;
      effectImplicitTargetA1_ = other.effectImplicitTargetA1_;
      effectImplicitTargetA2_ = other.effectImplicitTargetA2_;
      effectImplicitTargetA3_ = other.effectImplicitTargetA3_;
      effectImplicitTargetB1_ = other.effectImplicitTargetB1_;
      effectImplicitTargetB2_ = other.effectImplicitTargetB2_;
      effectImplicitTargetB3_ = other.effectImplicitTargetB3_;
      effectRadiusIndex1_ = other.effectRadiusIndex1_;
      effectRadiusIndex2_ = other.effectRadiusIndex2_;
      effectRadiusIndex3_ = other.effectRadiusIndex3_;
      effectApplyAuraName1_ = other.effectApplyAuraName1_;
      effectApplyAuraName2_ = other.effectApplyAuraName2_;
      effectApplyAuraName3_ = other.effectApplyAuraName3_;
      effectAmplitude1_ = other.effectAmplitude1_;
      effectAmplitude2_ = other.effectAmplitude2_;
      effectAmplitude3_ = other.effectAmplitude3_;
      effectMultipleValue1_ = other.effectMultipleValue1_;
      effectMultipleValue2_ = other.effectMultipleValue2_;
      effectMultipleValue3_ = other.effectMultipleValue3_;
      effectChainTarget1_ = other.effectChainTarget1_;
      effectChainTarget2_ = other.effectChainTarget2_;
      effectChainTarget3_ = other.effectChainTarget3_;
      effectItemType1_ = other.effectItemType1_;
      effectItemType2_ = other.effectItemType2_;
      effectItemType3_ = other.effectItemType3_;
      effectMiscValue1_ = other.effectMiscValue1_;
      effectMiscValue2_ = other.effectMiscValue2_;
      effectMiscValue3_ = other.effectMiscValue3_;
      effectTriggerSpell1_ = other.effectTriggerSpell1_;
      effectTriggerSpell2_ = other.effectTriggerSpell2_;
      effectTriggerSpell3_ = other.effectTriggerSpell3_;
      effectPointsPerComboPoint1_ = other.effectPointsPerComboPoint1_;
      effectPointsPerComboPoint2_ = other.effectPointsPerComboPoint2_;
      effectPointsPerComboPoint3_ = other.effectPointsPerComboPoint3_;
      spellVisual1_ = other.spellVisual1_;
      spellVisual2_ = other.spellVisual2_;
      spellIconId_ = other.spellIconId_;
      activeIconId_ = other.activeIconId_;
      spellPriority_ = other.spellPriority_;
      name1_ = other.name1_;
      name2_ = other.name2_;
      name3_ = other.name3_;
      name4_ = other.name4_;
      name5_ = other.name5_;
      name6_ = other.name6_;
      name7_ = other.name7_;
      name8_ = other.name8_;
      nameFlags_ = other.nameFlags_;
      nameSubtext1_ = other.nameSubtext1_;
      nameSubtext2_ = other.nameSubtext2_;
      nameSubtext3_ = other.nameSubtext3_;
      nameSubtext4_ = other.nameSubtext4_;
      nameSubtext5_ = other.nameSubtext5_;
      nameSubtext6_ = other.nameSubtext6_;
      nameSubtext7_ = other.nameSubtext7_;
      nameSubtext8_ = other.nameSubtext8_;
      nameSubtextFlags_ = other.nameSubtextFlags_;
      description1_ = other.description1_;
      description2_ = other.description2_;
      description3_ = other.description3_;
      description4_ = other.description4_;
      description5_ = other.description5_;
      description6_ = other.description6_;
      description7_ = other.description7_;
      description8_ = other.description8_;
      descriptionFlags_ = other.descriptionFlags_;
      auraDescription1_ = other.auraDescription1_;
      auraDescription2_ = other.auraDescription2_;
      auraDescription3_ = other.auraDescription3_;
      auraDescription4_ = other.auraDescription4_;
      auraDescription5_ = other.auraDescription5_;
      auraDescription6_ = other.auraDescription6_;
      auraDescription7_ = other.auraDescription7_;
      auraDescription8_ = other.auraDescription8_;
      auraDescriptionFlags_ = other.auraDescriptionFlags_;
      manaCostPercentage_ = other.manaCostPercentage_;
      startRecoveryCategory_ = other.startRecoveryCategory_;
      startRecoveryTime_ = other.startRecoveryTime_;
      maxTargetLevel_ = other.maxTargetLevel_;
      spellFamilyName_ = other.spellFamilyName_;
      spellFamilyFlags_ = other.spellFamilyFlags_;
      maxAffectedTargets_ = other.maxAffectedTargets_;
      dmgClass_ = other.dmgClass_;
      preventionType_ = other.preventionType_;
      stanceBarOrder_ = other.stanceBarOrder_;
      dmgMultiplier1_ = other.dmgMultiplier1_;
      dmgMultiplier2_ = other.dmgMultiplier2_;
      dmgMultiplier3_ = other.dmgMultiplier3_;
      minFactionId_ = other.minFactionId_;
      minReputation_ = other.minReputation_;
      requiredAuraVision_ = other.requiredAuraVision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellTemplate Clone() {
      return new SpellTemplate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "school" field.</summary>
    public const int SchoolFieldNumber = 2;
    private uint school_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint School {
      get { return school_; }
      set {
        school_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private uint category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "cast_ui" field.</summary>
    public const int CastUiFieldNumber = 4;
    private uint castUi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastUi {
      get { return castUi_; }
      set {
        castUi_ = value;
      }
    }

    /// <summary>Field number for the "dispel" field.</summary>
    public const int DispelFieldNumber = 5;
    private uint dispel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dispel {
      get { return dispel_; }
      set {
        dispel_ = value;
      }
    }

    /// <summary>Field number for the "mechanic" field.</summary>
    public const int MechanicFieldNumber = 6;
    private uint mechanic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Mechanic {
      get { return mechanic_; }
      set {
        mechanic_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 7;
    private ulong attributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex" field.</summary>
    public const int AttributesExFieldNumber = 8;
    private uint attributesEx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttributesEx {
      get { return attributesEx_; }
      set {
        attributesEx_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex2" field.</summary>
    public const int AttributesEx2FieldNumber = 9;
    private uint attributesEx2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttributesEx2 {
      get { return attributesEx2_; }
      set {
        attributesEx2_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex3" field.</summary>
    public const int AttributesEx3FieldNumber = 10;
    private uint attributesEx3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttributesEx3 {
      get { return attributesEx3_; }
      set {
        attributesEx3_ = value;
      }
    }

    /// <summary>Field number for the "attributes_ex4" field.</summary>
    public const int AttributesEx4FieldNumber = 11;
    private uint attributesEx4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AttributesEx4 {
      get { return attributesEx4_; }
      set {
        attributesEx4_ = value;
      }
    }

    /// <summary>Field number for the "stances" field.</summary>
    public const int StancesFieldNumber = 12;
    private uint stances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Stances {
      get { return stances_; }
      set {
        stances_ = value;
      }
    }

    /// <summary>Field number for the "stances_not" field.</summary>
    public const int StancesNotFieldNumber = 13;
    private uint stancesNot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StancesNot {
      get { return stancesNot_; }
      set {
        stancesNot_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 14;
    private uint targets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Targets {
      get { return targets_; }
      set {
        targets_ = value;
      }
    }

    /// <summary>Field number for the "target_creature_type" field.</summary>
    public const int TargetCreatureTypeFieldNumber = 15;
    private uint targetCreatureType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetCreatureType {
      get { return targetCreatureType_; }
      set {
        targetCreatureType_ = value;
      }
    }

    /// <summary>Field number for the "requires_spell_focus" field.</summary>
    public const int RequiresSpellFocusFieldNumber = 16;
    private uint requiresSpellFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiresSpellFocus {
      get { return requiresSpellFocus_; }
      set {
        requiresSpellFocus_ = value;
      }
    }

    /// <summary>Field number for the "caster_aura_state" field.</summary>
    public const int CasterAuraStateFieldNumber = 17;
    private uint casterAuraState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CasterAuraState {
      get { return casterAuraState_; }
      set {
        casterAuraState_ = value;
      }
    }

    /// <summary>Field number for the "target_aura_state" field.</summary>
    public const int TargetAuraStateFieldNumber = 18;
    private uint targetAuraState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TargetAuraState {
      get { return targetAuraState_; }
      set {
        targetAuraState_ = value;
      }
    }

    /// <summary>Field number for the "casting_time_index" field.</summary>
    public const int CastingTimeIndexFieldNumber = 19;
    private uint castingTimeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CastingTimeIndex {
      get { return castingTimeIndex_; }
      set {
        castingTimeIndex_ = value;
      }
    }

    /// <summary>Field number for the "recovery_time" field.</summary>
    public const int RecoveryTimeFieldNumber = 20;
    private uint recoveryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RecoveryTime {
      get { return recoveryTime_; }
      set {
        recoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "category_recovery_time" field.</summary>
    public const int CategoryRecoveryTimeFieldNumber = 21;
    private uint categoryRecoveryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CategoryRecoveryTime {
      get { return categoryRecoveryTime_; }
      set {
        categoryRecoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "interrupt_flags" field.</summary>
    public const int InterruptFlagsFieldNumber = 22;
    private uint interruptFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InterruptFlags {
      get { return interruptFlags_; }
      set {
        interruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "aura_interrupt_flags" field.</summary>
    public const int AuraInterruptFlagsFieldNumber = 23;
    private uint auraInterruptFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuraInterruptFlags {
      get { return auraInterruptFlags_; }
      set {
        auraInterruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "channel_interrupt_flags" field.</summary>
    public const int ChannelInterruptFlagsFieldNumber = 24;
    private uint channelInterruptFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelInterruptFlags {
      get { return channelInterruptFlags_; }
      set {
        channelInterruptFlags_ = value;
      }
    }

    /// <summary>Field number for the "proc_flags" field.</summary>
    public const int ProcFlagsFieldNumber = 25;
    private uint procFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProcFlags {
      get { return procFlags_; }
      set {
        procFlags_ = value;
      }
    }

    /// <summary>Field number for the "proc_chance" field.</summary>
    public const int ProcChanceFieldNumber = 26;
    private uint procChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProcChance {
      get { return procChance_; }
      set {
        procChance_ = value;
      }
    }

    /// <summary>Field number for the "proc_charges" field.</summary>
    public const int ProcChargesFieldNumber = 27;
    private uint procCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProcCharges {
      get { return procCharges_; }
      set {
        procCharges_ = value;
      }
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 28;
    private uint maxLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLevel {
      get { return maxLevel_; }
      set {
        maxLevel_ = value;
      }
    }

    /// <summary>Field number for the "base_level" field.</summary>
    public const int BaseLevelFieldNumber = 29;
    private uint baseLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BaseLevel {
      get { return baseLevel_; }
      set {
        baseLevel_ = value;
      }
    }

    /// <summary>Field number for the "spell_level" field.</summary>
    public const int SpellLevelFieldNumber = 30;
    private uint spellLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellLevel {
      get { return spellLevel_; }
      set {
        spellLevel_ = value;
      }
    }

    /// <summary>Field number for the "duration_index" field.</summary>
    public const int DurationIndexFieldNumber = 31;
    private uint durationIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DurationIndex {
      get { return durationIndex_; }
      set {
        durationIndex_ = value;
      }
    }

    /// <summary>Field number for the "power_type" field.</summary>
    public const int PowerTypeFieldNumber = 32;
    private uint powerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PowerType {
      get { return powerType_; }
      set {
        powerType_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost" field.</summary>
    public const int ManaCostFieldNumber = 33;
    private uint manaCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ManaCost {
      get { return manaCost_; }
      set {
        manaCost_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost_per_level" field.</summary>
    public const int ManaCostPerLevelFieldNumber = 34;
    private uint manaCostPerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ManaCostPerLevel {
      get { return manaCostPerLevel_; }
      set {
        manaCostPerLevel_ = value;
      }
    }

    /// <summary>Field number for the "mana_per_second" field.</summary>
    public const int ManaPerSecondFieldNumber = 35;
    private uint manaPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ManaPerSecond {
      get { return manaPerSecond_; }
      set {
        manaPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "mana_per_second_per_level" field.</summary>
    public const int ManaPerSecondPerLevelFieldNumber = 36;
    private uint manaPerSecondPerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ManaPerSecondPerLevel {
      get { return manaPerSecondPerLevel_; }
      set {
        manaPerSecondPerLevel_ = value;
      }
    }

    /// <summary>Field number for the "range_index" field.</summary>
    public const int RangeIndexFieldNumber = 37;
    private uint rangeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RangeIndex {
      get { return rangeIndex_; }
      set {
        rangeIndex_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 38;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "model_next_spell" field.</summary>
    public const int ModelNextSpellFieldNumber = 39;
    private uint modelNextSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ModelNextSpell {
      get { return modelNextSpell_; }
      set {
        modelNextSpell_ = value;
      }
    }

    /// <summary>Field number for the "stack_amount" field.</summary>
    public const int StackAmountFieldNumber = 40;
    private uint stackAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StackAmount {
      get { return stackAmount_; }
      set {
        stackAmount_ = value;
      }
    }

    /// <summary>Field number for the "totem1" field.</summary>
    public const int Totem1FieldNumber = 41;
    private uint totem1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Totem1 {
      get { return totem1_; }
      set {
        totem1_ = value;
      }
    }

    /// <summary>Field number for the "totem2" field.</summary>
    public const int Totem2FieldNumber = 42;
    private uint totem2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Totem2 {
      get { return totem2_; }
      set {
        totem2_ = value;
      }
    }

    /// <summary>Field number for the "reagent1" field.</summary>
    public const int Reagent1FieldNumber = 43;
    private uint reagent1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent1 {
      get { return reagent1_; }
      set {
        reagent1_ = value;
      }
    }

    /// <summary>Field number for the "reagent2" field.</summary>
    public const int Reagent2FieldNumber = 44;
    private uint reagent2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent2 {
      get { return reagent2_; }
      set {
        reagent2_ = value;
      }
    }

    /// <summary>Field number for the "reagent3" field.</summary>
    public const int Reagent3FieldNumber = 45;
    private uint reagent3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent3 {
      get { return reagent3_; }
      set {
        reagent3_ = value;
      }
    }

    /// <summary>Field number for the "reagent4" field.</summary>
    public const int Reagent4FieldNumber = 46;
    private uint reagent4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent4 {
      get { return reagent4_; }
      set {
        reagent4_ = value;
      }
    }

    /// <summary>Field number for the "reagent5" field.</summary>
    public const int Reagent5FieldNumber = 47;
    private uint reagent5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent5 {
      get { return reagent5_; }
      set {
        reagent5_ = value;
      }
    }

    /// <summary>Field number for the "reagent6" field.</summary>
    public const int Reagent6FieldNumber = 48;
    private uint reagent6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent6 {
      get { return reagent6_; }
      set {
        reagent6_ = value;
      }
    }

    /// <summary>Field number for the "reagent7" field.</summary>
    public const int Reagent7FieldNumber = 49;
    private uint reagent7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent7 {
      get { return reagent7_; }
      set {
        reagent7_ = value;
      }
    }

    /// <summary>Field number for the "reagent8" field.</summary>
    public const int Reagent8FieldNumber = 50;
    private uint reagent8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Reagent8 {
      get { return reagent8_; }
      set {
        reagent8_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count1" field.</summary>
    public const int ReagentCount1FieldNumber = 51;
    private uint reagentCount1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount1 {
      get { return reagentCount1_; }
      set {
        reagentCount1_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count2" field.</summary>
    public const int ReagentCount2FieldNumber = 52;
    private uint reagentCount2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount2 {
      get { return reagentCount2_; }
      set {
        reagentCount2_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count3" field.</summary>
    public const int ReagentCount3FieldNumber = 53;
    private uint reagentCount3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount3 {
      get { return reagentCount3_; }
      set {
        reagentCount3_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count4" field.</summary>
    public const int ReagentCount4FieldNumber = 54;
    private uint reagentCount4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount4 {
      get { return reagentCount4_; }
      set {
        reagentCount4_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count5" field.</summary>
    public const int ReagentCount5FieldNumber = 55;
    private uint reagentCount5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount5 {
      get { return reagentCount5_; }
      set {
        reagentCount5_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count6" field.</summary>
    public const int ReagentCount6FieldNumber = 56;
    private uint reagentCount6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount6 {
      get { return reagentCount6_; }
      set {
        reagentCount6_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count7" field.</summary>
    public const int ReagentCount7FieldNumber = 57;
    private uint reagentCount7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount7 {
      get { return reagentCount7_; }
      set {
        reagentCount7_ = value;
      }
    }

    /// <summary>Field number for the "reagent_count8" field.</summary>
    public const int ReagentCount8FieldNumber = 58;
    private uint reagentCount8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ReagentCount8 {
      get { return reagentCount8_; }
      set {
        reagentCount8_ = value;
      }
    }

    /// <summary>Field number for the "equipped_item_class" field.</summary>
    public const int EquippedItemClassFieldNumber = 59;
    private int equippedItemClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquippedItemClass {
      get { return equippedItemClass_; }
      set {
        equippedItemClass_ = value;
      }
    }

    /// <summary>Field number for the "equipped_item_sub_class_mask" field.</summary>
    public const int EquippedItemSubClassMaskFieldNumber = 60;
    private int equippedItemSubClassMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquippedItemSubClassMask {
      get { return equippedItemSubClassMask_; }
      set {
        equippedItemSubClassMask_ = value;
      }
    }

    /// <summary>Field number for the "equipped_item_inventory_type_mask" field.</summary>
    public const int EquippedItemInventoryTypeMaskFieldNumber = 61;
    private int equippedItemInventoryTypeMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EquippedItemInventoryTypeMask {
      get { return equippedItemInventoryTypeMask_; }
      set {
        equippedItemInventoryTypeMask_ = value;
      }
    }

    /// <summary>Field number for the "effect1" field.</summary>
    public const int Effect1FieldNumber = 62;
    private uint effect1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Effect1 {
      get { return effect1_; }
      set {
        effect1_ = value;
      }
    }

    /// <summary>Field number for the "effect2" field.</summary>
    public const int Effect2FieldNumber = 63;
    private uint effect2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Effect2 {
      get { return effect2_; }
      set {
        effect2_ = value;
      }
    }

    /// <summary>Field number for the "effect3" field.</summary>
    public const int Effect3FieldNumber = 64;
    private uint effect3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Effect3 {
      get { return effect3_; }
      set {
        effect3_ = value;
      }
    }

    /// <summary>Field number for the "effect_die_sides1" field.</summary>
    public const int EffectDieSides1FieldNumber = 65;
    private int effectDieSides1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectDieSides1 {
      get { return effectDieSides1_; }
      set {
        effectDieSides1_ = value;
      }
    }

    /// <summary>Field number for the "effect_die_sides2" field.</summary>
    public const int EffectDieSides2FieldNumber = 66;
    private int effectDieSides2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectDieSides2 {
      get { return effectDieSides2_; }
      set {
        effectDieSides2_ = value;
      }
    }

    /// <summary>Field number for the "effect_die_sides3" field.</summary>
    public const int EffectDieSides3FieldNumber = 67;
    private int effectDieSides3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectDieSides3 {
      get { return effectDieSides3_; }
      set {
        effectDieSides3_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_dice1" field.</summary>
    public const int EffectBaseDice1FieldNumber = 68;
    private int effectBaseDice1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBaseDice1 {
      get { return effectBaseDice1_; }
      set {
        effectBaseDice1_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_dice2" field.</summary>
    public const int EffectBaseDice2FieldNumber = 69;
    private int effectBaseDice2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBaseDice2 {
      get { return effectBaseDice2_; }
      set {
        effectBaseDice2_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_dice3" field.</summary>
    public const int EffectBaseDice3FieldNumber = 70;
    private int effectBaseDice3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBaseDice3 {
      get { return effectBaseDice3_; }
      set {
        effectBaseDice3_ = value;
      }
    }

    /// <summary>Field number for the "effect_dice_per_level1" field.</summary>
    public const int EffectDicePerLevel1FieldNumber = 71;
    private float effectDicePerLevel1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectDicePerLevel1 {
      get { return effectDicePerLevel1_; }
      set {
        effectDicePerLevel1_ = value;
      }
    }

    /// <summary>Field number for the "effect_dice_per_level2" field.</summary>
    public const int EffectDicePerLevel2FieldNumber = 72;
    private float effectDicePerLevel2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectDicePerLevel2 {
      get { return effectDicePerLevel2_; }
      set {
        effectDicePerLevel2_ = value;
      }
    }

    /// <summary>Field number for the "effect_dice_per_level3" field.</summary>
    public const int EffectDicePerLevel3FieldNumber = 73;
    private float effectDicePerLevel3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectDicePerLevel3 {
      get { return effectDicePerLevel3_; }
      set {
        effectDicePerLevel3_ = value;
      }
    }

    /// <summary>Field number for the "effect_real_points_per_level1" field.</summary>
    public const int EffectRealPointsPerLevel1FieldNumber = 74;
    private float effectRealPointsPerLevel1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectRealPointsPerLevel1 {
      get { return effectRealPointsPerLevel1_; }
      set {
        effectRealPointsPerLevel1_ = value;
      }
    }

    /// <summary>Field number for the "effect_real_points_per_level2" field.</summary>
    public const int EffectRealPointsPerLevel2FieldNumber = 75;
    private float effectRealPointsPerLevel2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectRealPointsPerLevel2 {
      get { return effectRealPointsPerLevel2_; }
      set {
        effectRealPointsPerLevel2_ = value;
      }
    }

    /// <summary>Field number for the "effect_real_points_per_level3" field.</summary>
    public const int EffectRealPointsPerLevel3FieldNumber = 76;
    private float effectRealPointsPerLevel3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectRealPointsPerLevel3 {
      get { return effectRealPointsPerLevel3_; }
      set {
        effectRealPointsPerLevel3_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_points1" field.</summary>
    public const int EffectBasePoints1FieldNumber = 77;
    private int effectBasePoints1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBasePoints1 {
      get { return effectBasePoints1_; }
      set {
        effectBasePoints1_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_points2" field.</summary>
    public const int EffectBasePoints2FieldNumber = 78;
    private int effectBasePoints2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBasePoints2 {
      get { return effectBasePoints2_; }
      set {
        effectBasePoints2_ = value;
      }
    }

    /// <summary>Field number for the "effect_base_points3" field.</summary>
    public const int EffectBasePoints3FieldNumber = 79;
    private int effectBasePoints3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectBasePoints3 {
      get { return effectBasePoints3_; }
      set {
        effectBasePoints3_ = value;
      }
    }

    /// <summary>Field number for the "effect_mechanic1" field.</summary>
    public const int EffectMechanic1FieldNumber = 80;
    private uint effectMechanic1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectMechanic1 {
      get { return effectMechanic1_; }
      set {
        effectMechanic1_ = value;
      }
    }

    /// <summary>Field number for the "effect_mechanic2" field.</summary>
    public const int EffectMechanic2FieldNumber = 81;
    private uint effectMechanic2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectMechanic2 {
      get { return effectMechanic2_; }
      set {
        effectMechanic2_ = value;
      }
    }

    /// <summary>Field number for the "effect_mechanic3" field.</summary>
    public const int EffectMechanic3FieldNumber = 82;
    private uint effectMechanic3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectMechanic3 {
      get { return effectMechanic3_; }
      set {
        effectMechanic3_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_a1" field.</summary>
    public const int EffectImplicitTargetA1FieldNumber = 83;
    private uint effectImplicitTargetA1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetA1 {
      get { return effectImplicitTargetA1_; }
      set {
        effectImplicitTargetA1_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_a2" field.</summary>
    public const int EffectImplicitTargetA2FieldNumber = 84;
    private uint effectImplicitTargetA2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetA2 {
      get { return effectImplicitTargetA2_; }
      set {
        effectImplicitTargetA2_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_a3" field.</summary>
    public const int EffectImplicitTargetA3FieldNumber = 85;
    private uint effectImplicitTargetA3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetA3 {
      get { return effectImplicitTargetA3_; }
      set {
        effectImplicitTargetA3_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_b1" field.</summary>
    public const int EffectImplicitTargetB1FieldNumber = 86;
    private uint effectImplicitTargetB1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetB1 {
      get { return effectImplicitTargetB1_; }
      set {
        effectImplicitTargetB1_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_b2" field.</summary>
    public const int EffectImplicitTargetB2FieldNumber = 87;
    private uint effectImplicitTargetB2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetB2 {
      get { return effectImplicitTargetB2_; }
      set {
        effectImplicitTargetB2_ = value;
      }
    }

    /// <summary>Field number for the "effect_implicit_target_b3" field.</summary>
    public const int EffectImplicitTargetB3FieldNumber = 88;
    private uint effectImplicitTargetB3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectImplicitTargetB3 {
      get { return effectImplicitTargetB3_; }
      set {
        effectImplicitTargetB3_ = value;
      }
    }

    /// <summary>Field number for the "effect_radius_index1" field.</summary>
    public const int EffectRadiusIndex1FieldNumber = 89;
    private uint effectRadiusIndex1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectRadiusIndex1 {
      get { return effectRadiusIndex1_; }
      set {
        effectRadiusIndex1_ = value;
      }
    }

    /// <summary>Field number for the "effect_radius_index2" field.</summary>
    public const int EffectRadiusIndex2FieldNumber = 90;
    private uint effectRadiusIndex2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectRadiusIndex2 {
      get { return effectRadiusIndex2_; }
      set {
        effectRadiusIndex2_ = value;
      }
    }

    /// <summary>Field number for the "effect_radius_index3" field.</summary>
    public const int EffectRadiusIndex3FieldNumber = 91;
    private uint effectRadiusIndex3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectRadiusIndex3 {
      get { return effectRadiusIndex3_; }
      set {
        effectRadiusIndex3_ = value;
      }
    }

    /// <summary>Field number for the "effect_apply_aura_name1" field.</summary>
    public const int EffectApplyAuraName1FieldNumber = 92;
    private uint effectApplyAuraName1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectApplyAuraName1 {
      get { return effectApplyAuraName1_; }
      set {
        effectApplyAuraName1_ = value;
      }
    }

    /// <summary>Field number for the "effect_apply_aura_name2" field.</summary>
    public const int EffectApplyAuraName2FieldNumber = 93;
    private uint effectApplyAuraName2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectApplyAuraName2 {
      get { return effectApplyAuraName2_; }
      set {
        effectApplyAuraName2_ = value;
      }
    }

    /// <summary>Field number for the "effect_apply_aura_name3" field.</summary>
    public const int EffectApplyAuraName3FieldNumber = 94;
    private uint effectApplyAuraName3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectApplyAuraName3 {
      get { return effectApplyAuraName3_; }
      set {
        effectApplyAuraName3_ = value;
      }
    }

    /// <summary>Field number for the "effect_amplitude1" field.</summary>
    public const int EffectAmplitude1FieldNumber = 95;
    private uint effectAmplitude1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectAmplitude1 {
      get { return effectAmplitude1_; }
      set {
        effectAmplitude1_ = value;
      }
    }

    /// <summary>Field number for the "effect_amplitude2" field.</summary>
    public const int EffectAmplitude2FieldNumber = 96;
    private uint effectAmplitude2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectAmplitude2 {
      get { return effectAmplitude2_; }
      set {
        effectAmplitude2_ = value;
      }
    }

    /// <summary>Field number for the "effect_amplitude3" field.</summary>
    public const int EffectAmplitude3FieldNumber = 97;
    private uint effectAmplitude3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectAmplitude3 {
      get { return effectAmplitude3_; }
      set {
        effectAmplitude3_ = value;
      }
    }

    /// <summary>Field number for the "effect_multiple_value1" field.</summary>
    public const int EffectMultipleValue1FieldNumber = 98;
    private float effectMultipleValue1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectMultipleValue1 {
      get { return effectMultipleValue1_; }
      set {
        effectMultipleValue1_ = value;
      }
    }

    /// <summary>Field number for the "effect_multiple_value2" field.</summary>
    public const int EffectMultipleValue2FieldNumber = 99;
    private float effectMultipleValue2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectMultipleValue2 {
      get { return effectMultipleValue2_; }
      set {
        effectMultipleValue2_ = value;
      }
    }

    /// <summary>Field number for the "effect_multiple_value3" field.</summary>
    public const int EffectMultipleValue3FieldNumber = 100;
    private float effectMultipleValue3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectMultipleValue3 {
      get { return effectMultipleValue3_; }
      set {
        effectMultipleValue3_ = value;
      }
    }

    /// <summary>Field number for the "effect_chain_target1" field.</summary>
    public const int EffectChainTarget1FieldNumber = 101;
    private uint effectChainTarget1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectChainTarget1 {
      get { return effectChainTarget1_; }
      set {
        effectChainTarget1_ = value;
      }
    }

    /// <summary>Field number for the "effect_chain_target2" field.</summary>
    public const int EffectChainTarget2FieldNumber = 102;
    private uint effectChainTarget2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectChainTarget2 {
      get { return effectChainTarget2_; }
      set {
        effectChainTarget2_ = value;
      }
    }

    /// <summary>Field number for the "effect_chain_target3" field.</summary>
    public const int EffectChainTarget3FieldNumber = 103;
    private uint effectChainTarget3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectChainTarget3 {
      get { return effectChainTarget3_; }
      set {
        effectChainTarget3_ = value;
      }
    }

    /// <summary>Field number for the "effect_item_type1" field.</summary>
    public const int EffectItemType1FieldNumber = 104;
    private uint effectItemType1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectItemType1 {
      get { return effectItemType1_; }
      set {
        effectItemType1_ = value;
      }
    }

    /// <summary>Field number for the "effect_item_type2" field.</summary>
    public const int EffectItemType2FieldNumber = 105;
    private uint effectItemType2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectItemType2 {
      get { return effectItemType2_; }
      set {
        effectItemType2_ = value;
      }
    }

    /// <summary>Field number for the "effect_item_type3" field.</summary>
    public const int EffectItemType3FieldNumber = 106;
    private uint effectItemType3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectItemType3 {
      get { return effectItemType3_; }
      set {
        effectItemType3_ = value;
      }
    }

    /// <summary>Field number for the "effect_misc_value1" field.</summary>
    public const int EffectMiscValue1FieldNumber = 107;
    private int effectMiscValue1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectMiscValue1 {
      get { return effectMiscValue1_; }
      set {
        effectMiscValue1_ = value;
      }
    }

    /// <summary>Field number for the "effect_misc_value2" field.</summary>
    public const int EffectMiscValue2FieldNumber = 108;
    private int effectMiscValue2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectMiscValue2 {
      get { return effectMiscValue2_; }
      set {
        effectMiscValue2_ = value;
      }
    }

    /// <summary>Field number for the "effect_misc_value3" field.</summary>
    public const int EffectMiscValue3FieldNumber = 109;
    private int effectMiscValue3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectMiscValue3 {
      get { return effectMiscValue3_; }
      set {
        effectMiscValue3_ = value;
      }
    }

    /// <summary>Field number for the "effect_trigger_spell1" field.</summary>
    public const int EffectTriggerSpell1FieldNumber = 110;
    private uint effectTriggerSpell1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectTriggerSpell1 {
      get { return effectTriggerSpell1_; }
      set {
        effectTriggerSpell1_ = value;
      }
    }

    /// <summary>Field number for the "effect_trigger_spell2" field.</summary>
    public const int EffectTriggerSpell2FieldNumber = 111;
    private uint effectTriggerSpell2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectTriggerSpell2 {
      get { return effectTriggerSpell2_; }
      set {
        effectTriggerSpell2_ = value;
      }
    }

    /// <summary>Field number for the "effect_trigger_spell3" field.</summary>
    public const int EffectTriggerSpell3FieldNumber = 112;
    private uint effectTriggerSpell3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectTriggerSpell3 {
      get { return effectTriggerSpell3_; }
      set {
        effectTriggerSpell3_ = value;
      }
    }

    /// <summary>Field number for the "effect_points_per_combo_point1" field.</summary>
    public const int EffectPointsPerComboPoint1FieldNumber = 113;
    private float effectPointsPerComboPoint1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectPointsPerComboPoint1 {
      get { return effectPointsPerComboPoint1_; }
      set {
        effectPointsPerComboPoint1_ = value;
      }
    }

    /// <summary>Field number for the "effect_points_per_combo_point2" field.</summary>
    public const int EffectPointsPerComboPoint2FieldNumber = 114;
    private float effectPointsPerComboPoint2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectPointsPerComboPoint2 {
      get { return effectPointsPerComboPoint2_; }
      set {
        effectPointsPerComboPoint2_ = value;
      }
    }

    /// <summary>Field number for the "effect_points_per_combo_point3" field.</summary>
    public const int EffectPointsPerComboPoint3FieldNumber = 115;
    private float effectPointsPerComboPoint3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EffectPointsPerComboPoint3 {
      get { return effectPointsPerComboPoint3_; }
      set {
        effectPointsPerComboPoint3_ = value;
      }
    }

    /// <summary>Field number for the "spell_visual1" field.</summary>
    public const int SpellVisual1FieldNumber = 116;
    private uint spellVisual1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellVisual1 {
      get { return spellVisual1_; }
      set {
        spellVisual1_ = value;
      }
    }

    /// <summary>Field number for the "spell_visual2" field.</summary>
    public const int SpellVisual2FieldNumber = 117;
    private uint spellVisual2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellVisual2 {
      get { return spellVisual2_; }
      set {
        spellVisual2_ = value;
      }
    }

    /// <summary>Field number for the "spell_icon_id" field.</summary>
    public const int SpellIconIdFieldNumber = 118;
    private uint spellIconId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellIconId {
      get { return spellIconId_; }
      set {
        spellIconId_ = value;
      }
    }

    /// <summary>Field number for the "active_icon_id" field.</summary>
    public const int ActiveIconIdFieldNumber = 119;
    private uint activeIconId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActiveIconId {
      get { return activeIconId_; }
      set {
        activeIconId_ = value;
      }
    }

    /// <summary>Field number for the "spell_priority" field.</summary>
    public const int SpellPriorityFieldNumber = 120;
    private uint spellPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellPriority {
      get { return spellPriority_; }
      set {
        spellPriority_ = value;
      }
    }

    /// <summary>Field number for the "name1" field.</summary>
    public const int Name1FieldNumber = 121;
    private string name1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name1 {
      get { return name1_; }
      set {
        name1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name2" field.</summary>
    public const int Name2FieldNumber = 122;
    private string name2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name2 {
      get { return name2_; }
      set {
        name2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name3" field.</summary>
    public const int Name3FieldNumber = 123;
    private string name3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name3 {
      get { return name3_; }
      set {
        name3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name4" field.</summary>
    public const int Name4FieldNumber = 124;
    private string name4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name4 {
      get { return name4_; }
      set {
        name4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name5" field.</summary>
    public const int Name5FieldNumber = 125;
    private string name5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name5 {
      get { return name5_; }
      set {
        name5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name6" field.</summary>
    public const int Name6FieldNumber = 126;
    private string name6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name6 {
      get { return name6_; }
      set {
        name6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name7" field.</summary>
    public const int Name7FieldNumber = 127;
    private string name7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name7 {
      get { return name7_; }
      set {
        name7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name8" field.</summary>
    public const int Name8FieldNumber = 128;
    private string name8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name8 {
      get { return name8_; }
      set {
        name8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_flags" field.</summary>
    public const int NameFlagsFieldNumber = 129;
    private uint nameFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NameFlags {
      get { return nameFlags_; }
      set {
        nameFlags_ = value;
      }
    }

    /// <summary>Field number for the "name_subtext1" field.</summary>
    public const int NameSubtext1FieldNumber = 130;
    private string nameSubtext1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext1 {
      get { return nameSubtext1_; }
      set {
        nameSubtext1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext2" field.</summary>
    public const int NameSubtext2FieldNumber = 131;
    private string nameSubtext2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext2 {
      get { return nameSubtext2_; }
      set {
        nameSubtext2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext3" field.</summary>
    public const int NameSubtext3FieldNumber = 132;
    private string nameSubtext3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext3 {
      get { return nameSubtext3_; }
      set {
        nameSubtext3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext4" field.</summary>
    public const int NameSubtext4FieldNumber = 133;
    private string nameSubtext4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext4 {
      get { return nameSubtext4_; }
      set {
        nameSubtext4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext5" field.</summary>
    public const int NameSubtext5FieldNumber = 134;
    private string nameSubtext5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext5 {
      get { return nameSubtext5_; }
      set {
        nameSubtext5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext6" field.</summary>
    public const int NameSubtext6FieldNumber = 135;
    private string nameSubtext6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext6 {
      get { return nameSubtext6_; }
      set {
        nameSubtext6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext7" field.</summary>
    public const int NameSubtext7FieldNumber = 136;
    private string nameSubtext7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext7 {
      get { return nameSubtext7_; }
      set {
        nameSubtext7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext8" field.</summary>
    public const int NameSubtext8FieldNumber = 137;
    private string nameSubtext8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSubtext8 {
      get { return nameSubtext8_; }
      set {
        nameSubtext8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name_subtext_flags" field.</summary>
    public const int NameSubtextFlagsFieldNumber = 138;
    private uint nameSubtextFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NameSubtextFlags {
      get { return nameSubtextFlags_; }
      set {
        nameSubtextFlags_ = value;
      }
    }

    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 139;
    private string description1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 140;
    private string description2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description3" field.</summary>
    public const int Description3FieldNumber = 141;
    private string description3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description3 {
      get { return description3_; }
      set {
        description3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description4" field.</summary>
    public const int Description4FieldNumber = 142;
    private string description4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description4 {
      get { return description4_; }
      set {
        description4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description5" field.</summary>
    public const int Description5FieldNumber = 143;
    private string description5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description5 {
      get { return description5_; }
      set {
        description5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description6" field.</summary>
    public const int Description6FieldNumber = 144;
    private string description6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description6 {
      get { return description6_; }
      set {
        description6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description7" field.</summary>
    public const int Description7FieldNumber = 145;
    private string description7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description7 {
      get { return description7_; }
      set {
        description7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description8" field.</summary>
    public const int Description8FieldNumber = 146;
    private string description8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description8 {
      get { return description8_; }
      set {
        description8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description_flags" field.</summary>
    public const int DescriptionFlagsFieldNumber = 147;
    private uint descriptionFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DescriptionFlags {
      get { return descriptionFlags_; }
      set {
        descriptionFlags_ = value;
      }
    }

    /// <summary>Field number for the "aura_description1" field.</summary>
    public const int AuraDescription1FieldNumber = 148;
    private string auraDescription1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription1 {
      get { return auraDescription1_; }
      set {
        auraDescription1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description2" field.</summary>
    public const int AuraDescription2FieldNumber = 149;
    private string auraDescription2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription2 {
      get { return auraDescription2_; }
      set {
        auraDescription2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description3" field.</summary>
    public const int AuraDescription3FieldNumber = 150;
    private string auraDescription3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription3 {
      get { return auraDescription3_; }
      set {
        auraDescription3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description4" field.</summary>
    public const int AuraDescription4FieldNumber = 151;
    private string auraDescription4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription4 {
      get { return auraDescription4_; }
      set {
        auraDescription4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description5" field.</summary>
    public const int AuraDescription5FieldNumber = 152;
    private string auraDescription5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription5 {
      get { return auraDescription5_; }
      set {
        auraDescription5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description6" field.</summary>
    public const int AuraDescription6FieldNumber = 153;
    private string auraDescription6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription6 {
      get { return auraDescription6_; }
      set {
        auraDescription6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description7" field.</summary>
    public const int AuraDescription7FieldNumber = 154;
    private string auraDescription7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription7 {
      get { return auraDescription7_; }
      set {
        auraDescription7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description8" field.</summary>
    public const int AuraDescription8FieldNumber = 155;
    private string auraDescription8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuraDescription8 {
      get { return auraDescription8_; }
      set {
        auraDescription8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aura_description_flags" field.</summary>
    public const int AuraDescriptionFlagsFieldNumber = 156;
    private uint auraDescriptionFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuraDescriptionFlags {
      get { return auraDescriptionFlags_; }
      set {
        auraDescriptionFlags_ = value;
      }
    }

    /// <summary>Field number for the "mana_cost_percentage" field.</summary>
    public const int ManaCostPercentageFieldNumber = 157;
    private uint manaCostPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ManaCostPercentage {
      get { return manaCostPercentage_; }
      set {
        manaCostPercentage_ = value;
      }
    }

    /// <summary>Field number for the "start_recovery_category" field.</summary>
    public const int StartRecoveryCategoryFieldNumber = 158;
    private uint startRecoveryCategory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartRecoveryCategory {
      get { return startRecoveryCategory_; }
      set {
        startRecoveryCategory_ = value;
      }
    }

    /// <summary>Field number for the "start_recovery_time" field.</summary>
    public const int StartRecoveryTimeFieldNumber = 159;
    private uint startRecoveryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartRecoveryTime {
      get { return startRecoveryTime_; }
      set {
        startRecoveryTime_ = value;
      }
    }

    /// <summary>Field number for the "max_target_level" field.</summary>
    public const int MaxTargetLevelFieldNumber = 160;
    private uint maxTargetLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxTargetLevel {
      get { return maxTargetLevel_; }
      set {
        maxTargetLevel_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_name" field.</summary>
    public const int SpellFamilyNameFieldNumber = 161;
    private uint spellFamilyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellFamilyName {
      get { return spellFamilyName_; }
      set {
        spellFamilyName_ = value;
      }
    }

    /// <summary>Field number for the "spell_family_flags" field.</summary>
    public const int SpellFamilyFlagsFieldNumber = 162;
    private ulong spellFamilyFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SpellFamilyFlags {
      get { return spellFamilyFlags_; }
      set {
        spellFamilyFlags_ = value;
      }
    }

    /// <summary>Field number for the "max_affected_targets" field.</summary>
    public const int MaxAffectedTargetsFieldNumber = 163;
    private uint maxAffectedTargets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxAffectedTargets {
      get { return maxAffectedTargets_; }
      set {
        maxAffectedTargets_ = value;
      }
    }

    /// <summary>Field number for the "dmg_class" field.</summary>
    public const int DmgClassFieldNumber = 164;
    private uint dmgClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DmgClass {
      get { return dmgClass_; }
      set {
        dmgClass_ = value;
      }
    }

    /// <summary>Field number for the "prevention_type" field.</summary>
    public const int PreventionTypeFieldNumber = 165;
    private uint preventionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PreventionType {
      get { return preventionType_; }
      set {
        preventionType_ = value;
      }
    }

    /// <summary>Field number for the "stance_bar_order" field.</summary>
    public const int StanceBarOrderFieldNumber = 166;
    private int stanceBarOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StanceBarOrder {
      get { return stanceBarOrder_; }
      set {
        stanceBarOrder_ = value;
      }
    }

    /// <summary>Field number for the "dmg_multiplier1" field.</summary>
    public const int DmgMultiplier1FieldNumber = 167;
    private float dmgMultiplier1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DmgMultiplier1 {
      get { return dmgMultiplier1_; }
      set {
        dmgMultiplier1_ = value;
      }
    }

    /// <summary>Field number for the "dmg_multiplier2" field.</summary>
    public const int DmgMultiplier2FieldNumber = 168;
    private float dmgMultiplier2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DmgMultiplier2 {
      get { return dmgMultiplier2_; }
      set {
        dmgMultiplier2_ = value;
      }
    }

    /// <summary>Field number for the "dmg_multiplier3" field.</summary>
    public const int DmgMultiplier3FieldNumber = 169;
    private float dmgMultiplier3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DmgMultiplier3 {
      get { return dmgMultiplier3_; }
      set {
        dmgMultiplier3_ = value;
      }
    }

    /// <summary>Field number for the "min_faction_id" field.</summary>
    public const int MinFactionIdFieldNumber = 170;
    private uint minFactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinFactionId {
      get { return minFactionId_; }
      set {
        minFactionId_ = value;
      }
    }

    /// <summary>Field number for the "min_reputation" field.</summary>
    public const int MinReputationFieldNumber = 171;
    private uint minReputation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinReputation {
      get { return minReputation_; }
      set {
        minReputation_ = value;
      }
    }

    /// <summary>Field number for the "required_aura_vision" field.</summary>
    public const int RequiredAuraVisionFieldNumber = 172;
    private uint requiredAuraVision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequiredAuraVision {
      get { return requiredAuraVision_; }
      set {
        requiredAuraVision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (School != other.School) return false;
      if (Category != other.Category) return false;
      if (CastUi != other.CastUi) return false;
      if (Dispel != other.Dispel) return false;
      if (Mechanic != other.Mechanic) return false;
      if (Attributes != other.Attributes) return false;
      if (AttributesEx != other.AttributesEx) return false;
      if (AttributesEx2 != other.AttributesEx2) return false;
      if (AttributesEx3 != other.AttributesEx3) return false;
      if (AttributesEx4 != other.AttributesEx4) return false;
      if (Stances != other.Stances) return false;
      if (StancesNot != other.StancesNot) return false;
      if (Targets != other.Targets) return false;
      if (TargetCreatureType != other.TargetCreatureType) return false;
      if (RequiresSpellFocus != other.RequiresSpellFocus) return false;
      if (CasterAuraState != other.CasterAuraState) return false;
      if (TargetAuraState != other.TargetAuraState) return false;
      if (CastingTimeIndex != other.CastingTimeIndex) return false;
      if (RecoveryTime != other.RecoveryTime) return false;
      if (CategoryRecoveryTime != other.CategoryRecoveryTime) return false;
      if (InterruptFlags != other.InterruptFlags) return false;
      if (AuraInterruptFlags != other.AuraInterruptFlags) return false;
      if (ChannelInterruptFlags != other.ChannelInterruptFlags) return false;
      if (ProcFlags != other.ProcFlags) return false;
      if (ProcChance != other.ProcChance) return false;
      if (ProcCharges != other.ProcCharges) return false;
      if (MaxLevel != other.MaxLevel) return false;
      if (BaseLevel != other.BaseLevel) return false;
      if (SpellLevel != other.SpellLevel) return false;
      if (DurationIndex != other.DurationIndex) return false;
      if (PowerType != other.PowerType) return false;
      if (ManaCost != other.ManaCost) return false;
      if (ManaCostPerLevel != other.ManaCostPerLevel) return false;
      if (ManaPerSecond != other.ManaPerSecond) return false;
      if (ManaPerSecondPerLevel != other.ManaPerSecondPerLevel) return false;
      if (RangeIndex != other.RangeIndex) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (ModelNextSpell != other.ModelNextSpell) return false;
      if (StackAmount != other.StackAmount) return false;
      if (Totem1 != other.Totem1) return false;
      if (Totem2 != other.Totem2) return false;
      if (Reagent1 != other.Reagent1) return false;
      if (Reagent2 != other.Reagent2) return false;
      if (Reagent3 != other.Reagent3) return false;
      if (Reagent4 != other.Reagent4) return false;
      if (Reagent5 != other.Reagent5) return false;
      if (Reagent6 != other.Reagent6) return false;
      if (Reagent7 != other.Reagent7) return false;
      if (Reagent8 != other.Reagent8) return false;
      if (ReagentCount1 != other.ReagentCount1) return false;
      if (ReagentCount2 != other.ReagentCount2) return false;
      if (ReagentCount3 != other.ReagentCount3) return false;
      if (ReagentCount4 != other.ReagentCount4) return false;
      if (ReagentCount5 != other.ReagentCount5) return false;
      if (ReagentCount6 != other.ReagentCount6) return false;
      if (ReagentCount7 != other.ReagentCount7) return false;
      if (ReagentCount8 != other.ReagentCount8) return false;
      if (EquippedItemClass != other.EquippedItemClass) return false;
      if (EquippedItemSubClassMask != other.EquippedItemSubClassMask) return false;
      if (EquippedItemInventoryTypeMask != other.EquippedItemInventoryTypeMask) return false;
      if (Effect1 != other.Effect1) return false;
      if (Effect2 != other.Effect2) return false;
      if (Effect3 != other.Effect3) return false;
      if (EffectDieSides1 != other.EffectDieSides1) return false;
      if (EffectDieSides2 != other.EffectDieSides2) return false;
      if (EffectDieSides3 != other.EffectDieSides3) return false;
      if (EffectBaseDice1 != other.EffectBaseDice1) return false;
      if (EffectBaseDice2 != other.EffectBaseDice2) return false;
      if (EffectBaseDice3 != other.EffectBaseDice3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectDicePerLevel1, other.EffectDicePerLevel1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectDicePerLevel2, other.EffectDicePerLevel2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectDicePerLevel3, other.EffectDicePerLevel3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectRealPointsPerLevel1, other.EffectRealPointsPerLevel1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectRealPointsPerLevel2, other.EffectRealPointsPerLevel2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectRealPointsPerLevel3, other.EffectRealPointsPerLevel3)) return false;
      if (EffectBasePoints1 != other.EffectBasePoints1) return false;
      if (EffectBasePoints2 != other.EffectBasePoints2) return false;
      if (EffectBasePoints3 != other.EffectBasePoints3) return false;
      if (EffectMechanic1 != other.EffectMechanic1) return false;
      if (EffectMechanic2 != other.EffectMechanic2) return false;
      if (EffectMechanic3 != other.EffectMechanic3) return false;
      if (EffectImplicitTargetA1 != other.EffectImplicitTargetA1) return false;
      if (EffectImplicitTargetA2 != other.EffectImplicitTargetA2) return false;
      if (EffectImplicitTargetA3 != other.EffectImplicitTargetA3) return false;
      if (EffectImplicitTargetB1 != other.EffectImplicitTargetB1) return false;
      if (EffectImplicitTargetB2 != other.EffectImplicitTargetB2) return false;
      if (EffectImplicitTargetB3 != other.EffectImplicitTargetB3) return false;
      if (EffectRadiusIndex1 != other.EffectRadiusIndex1) return false;
      if (EffectRadiusIndex2 != other.EffectRadiusIndex2) return false;
      if (EffectRadiusIndex3 != other.EffectRadiusIndex3) return false;
      if (EffectApplyAuraName1 != other.EffectApplyAuraName1) return false;
      if (EffectApplyAuraName2 != other.EffectApplyAuraName2) return false;
      if (EffectApplyAuraName3 != other.EffectApplyAuraName3) return false;
      if (EffectAmplitude1 != other.EffectAmplitude1) return false;
      if (EffectAmplitude2 != other.EffectAmplitude2) return false;
      if (EffectAmplitude3 != other.EffectAmplitude3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectMultipleValue1, other.EffectMultipleValue1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectMultipleValue2, other.EffectMultipleValue2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectMultipleValue3, other.EffectMultipleValue3)) return false;
      if (EffectChainTarget1 != other.EffectChainTarget1) return false;
      if (EffectChainTarget2 != other.EffectChainTarget2) return false;
      if (EffectChainTarget3 != other.EffectChainTarget3) return false;
      if (EffectItemType1 != other.EffectItemType1) return false;
      if (EffectItemType2 != other.EffectItemType2) return false;
      if (EffectItemType3 != other.EffectItemType3) return false;
      if (EffectMiscValue1 != other.EffectMiscValue1) return false;
      if (EffectMiscValue2 != other.EffectMiscValue2) return false;
      if (EffectMiscValue3 != other.EffectMiscValue3) return false;
      if (EffectTriggerSpell1 != other.EffectTriggerSpell1) return false;
      if (EffectTriggerSpell2 != other.EffectTriggerSpell2) return false;
      if (EffectTriggerSpell3 != other.EffectTriggerSpell3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectPointsPerComboPoint1, other.EffectPointsPerComboPoint1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectPointsPerComboPoint2, other.EffectPointsPerComboPoint2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EffectPointsPerComboPoint3, other.EffectPointsPerComboPoint3)) return false;
      if (SpellVisual1 != other.SpellVisual1) return false;
      if (SpellVisual2 != other.SpellVisual2) return false;
      if (SpellIconId != other.SpellIconId) return false;
      if (ActiveIconId != other.ActiveIconId) return false;
      if (SpellPriority != other.SpellPriority) return false;
      if (Name1 != other.Name1) return false;
      if (Name2 != other.Name2) return false;
      if (Name3 != other.Name3) return false;
      if (Name4 != other.Name4) return false;
      if (Name5 != other.Name5) return false;
      if (Name6 != other.Name6) return false;
      if (Name7 != other.Name7) return false;
      if (Name8 != other.Name8) return false;
      if (NameFlags != other.NameFlags) return false;
      if (NameSubtext1 != other.NameSubtext1) return false;
      if (NameSubtext2 != other.NameSubtext2) return false;
      if (NameSubtext3 != other.NameSubtext3) return false;
      if (NameSubtext4 != other.NameSubtext4) return false;
      if (NameSubtext5 != other.NameSubtext5) return false;
      if (NameSubtext6 != other.NameSubtext6) return false;
      if (NameSubtext7 != other.NameSubtext7) return false;
      if (NameSubtext8 != other.NameSubtext8) return false;
      if (NameSubtextFlags != other.NameSubtextFlags) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      if (Description3 != other.Description3) return false;
      if (Description4 != other.Description4) return false;
      if (Description5 != other.Description5) return false;
      if (Description6 != other.Description6) return false;
      if (Description7 != other.Description7) return false;
      if (Description8 != other.Description8) return false;
      if (DescriptionFlags != other.DescriptionFlags) return false;
      if (AuraDescription1 != other.AuraDescription1) return false;
      if (AuraDescription2 != other.AuraDescription2) return false;
      if (AuraDescription3 != other.AuraDescription3) return false;
      if (AuraDescription4 != other.AuraDescription4) return false;
      if (AuraDescription5 != other.AuraDescription5) return false;
      if (AuraDescription6 != other.AuraDescription6) return false;
      if (AuraDescription7 != other.AuraDescription7) return false;
      if (AuraDescription8 != other.AuraDescription8) return false;
      if (AuraDescriptionFlags != other.AuraDescriptionFlags) return false;
      if (ManaCostPercentage != other.ManaCostPercentage) return false;
      if (StartRecoveryCategory != other.StartRecoveryCategory) return false;
      if (StartRecoveryTime != other.StartRecoveryTime) return false;
      if (MaxTargetLevel != other.MaxTargetLevel) return false;
      if (SpellFamilyName != other.SpellFamilyName) return false;
      if (SpellFamilyFlags != other.SpellFamilyFlags) return false;
      if (MaxAffectedTargets != other.MaxAffectedTargets) return false;
      if (DmgClass != other.DmgClass) return false;
      if (PreventionType != other.PreventionType) return false;
      if (StanceBarOrder != other.StanceBarOrder) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgMultiplier1, other.DmgMultiplier1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgMultiplier2, other.DmgMultiplier2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DmgMultiplier3, other.DmgMultiplier3)) return false;
      if (MinFactionId != other.MinFactionId) return false;
      if (MinReputation != other.MinReputation) return false;
      if (RequiredAuraVision != other.RequiredAuraVision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (School != 0) hash ^= School.GetHashCode();
      if (Category != 0) hash ^= Category.GetHashCode();
      if (CastUi != 0) hash ^= CastUi.GetHashCode();
      if (Dispel != 0) hash ^= Dispel.GetHashCode();
      if (Mechanic != 0) hash ^= Mechanic.GetHashCode();
      if (Attributes != 0UL) hash ^= Attributes.GetHashCode();
      if (AttributesEx != 0) hash ^= AttributesEx.GetHashCode();
      if (AttributesEx2 != 0) hash ^= AttributesEx2.GetHashCode();
      if (AttributesEx3 != 0) hash ^= AttributesEx3.GetHashCode();
      if (AttributesEx4 != 0) hash ^= AttributesEx4.GetHashCode();
      if (Stances != 0) hash ^= Stances.GetHashCode();
      if (StancesNot != 0) hash ^= StancesNot.GetHashCode();
      if (Targets != 0) hash ^= Targets.GetHashCode();
      if (TargetCreatureType != 0) hash ^= TargetCreatureType.GetHashCode();
      if (RequiresSpellFocus != 0) hash ^= RequiresSpellFocus.GetHashCode();
      if (CasterAuraState != 0) hash ^= CasterAuraState.GetHashCode();
      if (TargetAuraState != 0) hash ^= TargetAuraState.GetHashCode();
      if (CastingTimeIndex != 0) hash ^= CastingTimeIndex.GetHashCode();
      if (RecoveryTime != 0) hash ^= RecoveryTime.GetHashCode();
      if (CategoryRecoveryTime != 0) hash ^= CategoryRecoveryTime.GetHashCode();
      if (InterruptFlags != 0) hash ^= InterruptFlags.GetHashCode();
      if (AuraInterruptFlags != 0) hash ^= AuraInterruptFlags.GetHashCode();
      if (ChannelInterruptFlags != 0) hash ^= ChannelInterruptFlags.GetHashCode();
      if (ProcFlags != 0) hash ^= ProcFlags.GetHashCode();
      if (ProcChance != 0) hash ^= ProcChance.GetHashCode();
      if (ProcCharges != 0) hash ^= ProcCharges.GetHashCode();
      if (MaxLevel != 0) hash ^= MaxLevel.GetHashCode();
      if (BaseLevel != 0) hash ^= BaseLevel.GetHashCode();
      if (SpellLevel != 0) hash ^= SpellLevel.GetHashCode();
      if (DurationIndex != 0) hash ^= DurationIndex.GetHashCode();
      if (PowerType != 0) hash ^= PowerType.GetHashCode();
      if (ManaCost != 0) hash ^= ManaCost.GetHashCode();
      if (ManaCostPerLevel != 0) hash ^= ManaCostPerLevel.GetHashCode();
      if (ManaPerSecond != 0) hash ^= ManaPerSecond.GetHashCode();
      if (ManaPerSecondPerLevel != 0) hash ^= ManaPerSecondPerLevel.GetHashCode();
      if (RangeIndex != 0) hash ^= RangeIndex.GetHashCode();
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (ModelNextSpell != 0) hash ^= ModelNextSpell.GetHashCode();
      if (StackAmount != 0) hash ^= StackAmount.GetHashCode();
      if (Totem1 != 0) hash ^= Totem1.GetHashCode();
      if (Totem2 != 0) hash ^= Totem2.GetHashCode();
      if (Reagent1 != 0) hash ^= Reagent1.GetHashCode();
      if (Reagent2 != 0) hash ^= Reagent2.GetHashCode();
      if (Reagent3 != 0) hash ^= Reagent3.GetHashCode();
      if (Reagent4 != 0) hash ^= Reagent4.GetHashCode();
      if (Reagent5 != 0) hash ^= Reagent5.GetHashCode();
      if (Reagent6 != 0) hash ^= Reagent6.GetHashCode();
      if (Reagent7 != 0) hash ^= Reagent7.GetHashCode();
      if (Reagent8 != 0) hash ^= Reagent8.GetHashCode();
      if (ReagentCount1 != 0) hash ^= ReagentCount1.GetHashCode();
      if (ReagentCount2 != 0) hash ^= ReagentCount2.GetHashCode();
      if (ReagentCount3 != 0) hash ^= ReagentCount3.GetHashCode();
      if (ReagentCount4 != 0) hash ^= ReagentCount4.GetHashCode();
      if (ReagentCount5 != 0) hash ^= ReagentCount5.GetHashCode();
      if (ReagentCount6 != 0) hash ^= ReagentCount6.GetHashCode();
      if (ReagentCount7 != 0) hash ^= ReagentCount7.GetHashCode();
      if (ReagentCount8 != 0) hash ^= ReagentCount8.GetHashCode();
      if (EquippedItemClass != 0) hash ^= EquippedItemClass.GetHashCode();
      if (EquippedItemSubClassMask != 0) hash ^= EquippedItemSubClassMask.GetHashCode();
      if (EquippedItemInventoryTypeMask != 0) hash ^= EquippedItemInventoryTypeMask.GetHashCode();
      if (Effect1 != 0) hash ^= Effect1.GetHashCode();
      if (Effect2 != 0) hash ^= Effect2.GetHashCode();
      if (Effect3 != 0) hash ^= Effect3.GetHashCode();
      if (EffectDieSides1 != 0) hash ^= EffectDieSides1.GetHashCode();
      if (EffectDieSides2 != 0) hash ^= EffectDieSides2.GetHashCode();
      if (EffectDieSides3 != 0) hash ^= EffectDieSides3.GetHashCode();
      if (EffectBaseDice1 != 0) hash ^= EffectBaseDice1.GetHashCode();
      if (EffectBaseDice2 != 0) hash ^= EffectBaseDice2.GetHashCode();
      if (EffectBaseDice3 != 0) hash ^= EffectBaseDice3.GetHashCode();
      if (EffectDicePerLevel1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectDicePerLevel1);
      if (EffectDicePerLevel2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectDicePerLevel2);
      if (EffectDicePerLevel3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectDicePerLevel3);
      if (EffectRealPointsPerLevel1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectRealPointsPerLevel1);
      if (EffectRealPointsPerLevel2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectRealPointsPerLevel2);
      if (EffectRealPointsPerLevel3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectRealPointsPerLevel3);
      if (EffectBasePoints1 != 0) hash ^= EffectBasePoints1.GetHashCode();
      if (EffectBasePoints2 != 0) hash ^= EffectBasePoints2.GetHashCode();
      if (EffectBasePoints3 != 0) hash ^= EffectBasePoints3.GetHashCode();
      if (EffectMechanic1 != 0) hash ^= EffectMechanic1.GetHashCode();
      if (EffectMechanic2 != 0) hash ^= EffectMechanic2.GetHashCode();
      if (EffectMechanic3 != 0) hash ^= EffectMechanic3.GetHashCode();
      if (EffectImplicitTargetA1 != 0) hash ^= EffectImplicitTargetA1.GetHashCode();
      if (EffectImplicitTargetA2 != 0) hash ^= EffectImplicitTargetA2.GetHashCode();
      if (EffectImplicitTargetA3 != 0) hash ^= EffectImplicitTargetA3.GetHashCode();
      if (EffectImplicitTargetB1 != 0) hash ^= EffectImplicitTargetB1.GetHashCode();
      if (EffectImplicitTargetB2 != 0) hash ^= EffectImplicitTargetB2.GetHashCode();
      if (EffectImplicitTargetB3 != 0) hash ^= EffectImplicitTargetB3.GetHashCode();
      if (EffectRadiusIndex1 != 0) hash ^= EffectRadiusIndex1.GetHashCode();
      if (EffectRadiusIndex2 != 0) hash ^= EffectRadiusIndex2.GetHashCode();
      if (EffectRadiusIndex3 != 0) hash ^= EffectRadiusIndex3.GetHashCode();
      if (EffectApplyAuraName1 != 0) hash ^= EffectApplyAuraName1.GetHashCode();
      if (EffectApplyAuraName2 != 0) hash ^= EffectApplyAuraName2.GetHashCode();
      if (EffectApplyAuraName3 != 0) hash ^= EffectApplyAuraName3.GetHashCode();
      if (EffectAmplitude1 != 0) hash ^= EffectAmplitude1.GetHashCode();
      if (EffectAmplitude2 != 0) hash ^= EffectAmplitude2.GetHashCode();
      if (EffectAmplitude3 != 0) hash ^= EffectAmplitude3.GetHashCode();
      if (EffectMultipleValue1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectMultipleValue1);
      if (EffectMultipleValue2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectMultipleValue2);
      if (EffectMultipleValue3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectMultipleValue3);
      if (EffectChainTarget1 != 0) hash ^= EffectChainTarget1.GetHashCode();
      if (EffectChainTarget2 != 0) hash ^= EffectChainTarget2.GetHashCode();
      if (EffectChainTarget3 != 0) hash ^= EffectChainTarget3.GetHashCode();
      if (EffectItemType1 != 0) hash ^= EffectItemType1.GetHashCode();
      if (EffectItemType2 != 0) hash ^= EffectItemType2.GetHashCode();
      if (EffectItemType3 != 0) hash ^= EffectItemType3.GetHashCode();
      if (EffectMiscValue1 != 0) hash ^= EffectMiscValue1.GetHashCode();
      if (EffectMiscValue2 != 0) hash ^= EffectMiscValue2.GetHashCode();
      if (EffectMiscValue3 != 0) hash ^= EffectMiscValue3.GetHashCode();
      if (EffectTriggerSpell1 != 0) hash ^= EffectTriggerSpell1.GetHashCode();
      if (EffectTriggerSpell2 != 0) hash ^= EffectTriggerSpell2.GetHashCode();
      if (EffectTriggerSpell3 != 0) hash ^= EffectTriggerSpell3.GetHashCode();
      if (EffectPointsPerComboPoint1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectPointsPerComboPoint1);
      if (EffectPointsPerComboPoint2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectPointsPerComboPoint2);
      if (EffectPointsPerComboPoint3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EffectPointsPerComboPoint3);
      if (SpellVisual1 != 0) hash ^= SpellVisual1.GetHashCode();
      if (SpellVisual2 != 0) hash ^= SpellVisual2.GetHashCode();
      if (SpellIconId != 0) hash ^= SpellIconId.GetHashCode();
      if (ActiveIconId != 0) hash ^= ActiveIconId.GetHashCode();
      if (SpellPriority != 0) hash ^= SpellPriority.GetHashCode();
      if (Name1.Length != 0) hash ^= Name1.GetHashCode();
      if (Name2.Length != 0) hash ^= Name2.GetHashCode();
      if (Name3.Length != 0) hash ^= Name3.GetHashCode();
      if (Name4.Length != 0) hash ^= Name4.GetHashCode();
      if (Name5.Length != 0) hash ^= Name5.GetHashCode();
      if (Name6.Length != 0) hash ^= Name6.GetHashCode();
      if (Name7.Length != 0) hash ^= Name7.GetHashCode();
      if (Name8.Length != 0) hash ^= Name8.GetHashCode();
      if (NameFlags != 0) hash ^= NameFlags.GetHashCode();
      if (NameSubtext1.Length != 0) hash ^= NameSubtext1.GetHashCode();
      if (NameSubtext2.Length != 0) hash ^= NameSubtext2.GetHashCode();
      if (NameSubtext3.Length != 0) hash ^= NameSubtext3.GetHashCode();
      if (NameSubtext4.Length != 0) hash ^= NameSubtext4.GetHashCode();
      if (NameSubtext5.Length != 0) hash ^= NameSubtext5.GetHashCode();
      if (NameSubtext6.Length != 0) hash ^= NameSubtext6.GetHashCode();
      if (NameSubtext7.Length != 0) hash ^= NameSubtext7.GetHashCode();
      if (NameSubtext8.Length != 0) hash ^= NameSubtext8.GetHashCode();
      if (NameSubtextFlags != 0) hash ^= NameSubtextFlags.GetHashCode();
      if (Description1.Length != 0) hash ^= Description1.GetHashCode();
      if (Description2.Length != 0) hash ^= Description2.GetHashCode();
      if (Description3.Length != 0) hash ^= Description3.GetHashCode();
      if (Description4.Length != 0) hash ^= Description4.GetHashCode();
      if (Description5.Length != 0) hash ^= Description5.GetHashCode();
      if (Description6.Length != 0) hash ^= Description6.GetHashCode();
      if (Description7.Length != 0) hash ^= Description7.GetHashCode();
      if (Description8.Length != 0) hash ^= Description8.GetHashCode();
      if (DescriptionFlags != 0) hash ^= DescriptionFlags.GetHashCode();
      if (AuraDescription1.Length != 0) hash ^= AuraDescription1.GetHashCode();
      if (AuraDescription2.Length != 0) hash ^= AuraDescription2.GetHashCode();
      if (AuraDescription3.Length != 0) hash ^= AuraDescription3.GetHashCode();
      if (AuraDescription4.Length != 0) hash ^= AuraDescription4.GetHashCode();
      if (AuraDescription5.Length != 0) hash ^= AuraDescription5.GetHashCode();
      if (AuraDescription6.Length != 0) hash ^= AuraDescription6.GetHashCode();
      if (AuraDescription7.Length != 0) hash ^= AuraDescription7.GetHashCode();
      if (AuraDescription8.Length != 0) hash ^= AuraDescription8.GetHashCode();
      if (AuraDescriptionFlags != 0) hash ^= AuraDescriptionFlags.GetHashCode();
      if (ManaCostPercentage != 0) hash ^= ManaCostPercentage.GetHashCode();
      if (StartRecoveryCategory != 0) hash ^= StartRecoveryCategory.GetHashCode();
      if (StartRecoveryTime != 0) hash ^= StartRecoveryTime.GetHashCode();
      if (MaxTargetLevel != 0) hash ^= MaxTargetLevel.GetHashCode();
      if (SpellFamilyName != 0) hash ^= SpellFamilyName.GetHashCode();
      if (SpellFamilyFlags != 0UL) hash ^= SpellFamilyFlags.GetHashCode();
      if (MaxAffectedTargets != 0) hash ^= MaxAffectedTargets.GetHashCode();
      if (DmgClass != 0) hash ^= DmgClass.GetHashCode();
      if (PreventionType != 0) hash ^= PreventionType.GetHashCode();
      if (StanceBarOrder != 0) hash ^= StanceBarOrder.GetHashCode();
      if (DmgMultiplier1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgMultiplier1);
      if (DmgMultiplier2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgMultiplier2);
      if (DmgMultiplier3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DmgMultiplier3);
      if (MinFactionId != 0) hash ^= MinFactionId.GetHashCode();
      if (MinReputation != 0) hash ^= MinReputation.GetHashCode();
      if (RequiredAuraVision != 0) hash ^= RequiredAuraVision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (School != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(School);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Category);
      }
      if (CastUi != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CastUi);
      }
      if (Dispel != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Dispel);
      }
      if (Mechanic != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Mechanic);
      }
      if (Attributes != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Attributes);
      }
      if (AttributesEx != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AttributesEx4);
      }
      if (Stances != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Stances);
      }
      if (StancesNot != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(StancesNot);
      }
      if (Targets != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Targets);
      }
      if (TargetCreatureType != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TargetCreatureType);
      }
      if (RequiresSpellFocus != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RequiresSpellFocus);
      }
      if (CasterAuraState != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(CasterAuraState);
      }
      if (TargetAuraState != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(TargetAuraState);
      }
      if (CastingTimeIndex != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CastingTimeIndex);
      }
      if (RecoveryTime != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(CategoryRecoveryTime);
      }
      if (InterruptFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ChannelInterruptFlags);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(ProcFlags);
      }
      if (ProcChance != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(ProcChance);
      }
      if (ProcCharges != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(ProcCharges);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(MaxLevel);
      }
      if (BaseLevel != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(BaseLevel);
      }
      if (SpellLevel != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(SpellLevel);
      }
      if (DurationIndex != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(DurationIndex);
      }
      if (PowerType != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(PowerType);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(ManaCost);
      }
      if (ManaCostPerLevel != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(ManaCostPerLevel);
      }
      if (ManaPerSecond != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(ManaPerSecond);
      }
      if (ManaPerSecondPerLevel != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(ManaPerSecondPerLevel);
      }
      if (RangeIndex != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(RangeIndex);
      }
      if (Speed != 0F) {
        output.WriteRawTag(181, 2);
        output.WriteFloat(Speed);
      }
      if (ModelNextSpell != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(ModelNextSpell);
      }
      if (StackAmount != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(StackAmount);
      }
      if (Totem1 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(Totem1);
      }
      if (Totem2 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(Totem2);
      }
      if (Reagent1 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(Reagent1);
      }
      if (Reagent2 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(Reagent2);
      }
      if (Reagent3 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(Reagent3);
      }
      if (Reagent4 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(Reagent4);
      }
      if (Reagent5 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(Reagent5);
      }
      if (Reagent6 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Reagent6);
      }
      if (Reagent7 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(Reagent7);
      }
      if (Reagent8 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(Reagent8);
      }
      if (ReagentCount1 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(ReagentCount1);
      }
      if (ReagentCount2 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(ReagentCount2);
      }
      if (ReagentCount3 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(ReagentCount3);
      }
      if (ReagentCount4 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(ReagentCount4);
      }
      if (ReagentCount5 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(ReagentCount5);
      }
      if (ReagentCount6 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(ReagentCount6);
      }
      if (ReagentCount7 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ReagentCount7);
      }
      if (ReagentCount8 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(ReagentCount8);
      }
      if (EquippedItemClass != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(EquippedItemClass);
      }
      if (EquippedItemSubClassMask != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(EquippedItemSubClassMask);
      }
      if (EquippedItemInventoryTypeMask != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(EquippedItemInventoryTypeMask);
      }
      if (Effect1 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(Effect1);
      }
      if (Effect2 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(Effect2);
      }
      if (Effect3 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(Effect3);
      }
      if (EffectDieSides1 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(EffectDieSides1);
      }
      if (EffectDieSides2 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(EffectDieSides2);
      }
      if (EffectDieSides3 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(EffectDieSides3);
      }
      if (EffectBaseDice1 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(EffectBaseDice1);
      }
      if (EffectBaseDice2 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(EffectBaseDice2);
      }
      if (EffectBaseDice3 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(EffectBaseDice3);
      }
      if (EffectDicePerLevel1 != 0F) {
        output.WriteRawTag(189, 4);
        output.WriteFloat(EffectDicePerLevel1);
      }
      if (EffectDicePerLevel2 != 0F) {
        output.WriteRawTag(197, 4);
        output.WriteFloat(EffectDicePerLevel2);
      }
      if (EffectDicePerLevel3 != 0F) {
        output.WriteRawTag(205, 4);
        output.WriteFloat(EffectDicePerLevel3);
      }
      if (EffectRealPointsPerLevel1 != 0F) {
        output.WriteRawTag(213, 4);
        output.WriteFloat(EffectRealPointsPerLevel1);
      }
      if (EffectRealPointsPerLevel2 != 0F) {
        output.WriteRawTag(221, 4);
        output.WriteFloat(EffectRealPointsPerLevel2);
      }
      if (EffectRealPointsPerLevel3 != 0F) {
        output.WriteRawTag(229, 4);
        output.WriteFloat(EffectRealPointsPerLevel3);
      }
      if (EffectBasePoints1 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(EffectBasePoints1);
      }
      if (EffectBasePoints2 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(EffectBasePoints2);
      }
      if (EffectBasePoints3 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(EffectBasePoints3);
      }
      if (EffectMechanic1 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(EffectMechanic1);
      }
      if (EffectMechanic2 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(EffectMechanic2);
      }
      if (EffectMechanic3 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(EffectMechanic3);
      }
      if (EffectImplicitTargetA1 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(EffectImplicitTargetA1);
      }
      if (EffectImplicitTargetA2 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(EffectImplicitTargetA2);
      }
      if (EffectImplicitTargetA3 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(EffectImplicitTargetA3);
      }
      if (EffectImplicitTargetB1 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(EffectImplicitTargetB1);
      }
      if (EffectImplicitTargetB2 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(EffectImplicitTargetB2);
      }
      if (EffectImplicitTargetB3 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(EffectImplicitTargetB3);
      }
      if (EffectRadiusIndex1 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(EffectRadiusIndex1);
      }
      if (EffectRadiusIndex2 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(EffectRadiusIndex2);
      }
      if (EffectRadiusIndex3 != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(EffectRadiusIndex3);
      }
      if (EffectApplyAuraName1 != 0) {
        output.WriteRawTag(224, 5);
        output.WriteUInt32(EffectApplyAuraName1);
      }
      if (EffectApplyAuraName2 != 0) {
        output.WriteRawTag(232, 5);
        output.WriteUInt32(EffectApplyAuraName2);
      }
      if (EffectApplyAuraName3 != 0) {
        output.WriteRawTag(240, 5);
        output.WriteUInt32(EffectApplyAuraName3);
      }
      if (EffectAmplitude1 != 0) {
        output.WriteRawTag(248, 5);
        output.WriteUInt32(EffectAmplitude1);
      }
      if (EffectAmplitude2 != 0) {
        output.WriteRawTag(128, 6);
        output.WriteUInt32(EffectAmplitude2);
      }
      if (EffectAmplitude3 != 0) {
        output.WriteRawTag(136, 6);
        output.WriteUInt32(EffectAmplitude3);
      }
      if (EffectMultipleValue1 != 0F) {
        output.WriteRawTag(149, 6);
        output.WriteFloat(EffectMultipleValue1);
      }
      if (EffectMultipleValue2 != 0F) {
        output.WriteRawTag(157, 6);
        output.WriteFloat(EffectMultipleValue2);
      }
      if (EffectMultipleValue3 != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(EffectMultipleValue3);
      }
      if (EffectChainTarget1 != 0) {
        output.WriteRawTag(168, 6);
        output.WriteUInt32(EffectChainTarget1);
      }
      if (EffectChainTarget2 != 0) {
        output.WriteRawTag(176, 6);
        output.WriteUInt32(EffectChainTarget2);
      }
      if (EffectChainTarget3 != 0) {
        output.WriteRawTag(184, 6);
        output.WriteUInt32(EffectChainTarget3);
      }
      if (EffectItemType1 != 0) {
        output.WriteRawTag(192, 6);
        output.WriteUInt32(EffectItemType1);
      }
      if (EffectItemType2 != 0) {
        output.WriteRawTag(200, 6);
        output.WriteUInt32(EffectItemType2);
      }
      if (EffectItemType3 != 0) {
        output.WriteRawTag(208, 6);
        output.WriteUInt32(EffectItemType3);
      }
      if (EffectMiscValue1 != 0) {
        output.WriteRawTag(216, 6);
        output.WriteInt32(EffectMiscValue1);
      }
      if (EffectMiscValue2 != 0) {
        output.WriteRawTag(224, 6);
        output.WriteInt32(EffectMiscValue2);
      }
      if (EffectMiscValue3 != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(EffectMiscValue3);
      }
      if (EffectTriggerSpell1 != 0) {
        output.WriteRawTag(240, 6);
        output.WriteUInt32(EffectTriggerSpell1);
      }
      if (EffectTriggerSpell2 != 0) {
        output.WriteRawTag(248, 6);
        output.WriteUInt32(EffectTriggerSpell2);
      }
      if (EffectTriggerSpell3 != 0) {
        output.WriteRawTag(128, 7);
        output.WriteUInt32(EffectTriggerSpell3);
      }
      if (EffectPointsPerComboPoint1 != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(EffectPointsPerComboPoint1);
      }
      if (EffectPointsPerComboPoint2 != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(EffectPointsPerComboPoint2);
      }
      if (EffectPointsPerComboPoint3 != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(EffectPointsPerComboPoint3);
      }
      if (SpellVisual1 != 0) {
        output.WriteRawTag(160, 7);
        output.WriteUInt32(SpellVisual1);
      }
      if (SpellVisual2 != 0) {
        output.WriteRawTag(168, 7);
        output.WriteUInt32(SpellVisual2);
      }
      if (SpellIconId != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(SpellIconId);
      }
      if (ActiveIconId != 0) {
        output.WriteRawTag(184, 7);
        output.WriteUInt32(ActiveIconId);
      }
      if (SpellPriority != 0) {
        output.WriteRawTag(192, 7);
        output.WriteUInt32(SpellPriority);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(Name1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(210, 7);
        output.WriteString(Name2);
      }
      if (Name3.Length != 0) {
        output.WriteRawTag(218, 7);
        output.WriteString(Name3);
      }
      if (Name4.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(Name4);
      }
      if (Name5.Length != 0) {
        output.WriteRawTag(234, 7);
        output.WriteString(Name5);
      }
      if (Name6.Length != 0) {
        output.WriteRawTag(242, 7);
        output.WriteString(Name6);
      }
      if (Name7.Length != 0) {
        output.WriteRawTag(250, 7);
        output.WriteString(Name7);
      }
      if (Name8.Length != 0) {
        output.WriteRawTag(130, 8);
        output.WriteString(Name8);
      }
      if (NameFlags != 0) {
        output.WriteRawTag(136, 8);
        output.WriteUInt32(NameFlags);
      }
      if (NameSubtext1.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(NameSubtext1);
      }
      if (NameSubtext2.Length != 0) {
        output.WriteRawTag(154, 8);
        output.WriteString(NameSubtext2);
      }
      if (NameSubtext3.Length != 0) {
        output.WriteRawTag(162, 8);
        output.WriteString(NameSubtext3);
      }
      if (NameSubtext4.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(NameSubtext4);
      }
      if (NameSubtext5.Length != 0) {
        output.WriteRawTag(178, 8);
        output.WriteString(NameSubtext5);
      }
      if (NameSubtext6.Length != 0) {
        output.WriteRawTag(186, 8);
        output.WriteString(NameSubtext6);
      }
      if (NameSubtext7.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(NameSubtext7);
      }
      if (NameSubtext8.Length != 0) {
        output.WriteRawTag(202, 8);
        output.WriteString(NameSubtext8);
      }
      if (NameSubtextFlags != 0) {
        output.WriteRawTag(208, 8);
        output.WriteUInt32(NameSubtextFlags);
      }
      if (Description1.Length != 0) {
        output.WriteRawTag(218, 8);
        output.WriteString(Description1);
      }
      if (Description2.Length != 0) {
        output.WriteRawTag(226, 8);
        output.WriteString(Description2);
      }
      if (Description3.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(Description3);
      }
      if (Description4.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(Description4);
      }
      if (Description5.Length != 0) {
        output.WriteRawTag(250, 8);
        output.WriteString(Description5);
      }
      if (Description6.Length != 0) {
        output.WriteRawTag(130, 9);
        output.WriteString(Description6);
      }
      if (Description7.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Description7);
      }
      if (Description8.Length != 0) {
        output.WriteRawTag(146, 9);
        output.WriteString(Description8);
      }
      if (DescriptionFlags != 0) {
        output.WriteRawTag(152, 9);
        output.WriteUInt32(DescriptionFlags);
      }
      if (AuraDescription1.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(AuraDescription1);
      }
      if (AuraDescription2.Length != 0) {
        output.WriteRawTag(170, 9);
        output.WriteString(AuraDescription2);
      }
      if (AuraDescription3.Length != 0) {
        output.WriteRawTag(178, 9);
        output.WriteString(AuraDescription3);
      }
      if (AuraDescription4.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(AuraDescription4);
      }
      if (AuraDescription5.Length != 0) {
        output.WriteRawTag(194, 9);
        output.WriteString(AuraDescription5);
      }
      if (AuraDescription6.Length != 0) {
        output.WriteRawTag(202, 9);
        output.WriteString(AuraDescription6);
      }
      if (AuraDescription7.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(AuraDescription7);
      }
      if (AuraDescription8.Length != 0) {
        output.WriteRawTag(218, 9);
        output.WriteString(AuraDescription8);
      }
      if (AuraDescriptionFlags != 0) {
        output.WriteRawTag(224, 9);
        output.WriteUInt32(AuraDescriptionFlags);
      }
      if (ManaCostPercentage != 0) {
        output.WriteRawTag(232, 9);
        output.WriteUInt32(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        output.WriteRawTag(240, 9);
        output.WriteUInt32(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        output.WriteRawTag(248, 9);
        output.WriteUInt32(StartRecoveryTime);
      }
      if (MaxTargetLevel != 0) {
        output.WriteRawTag(128, 10);
        output.WriteUInt32(MaxTargetLevel);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(136, 10);
        output.WriteUInt32(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        output.WriteRawTag(144, 10);
        output.WriteUInt64(SpellFamilyFlags);
      }
      if (MaxAffectedTargets != 0) {
        output.WriteRawTag(152, 10);
        output.WriteUInt32(MaxAffectedTargets);
      }
      if (DmgClass != 0) {
        output.WriteRawTag(160, 10);
        output.WriteUInt32(DmgClass);
      }
      if (PreventionType != 0) {
        output.WriteRawTag(168, 10);
        output.WriteUInt32(PreventionType);
      }
      if (StanceBarOrder != 0) {
        output.WriteRawTag(176, 10);
        output.WriteInt32(StanceBarOrder);
      }
      if (DmgMultiplier1 != 0F) {
        output.WriteRawTag(189, 10);
        output.WriteFloat(DmgMultiplier1);
      }
      if (DmgMultiplier2 != 0F) {
        output.WriteRawTag(197, 10);
        output.WriteFloat(DmgMultiplier2);
      }
      if (DmgMultiplier3 != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(DmgMultiplier3);
      }
      if (MinFactionId != 0) {
        output.WriteRawTag(208, 10);
        output.WriteUInt32(MinFactionId);
      }
      if (MinReputation != 0) {
        output.WriteRawTag(216, 10);
        output.WriteUInt32(MinReputation);
      }
      if (RequiredAuraVision != 0) {
        output.WriteRawTag(224, 10);
        output.WriteUInt32(RequiredAuraVision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (School != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(School);
      }
      if (Category != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Category);
      }
      if (CastUi != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CastUi);
      }
      if (Dispel != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Dispel);
      }
      if (Mechanic != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Mechanic);
      }
      if (Attributes != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Attributes);
      }
      if (AttributesEx != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(AttributesEx4);
      }
      if (Stances != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Stances);
      }
      if (StancesNot != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(StancesNot);
      }
      if (Targets != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Targets);
      }
      if (TargetCreatureType != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TargetCreatureType);
      }
      if (RequiresSpellFocus != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RequiresSpellFocus);
      }
      if (CasterAuraState != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(CasterAuraState);
      }
      if (TargetAuraState != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(TargetAuraState);
      }
      if (CastingTimeIndex != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CastingTimeIndex);
      }
      if (RecoveryTime != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(CategoryRecoveryTime);
      }
      if (InterruptFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(ChannelInterruptFlags);
      }
      if (ProcFlags != 0) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(ProcFlags);
      }
      if (ProcChance != 0) {
        output.WriteRawTag(208, 1);
        output.WriteUInt32(ProcChance);
      }
      if (ProcCharges != 0) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(ProcCharges);
      }
      if (MaxLevel != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(MaxLevel);
      }
      if (BaseLevel != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(BaseLevel);
      }
      if (SpellLevel != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(SpellLevel);
      }
      if (DurationIndex != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(DurationIndex);
      }
      if (PowerType != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(PowerType);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(ManaCost);
      }
      if (ManaCostPerLevel != 0) {
        output.WriteRawTag(144, 2);
        output.WriteUInt32(ManaCostPerLevel);
      }
      if (ManaPerSecond != 0) {
        output.WriteRawTag(152, 2);
        output.WriteUInt32(ManaPerSecond);
      }
      if (ManaPerSecondPerLevel != 0) {
        output.WriteRawTag(160, 2);
        output.WriteUInt32(ManaPerSecondPerLevel);
      }
      if (RangeIndex != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(RangeIndex);
      }
      if (Speed != 0F) {
        output.WriteRawTag(181, 2);
        output.WriteFloat(Speed);
      }
      if (ModelNextSpell != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(ModelNextSpell);
      }
      if (StackAmount != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(StackAmount);
      }
      if (Totem1 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(Totem1);
      }
      if (Totem2 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteUInt32(Totem2);
      }
      if (Reagent1 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteUInt32(Reagent1);
      }
      if (Reagent2 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteUInt32(Reagent2);
      }
      if (Reagent3 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteUInt32(Reagent3);
      }
      if (Reagent4 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteUInt32(Reagent4);
      }
      if (Reagent5 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteUInt32(Reagent5);
      }
      if (Reagent6 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteUInt32(Reagent6);
      }
      if (Reagent7 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteUInt32(Reagent7);
      }
      if (Reagent8 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteUInt32(Reagent8);
      }
      if (ReagentCount1 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteUInt32(ReagentCount1);
      }
      if (ReagentCount2 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteUInt32(ReagentCount2);
      }
      if (ReagentCount3 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteUInt32(ReagentCount3);
      }
      if (ReagentCount4 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteUInt32(ReagentCount4);
      }
      if (ReagentCount5 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteUInt32(ReagentCount5);
      }
      if (ReagentCount6 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteUInt32(ReagentCount6);
      }
      if (ReagentCount7 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteUInt32(ReagentCount7);
      }
      if (ReagentCount8 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteUInt32(ReagentCount8);
      }
      if (EquippedItemClass != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(EquippedItemClass);
      }
      if (EquippedItemSubClassMask != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(EquippedItemSubClassMask);
      }
      if (EquippedItemInventoryTypeMask != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(EquippedItemInventoryTypeMask);
      }
      if (Effect1 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteUInt32(Effect1);
      }
      if (Effect2 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteUInt32(Effect2);
      }
      if (Effect3 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteUInt32(Effect3);
      }
      if (EffectDieSides1 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(EffectDieSides1);
      }
      if (EffectDieSides2 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(EffectDieSides2);
      }
      if (EffectDieSides3 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(EffectDieSides3);
      }
      if (EffectBaseDice1 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(EffectBaseDice1);
      }
      if (EffectBaseDice2 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(EffectBaseDice2);
      }
      if (EffectBaseDice3 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(EffectBaseDice3);
      }
      if (EffectDicePerLevel1 != 0F) {
        output.WriteRawTag(189, 4);
        output.WriteFloat(EffectDicePerLevel1);
      }
      if (EffectDicePerLevel2 != 0F) {
        output.WriteRawTag(197, 4);
        output.WriteFloat(EffectDicePerLevel2);
      }
      if (EffectDicePerLevel3 != 0F) {
        output.WriteRawTag(205, 4);
        output.WriteFloat(EffectDicePerLevel3);
      }
      if (EffectRealPointsPerLevel1 != 0F) {
        output.WriteRawTag(213, 4);
        output.WriteFloat(EffectRealPointsPerLevel1);
      }
      if (EffectRealPointsPerLevel2 != 0F) {
        output.WriteRawTag(221, 4);
        output.WriteFloat(EffectRealPointsPerLevel2);
      }
      if (EffectRealPointsPerLevel3 != 0F) {
        output.WriteRawTag(229, 4);
        output.WriteFloat(EffectRealPointsPerLevel3);
      }
      if (EffectBasePoints1 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(EffectBasePoints1);
      }
      if (EffectBasePoints2 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(EffectBasePoints2);
      }
      if (EffectBasePoints3 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(EffectBasePoints3);
      }
      if (EffectMechanic1 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteUInt32(EffectMechanic1);
      }
      if (EffectMechanic2 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteUInt32(EffectMechanic2);
      }
      if (EffectMechanic3 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteUInt32(EffectMechanic3);
      }
      if (EffectImplicitTargetA1 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteUInt32(EffectImplicitTargetA1);
      }
      if (EffectImplicitTargetA2 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteUInt32(EffectImplicitTargetA2);
      }
      if (EffectImplicitTargetA3 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteUInt32(EffectImplicitTargetA3);
      }
      if (EffectImplicitTargetB1 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteUInt32(EffectImplicitTargetB1);
      }
      if (EffectImplicitTargetB2 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteUInt32(EffectImplicitTargetB2);
      }
      if (EffectImplicitTargetB3 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteUInt32(EffectImplicitTargetB3);
      }
      if (EffectRadiusIndex1 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteUInt32(EffectRadiusIndex1);
      }
      if (EffectRadiusIndex2 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteUInt32(EffectRadiusIndex2);
      }
      if (EffectRadiusIndex3 != 0) {
        output.WriteRawTag(216, 5);
        output.WriteUInt32(EffectRadiusIndex3);
      }
      if (EffectApplyAuraName1 != 0) {
        output.WriteRawTag(224, 5);
        output.WriteUInt32(EffectApplyAuraName1);
      }
      if (EffectApplyAuraName2 != 0) {
        output.WriteRawTag(232, 5);
        output.WriteUInt32(EffectApplyAuraName2);
      }
      if (EffectApplyAuraName3 != 0) {
        output.WriteRawTag(240, 5);
        output.WriteUInt32(EffectApplyAuraName3);
      }
      if (EffectAmplitude1 != 0) {
        output.WriteRawTag(248, 5);
        output.WriteUInt32(EffectAmplitude1);
      }
      if (EffectAmplitude2 != 0) {
        output.WriteRawTag(128, 6);
        output.WriteUInt32(EffectAmplitude2);
      }
      if (EffectAmplitude3 != 0) {
        output.WriteRawTag(136, 6);
        output.WriteUInt32(EffectAmplitude3);
      }
      if (EffectMultipleValue1 != 0F) {
        output.WriteRawTag(149, 6);
        output.WriteFloat(EffectMultipleValue1);
      }
      if (EffectMultipleValue2 != 0F) {
        output.WriteRawTag(157, 6);
        output.WriteFloat(EffectMultipleValue2);
      }
      if (EffectMultipleValue3 != 0F) {
        output.WriteRawTag(165, 6);
        output.WriteFloat(EffectMultipleValue3);
      }
      if (EffectChainTarget1 != 0) {
        output.WriteRawTag(168, 6);
        output.WriteUInt32(EffectChainTarget1);
      }
      if (EffectChainTarget2 != 0) {
        output.WriteRawTag(176, 6);
        output.WriteUInt32(EffectChainTarget2);
      }
      if (EffectChainTarget3 != 0) {
        output.WriteRawTag(184, 6);
        output.WriteUInt32(EffectChainTarget3);
      }
      if (EffectItemType1 != 0) {
        output.WriteRawTag(192, 6);
        output.WriteUInt32(EffectItemType1);
      }
      if (EffectItemType2 != 0) {
        output.WriteRawTag(200, 6);
        output.WriteUInt32(EffectItemType2);
      }
      if (EffectItemType3 != 0) {
        output.WriteRawTag(208, 6);
        output.WriteUInt32(EffectItemType3);
      }
      if (EffectMiscValue1 != 0) {
        output.WriteRawTag(216, 6);
        output.WriteInt32(EffectMiscValue1);
      }
      if (EffectMiscValue2 != 0) {
        output.WriteRawTag(224, 6);
        output.WriteInt32(EffectMiscValue2);
      }
      if (EffectMiscValue3 != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(EffectMiscValue3);
      }
      if (EffectTriggerSpell1 != 0) {
        output.WriteRawTag(240, 6);
        output.WriteUInt32(EffectTriggerSpell1);
      }
      if (EffectTriggerSpell2 != 0) {
        output.WriteRawTag(248, 6);
        output.WriteUInt32(EffectTriggerSpell2);
      }
      if (EffectTriggerSpell3 != 0) {
        output.WriteRawTag(128, 7);
        output.WriteUInt32(EffectTriggerSpell3);
      }
      if (EffectPointsPerComboPoint1 != 0F) {
        output.WriteRawTag(141, 7);
        output.WriteFloat(EffectPointsPerComboPoint1);
      }
      if (EffectPointsPerComboPoint2 != 0F) {
        output.WriteRawTag(149, 7);
        output.WriteFloat(EffectPointsPerComboPoint2);
      }
      if (EffectPointsPerComboPoint3 != 0F) {
        output.WriteRawTag(157, 7);
        output.WriteFloat(EffectPointsPerComboPoint3);
      }
      if (SpellVisual1 != 0) {
        output.WriteRawTag(160, 7);
        output.WriteUInt32(SpellVisual1);
      }
      if (SpellVisual2 != 0) {
        output.WriteRawTag(168, 7);
        output.WriteUInt32(SpellVisual2);
      }
      if (SpellIconId != 0) {
        output.WriteRawTag(176, 7);
        output.WriteUInt32(SpellIconId);
      }
      if (ActiveIconId != 0) {
        output.WriteRawTag(184, 7);
        output.WriteUInt32(ActiveIconId);
      }
      if (SpellPriority != 0) {
        output.WriteRawTag(192, 7);
        output.WriteUInt32(SpellPriority);
      }
      if (Name1.Length != 0) {
        output.WriteRawTag(202, 7);
        output.WriteString(Name1);
      }
      if (Name2.Length != 0) {
        output.WriteRawTag(210, 7);
        output.WriteString(Name2);
      }
      if (Name3.Length != 0) {
        output.WriteRawTag(218, 7);
        output.WriteString(Name3);
      }
      if (Name4.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(Name4);
      }
      if (Name5.Length != 0) {
        output.WriteRawTag(234, 7);
        output.WriteString(Name5);
      }
      if (Name6.Length != 0) {
        output.WriteRawTag(242, 7);
        output.WriteString(Name6);
      }
      if (Name7.Length != 0) {
        output.WriteRawTag(250, 7);
        output.WriteString(Name7);
      }
      if (Name8.Length != 0) {
        output.WriteRawTag(130, 8);
        output.WriteString(Name8);
      }
      if (NameFlags != 0) {
        output.WriteRawTag(136, 8);
        output.WriteUInt32(NameFlags);
      }
      if (NameSubtext1.Length != 0) {
        output.WriteRawTag(146, 8);
        output.WriteString(NameSubtext1);
      }
      if (NameSubtext2.Length != 0) {
        output.WriteRawTag(154, 8);
        output.WriteString(NameSubtext2);
      }
      if (NameSubtext3.Length != 0) {
        output.WriteRawTag(162, 8);
        output.WriteString(NameSubtext3);
      }
      if (NameSubtext4.Length != 0) {
        output.WriteRawTag(170, 8);
        output.WriteString(NameSubtext4);
      }
      if (NameSubtext5.Length != 0) {
        output.WriteRawTag(178, 8);
        output.WriteString(NameSubtext5);
      }
      if (NameSubtext6.Length != 0) {
        output.WriteRawTag(186, 8);
        output.WriteString(NameSubtext6);
      }
      if (NameSubtext7.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(NameSubtext7);
      }
      if (NameSubtext8.Length != 0) {
        output.WriteRawTag(202, 8);
        output.WriteString(NameSubtext8);
      }
      if (NameSubtextFlags != 0) {
        output.WriteRawTag(208, 8);
        output.WriteUInt32(NameSubtextFlags);
      }
      if (Description1.Length != 0) {
        output.WriteRawTag(218, 8);
        output.WriteString(Description1);
      }
      if (Description2.Length != 0) {
        output.WriteRawTag(226, 8);
        output.WriteString(Description2);
      }
      if (Description3.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(Description3);
      }
      if (Description4.Length != 0) {
        output.WriteRawTag(242, 8);
        output.WriteString(Description4);
      }
      if (Description5.Length != 0) {
        output.WriteRawTag(250, 8);
        output.WriteString(Description5);
      }
      if (Description6.Length != 0) {
        output.WriteRawTag(130, 9);
        output.WriteString(Description6);
      }
      if (Description7.Length != 0) {
        output.WriteRawTag(138, 9);
        output.WriteString(Description7);
      }
      if (Description8.Length != 0) {
        output.WriteRawTag(146, 9);
        output.WriteString(Description8);
      }
      if (DescriptionFlags != 0) {
        output.WriteRawTag(152, 9);
        output.WriteUInt32(DescriptionFlags);
      }
      if (AuraDescription1.Length != 0) {
        output.WriteRawTag(162, 9);
        output.WriteString(AuraDescription1);
      }
      if (AuraDescription2.Length != 0) {
        output.WriteRawTag(170, 9);
        output.WriteString(AuraDescription2);
      }
      if (AuraDescription3.Length != 0) {
        output.WriteRawTag(178, 9);
        output.WriteString(AuraDescription3);
      }
      if (AuraDescription4.Length != 0) {
        output.WriteRawTag(186, 9);
        output.WriteString(AuraDescription4);
      }
      if (AuraDescription5.Length != 0) {
        output.WriteRawTag(194, 9);
        output.WriteString(AuraDescription5);
      }
      if (AuraDescription6.Length != 0) {
        output.WriteRawTag(202, 9);
        output.WriteString(AuraDescription6);
      }
      if (AuraDescription7.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(AuraDescription7);
      }
      if (AuraDescription8.Length != 0) {
        output.WriteRawTag(218, 9);
        output.WriteString(AuraDescription8);
      }
      if (AuraDescriptionFlags != 0) {
        output.WriteRawTag(224, 9);
        output.WriteUInt32(AuraDescriptionFlags);
      }
      if (ManaCostPercentage != 0) {
        output.WriteRawTag(232, 9);
        output.WriteUInt32(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        output.WriteRawTag(240, 9);
        output.WriteUInt32(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        output.WriteRawTag(248, 9);
        output.WriteUInt32(StartRecoveryTime);
      }
      if (MaxTargetLevel != 0) {
        output.WriteRawTag(128, 10);
        output.WriteUInt32(MaxTargetLevel);
      }
      if (SpellFamilyName != 0) {
        output.WriteRawTag(136, 10);
        output.WriteUInt32(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        output.WriteRawTag(144, 10);
        output.WriteUInt64(SpellFamilyFlags);
      }
      if (MaxAffectedTargets != 0) {
        output.WriteRawTag(152, 10);
        output.WriteUInt32(MaxAffectedTargets);
      }
      if (DmgClass != 0) {
        output.WriteRawTag(160, 10);
        output.WriteUInt32(DmgClass);
      }
      if (PreventionType != 0) {
        output.WriteRawTag(168, 10);
        output.WriteUInt32(PreventionType);
      }
      if (StanceBarOrder != 0) {
        output.WriteRawTag(176, 10);
        output.WriteInt32(StanceBarOrder);
      }
      if (DmgMultiplier1 != 0F) {
        output.WriteRawTag(189, 10);
        output.WriteFloat(DmgMultiplier1);
      }
      if (DmgMultiplier2 != 0F) {
        output.WriteRawTag(197, 10);
        output.WriteFloat(DmgMultiplier2);
      }
      if (DmgMultiplier3 != 0F) {
        output.WriteRawTag(205, 10);
        output.WriteFloat(DmgMultiplier3);
      }
      if (MinFactionId != 0) {
        output.WriteRawTag(208, 10);
        output.WriteUInt32(MinFactionId);
      }
      if (MinReputation != 0) {
        output.WriteRawTag(216, 10);
        output.WriteUInt32(MinReputation);
      }
      if (RequiredAuraVision != 0) {
        output.WriteRawTag(224, 10);
        output.WriteUInt32(RequiredAuraVision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (School != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(School);
      }
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Category);
      }
      if (CastUi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CastUi);
      }
      if (Dispel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dispel);
      }
      if (Mechanic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mechanic);
      }
      if (Attributes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Attributes);
      }
      if (AttributesEx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttributesEx);
      }
      if (AttributesEx2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttributesEx2);
      }
      if (AttributesEx3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttributesEx3);
      }
      if (AttributesEx4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttributesEx4);
      }
      if (Stances != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stances);
      }
      if (StancesNot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StancesNot);
      }
      if (Targets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Targets);
      }
      if (TargetCreatureType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetCreatureType);
      }
      if (RequiresSpellFocus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiresSpellFocus);
      }
      if (CasterAuraState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CasterAuraState);
      }
      if (TargetAuraState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TargetAuraState);
      }
      if (CastingTimeIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CastingTimeIndex);
      }
      if (RecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RecoveryTime);
      }
      if (CategoryRecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CategoryRecoveryTime);
      }
      if (InterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(InterruptFlags);
      }
      if (AuraInterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AuraInterruptFlags);
      }
      if (ChannelInterruptFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ChannelInterruptFlags);
      }
      if (ProcFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ProcFlags);
      }
      if (ProcChance != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ProcChance);
      }
      if (ProcCharges != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ProcCharges);
      }
      if (MaxLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxLevel);
      }
      if (BaseLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BaseLevel);
      }
      if (SpellLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellLevel);
      }
      if (DurationIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DurationIndex);
      }
      if (PowerType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PowerType);
      }
      if (ManaCost != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ManaCost);
      }
      if (ManaCostPerLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ManaCostPerLevel);
      }
      if (ManaPerSecond != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ManaPerSecond);
      }
      if (ManaPerSecondPerLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ManaPerSecondPerLevel);
      }
      if (RangeIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RangeIndex);
      }
      if (Speed != 0F) {
        size += 2 + 4;
      }
      if (ModelNextSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ModelNextSpell);
      }
      if (StackAmount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StackAmount);
      }
      if (Totem1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Totem1);
      }
      if (Totem2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Totem2);
      }
      if (Reagent1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent1);
      }
      if (Reagent2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent2);
      }
      if (Reagent3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent3);
      }
      if (Reagent4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent4);
      }
      if (Reagent5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent5);
      }
      if (Reagent6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent6);
      }
      if (Reagent7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent7);
      }
      if (Reagent8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reagent8);
      }
      if (ReagentCount1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount1);
      }
      if (ReagentCount2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount2);
      }
      if (ReagentCount3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount3);
      }
      if (ReagentCount4 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount4);
      }
      if (ReagentCount5 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount5);
      }
      if (ReagentCount6 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount6);
      }
      if (ReagentCount7 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount7);
      }
      if (ReagentCount8 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ReagentCount8);
      }
      if (EquippedItemClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EquippedItemClass);
      }
      if (EquippedItemSubClassMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EquippedItemSubClassMask);
      }
      if (EquippedItemInventoryTypeMask != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EquippedItemInventoryTypeMask);
      }
      if (Effect1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Effect1);
      }
      if (Effect2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Effect2);
      }
      if (Effect3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Effect3);
      }
      if (EffectDieSides1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectDieSides1);
      }
      if (EffectDieSides2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectDieSides2);
      }
      if (EffectDieSides3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectDieSides3);
      }
      if (EffectBaseDice1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBaseDice1);
      }
      if (EffectBaseDice2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBaseDice2);
      }
      if (EffectBaseDice3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBaseDice3);
      }
      if (EffectDicePerLevel1 != 0F) {
        size += 2 + 4;
      }
      if (EffectDicePerLevel2 != 0F) {
        size += 2 + 4;
      }
      if (EffectDicePerLevel3 != 0F) {
        size += 2 + 4;
      }
      if (EffectRealPointsPerLevel1 != 0F) {
        size += 2 + 4;
      }
      if (EffectRealPointsPerLevel2 != 0F) {
        size += 2 + 4;
      }
      if (EffectRealPointsPerLevel3 != 0F) {
        size += 2 + 4;
      }
      if (EffectBasePoints1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBasePoints1);
      }
      if (EffectBasePoints2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBasePoints2);
      }
      if (EffectBasePoints3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectBasePoints3);
      }
      if (EffectMechanic1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectMechanic1);
      }
      if (EffectMechanic2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectMechanic2);
      }
      if (EffectMechanic3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectMechanic3);
      }
      if (EffectImplicitTargetA1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetA1);
      }
      if (EffectImplicitTargetA2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetA2);
      }
      if (EffectImplicitTargetA3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetA3);
      }
      if (EffectImplicitTargetB1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetB1);
      }
      if (EffectImplicitTargetB2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetB2);
      }
      if (EffectImplicitTargetB3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectImplicitTargetB3);
      }
      if (EffectRadiusIndex1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectRadiusIndex1);
      }
      if (EffectRadiusIndex2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectRadiusIndex2);
      }
      if (EffectRadiusIndex3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectRadiusIndex3);
      }
      if (EffectApplyAuraName1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectApplyAuraName1);
      }
      if (EffectApplyAuraName2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectApplyAuraName2);
      }
      if (EffectApplyAuraName3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectApplyAuraName3);
      }
      if (EffectAmplitude1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectAmplitude1);
      }
      if (EffectAmplitude2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectAmplitude2);
      }
      if (EffectAmplitude3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectAmplitude3);
      }
      if (EffectMultipleValue1 != 0F) {
        size += 2 + 4;
      }
      if (EffectMultipleValue2 != 0F) {
        size += 2 + 4;
      }
      if (EffectMultipleValue3 != 0F) {
        size += 2 + 4;
      }
      if (EffectChainTarget1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectChainTarget1);
      }
      if (EffectChainTarget2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectChainTarget2);
      }
      if (EffectChainTarget3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectChainTarget3);
      }
      if (EffectItemType1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectItemType1);
      }
      if (EffectItemType2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectItemType2);
      }
      if (EffectItemType3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectItemType3);
      }
      if (EffectMiscValue1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectMiscValue1);
      }
      if (EffectMiscValue2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectMiscValue2);
      }
      if (EffectMiscValue3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EffectMiscValue3);
      }
      if (EffectTriggerSpell1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectTriggerSpell1);
      }
      if (EffectTriggerSpell2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectTriggerSpell2);
      }
      if (EffectTriggerSpell3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EffectTriggerSpell3);
      }
      if (EffectPointsPerComboPoint1 != 0F) {
        size += 2 + 4;
      }
      if (EffectPointsPerComboPoint2 != 0F) {
        size += 2 + 4;
      }
      if (EffectPointsPerComboPoint3 != 0F) {
        size += 2 + 4;
      }
      if (SpellVisual1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellVisual1);
      }
      if (SpellVisual2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellVisual2);
      }
      if (SpellIconId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellIconId);
      }
      if (ActiveIconId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ActiveIconId);
      }
      if (SpellPriority != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellPriority);
      }
      if (Name1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name1);
      }
      if (Name2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name2);
      }
      if (Name3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name3);
      }
      if (Name4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name4);
      }
      if (Name5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name5);
      }
      if (Name6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name6);
      }
      if (Name7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name7);
      }
      if (Name8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name8);
      }
      if (NameFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NameFlags);
      }
      if (NameSubtext1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext1);
      }
      if (NameSubtext2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext2);
      }
      if (NameSubtext3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext3);
      }
      if (NameSubtext4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext4);
      }
      if (NameSubtext5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext5);
      }
      if (NameSubtext6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext6);
      }
      if (NameSubtext7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext7);
      }
      if (NameSubtext8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NameSubtext8);
      }
      if (NameSubtextFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NameSubtextFlags);
      }
      if (Description1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description1);
      }
      if (Description2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description2);
      }
      if (Description3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description3);
      }
      if (Description4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description4);
      }
      if (Description5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description5);
      }
      if (Description6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description6);
      }
      if (Description7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description7);
      }
      if (Description8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description8);
      }
      if (DescriptionFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DescriptionFlags);
      }
      if (AuraDescription1.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription1);
      }
      if (AuraDescription2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription2);
      }
      if (AuraDescription3.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription3);
      }
      if (AuraDescription4.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription4);
      }
      if (AuraDescription5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription5);
      }
      if (AuraDescription6.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription6);
      }
      if (AuraDescription7.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription7);
      }
      if (AuraDescription8.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AuraDescription8);
      }
      if (AuraDescriptionFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AuraDescriptionFlags);
      }
      if (ManaCostPercentage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ManaCostPercentage);
      }
      if (StartRecoveryCategory != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StartRecoveryCategory);
      }
      if (StartRecoveryTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(StartRecoveryTime);
      }
      if (MaxTargetLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxTargetLevel);
      }
      if (SpellFamilyName != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SpellFamilyName);
      }
      if (SpellFamilyFlags != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(SpellFamilyFlags);
      }
      if (MaxAffectedTargets != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxAffectedTargets);
      }
      if (DmgClass != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DmgClass);
      }
      if (PreventionType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PreventionType);
      }
      if (StanceBarOrder != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(StanceBarOrder);
      }
      if (DmgMultiplier1 != 0F) {
        size += 2 + 4;
      }
      if (DmgMultiplier2 != 0F) {
        size += 2 + 4;
      }
      if (DmgMultiplier3 != 0F) {
        size += 2 + 4;
      }
      if (MinFactionId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MinFactionId);
      }
      if (MinReputation != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MinReputation);
      }
      if (RequiredAuraVision != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RequiredAuraVision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.School != 0) {
        School = other.School;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      if (other.CastUi != 0) {
        CastUi = other.CastUi;
      }
      if (other.Dispel != 0) {
        Dispel = other.Dispel;
      }
      if (other.Mechanic != 0) {
        Mechanic = other.Mechanic;
      }
      if (other.Attributes != 0UL) {
        Attributes = other.Attributes;
      }
      if (other.AttributesEx != 0) {
        AttributesEx = other.AttributesEx;
      }
      if (other.AttributesEx2 != 0) {
        AttributesEx2 = other.AttributesEx2;
      }
      if (other.AttributesEx3 != 0) {
        AttributesEx3 = other.AttributesEx3;
      }
      if (other.AttributesEx4 != 0) {
        AttributesEx4 = other.AttributesEx4;
      }
      if (other.Stances != 0) {
        Stances = other.Stances;
      }
      if (other.StancesNot != 0) {
        StancesNot = other.StancesNot;
      }
      if (other.Targets != 0) {
        Targets = other.Targets;
      }
      if (other.TargetCreatureType != 0) {
        TargetCreatureType = other.TargetCreatureType;
      }
      if (other.RequiresSpellFocus != 0) {
        RequiresSpellFocus = other.RequiresSpellFocus;
      }
      if (other.CasterAuraState != 0) {
        CasterAuraState = other.CasterAuraState;
      }
      if (other.TargetAuraState != 0) {
        TargetAuraState = other.TargetAuraState;
      }
      if (other.CastingTimeIndex != 0) {
        CastingTimeIndex = other.CastingTimeIndex;
      }
      if (other.RecoveryTime != 0) {
        RecoveryTime = other.RecoveryTime;
      }
      if (other.CategoryRecoveryTime != 0) {
        CategoryRecoveryTime = other.CategoryRecoveryTime;
      }
      if (other.InterruptFlags != 0) {
        InterruptFlags = other.InterruptFlags;
      }
      if (other.AuraInterruptFlags != 0) {
        AuraInterruptFlags = other.AuraInterruptFlags;
      }
      if (other.ChannelInterruptFlags != 0) {
        ChannelInterruptFlags = other.ChannelInterruptFlags;
      }
      if (other.ProcFlags != 0) {
        ProcFlags = other.ProcFlags;
      }
      if (other.ProcChance != 0) {
        ProcChance = other.ProcChance;
      }
      if (other.ProcCharges != 0) {
        ProcCharges = other.ProcCharges;
      }
      if (other.MaxLevel != 0) {
        MaxLevel = other.MaxLevel;
      }
      if (other.BaseLevel != 0) {
        BaseLevel = other.BaseLevel;
      }
      if (other.SpellLevel != 0) {
        SpellLevel = other.SpellLevel;
      }
      if (other.DurationIndex != 0) {
        DurationIndex = other.DurationIndex;
      }
      if (other.PowerType != 0) {
        PowerType = other.PowerType;
      }
      if (other.ManaCost != 0) {
        ManaCost = other.ManaCost;
      }
      if (other.ManaCostPerLevel != 0) {
        ManaCostPerLevel = other.ManaCostPerLevel;
      }
      if (other.ManaPerSecond != 0) {
        ManaPerSecond = other.ManaPerSecond;
      }
      if (other.ManaPerSecondPerLevel != 0) {
        ManaPerSecondPerLevel = other.ManaPerSecondPerLevel;
      }
      if (other.RangeIndex != 0) {
        RangeIndex = other.RangeIndex;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.ModelNextSpell != 0) {
        ModelNextSpell = other.ModelNextSpell;
      }
      if (other.StackAmount != 0) {
        StackAmount = other.StackAmount;
      }
      if (other.Totem1 != 0) {
        Totem1 = other.Totem1;
      }
      if (other.Totem2 != 0) {
        Totem2 = other.Totem2;
      }
      if (other.Reagent1 != 0) {
        Reagent1 = other.Reagent1;
      }
      if (other.Reagent2 != 0) {
        Reagent2 = other.Reagent2;
      }
      if (other.Reagent3 != 0) {
        Reagent3 = other.Reagent3;
      }
      if (other.Reagent4 != 0) {
        Reagent4 = other.Reagent4;
      }
      if (other.Reagent5 != 0) {
        Reagent5 = other.Reagent5;
      }
      if (other.Reagent6 != 0) {
        Reagent6 = other.Reagent6;
      }
      if (other.Reagent7 != 0) {
        Reagent7 = other.Reagent7;
      }
      if (other.Reagent8 != 0) {
        Reagent8 = other.Reagent8;
      }
      if (other.ReagentCount1 != 0) {
        ReagentCount1 = other.ReagentCount1;
      }
      if (other.ReagentCount2 != 0) {
        ReagentCount2 = other.ReagentCount2;
      }
      if (other.ReagentCount3 != 0) {
        ReagentCount3 = other.ReagentCount3;
      }
      if (other.ReagentCount4 != 0) {
        ReagentCount4 = other.ReagentCount4;
      }
      if (other.ReagentCount5 != 0) {
        ReagentCount5 = other.ReagentCount5;
      }
      if (other.ReagentCount6 != 0) {
        ReagentCount6 = other.ReagentCount6;
      }
      if (other.ReagentCount7 != 0) {
        ReagentCount7 = other.ReagentCount7;
      }
      if (other.ReagentCount8 != 0) {
        ReagentCount8 = other.ReagentCount8;
      }
      if (other.EquippedItemClass != 0) {
        EquippedItemClass = other.EquippedItemClass;
      }
      if (other.EquippedItemSubClassMask != 0) {
        EquippedItemSubClassMask = other.EquippedItemSubClassMask;
      }
      if (other.EquippedItemInventoryTypeMask != 0) {
        EquippedItemInventoryTypeMask = other.EquippedItemInventoryTypeMask;
      }
      if (other.Effect1 != 0) {
        Effect1 = other.Effect1;
      }
      if (other.Effect2 != 0) {
        Effect2 = other.Effect2;
      }
      if (other.Effect3 != 0) {
        Effect3 = other.Effect3;
      }
      if (other.EffectDieSides1 != 0) {
        EffectDieSides1 = other.EffectDieSides1;
      }
      if (other.EffectDieSides2 != 0) {
        EffectDieSides2 = other.EffectDieSides2;
      }
      if (other.EffectDieSides3 != 0) {
        EffectDieSides3 = other.EffectDieSides3;
      }
      if (other.EffectBaseDice1 != 0) {
        EffectBaseDice1 = other.EffectBaseDice1;
      }
      if (other.EffectBaseDice2 != 0) {
        EffectBaseDice2 = other.EffectBaseDice2;
      }
      if (other.EffectBaseDice3 != 0) {
        EffectBaseDice3 = other.EffectBaseDice3;
      }
      if (other.EffectDicePerLevel1 != 0F) {
        EffectDicePerLevel1 = other.EffectDicePerLevel1;
      }
      if (other.EffectDicePerLevel2 != 0F) {
        EffectDicePerLevel2 = other.EffectDicePerLevel2;
      }
      if (other.EffectDicePerLevel3 != 0F) {
        EffectDicePerLevel3 = other.EffectDicePerLevel3;
      }
      if (other.EffectRealPointsPerLevel1 != 0F) {
        EffectRealPointsPerLevel1 = other.EffectRealPointsPerLevel1;
      }
      if (other.EffectRealPointsPerLevel2 != 0F) {
        EffectRealPointsPerLevel2 = other.EffectRealPointsPerLevel2;
      }
      if (other.EffectRealPointsPerLevel3 != 0F) {
        EffectRealPointsPerLevel3 = other.EffectRealPointsPerLevel3;
      }
      if (other.EffectBasePoints1 != 0) {
        EffectBasePoints1 = other.EffectBasePoints1;
      }
      if (other.EffectBasePoints2 != 0) {
        EffectBasePoints2 = other.EffectBasePoints2;
      }
      if (other.EffectBasePoints3 != 0) {
        EffectBasePoints3 = other.EffectBasePoints3;
      }
      if (other.EffectMechanic1 != 0) {
        EffectMechanic1 = other.EffectMechanic1;
      }
      if (other.EffectMechanic2 != 0) {
        EffectMechanic2 = other.EffectMechanic2;
      }
      if (other.EffectMechanic3 != 0) {
        EffectMechanic3 = other.EffectMechanic3;
      }
      if (other.EffectImplicitTargetA1 != 0) {
        EffectImplicitTargetA1 = other.EffectImplicitTargetA1;
      }
      if (other.EffectImplicitTargetA2 != 0) {
        EffectImplicitTargetA2 = other.EffectImplicitTargetA2;
      }
      if (other.EffectImplicitTargetA3 != 0) {
        EffectImplicitTargetA3 = other.EffectImplicitTargetA3;
      }
      if (other.EffectImplicitTargetB1 != 0) {
        EffectImplicitTargetB1 = other.EffectImplicitTargetB1;
      }
      if (other.EffectImplicitTargetB2 != 0) {
        EffectImplicitTargetB2 = other.EffectImplicitTargetB2;
      }
      if (other.EffectImplicitTargetB3 != 0) {
        EffectImplicitTargetB3 = other.EffectImplicitTargetB3;
      }
      if (other.EffectRadiusIndex1 != 0) {
        EffectRadiusIndex1 = other.EffectRadiusIndex1;
      }
      if (other.EffectRadiusIndex2 != 0) {
        EffectRadiusIndex2 = other.EffectRadiusIndex2;
      }
      if (other.EffectRadiusIndex3 != 0) {
        EffectRadiusIndex3 = other.EffectRadiusIndex3;
      }
      if (other.EffectApplyAuraName1 != 0) {
        EffectApplyAuraName1 = other.EffectApplyAuraName1;
      }
      if (other.EffectApplyAuraName2 != 0) {
        EffectApplyAuraName2 = other.EffectApplyAuraName2;
      }
      if (other.EffectApplyAuraName3 != 0) {
        EffectApplyAuraName3 = other.EffectApplyAuraName3;
      }
      if (other.EffectAmplitude1 != 0) {
        EffectAmplitude1 = other.EffectAmplitude1;
      }
      if (other.EffectAmplitude2 != 0) {
        EffectAmplitude2 = other.EffectAmplitude2;
      }
      if (other.EffectAmplitude3 != 0) {
        EffectAmplitude3 = other.EffectAmplitude3;
      }
      if (other.EffectMultipleValue1 != 0F) {
        EffectMultipleValue1 = other.EffectMultipleValue1;
      }
      if (other.EffectMultipleValue2 != 0F) {
        EffectMultipleValue2 = other.EffectMultipleValue2;
      }
      if (other.EffectMultipleValue3 != 0F) {
        EffectMultipleValue3 = other.EffectMultipleValue3;
      }
      if (other.EffectChainTarget1 != 0) {
        EffectChainTarget1 = other.EffectChainTarget1;
      }
      if (other.EffectChainTarget2 != 0) {
        EffectChainTarget2 = other.EffectChainTarget2;
      }
      if (other.EffectChainTarget3 != 0) {
        EffectChainTarget3 = other.EffectChainTarget3;
      }
      if (other.EffectItemType1 != 0) {
        EffectItemType1 = other.EffectItemType1;
      }
      if (other.EffectItemType2 != 0) {
        EffectItemType2 = other.EffectItemType2;
      }
      if (other.EffectItemType3 != 0) {
        EffectItemType3 = other.EffectItemType3;
      }
      if (other.EffectMiscValue1 != 0) {
        EffectMiscValue1 = other.EffectMiscValue1;
      }
      if (other.EffectMiscValue2 != 0) {
        EffectMiscValue2 = other.EffectMiscValue2;
      }
      if (other.EffectMiscValue3 != 0) {
        EffectMiscValue3 = other.EffectMiscValue3;
      }
      if (other.EffectTriggerSpell1 != 0) {
        EffectTriggerSpell1 = other.EffectTriggerSpell1;
      }
      if (other.EffectTriggerSpell2 != 0) {
        EffectTriggerSpell2 = other.EffectTriggerSpell2;
      }
      if (other.EffectTriggerSpell3 != 0) {
        EffectTriggerSpell3 = other.EffectTriggerSpell3;
      }
      if (other.EffectPointsPerComboPoint1 != 0F) {
        EffectPointsPerComboPoint1 = other.EffectPointsPerComboPoint1;
      }
      if (other.EffectPointsPerComboPoint2 != 0F) {
        EffectPointsPerComboPoint2 = other.EffectPointsPerComboPoint2;
      }
      if (other.EffectPointsPerComboPoint3 != 0F) {
        EffectPointsPerComboPoint3 = other.EffectPointsPerComboPoint3;
      }
      if (other.SpellVisual1 != 0) {
        SpellVisual1 = other.SpellVisual1;
      }
      if (other.SpellVisual2 != 0) {
        SpellVisual2 = other.SpellVisual2;
      }
      if (other.SpellIconId != 0) {
        SpellIconId = other.SpellIconId;
      }
      if (other.ActiveIconId != 0) {
        ActiveIconId = other.ActiveIconId;
      }
      if (other.SpellPriority != 0) {
        SpellPriority = other.SpellPriority;
      }
      if (other.Name1.Length != 0) {
        Name1 = other.Name1;
      }
      if (other.Name2.Length != 0) {
        Name2 = other.Name2;
      }
      if (other.Name3.Length != 0) {
        Name3 = other.Name3;
      }
      if (other.Name4.Length != 0) {
        Name4 = other.Name4;
      }
      if (other.Name5.Length != 0) {
        Name5 = other.Name5;
      }
      if (other.Name6.Length != 0) {
        Name6 = other.Name6;
      }
      if (other.Name7.Length != 0) {
        Name7 = other.Name7;
      }
      if (other.Name8.Length != 0) {
        Name8 = other.Name8;
      }
      if (other.NameFlags != 0) {
        NameFlags = other.NameFlags;
      }
      if (other.NameSubtext1.Length != 0) {
        NameSubtext1 = other.NameSubtext1;
      }
      if (other.NameSubtext2.Length != 0) {
        NameSubtext2 = other.NameSubtext2;
      }
      if (other.NameSubtext3.Length != 0) {
        NameSubtext3 = other.NameSubtext3;
      }
      if (other.NameSubtext4.Length != 0) {
        NameSubtext4 = other.NameSubtext4;
      }
      if (other.NameSubtext5.Length != 0) {
        NameSubtext5 = other.NameSubtext5;
      }
      if (other.NameSubtext6.Length != 0) {
        NameSubtext6 = other.NameSubtext6;
      }
      if (other.NameSubtext7.Length != 0) {
        NameSubtext7 = other.NameSubtext7;
      }
      if (other.NameSubtext8.Length != 0) {
        NameSubtext8 = other.NameSubtext8;
      }
      if (other.NameSubtextFlags != 0) {
        NameSubtextFlags = other.NameSubtextFlags;
      }
      if (other.Description1.Length != 0) {
        Description1 = other.Description1;
      }
      if (other.Description2.Length != 0) {
        Description2 = other.Description2;
      }
      if (other.Description3.Length != 0) {
        Description3 = other.Description3;
      }
      if (other.Description4.Length != 0) {
        Description4 = other.Description4;
      }
      if (other.Description5.Length != 0) {
        Description5 = other.Description5;
      }
      if (other.Description6.Length != 0) {
        Description6 = other.Description6;
      }
      if (other.Description7.Length != 0) {
        Description7 = other.Description7;
      }
      if (other.Description8.Length != 0) {
        Description8 = other.Description8;
      }
      if (other.DescriptionFlags != 0) {
        DescriptionFlags = other.DescriptionFlags;
      }
      if (other.AuraDescription1.Length != 0) {
        AuraDescription1 = other.AuraDescription1;
      }
      if (other.AuraDescription2.Length != 0) {
        AuraDescription2 = other.AuraDescription2;
      }
      if (other.AuraDescription3.Length != 0) {
        AuraDescription3 = other.AuraDescription3;
      }
      if (other.AuraDescription4.Length != 0) {
        AuraDescription4 = other.AuraDescription4;
      }
      if (other.AuraDescription5.Length != 0) {
        AuraDescription5 = other.AuraDescription5;
      }
      if (other.AuraDescription6.Length != 0) {
        AuraDescription6 = other.AuraDescription6;
      }
      if (other.AuraDescription7.Length != 0) {
        AuraDescription7 = other.AuraDescription7;
      }
      if (other.AuraDescription8.Length != 0) {
        AuraDescription8 = other.AuraDescription8;
      }
      if (other.AuraDescriptionFlags != 0) {
        AuraDescriptionFlags = other.AuraDescriptionFlags;
      }
      if (other.ManaCostPercentage != 0) {
        ManaCostPercentage = other.ManaCostPercentage;
      }
      if (other.StartRecoveryCategory != 0) {
        StartRecoveryCategory = other.StartRecoveryCategory;
      }
      if (other.StartRecoveryTime != 0) {
        StartRecoveryTime = other.StartRecoveryTime;
      }
      if (other.MaxTargetLevel != 0) {
        MaxTargetLevel = other.MaxTargetLevel;
      }
      if (other.SpellFamilyName != 0) {
        SpellFamilyName = other.SpellFamilyName;
      }
      if (other.SpellFamilyFlags != 0UL) {
        SpellFamilyFlags = other.SpellFamilyFlags;
      }
      if (other.MaxAffectedTargets != 0) {
        MaxAffectedTargets = other.MaxAffectedTargets;
      }
      if (other.DmgClass != 0) {
        DmgClass = other.DmgClass;
      }
      if (other.PreventionType != 0) {
        PreventionType = other.PreventionType;
      }
      if (other.StanceBarOrder != 0) {
        StanceBarOrder = other.StanceBarOrder;
      }
      if (other.DmgMultiplier1 != 0F) {
        DmgMultiplier1 = other.DmgMultiplier1;
      }
      if (other.DmgMultiplier2 != 0F) {
        DmgMultiplier2 = other.DmgMultiplier2;
      }
      if (other.DmgMultiplier3 != 0F) {
        DmgMultiplier3 = other.DmgMultiplier3;
      }
      if (other.MinFactionId != 0) {
        MinFactionId = other.MinFactionId;
      }
      if (other.MinReputation != 0) {
        MinReputation = other.MinReputation;
      }
      if (other.RequiredAuraVision != 0) {
        RequiredAuraVision = other.RequiredAuraVision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            School = input.ReadUInt32();
            break;
          }
          case 24: {
            Category = input.ReadUInt32();
            break;
          }
          case 32: {
            CastUi = input.ReadUInt32();
            break;
          }
          case 40: {
            Dispel = input.ReadUInt32();
            break;
          }
          case 48: {
            Mechanic = input.ReadUInt32();
            break;
          }
          case 56: {
            Attributes = input.ReadUInt64();
            break;
          }
          case 64: {
            AttributesEx = input.ReadUInt32();
            break;
          }
          case 72: {
            AttributesEx2 = input.ReadUInt32();
            break;
          }
          case 80: {
            AttributesEx3 = input.ReadUInt32();
            break;
          }
          case 88: {
            AttributesEx4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Stances = input.ReadUInt32();
            break;
          }
          case 104: {
            StancesNot = input.ReadUInt32();
            break;
          }
          case 112: {
            Targets = input.ReadUInt32();
            break;
          }
          case 120: {
            TargetCreatureType = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiresSpellFocus = input.ReadUInt32();
            break;
          }
          case 136: {
            CasterAuraState = input.ReadUInt32();
            break;
          }
          case 144: {
            TargetAuraState = input.ReadUInt32();
            break;
          }
          case 152: {
            CastingTimeIndex = input.ReadUInt32();
            break;
          }
          case 160: {
            RecoveryTime = input.ReadUInt32();
            break;
          }
          case 168: {
            CategoryRecoveryTime = input.ReadUInt32();
            break;
          }
          case 176: {
            InterruptFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            AuraInterruptFlags = input.ReadUInt32();
            break;
          }
          case 192: {
            ChannelInterruptFlags = input.ReadUInt32();
            break;
          }
          case 200: {
            ProcFlags = input.ReadUInt32();
            break;
          }
          case 208: {
            ProcChance = input.ReadUInt32();
            break;
          }
          case 216: {
            ProcCharges = input.ReadUInt32();
            break;
          }
          case 224: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 232: {
            BaseLevel = input.ReadUInt32();
            break;
          }
          case 240: {
            SpellLevel = input.ReadUInt32();
            break;
          }
          case 248: {
            DurationIndex = input.ReadUInt32();
            break;
          }
          case 256: {
            PowerType = input.ReadUInt32();
            break;
          }
          case 264: {
            ManaCost = input.ReadUInt32();
            break;
          }
          case 272: {
            ManaCostPerLevel = input.ReadUInt32();
            break;
          }
          case 280: {
            ManaPerSecond = input.ReadUInt32();
            break;
          }
          case 288: {
            ManaPerSecondPerLevel = input.ReadUInt32();
            break;
          }
          case 296: {
            RangeIndex = input.ReadUInt32();
            break;
          }
          case 309: {
            Speed = input.ReadFloat();
            break;
          }
          case 312: {
            ModelNextSpell = input.ReadUInt32();
            break;
          }
          case 320: {
            StackAmount = input.ReadUInt32();
            break;
          }
          case 328: {
            Totem1 = input.ReadUInt32();
            break;
          }
          case 336: {
            Totem2 = input.ReadUInt32();
            break;
          }
          case 344: {
            Reagent1 = input.ReadUInt32();
            break;
          }
          case 352: {
            Reagent2 = input.ReadUInt32();
            break;
          }
          case 360: {
            Reagent3 = input.ReadUInt32();
            break;
          }
          case 368: {
            Reagent4 = input.ReadUInt32();
            break;
          }
          case 376: {
            Reagent5 = input.ReadUInt32();
            break;
          }
          case 384: {
            Reagent6 = input.ReadUInt32();
            break;
          }
          case 392: {
            Reagent7 = input.ReadUInt32();
            break;
          }
          case 400: {
            Reagent8 = input.ReadUInt32();
            break;
          }
          case 408: {
            ReagentCount1 = input.ReadUInt32();
            break;
          }
          case 416: {
            ReagentCount2 = input.ReadUInt32();
            break;
          }
          case 424: {
            ReagentCount3 = input.ReadUInt32();
            break;
          }
          case 432: {
            ReagentCount4 = input.ReadUInt32();
            break;
          }
          case 440: {
            ReagentCount5 = input.ReadUInt32();
            break;
          }
          case 448: {
            ReagentCount6 = input.ReadUInt32();
            break;
          }
          case 456: {
            ReagentCount7 = input.ReadUInt32();
            break;
          }
          case 464: {
            ReagentCount8 = input.ReadUInt32();
            break;
          }
          case 472: {
            EquippedItemClass = input.ReadInt32();
            break;
          }
          case 480: {
            EquippedItemSubClassMask = input.ReadInt32();
            break;
          }
          case 488: {
            EquippedItemInventoryTypeMask = input.ReadInt32();
            break;
          }
          case 496: {
            Effect1 = input.ReadUInt32();
            break;
          }
          case 504: {
            Effect2 = input.ReadUInt32();
            break;
          }
          case 512: {
            Effect3 = input.ReadUInt32();
            break;
          }
          case 520: {
            EffectDieSides1 = input.ReadInt32();
            break;
          }
          case 528: {
            EffectDieSides2 = input.ReadInt32();
            break;
          }
          case 536: {
            EffectDieSides3 = input.ReadInt32();
            break;
          }
          case 544: {
            EffectBaseDice1 = input.ReadInt32();
            break;
          }
          case 552: {
            EffectBaseDice2 = input.ReadInt32();
            break;
          }
          case 560: {
            EffectBaseDice3 = input.ReadInt32();
            break;
          }
          case 573: {
            EffectDicePerLevel1 = input.ReadFloat();
            break;
          }
          case 581: {
            EffectDicePerLevel2 = input.ReadFloat();
            break;
          }
          case 589: {
            EffectDicePerLevel3 = input.ReadFloat();
            break;
          }
          case 597: {
            EffectRealPointsPerLevel1 = input.ReadFloat();
            break;
          }
          case 605: {
            EffectRealPointsPerLevel2 = input.ReadFloat();
            break;
          }
          case 613: {
            EffectRealPointsPerLevel3 = input.ReadFloat();
            break;
          }
          case 616: {
            EffectBasePoints1 = input.ReadInt32();
            break;
          }
          case 624: {
            EffectBasePoints2 = input.ReadInt32();
            break;
          }
          case 632: {
            EffectBasePoints3 = input.ReadInt32();
            break;
          }
          case 640: {
            EffectMechanic1 = input.ReadUInt32();
            break;
          }
          case 648: {
            EffectMechanic2 = input.ReadUInt32();
            break;
          }
          case 656: {
            EffectMechanic3 = input.ReadUInt32();
            break;
          }
          case 664: {
            EffectImplicitTargetA1 = input.ReadUInt32();
            break;
          }
          case 672: {
            EffectImplicitTargetA2 = input.ReadUInt32();
            break;
          }
          case 680: {
            EffectImplicitTargetA3 = input.ReadUInt32();
            break;
          }
          case 688: {
            EffectImplicitTargetB1 = input.ReadUInt32();
            break;
          }
          case 696: {
            EffectImplicitTargetB2 = input.ReadUInt32();
            break;
          }
          case 704: {
            EffectImplicitTargetB3 = input.ReadUInt32();
            break;
          }
          case 712: {
            EffectRadiusIndex1 = input.ReadUInt32();
            break;
          }
          case 720: {
            EffectRadiusIndex2 = input.ReadUInt32();
            break;
          }
          case 728: {
            EffectRadiusIndex3 = input.ReadUInt32();
            break;
          }
          case 736: {
            EffectApplyAuraName1 = input.ReadUInt32();
            break;
          }
          case 744: {
            EffectApplyAuraName2 = input.ReadUInt32();
            break;
          }
          case 752: {
            EffectApplyAuraName3 = input.ReadUInt32();
            break;
          }
          case 760: {
            EffectAmplitude1 = input.ReadUInt32();
            break;
          }
          case 768: {
            EffectAmplitude2 = input.ReadUInt32();
            break;
          }
          case 776: {
            EffectAmplitude3 = input.ReadUInt32();
            break;
          }
          case 789: {
            EffectMultipleValue1 = input.ReadFloat();
            break;
          }
          case 797: {
            EffectMultipleValue2 = input.ReadFloat();
            break;
          }
          case 805: {
            EffectMultipleValue3 = input.ReadFloat();
            break;
          }
          case 808: {
            EffectChainTarget1 = input.ReadUInt32();
            break;
          }
          case 816: {
            EffectChainTarget2 = input.ReadUInt32();
            break;
          }
          case 824: {
            EffectChainTarget3 = input.ReadUInt32();
            break;
          }
          case 832: {
            EffectItemType1 = input.ReadUInt32();
            break;
          }
          case 840: {
            EffectItemType2 = input.ReadUInt32();
            break;
          }
          case 848: {
            EffectItemType3 = input.ReadUInt32();
            break;
          }
          case 856: {
            EffectMiscValue1 = input.ReadInt32();
            break;
          }
          case 864: {
            EffectMiscValue2 = input.ReadInt32();
            break;
          }
          case 872: {
            EffectMiscValue3 = input.ReadInt32();
            break;
          }
          case 880: {
            EffectTriggerSpell1 = input.ReadUInt32();
            break;
          }
          case 888: {
            EffectTriggerSpell2 = input.ReadUInt32();
            break;
          }
          case 896: {
            EffectTriggerSpell3 = input.ReadUInt32();
            break;
          }
          case 909: {
            EffectPointsPerComboPoint1 = input.ReadFloat();
            break;
          }
          case 917: {
            EffectPointsPerComboPoint2 = input.ReadFloat();
            break;
          }
          case 925: {
            EffectPointsPerComboPoint3 = input.ReadFloat();
            break;
          }
          case 928: {
            SpellVisual1 = input.ReadUInt32();
            break;
          }
          case 936: {
            SpellVisual2 = input.ReadUInt32();
            break;
          }
          case 944: {
            SpellIconId = input.ReadUInt32();
            break;
          }
          case 952: {
            ActiveIconId = input.ReadUInt32();
            break;
          }
          case 960: {
            SpellPriority = input.ReadUInt32();
            break;
          }
          case 970: {
            Name1 = input.ReadString();
            break;
          }
          case 978: {
            Name2 = input.ReadString();
            break;
          }
          case 986: {
            Name3 = input.ReadString();
            break;
          }
          case 994: {
            Name4 = input.ReadString();
            break;
          }
          case 1002: {
            Name5 = input.ReadString();
            break;
          }
          case 1010: {
            Name6 = input.ReadString();
            break;
          }
          case 1018: {
            Name7 = input.ReadString();
            break;
          }
          case 1026: {
            Name8 = input.ReadString();
            break;
          }
          case 1032: {
            NameFlags = input.ReadUInt32();
            break;
          }
          case 1042: {
            NameSubtext1 = input.ReadString();
            break;
          }
          case 1050: {
            NameSubtext2 = input.ReadString();
            break;
          }
          case 1058: {
            NameSubtext3 = input.ReadString();
            break;
          }
          case 1066: {
            NameSubtext4 = input.ReadString();
            break;
          }
          case 1074: {
            NameSubtext5 = input.ReadString();
            break;
          }
          case 1082: {
            NameSubtext6 = input.ReadString();
            break;
          }
          case 1090: {
            NameSubtext7 = input.ReadString();
            break;
          }
          case 1098: {
            NameSubtext8 = input.ReadString();
            break;
          }
          case 1104: {
            NameSubtextFlags = input.ReadUInt32();
            break;
          }
          case 1114: {
            Description1 = input.ReadString();
            break;
          }
          case 1122: {
            Description2 = input.ReadString();
            break;
          }
          case 1130: {
            Description3 = input.ReadString();
            break;
          }
          case 1138: {
            Description4 = input.ReadString();
            break;
          }
          case 1146: {
            Description5 = input.ReadString();
            break;
          }
          case 1154: {
            Description6 = input.ReadString();
            break;
          }
          case 1162: {
            Description7 = input.ReadString();
            break;
          }
          case 1170: {
            Description8 = input.ReadString();
            break;
          }
          case 1176: {
            DescriptionFlags = input.ReadUInt32();
            break;
          }
          case 1186: {
            AuraDescription1 = input.ReadString();
            break;
          }
          case 1194: {
            AuraDescription2 = input.ReadString();
            break;
          }
          case 1202: {
            AuraDescription3 = input.ReadString();
            break;
          }
          case 1210: {
            AuraDescription4 = input.ReadString();
            break;
          }
          case 1218: {
            AuraDescription5 = input.ReadString();
            break;
          }
          case 1226: {
            AuraDescription6 = input.ReadString();
            break;
          }
          case 1234: {
            AuraDescription7 = input.ReadString();
            break;
          }
          case 1242: {
            AuraDescription8 = input.ReadString();
            break;
          }
          case 1248: {
            AuraDescriptionFlags = input.ReadUInt32();
            break;
          }
          case 1256: {
            ManaCostPercentage = input.ReadUInt32();
            break;
          }
          case 1264: {
            StartRecoveryCategory = input.ReadUInt32();
            break;
          }
          case 1272: {
            StartRecoveryTime = input.ReadUInt32();
            break;
          }
          case 1280: {
            MaxTargetLevel = input.ReadUInt32();
            break;
          }
          case 1288: {
            SpellFamilyName = input.ReadUInt32();
            break;
          }
          case 1296: {
            SpellFamilyFlags = input.ReadUInt64();
            break;
          }
          case 1304: {
            MaxAffectedTargets = input.ReadUInt32();
            break;
          }
          case 1312: {
            DmgClass = input.ReadUInt32();
            break;
          }
          case 1320: {
            PreventionType = input.ReadUInt32();
            break;
          }
          case 1328: {
            StanceBarOrder = input.ReadInt32();
            break;
          }
          case 1341: {
            DmgMultiplier1 = input.ReadFloat();
            break;
          }
          case 1349: {
            DmgMultiplier2 = input.ReadFloat();
            break;
          }
          case 1357: {
            DmgMultiplier3 = input.ReadFloat();
            break;
          }
          case 1360: {
            MinFactionId = input.ReadUInt32();
            break;
          }
          case 1368: {
            MinReputation = input.ReadUInt32();
            break;
          }
          case 1376: {
            RequiredAuraVision = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            School = input.ReadUInt32();
            break;
          }
          case 24: {
            Category = input.ReadUInt32();
            break;
          }
          case 32: {
            CastUi = input.ReadUInt32();
            break;
          }
          case 40: {
            Dispel = input.ReadUInt32();
            break;
          }
          case 48: {
            Mechanic = input.ReadUInt32();
            break;
          }
          case 56: {
            Attributes = input.ReadUInt64();
            break;
          }
          case 64: {
            AttributesEx = input.ReadUInt32();
            break;
          }
          case 72: {
            AttributesEx2 = input.ReadUInt32();
            break;
          }
          case 80: {
            AttributesEx3 = input.ReadUInt32();
            break;
          }
          case 88: {
            AttributesEx4 = input.ReadUInt32();
            break;
          }
          case 96: {
            Stances = input.ReadUInt32();
            break;
          }
          case 104: {
            StancesNot = input.ReadUInt32();
            break;
          }
          case 112: {
            Targets = input.ReadUInt32();
            break;
          }
          case 120: {
            TargetCreatureType = input.ReadUInt32();
            break;
          }
          case 128: {
            RequiresSpellFocus = input.ReadUInt32();
            break;
          }
          case 136: {
            CasterAuraState = input.ReadUInt32();
            break;
          }
          case 144: {
            TargetAuraState = input.ReadUInt32();
            break;
          }
          case 152: {
            CastingTimeIndex = input.ReadUInt32();
            break;
          }
          case 160: {
            RecoveryTime = input.ReadUInt32();
            break;
          }
          case 168: {
            CategoryRecoveryTime = input.ReadUInt32();
            break;
          }
          case 176: {
            InterruptFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            AuraInterruptFlags = input.ReadUInt32();
            break;
          }
          case 192: {
            ChannelInterruptFlags = input.ReadUInt32();
            break;
          }
          case 200: {
            ProcFlags = input.ReadUInt32();
            break;
          }
          case 208: {
            ProcChance = input.ReadUInt32();
            break;
          }
          case 216: {
            ProcCharges = input.ReadUInt32();
            break;
          }
          case 224: {
            MaxLevel = input.ReadUInt32();
            break;
          }
          case 232: {
            BaseLevel = input.ReadUInt32();
            break;
          }
          case 240: {
            SpellLevel = input.ReadUInt32();
            break;
          }
          case 248: {
            DurationIndex = input.ReadUInt32();
            break;
          }
          case 256: {
            PowerType = input.ReadUInt32();
            break;
          }
          case 264: {
            ManaCost = input.ReadUInt32();
            break;
          }
          case 272: {
            ManaCostPerLevel = input.ReadUInt32();
            break;
          }
          case 280: {
            ManaPerSecond = input.ReadUInt32();
            break;
          }
          case 288: {
            ManaPerSecondPerLevel = input.ReadUInt32();
            break;
          }
          case 296: {
            RangeIndex = input.ReadUInt32();
            break;
          }
          case 309: {
            Speed = input.ReadFloat();
            break;
          }
          case 312: {
            ModelNextSpell = input.ReadUInt32();
            break;
          }
          case 320: {
            StackAmount = input.ReadUInt32();
            break;
          }
          case 328: {
            Totem1 = input.ReadUInt32();
            break;
          }
          case 336: {
            Totem2 = input.ReadUInt32();
            break;
          }
          case 344: {
            Reagent1 = input.ReadUInt32();
            break;
          }
          case 352: {
            Reagent2 = input.ReadUInt32();
            break;
          }
          case 360: {
            Reagent3 = input.ReadUInt32();
            break;
          }
          case 368: {
            Reagent4 = input.ReadUInt32();
            break;
          }
          case 376: {
            Reagent5 = input.ReadUInt32();
            break;
          }
          case 384: {
            Reagent6 = input.ReadUInt32();
            break;
          }
          case 392: {
            Reagent7 = input.ReadUInt32();
            break;
          }
          case 400: {
            Reagent8 = input.ReadUInt32();
            break;
          }
          case 408: {
            ReagentCount1 = input.ReadUInt32();
            break;
          }
          case 416: {
            ReagentCount2 = input.ReadUInt32();
            break;
          }
          case 424: {
            ReagentCount3 = input.ReadUInt32();
            break;
          }
          case 432: {
            ReagentCount4 = input.ReadUInt32();
            break;
          }
          case 440: {
            ReagentCount5 = input.ReadUInt32();
            break;
          }
          case 448: {
            ReagentCount6 = input.ReadUInt32();
            break;
          }
          case 456: {
            ReagentCount7 = input.ReadUInt32();
            break;
          }
          case 464: {
            ReagentCount8 = input.ReadUInt32();
            break;
          }
          case 472: {
            EquippedItemClass = input.ReadInt32();
            break;
          }
          case 480: {
            EquippedItemSubClassMask = input.ReadInt32();
            break;
          }
          case 488: {
            EquippedItemInventoryTypeMask = input.ReadInt32();
            break;
          }
          case 496: {
            Effect1 = input.ReadUInt32();
            break;
          }
          case 504: {
            Effect2 = input.ReadUInt32();
            break;
          }
          case 512: {
            Effect3 = input.ReadUInt32();
            break;
          }
          case 520: {
            EffectDieSides1 = input.ReadInt32();
            break;
          }
          case 528: {
            EffectDieSides2 = input.ReadInt32();
            break;
          }
          case 536: {
            EffectDieSides3 = input.ReadInt32();
            break;
          }
          case 544: {
            EffectBaseDice1 = input.ReadInt32();
            break;
          }
          case 552: {
            EffectBaseDice2 = input.ReadInt32();
            break;
          }
          case 560: {
            EffectBaseDice3 = input.ReadInt32();
            break;
          }
          case 573: {
            EffectDicePerLevel1 = input.ReadFloat();
            break;
          }
          case 581: {
            EffectDicePerLevel2 = input.ReadFloat();
            break;
          }
          case 589: {
            EffectDicePerLevel3 = input.ReadFloat();
            break;
          }
          case 597: {
            EffectRealPointsPerLevel1 = input.ReadFloat();
            break;
          }
          case 605: {
            EffectRealPointsPerLevel2 = input.ReadFloat();
            break;
          }
          case 613: {
            EffectRealPointsPerLevel3 = input.ReadFloat();
            break;
          }
          case 616: {
            EffectBasePoints1 = input.ReadInt32();
            break;
          }
          case 624: {
            EffectBasePoints2 = input.ReadInt32();
            break;
          }
          case 632: {
            EffectBasePoints3 = input.ReadInt32();
            break;
          }
          case 640: {
            EffectMechanic1 = input.ReadUInt32();
            break;
          }
          case 648: {
            EffectMechanic2 = input.ReadUInt32();
            break;
          }
          case 656: {
            EffectMechanic3 = input.ReadUInt32();
            break;
          }
          case 664: {
            EffectImplicitTargetA1 = input.ReadUInt32();
            break;
          }
          case 672: {
            EffectImplicitTargetA2 = input.ReadUInt32();
            break;
          }
          case 680: {
            EffectImplicitTargetA3 = input.ReadUInt32();
            break;
          }
          case 688: {
            EffectImplicitTargetB1 = input.ReadUInt32();
            break;
          }
          case 696: {
            EffectImplicitTargetB2 = input.ReadUInt32();
            break;
          }
          case 704: {
            EffectImplicitTargetB3 = input.ReadUInt32();
            break;
          }
          case 712: {
            EffectRadiusIndex1 = input.ReadUInt32();
            break;
          }
          case 720: {
            EffectRadiusIndex2 = input.ReadUInt32();
            break;
          }
          case 728: {
            EffectRadiusIndex3 = input.ReadUInt32();
            break;
          }
          case 736: {
            EffectApplyAuraName1 = input.ReadUInt32();
            break;
          }
          case 744: {
            EffectApplyAuraName2 = input.ReadUInt32();
            break;
          }
          case 752: {
            EffectApplyAuraName3 = input.ReadUInt32();
            break;
          }
          case 760: {
            EffectAmplitude1 = input.ReadUInt32();
            break;
          }
          case 768: {
            EffectAmplitude2 = input.ReadUInt32();
            break;
          }
          case 776: {
            EffectAmplitude3 = input.ReadUInt32();
            break;
          }
          case 789: {
            EffectMultipleValue1 = input.ReadFloat();
            break;
          }
          case 797: {
            EffectMultipleValue2 = input.ReadFloat();
            break;
          }
          case 805: {
            EffectMultipleValue3 = input.ReadFloat();
            break;
          }
          case 808: {
            EffectChainTarget1 = input.ReadUInt32();
            break;
          }
          case 816: {
            EffectChainTarget2 = input.ReadUInt32();
            break;
          }
          case 824: {
            EffectChainTarget3 = input.ReadUInt32();
            break;
          }
          case 832: {
            EffectItemType1 = input.ReadUInt32();
            break;
          }
          case 840: {
            EffectItemType2 = input.ReadUInt32();
            break;
          }
          case 848: {
            EffectItemType3 = input.ReadUInt32();
            break;
          }
          case 856: {
            EffectMiscValue1 = input.ReadInt32();
            break;
          }
          case 864: {
            EffectMiscValue2 = input.ReadInt32();
            break;
          }
          case 872: {
            EffectMiscValue3 = input.ReadInt32();
            break;
          }
          case 880: {
            EffectTriggerSpell1 = input.ReadUInt32();
            break;
          }
          case 888: {
            EffectTriggerSpell2 = input.ReadUInt32();
            break;
          }
          case 896: {
            EffectTriggerSpell3 = input.ReadUInt32();
            break;
          }
          case 909: {
            EffectPointsPerComboPoint1 = input.ReadFloat();
            break;
          }
          case 917: {
            EffectPointsPerComboPoint2 = input.ReadFloat();
            break;
          }
          case 925: {
            EffectPointsPerComboPoint3 = input.ReadFloat();
            break;
          }
          case 928: {
            SpellVisual1 = input.ReadUInt32();
            break;
          }
          case 936: {
            SpellVisual2 = input.ReadUInt32();
            break;
          }
          case 944: {
            SpellIconId = input.ReadUInt32();
            break;
          }
          case 952: {
            ActiveIconId = input.ReadUInt32();
            break;
          }
          case 960: {
            SpellPriority = input.ReadUInt32();
            break;
          }
          case 970: {
            Name1 = input.ReadString();
            break;
          }
          case 978: {
            Name2 = input.ReadString();
            break;
          }
          case 986: {
            Name3 = input.ReadString();
            break;
          }
          case 994: {
            Name4 = input.ReadString();
            break;
          }
          case 1002: {
            Name5 = input.ReadString();
            break;
          }
          case 1010: {
            Name6 = input.ReadString();
            break;
          }
          case 1018: {
            Name7 = input.ReadString();
            break;
          }
          case 1026: {
            Name8 = input.ReadString();
            break;
          }
          case 1032: {
            NameFlags = input.ReadUInt32();
            break;
          }
          case 1042: {
            NameSubtext1 = input.ReadString();
            break;
          }
          case 1050: {
            NameSubtext2 = input.ReadString();
            break;
          }
          case 1058: {
            NameSubtext3 = input.ReadString();
            break;
          }
          case 1066: {
            NameSubtext4 = input.ReadString();
            break;
          }
          case 1074: {
            NameSubtext5 = input.ReadString();
            break;
          }
          case 1082: {
            NameSubtext6 = input.ReadString();
            break;
          }
          case 1090: {
            NameSubtext7 = input.ReadString();
            break;
          }
          case 1098: {
            NameSubtext8 = input.ReadString();
            break;
          }
          case 1104: {
            NameSubtextFlags = input.ReadUInt32();
            break;
          }
          case 1114: {
            Description1 = input.ReadString();
            break;
          }
          case 1122: {
            Description2 = input.ReadString();
            break;
          }
          case 1130: {
            Description3 = input.ReadString();
            break;
          }
          case 1138: {
            Description4 = input.ReadString();
            break;
          }
          case 1146: {
            Description5 = input.ReadString();
            break;
          }
          case 1154: {
            Description6 = input.ReadString();
            break;
          }
          case 1162: {
            Description7 = input.ReadString();
            break;
          }
          case 1170: {
            Description8 = input.ReadString();
            break;
          }
          case 1176: {
            DescriptionFlags = input.ReadUInt32();
            break;
          }
          case 1186: {
            AuraDescription1 = input.ReadString();
            break;
          }
          case 1194: {
            AuraDescription2 = input.ReadString();
            break;
          }
          case 1202: {
            AuraDescription3 = input.ReadString();
            break;
          }
          case 1210: {
            AuraDescription4 = input.ReadString();
            break;
          }
          case 1218: {
            AuraDescription5 = input.ReadString();
            break;
          }
          case 1226: {
            AuraDescription6 = input.ReadString();
            break;
          }
          case 1234: {
            AuraDescription7 = input.ReadString();
            break;
          }
          case 1242: {
            AuraDescription8 = input.ReadString();
            break;
          }
          case 1248: {
            AuraDescriptionFlags = input.ReadUInt32();
            break;
          }
          case 1256: {
            ManaCostPercentage = input.ReadUInt32();
            break;
          }
          case 1264: {
            StartRecoveryCategory = input.ReadUInt32();
            break;
          }
          case 1272: {
            StartRecoveryTime = input.ReadUInt32();
            break;
          }
          case 1280: {
            MaxTargetLevel = input.ReadUInt32();
            break;
          }
          case 1288: {
            SpellFamilyName = input.ReadUInt32();
            break;
          }
          case 1296: {
            SpellFamilyFlags = input.ReadUInt64();
            break;
          }
          case 1304: {
            MaxAffectedTargets = input.ReadUInt32();
            break;
          }
          case 1312: {
            DmgClass = input.ReadUInt32();
            break;
          }
          case 1320: {
            PreventionType = input.ReadUInt32();
            break;
          }
          case 1328: {
            StanceBarOrder = input.ReadInt32();
            break;
          }
          case 1341: {
            DmgMultiplier1 = input.ReadFloat();
            break;
          }
          case 1349: {
            DmgMultiplier2 = input.ReadFloat();
            break;
          }
          case 1357: {
            DmgMultiplier3 = input.ReadFloat();
            break;
          }
          case 1360: {
            MinFactionId = input.ReadUInt32();
            break;
          }
          case 1368: {
            MinReputation = input.ReadUInt32();
            break;
          }
          case 1376: {
            RequiredAuraVision = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpellThreat : pb::IMessage<SpellThreat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellThreat> _parser = new pb::MessageParser<SpellThreat>(() => new SpellThreat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellThreat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[167]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellThreat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellThreat(SpellThreat other) : this() {
      entry_ = other.entry_;
      threat_ = other.threat_;
      multiplier_ = other.multiplier_;
      apBonus_ = other.apBonus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellThreat Clone() {
      return new SpellThreat(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private uint entry_;
    /// <summary>
    /// Unique identifier for the spell entry
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "threat" field.</summary>
    public const int ThreatFieldNumber = 2;
    private int threat_;
    /// <summary>
    /// Threat value associated with the spell
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Threat {
      get { return threat_; }
      set {
        threat_ = value;
      }
    }

    /// <summary>Field number for the "multiplier" field.</summary>
    public const int MultiplierFieldNumber = 3;
    private float multiplier_;
    /// <summary>
    /// Threat multiplier for damage/healing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Multiplier {
      get { return multiplier_; }
      set {
        multiplier_ = value;
      }
    }

    /// <summary>Field number for the "ap_bonus" field.</summary>
    public const int ApBonusFieldNumber = 4;
    private float apBonus_;
    /// <summary>
    /// Additional threat bonus from attack power
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ApBonus {
      get { return apBonus_; }
      set {
        apBonus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellThreat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellThreat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Entry != other.Entry) return false;
      if (Threat != other.Threat) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Multiplier, other.Multiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ApBonus, other.ApBonus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Threat != 0) hash ^= Threat.GetHashCode();
      if (Multiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Multiplier);
      if (ApBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ApBonus);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Threat != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Threat);
      }
      if (Multiplier != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Multiplier);
      }
      if (ApBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ApBonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Entry != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Entry);
      }
      if (Threat != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Threat);
      }
      if (Multiplier != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Multiplier);
      }
      if (ApBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ApBonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Threat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Threat);
      }
      if (Multiplier != 0F) {
        size += 1 + 4;
      }
      if (ApBonus != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellThreat other) {
      if (other == null) {
        return;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Threat != 0) {
        Threat = other.Threat;
      }
      if (other.Multiplier != 0F) {
        Multiplier = other.Multiplier;
      }
      if (other.ApBonus != 0F) {
        ApBonus = other.ApBonus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Threat = input.ReadInt32();
            break;
          }
          case 29: {
            Multiplier = input.ReadFloat();
            break;
          }
          case 37: {
            ApBonus = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Entry = input.ReadUInt32();
            break;
          }
          case 16: {
            Threat = input.ReadInt32();
            break;
          }
          case 29: {
            Multiplier = input.ReadFloat();
            break;
          }
          case 37: {
            ApBonus = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaxiPathTransition : pb::IMessage<TaxiPathTransition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaxiPathTransition> _parser = new pb::MessageParser<TaxiPathTransition>(() => new TaxiPathTransition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaxiPathTransition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[168]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaxiPathTransition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaxiPathTransition(TaxiPathTransition other) : this() {
      inPath_ = other.inPath_;
      outPath_ = other.outPath_;
      inNode_ = other.inNode_;
      outNode_ = other.outNode_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaxiPathTransition Clone() {
      return new TaxiPathTransition(this);
    }

    /// <summary>Field number for the "in_path" field.</summary>
    public const int InPathFieldNumber = 1;
    private uint inPath_;
    /// <summary>
    /// Incoming path identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InPath {
      get { return inPath_; }
      set {
        inPath_ = value;
      }
    }

    /// <summary>Field number for the "out_path" field.</summary>
    public const int OutPathFieldNumber = 2;
    private uint outPath_;
    /// <summary>
    /// Outgoing path identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OutPath {
      get { return outPath_; }
      set {
        outPath_ = value;
      }
    }

    /// <summary>Field number for the "in_node" field.</summary>
    public const int InNodeFieldNumber = 3;
    private uint inNode_;
    /// <summary>
    /// Incoming node identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InNode {
      get { return inNode_; }
      set {
        inNode_ = value;
      }
    }

    /// <summary>Field number for the "out_node" field.</summary>
    public const int OutNodeFieldNumber = 4;
    private uint outNode_;
    /// <summary>
    /// Outgoing node identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OutNode {
      get { return outNode_; }
      set {
        outNode_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 5;
    private string comment_ = "";
    /// <summary>
    /// Optional comment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaxiPathTransition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaxiPathTransition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InPath != other.InPath) return false;
      if (OutPath != other.OutPath) return false;
      if (InNode != other.InNode) return false;
      if (OutNode != other.OutNode) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InPath != 0) hash ^= InPath.GetHashCode();
      if (OutPath != 0) hash ^= OutPath.GetHashCode();
      if (InNode != 0) hash ^= InNode.GetHashCode();
      if (OutNode != 0) hash ^= OutNode.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InPath != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(InPath);
      }
      if (OutPath != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(OutPath);
      }
      if (InNode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InNode);
      }
      if (OutNode != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OutNode);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InPath != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(InPath);
      }
      if (OutPath != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(OutPath);
      }
      if (InNode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InNode);
      }
      if (OutNode != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(OutNode);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InPath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InPath);
      }
      if (OutPath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutPath);
      }
      if (InNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InNode);
      }
      if (OutNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutNode);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaxiPathTransition other) {
      if (other == null) {
        return;
      }
      if (other.InPath != 0) {
        InPath = other.InPath;
      }
      if (other.OutPath != 0) {
        OutPath = other.OutPath;
      }
      if (other.InNode != 0) {
        InNode = other.InNode;
      }
      if (other.OutNode != 0) {
        OutNode = other.OutNode;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InPath = input.ReadUInt32();
            break;
          }
          case 16: {
            OutPath = input.ReadUInt32();
            break;
          }
          case 24: {
            InNode = input.ReadUInt32();
            break;
          }
          case 32: {
            OutNode = input.ReadUInt32();
            break;
          }
          case 42: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InPath = input.ReadUInt32();
            break;
          }
          case 16: {
            OutPath = input.ReadUInt32();
            break;
          }
          case 24: {
            InNode = input.ReadUInt32();
            break;
          }
          case 32: {
            OutNode = input.ReadUInt32();
            break;
          }
          case 42: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Transport : pb::IMessage<Transport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Transport> _parser = new pb::MessageParser<Transport>(() => new Transport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Transport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[169]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Transport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Transport(Transport other) : this() {
      guid_ = other.guid_;
      entry_ = other.entry_;
      name_ = other.name_;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Transport Clone() {
      return new Transport(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private uint guid_;
    /// <summary>
    /// Unique identifier for the transport
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 2;
    private uint entry_;
    /// <summary>
    /// Transport entry identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Name of the transport
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 4;
    private uint period_;
    /// <summary>
    /// Period for transport movement or cycle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Transport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Transport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Entry != other.Entry) return false;
      if (Name != other.Name) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Entry != 0) hash ^= Entry.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Entry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Entry);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Period != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Guid);
      }
      if (Entry != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Entry);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Period != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
      }
      if (Entry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Entry);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Transport other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Entry != 0) {
        Entry = other.Entry;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Entry = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Period = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt32();
            break;
          }
          case 16: {
            Entry = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Period = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Variables : pb::IMessage<Variables>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Variables> _parser = new pb::MessageParser<Variables>(() => new Variables());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Variables> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Database.DatabaseReflection.Descriptor.MessageTypes[170]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Variables() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Variables(Variables other) : this() {
      index_ = other.index_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Variables Clone() {
      return new Variables(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private uint index_;
    /// <summary>
    /// Index for the variable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private uint value_;
    /// <summary>
    /// Value associated with the variable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Variables);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Variables other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Index);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Index);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Variables other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadUInt32();
            break;
          }
          case 16: {
            Value = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
