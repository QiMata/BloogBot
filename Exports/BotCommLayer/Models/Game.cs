// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: game.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Game {

  /// <summary>Holder for reflection information generated from game.proto</summary>
  public static partial class GameReflection {

    #region Descriptor
    /// <summary>File descriptor for game.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpnYW1lLnByb3RvEgRnYW1lIp4BCglXb1dPYmplY3QSDAoEZ3VpZBgBIAEo",
            "BBINCgVtYXBJZBgCIAEoDRIOCgZ6b25lSWQYAyABKA0SEgoKb2JqZWN0VHlw",
            "ZRgEIAEoDRIOCgZzY2FsZVgYBSABKAISDgoGaGVpZ2h0GAYgASgCEg4KBmZh",
            "Y2luZxgHIAEoAhIgCghwb3NpdGlvbhgIIAEoCzIOLmdhbWUuUG9zaXRpb24i",
            "ZwoNV29XR2FtZU9iamVjdBIdCgRiYXNlGAEgASgLMg8uZ2FtZS5Xb1dPYmpl",
            "Y3QSDwoHZ29TdGF0ZRgCIAEoDRINCgVsZXZlbBgDIAEoDRIXCg9mYWN0aW9u",
            "VGVtcGxhdGUYBCABKA0iiwcKB1dvV1VuaXQSJwoKZ2FtZU9iamVjdBgBIAEo",
            "CzITLmdhbWUuV29XR2FtZU9iamVjdBINCgVjaGFybRgCIAEoBBIOCgZzdW1t",
            "b24YAyABKAQSEQoJY2hhcm1lZEJ5GAQgASgEEhIKCnN1bW1vbmVkQnkYBSAB",
            "KAQSEQoJY3JlYXRlZEJ5GAYgASgEEhIKCnRhcmdldEd1aWQYByABKAQSEQoJ",
            "cGVyc3VhZGVkGAggASgEEhUKDWNoYW5uZWxPYmplY3QYCSABKAQSFgoOY2hh",
            "bm5lbFNwZWxsSWQYCiABKA0SDgoGaGVhbHRoGAsgASgNEhEKCW1heEhlYWx0",
            "aBgMIAEoDRInCgVwb3dlchgNIAMoCzIYLmdhbWUuV29XVW5pdC5Qb3dlckVu",
            "dHJ5Ei0KCG1heFBvd2VyGA4gAygLMhsuZ2FtZS5Xb1dVbml0Lk1heFBvd2Vy",
            "RW50cnkSJwoFc3RhdHMYDyADKAsyGC5nYW1lLldvV1VuaXQuU3RhdHNFbnRy",
            "eRIzCgtyZXNpc3RhbmNlcxgQIAMoCzIeLmdhbWUuV29XVW5pdC5SZXNpc3Rh",
            "bmNlc0VudHJ5Eg4KBmJ5dGVzMBgRIAEoDRIOCgZieXRlczEYEiABKA0SDgoG",
            "Ynl0ZXMyGBMgASgNEhYKDm1vdW50RGlzcGxheUlkGBQgASgNEhEKCXVuaXRG",
            "bGFncxgVIAEoDRIVCg1tb3ZlbWVudEZsYWdzGBYgASgNEhQKDGR5bmFtaWNG",
            "bGFncxgXIAEoDRIQCghucGNGbGFncxgYIAEoDRINCgVhdXJhcxgZIAMoDRIR",
            "CglhdXJhRmxhZ3MYGiADKA0SEgoKYXVyYUxldmVscxgbIAMoDRIYChBhdXJh",
            "QXBwbGljYXRpb25zGBwgAygNEhEKCWF1cmFTdGF0ZRgdIAEoDRIRCglwZXRO",
            "dW1iZXIYHiABKA0aLAoKUG93ZXJFbnRyeRILCgNrZXkYASABKA0SDQoFdmFs",
            "dWUYAiABKA06AjgBGi8KDU1heFBvd2VyRW50cnkSCwoDa2V5GAEgASgNEg0K",
            "BXZhbHVlGAIgASgNOgI4ARosCgpTdGF0c0VudHJ5EgsKA2tleRgBIAEoDRIN",
            "CgV2YWx1ZRgCIAEoDToCOAEaMgoQUmVzaXN0YW5jZXNFbnRyeRILCgNrZXkY",
            "ASABKA0SDQoFdmFsdWUYAiABKA06AjgBIpkQCglXb1dQbGF5ZXISGwoEdW5p",
            "dBgBIAEoCzINLmdhbWUuV29XVW5pdBIUCgxwbGF5ZXJCeXRlczAYAiABKA0S",
            "FAoMcGxheWVyQnl0ZXMxGAMgASgNEhQKDHBsYXllckJ5dGVzMhgEIAEoDRIT",
            "CgtwbGF5ZXJGbGFncxgFIAEoDRIsCg9xdWVzdExvZ0VudHJpZXMYBiADKAsy",
            "Ey5nYW1lLlF1ZXN0TG9nRW50cnkSMQoJaW52ZW50b3J5GAcgAygLMh4uZ2Ft",
            "ZS5Xb1dQbGF5ZXIuSW52ZW50b3J5RW50cnkSNQoLYmFnQ29udGVudHMYCCAD",
            "KAsyIC5nYW1lLldvV1BsYXllci5CYWdDb250ZW50c0VudHJ5Ei0KB2tleVJp",
            "bmcYCSADKAsyHC5nYW1lLldvV1BsYXllci5LZXlSaW5nRW50cnkSFAoMZmFy",
            "c2lnaHRHdWlkGAogASgEEhcKD2NvbWJvVGFyZ2V0R3VpZBgLIAEoBBIQCghw",
            "bGF5ZXJYUBgMIAEoDRIxCglza2lsbEluZm8YDSADKAsyHi5nYW1lLldvV1Bs",
            "YXllci5Ta2lsbEluZm9FbnRyeRIRCglzcGVsbExpc3QYDiADKA0SOwoOc3Bl",
            "bGxDb29sZG93bnMYDyADKAsyIy5nYW1lLldvV1BsYXllci5TcGVsbENvb2xk",
            "b3duc0VudHJ5EjUKC3NwZWxsU3RhY2tzGBAgAygLMiAuZ2FtZS5Xb1dQbGF5",
            "ZXIuU3BlbGxTdGFja3NFbnRyeRIvCghidWZmTGlzdBgRIAMoCzIdLmdhbWUu",
            "V29XUGxheWVyLkJ1ZmZMaXN0RW50cnkSGAoQY2hhcmFjdGVyUG9pbnRzMRgS",
            "IAEoDRIYChBjaGFyYWN0ZXJQb2ludHMyGBMgASgNEhYKDnRyYWNrQ3JlYXR1",
            "cmVzGBQgASgNEhYKDnRyYWNrUmVzb3VyY2VzGBUgASgNEhQKDGJsb2NrUGVy",
            "Y2VudBgWIAEoAhIUCgxkb2RnZVBlcmNlbnQYFyABKAISFAoMcGFycnlQZXJj",
            "ZW50GBggASgCEhMKC2NyaXRQZXJjZW50GBkgASgCEhkKEXJhbmdlZENyaXRQ",
            "ZXJjZW50GBogASgCEjkKDWV4cGxvcmVkWm9uZXMYGyADKAsyIi5nYW1lLldv",
            "V1BsYXllci5FeHBsb3JlZFpvbmVzRW50cnkSGwoTcmVzdFN0YXRlRXhwZXJp",
            "ZW5jZRgcIAEoDRIPCgdjb2luYWdlGB0gASgNEhgKEHBvc01vZERhbWFnZURv",
            "bmUYHiABKA0SGAoQbmVnTW9kRGFtYWdlRG9uZRgfIAEoDRIYChBwY3RNb2RE",
            "YW1hZ2VEb25lGCAgASgNEi8KCHBvc1N0YXRzGCEgAygLMh0uZ2FtZS5Xb1dQ",
            "bGF5ZXIuUG9zU3RhdHNFbnRyeRIvCghuZWdTdGF0cxgiIAMoCzIdLmdhbWUu",
            "V29XUGxheWVyLk5lZ1N0YXRzRW50cnkSOQoNcG9zUmVzaXN0QnVmZhgjIAMo",
            "CzIiLmdhbWUuV29XUGxheWVyLlBvc1Jlc2lzdEJ1ZmZFbnRyeRI5Cg1uZWdS",
            "ZXNpc3RCdWZmGCQgAygLMiIuZ2FtZS5Xb1dQbGF5ZXIuTmVnUmVzaXN0QnVm",
            "ZkVudHJ5Eg4KBmFtbW9JZBglIAEoDRIUCgxzZWxmUmVzU3BlbGwYJiABKA0S",
            "EQoJcHZwTWVkYWxzGCcgASgNEhQKDHNlc3Npb25LaWxscxgoIAEoDRIbChN3",
            "YXRjaGVkRmFjdGlvbkluZGV4GCkgASgNEjcKDGNvbWJhdFJhdGluZxgqIAMo",
            "CzIhLmdhbWUuV29XUGxheWVyLkNvbWJhdFJhdGluZ0VudHJ5GjAKDkludmVu",
            "dG9yeUVudHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoBDoCOAEaMgoQ",
            "QmFnQ29udGVudHNFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06",
            "AjgBGi4KDEtleVJpbmdFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiAB",
            "KA06AjgBGjAKDlNraWxsSW5mb0VudHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1",
            "ZRgCIAEoDToCOAEaNQoTU3BlbGxDb29sZG93bnNFbnRyeRILCgNrZXkYASAB",
            "KA0SDQoFdmFsdWUYAiABKAI6AjgBGjIKEFNwZWxsU3RhY2tzRW50cnkSCwoD",
            "a2V5GAEgASgNEg0KBXZhbHVlGAIgASgNOgI4ARovCg1CdWZmTGlzdEVudHJ5",
            "EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoAjoCOAEaNAoSRXhwbG9yZWRa",
            "b25lc0VudHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoDToCOAEaLwoN",
            "UG9zU3RhdHNFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06AjgB",
            "Gi8KDU5lZ1N0YXRzRW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgN",
            "OgI4ARo0ChJQb3NSZXNpc3RCdWZmRW50cnkSCwoDa2V5GAEgASgNEg0KBXZh",
            "bHVlGAIgASgNOgI4ARo0ChJOZWdSZXNpc3RCdWZmRW50cnkSCwoDa2V5GAEg",
            "ASgNEg0KBXZhbHVlGAIgASgNOgI4ARozChFDb21iYXRSYXRpbmdFbnRyeRIL",
            "CgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06AjgBItEDCgdXb1dJdGVtEicK",
            "CmdhbWVPYmplY3QYASABKAsyEy5nYW1lLldvV0dhbWVPYmplY3QSDQoFb3du",
            "ZXIYAiABKAQSEQoJY29udGFpbmVkGAMgASgEEg8KB2NyZWF0b3IYBCABKAQS",
            "EwoLZ2lmdENyZWF0b3IYBSABKAQSEgoKc3RhY2tDb3VudBgGIAEoDRIQCghk",
            "dXJhdGlvbhgHIAEoDRI1CgxzcGVsbENoYXJnZXMYCCADKAsyHy5nYW1lLldv",
            "V0l0ZW0uU3BlbGxDaGFyZ2VzRW50cnkSEQoJaXRlbUZsYWdzGAkgASgNEjUK",
            "DGVuY2hhbnRtZW50cxgKIAMoCzIfLmdhbWUuV29XSXRlbS5FbmNoYW50bWVu",
            "dHNFbnRyeRISCgpkdXJhYmlsaXR5GAsgASgNEhQKDHByb3BlcnR5U2VlZBgM",
            "IAEoDRIaChJyYW5kb21Qcm9wZXJ0aWVzSWQYDSABKA0aMwoRU3BlbGxDaGFy",
            "Z2VzRW50cnkSCwoDa2V5GAEgASgNEg0KBXZhbHVlGAIgASgNOgI4ARozChFF",
            "bmNoYW50bWVudHNFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06",
            "AjgBIj4KDFdvV0NvbnRhaW5lchIbCgRpdGVtGAEgASgLMg0uZ2FtZS5Xb1dJ",
            "dGVtEhEKCWl0ZW1TbG90cxgCIAMoDSJICg1RdWVzdExvZ0VudHJ5EhEKCXF1",
            "ZXN0TG9nMRgBIAEoDRIRCglxdWVzdExvZzIYAiABKA0SEQoJcXVlc3RMb2cz",
            "GAMgASgNIisKCFBvc2l0aW9uEgkKAXgYASABKAISCQoBeRgCIAEoAhIJCgF6",
            "GAMgASgCIpQBCgRJdGVtEgoKAmlkGAEgASgEEgwKBG5hbWUYAiABKAkSDAoE",
            "c2xvdBgDIAEoCRIQCghxdWFudGl0eRgEIAEoDRIkCgVzdGF0cxgFIAMoCzIV",
            "LmdhbWUuSXRlbS5TdGF0c0VudHJ5GiwKClN0YXRzRW50cnkSCwoDa2V5GAEg",
            "ASgNEg0KBXZhbHVlGAIgASgNOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWObject), global::Game.WoWObject.Parser, new[]{ "Guid", "MapId", "ZoneId", "ObjectType", "ScaleX", "Height", "Facing", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWGameObject), global::Game.WoWGameObject.Parser, new[]{ "Base", "GoState", "Level", "FactionTemplate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWUnit), global::Game.WoWUnit.Parser, new[]{ "GameObject", "Charm", "Summon", "CharmedBy", "SummonedBy", "CreatedBy", "TargetGuid", "Persuaded", "ChannelObject", "ChannelSpellId", "Health", "MaxHealth", "Power", "MaxPower", "Stats", "Resistances", "Bytes0", "Bytes1", "Bytes2", "MountDisplayId", "UnitFlags", "MovementFlags", "DynamicFlags", "NpcFlags", "Auras", "AuraFlags", "AuraLevels", "AuraApplications", "AuraState", "PetNumber" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWPlayer), global::Game.WoWPlayer.Parser, new[]{ "Unit", "PlayerBytes0", "PlayerBytes1", "PlayerBytes2", "PlayerFlags", "QuestLogEntries", "Inventory", "BagContents", "KeyRing", "FarsightGuid", "ComboTargetGuid", "PlayerXP", "SkillInfo", "SpellList", "SpellCooldowns", "SpellStacks", "BuffList", "CharacterPoints1", "CharacterPoints2", "TrackCreatures", "TrackResources", "BlockPercent", "DodgePercent", "ParryPercent", "CritPercent", "RangedCritPercent", "ExploredZones", "RestStateExperience", "Coinage", "PosModDamageDone", "NegModDamageDone", "PctModDamageDone", "PosStats", "NegStats", "PosResistBuff", "NegResistBuff", "AmmoId", "SelfResSpell", "PvpMedals", "SessionKills", "WatchedFactionIndex", "CombatRating" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, null, null, null, null, null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWItem), global::Game.WoWItem.Parser, new[]{ "GameObject", "Owner", "Contained", "Creator", "GiftCreator", "StackCount", "Duration", "SpellCharges", "ItemFlags", "Enchantments", "Durability", "PropertySeed", "RandomPropertiesId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.WoWContainer), global::Game.WoWContainer.Parser, new[]{ "Item", "ItemSlots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.QuestLogEntry), global::Game.QuestLogEntry.Parser, new[]{ "QuestLog1", "QuestLog2", "QuestLog3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Position), global::Game.Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Game.Item), global::Game.Item.Parser, new[]{ "Id", "Name", "Slot", "Quantity", "Stats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Definition for WoWObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWObject : pb::IMessage<WoWObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWObject> _parser = new pb::MessageParser<WoWObject>(() => new WoWObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject(WoWObject other) : this() {
      guid_ = other.guid_;
      mapId_ = other.mapId_;
      zoneId_ = other.zoneId_;
      objectType_ = other.objectType_;
      scaleX_ = other.scaleX_;
      height_ = other.height_;
      facing_ = other.facing_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWObject Clone() {
      return new WoWObject(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private ulong guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 2;
    private uint mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "zoneId" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private uint zoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 4;
    private uint objectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "scaleX" field.</summary>
    public const int ScaleXFieldNumber = 5;
    private float scaleX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScaleX {
      get { return scaleX_; }
      set {
        scaleX_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 6;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 7;
    private float facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Facing {
      get { return facing_; }
      set {
        facing_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 8;
    private global::Game.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (MapId != other.MapId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (ObjectType != other.ObjectType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScaleX, other.ScaleX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Facing, other.Facing)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0UL) hash ^= Guid.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (ZoneId != 0) hash ^= ZoneId.GetHashCode();
      if (ObjectType != 0) hash ^= ObjectType.GetHashCode();
      if (ScaleX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScaleX);
      if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
      if (Facing != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Facing);
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Guid);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ZoneId);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ObjectType);
      }
      if (ScaleX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ScaleX);
      }
      if (Height != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Height);
      }
      if (Facing != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (position_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Guid);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (ZoneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ZoneId);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ObjectType);
      }
      if (ScaleX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ScaleX);
      }
      if (Height != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Height);
      }
      if (Facing != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (position_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guid);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (ZoneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ZoneId);
      }
      if (ObjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectType);
      }
      if (ScaleX != 0F) {
        size += 1 + 4;
      }
      if (Height != 0F) {
        size += 1 + 4;
      }
      if (Facing != 0F) {
        size += 1 + 4;
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWObject other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0UL) {
        Guid = other.Guid;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.ZoneId != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.ObjectType != 0) {
        ObjectType = other.ObjectType;
      }
      if (other.ScaleX != 0F) {
        ScaleX = other.ScaleX;
      }
      if (other.Height != 0F) {
        Height = other.Height;
      }
      if (other.Facing != 0F) {
        Facing = other.Facing;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Game.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadUInt64();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadUInt32();
            break;
          }
          case 32: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 45: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 53: {
            Height = input.ReadFloat();
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 66: {
            if (position_ == null) {
              Position = new global::Game.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Guid = input.ReadUInt64();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            ZoneId = input.ReadUInt32();
            break;
          }
          case 32: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 45: {
            ScaleX = input.ReadFloat();
            break;
          }
          case 53: {
            Height = input.ReadFloat();
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 66: {
            if (position_ == null) {
              Position = new global::Game.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for WoWGameObject, extending WoWObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWGameObject : pb::IMessage<WoWGameObject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWGameObject> _parser = new pb::MessageParser<WoWGameObject>(() => new WoWGameObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWGameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject(WoWGameObject other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      goState_ = other.goState_;
      level_ = other.level_;
      factionTemplate_ = other.factionTemplate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWGameObject Clone() {
      return new WoWGameObject(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Game.WoWObject base_;
    /// <summary>
    /// Composition for inheritance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWObject Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "goState" field.</summary>
    public const int GoStateFieldNumber = 2;
    private uint goState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GoState {
      get { return goState_; }
      set {
        goState_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "factionTemplate" field.</summary>
    public const int FactionTemplateFieldNumber = 4;
    private uint factionTemplate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FactionTemplate {
      get { return factionTemplate_; }
      set {
        factionTemplate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWGameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWGameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (GoState != other.GoState) return false;
      if (Level != other.Level) return false;
      if (FactionTemplate != other.FactionTemplate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (GoState != 0) hash ^= GoState.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (FactionTemplate != 0) hash ^= FactionTemplate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (GoState != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GoState);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (FactionTemplate != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FactionTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (GoState != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GoState);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Level);
      }
      if (FactionTemplate != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FactionTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (GoState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoState);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (FactionTemplate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FactionTemplate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWGameObject other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Game.WoWObject();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.GoState != 0) {
        GoState = other.GoState;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.FactionTemplate != 0) {
        FactionTemplate = other.FactionTemplate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 16: {
            GoState = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            FactionTemplate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Game.WoWObject();
            }
            input.ReadMessage(Base);
            break;
          }
          case 16: {
            GoState = input.ReadUInt32();
            break;
          }
          case 24: {
            Level = input.ReadUInt32();
            break;
          }
          case 32: {
            FactionTemplate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for WoWUnit, extending WoWGameObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWUnit : pb::IMessage<WoWUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWUnit> _parser = new pb::MessageParser<WoWUnit>(() => new WoWUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit(WoWUnit other) : this() {
      gameObject_ = other.gameObject_ != null ? other.gameObject_.Clone() : null;
      charm_ = other.charm_;
      summon_ = other.summon_;
      charmedBy_ = other.charmedBy_;
      summonedBy_ = other.summonedBy_;
      createdBy_ = other.createdBy_;
      targetGuid_ = other.targetGuid_;
      persuaded_ = other.persuaded_;
      channelObject_ = other.channelObject_;
      channelSpellId_ = other.channelSpellId_;
      health_ = other.health_;
      maxHealth_ = other.maxHealth_;
      power_ = other.power_.Clone();
      maxPower_ = other.maxPower_.Clone();
      stats_ = other.stats_.Clone();
      resistances_ = other.resistances_.Clone();
      bytes0_ = other.bytes0_;
      bytes1_ = other.bytes1_;
      bytes2_ = other.bytes2_;
      mountDisplayId_ = other.mountDisplayId_;
      unitFlags_ = other.unitFlags_;
      movementFlags_ = other.movementFlags_;
      dynamicFlags_ = other.dynamicFlags_;
      npcFlags_ = other.npcFlags_;
      auras_ = other.auras_.Clone();
      auraFlags_ = other.auraFlags_.Clone();
      auraLevels_ = other.auraLevels_.Clone();
      auraApplications_ = other.auraApplications_.Clone();
      auraState_ = other.auraState_;
      petNumber_ = other.petNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWUnit Clone() {
      return new WoWUnit(this);
    }

    /// <summary>Field number for the "gameObject" field.</summary>
    public const int GameObjectFieldNumber = 1;
    private global::Game.WoWGameObject gameObject_;
    /// <summary>
    /// Composition for inheritance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWGameObject GameObject {
      get { return gameObject_; }
      set {
        gameObject_ = value;
      }
    }

    /// <summary>Field number for the "charm" field.</summary>
    public const int CharmFieldNumber = 2;
    private ulong charm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Charm {
      get { return charm_; }
      set {
        charm_ = value;
      }
    }

    /// <summary>Field number for the "summon" field.</summary>
    public const int SummonFieldNumber = 3;
    private ulong summon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Summon {
      get { return summon_; }
      set {
        summon_ = value;
      }
    }

    /// <summary>Field number for the "charmedBy" field.</summary>
    public const int CharmedByFieldNumber = 4;
    private ulong charmedBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CharmedBy {
      get { return charmedBy_; }
      set {
        charmedBy_ = value;
      }
    }

    /// <summary>Field number for the "summonedBy" field.</summary>
    public const int SummonedByFieldNumber = 5;
    private ulong summonedBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SummonedBy {
      get { return summonedBy_; }
      set {
        summonedBy_ = value;
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private ulong createdBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = value;
      }
    }

    /// <summary>Field number for the "targetGuid" field.</summary>
    public const int TargetGuidFieldNumber = 7;
    private ulong targetGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = value;
      }
    }

    /// <summary>Field number for the "persuaded" field.</summary>
    public const int PersuadedFieldNumber = 8;
    private ulong persuaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Persuaded {
      get { return persuaded_; }
      set {
        persuaded_ = value;
      }
    }

    /// <summary>Field number for the "channelObject" field.</summary>
    public const int ChannelObjectFieldNumber = 9;
    private ulong channelObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ChannelObject {
      get { return channelObject_; }
      set {
        channelObject_ = value;
      }
    }

    /// <summary>Field number for the "channelSpellId" field.</summary>
    public const int ChannelSpellIdFieldNumber = 10;
    private uint channelSpellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelSpellId {
      get { return channelSpellId_; }
      set {
        channelSpellId_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 11;
    private uint health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "maxHealth" field.</summary>
    public const int MaxHealthFieldNumber = 12;
    private uint maxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 13;
    private static readonly pbc::MapField<uint, uint>.Codec _map_power_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 106);
    private readonly pbc::MapField<uint, uint> power_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Power {
      get { return power_; }
    }

    /// <summary>Field number for the "maxPower" field.</summary>
    public const int MaxPowerFieldNumber = 14;
    private static readonly pbc::MapField<uint, uint>.Codec _map_maxPower_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 114);
    private readonly pbc::MapField<uint, uint> maxPower_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> MaxPower {
      get { return maxPower_; }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 15;
    private static readonly pbc::MapField<uint, uint>.Codec _map_stats_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 122);
    private readonly pbc::MapField<uint, uint> stats_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Stats {
      get { return stats_; }
    }

    /// <summary>Field number for the "resistances" field.</summary>
    public const int ResistancesFieldNumber = 16;
    private static readonly pbc::MapField<uint, uint>.Codec _map_resistances_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 130);
    private readonly pbc::MapField<uint, uint> resistances_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Resistances {
      get { return resistances_; }
    }

    /// <summary>Field number for the "bytes0" field.</summary>
    public const int Bytes0FieldNumber = 17;
    private uint bytes0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bytes0 {
      get { return bytes0_; }
      set {
        bytes0_ = value;
      }
    }

    /// <summary>Field number for the "bytes1" field.</summary>
    public const int Bytes1FieldNumber = 18;
    private uint bytes1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bytes1 {
      get { return bytes1_; }
      set {
        bytes1_ = value;
      }
    }

    /// <summary>Field number for the "bytes2" field.</summary>
    public const int Bytes2FieldNumber = 19;
    private uint bytes2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bytes2 {
      get { return bytes2_; }
      set {
        bytes2_ = value;
      }
    }

    /// <summary>Field number for the "mountDisplayId" field.</summary>
    public const int MountDisplayIdFieldNumber = 20;
    private uint mountDisplayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MountDisplayId {
      get { return mountDisplayId_; }
      set {
        mountDisplayId_ = value;
      }
    }

    /// <summary>Field number for the "unitFlags" field.</summary>
    public const int UnitFlagsFieldNumber = 21;
    private uint unitFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitFlags {
      get { return unitFlags_; }
      set {
        unitFlags_ = value;
      }
    }

    /// <summary>Field number for the "movementFlags" field.</summary>
    public const int MovementFlagsFieldNumber = 22;
    private uint movementFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MovementFlags {
      get { return movementFlags_; }
      set {
        movementFlags_ = value;
      }
    }

    /// <summary>Field number for the "dynamicFlags" field.</summary>
    public const int DynamicFlagsFieldNumber = 23;
    private uint dynamicFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DynamicFlags {
      get { return dynamicFlags_; }
      set {
        dynamicFlags_ = value;
      }
    }

    /// <summary>Field number for the "npcFlags" field.</summary>
    public const int NpcFlagsFieldNumber = 24;
    private uint npcFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NpcFlags {
      get { return npcFlags_; }
      set {
        npcFlags_ = value;
      }
    }

    /// <summary>Field number for the "auras" field.</summary>
    public const int AurasFieldNumber = 25;
    private static readonly pb::FieldCodec<uint> _repeated_auras_codec
        = pb::FieldCodec.ForUInt32(202);
    private readonly pbc::RepeatedField<uint> auras_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Auras {
      get { return auras_; }
    }

    /// <summary>Field number for the "auraFlags" field.</summary>
    public const int AuraFlagsFieldNumber = 26;
    private static readonly pb::FieldCodec<uint> _repeated_auraFlags_codec
        = pb::FieldCodec.ForUInt32(210);
    private readonly pbc::RepeatedField<uint> auraFlags_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AuraFlags {
      get { return auraFlags_; }
    }

    /// <summary>Field number for the "auraLevels" field.</summary>
    public const int AuraLevelsFieldNumber = 27;
    private static readonly pb::FieldCodec<uint> _repeated_auraLevels_codec
        = pb::FieldCodec.ForUInt32(218);
    private readonly pbc::RepeatedField<uint> auraLevels_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AuraLevels {
      get { return auraLevels_; }
    }

    /// <summary>Field number for the "auraApplications" field.</summary>
    public const int AuraApplicationsFieldNumber = 28;
    private static readonly pb::FieldCodec<uint> _repeated_auraApplications_codec
        = pb::FieldCodec.ForUInt32(226);
    private readonly pbc::RepeatedField<uint> auraApplications_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> AuraApplications {
      get { return auraApplications_; }
    }

    /// <summary>Field number for the "auraState" field.</summary>
    public const int AuraStateFieldNumber = 29;
    private uint auraState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AuraState {
      get { return auraState_; }
      set {
        auraState_ = value;
      }
    }

    /// <summary>Field number for the "petNumber" field.</summary>
    public const int PetNumberFieldNumber = 30;
    private uint petNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PetNumber {
      get { return petNumber_; }
      set {
        petNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameObject, other.GameObject)) return false;
      if (Charm != other.Charm) return false;
      if (Summon != other.Summon) return false;
      if (CharmedBy != other.CharmedBy) return false;
      if (SummonedBy != other.SummonedBy) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (Persuaded != other.Persuaded) return false;
      if (ChannelObject != other.ChannelObject) return false;
      if (ChannelSpellId != other.ChannelSpellId) return false;
      if (Health != other.Health) return false;
      if (MaxHealth != other.MaxHealth) return false;
      if (!Power.Equals(other.Power)) return false;
      if (!MaxPower.Equals(other.MaxPower)) return false;
      if (!Stats.Equals(other.Stats)) return false;
      if (!Resistances.Equals(other.Resistances)) return false;
      if (Bytes0 != other.Bytes0) return false;
      if (Bytes1 != other.Bytes1) return false;
      if (Bytes2 != other.Bytes2) return false;
      if (MountDisplayId != other.MountDisplayId) return false;
      if (UnitFlags != other.UnitFlags) return false;
      if (MovementFlags != other.MovementFlags) return false;
      if (DynamicFlags != other.DynamicFlags) return false;
      if (NpcFlags != other.NpcFlags) return false;
      if(!auras_.Equals(other.auras_)) return false;
      if(!auraFlags_.Equals(other.auraFlags_)) return false;
      if(!auraLevels_.Equals(other.auraLevels_)) return false;
      if(!auraApplications_.Equals(other.auraApplications_)) return false;
      if (AuraState != other.AuraState) return false;
      if (PetNumber != other.PetNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameObject_ != null) hash ^= GameObject.GetHashCode();
      if (Charm != 0UL) hash ^= Charm.GetHashCode();
      if (Summon != 0UL) hash ^= Summon.GetHashCode();
      if (CharmedBy != 0UL) hash ^= CharmedBy.GetHashCode();
      if (SummonedBy != 0UL) hash ^= SummonedBy.GetHashCode();
      if (CreatedBy != 0UL) hash ^= CreatedBy.GetHashCode();
      if (TargetGuid != 0UL) hash ^= TargetGuid.GetHashCode();
      if (Persuaded != 0UL) hash ^= Persuaded.GetHashCode();
      if (ChannelObject != 0UL) hash ^= ChannelObject.GetHashCode();
      if (ChannelSpellId != 0) hash ^= ChannelSpellId.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (MaxHealth != 0) hash ^= MaxHealth.GetHashCode();
      hash ^= Power.GetHashCode();
      hash ^= MaxPower.GetHashCode();
      hash ^= Stats.GetHashCode();
      hash ^= Resistances.GetHashCode();
      if (Bytes0 != 0) hash ^= Bytes0.GetHashCode();
      if (Bytes1 != 0) hash ^= Bytes1.GetHashCode();
      if (Bytes2 != 0) hash ^= Bytes2.GetHashCode();
      if (MountDisplayId != 0) hash ^= MountDisplayId.GetHashCode();
      if (UnitFlags != 0) hash ^= UnitFlags.GetHashCode();
      if (MovementFlags != 0) hash ^= MovementFlags.GetHashCode();
      if (DynamicFlags != 0) hash ^= DynamicFlags.GetHashCode();
      if (NpcFlags != 0) hash ^= NpcFlags.GetHashCode();
      hash ^= auras_.GetHashCode();
      hash ^= auraFlags_.GetHashCode();
      hash ^= auraLevels_.GetHashCode();
      hash ^= auraApplications_.GetHashCode();
      if (AuraState != 0) hash ^= AuraState.GetHashCode();
      if (PetNumber != 0) hash ^= PetNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameObject);
      }
      if (Charm != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Charm);
      }
      if (Summon != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Summon);
      }
      if (CharmedBy != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CharmedBy);
      }
      if (SummonedBy != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(SummonedBy);
      }
      if (CreatedBy != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CreatedBy);
      }
      if (TargetGuid != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TargetGuid);
      }
      if (Persuaded != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Persuaded);
      }
      if (ChannelObject != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(ChannelObject);
      }
      if (ChannelSpellId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ChannelSpellId);
      }
      if (Health != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Health);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxHealth);
      }
      power_.WriteTo(output, _map_power_codec);
      maxPower_.WriteTo(output, _map_maxPower_codec);
      stats_.WriteTo(output, _map_stats_codec);
      resistances_.WriteTo(output, _map_resistances_codec);
      if (Bytes0 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Bytes0);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(Bytes1);
      }
      if (Bytes2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Bytes2);
      }
      if (MountDisplayId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(MountDisplayId);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(UnitFlags);
      }
      if (MovementFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(MovementFlags);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(DynamicFlags);
      }
      if (NpcFlags != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(NpcFlags);
      }
      auras_.WriteTo(output, _repeated_auras_codec);
      auraFlags_.WriteTo(output, _repeated_auraFlags_codec);
      auraLevels_.WriteTo(output, _repeated_auraLevels_codec);
      auraApplications_.WriteTo(output, _repeated_auraApplications_codec);
      if (AuraState != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(AuraState);
      }
      if (PetNumber != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(PetNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameObject);
      }
      if (Charm != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Charm);
      }
      if (Summon != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Summon);
      }
      if (CharmedBy != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CharmedBy);
      }
      if (SummonedBy != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(SummonedBy);
      }
      if (CreatedBy != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(CreatedBy);
      }
      if (TargetGuid != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TargetGuid);
      }
      if (Persuaded != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Persuaded);
      }
      if (ChannelObject != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(ChannelObject);
      }
      if (ChannelSpellId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(ChannelSpellId);
      }
      if (Health != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Health);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxHealth);
      }
      power_.WriteTo(ref output, _map_power_codec);
      maxPower_.WriteTo(ref output, _map_maxPower_codec);
      stats_.WriteTo(ref output, _map_stats_codec);
      resistances_.WriteTo(ref output, _map_resistances_codec);
      if (Bytes0 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Bytes0);
      }
      if (Bytes1 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(Bytes1);
      }
      if (Bytes2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Bytes2);
      }
      if (MountDisplayId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(MountDisplayId);
      }
      if (UnitFlags != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(UnitFlags);
      }
      if (MovementFlags != 0) {
        output.WriteRawTag(176, 1);
        output.WriteUInt32(MovementFlags);
      }
      if (DynamicFlags != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(DynamicFlags);
      }
      if (NpcFlags != 0) {
        output.WriteRawTag(192, 1);
        output.WriteUInt32(NpcFlags);
      }
      auras_.WriteTo(ref output, _repeated_auras_codec);
      auraFlags_.WriteTo(ref output, _repeated_auraFlags_codec);
      auraLevels_.WriteTo(ref output, _repeated_auraLevels_codec);
      auraApplications_.WriteTo(ref output, _repeated_auraApplications_codec);
      if (AuraState != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(AuraState);
      }
      if (PetNumber != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(PetNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameObject);
      }
      if (Charm != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Charm);
      }
      if (Summon != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Summon);
      }
      if (CharmedBy != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CharmedBy);
      }
      if (SummonedBy != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SummonedBy);
      }
      if (CreatedBy != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedBy);
      }
      if (TargetGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetGuid);
      }
      if (Persuaded != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Persuaded);
      }
      if (ChannelObject != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChannelObject);
      }
      if (ChannelSpellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelSpellId);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Health);
      }
      if (MaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxHealth);
      }
      size += power_.CalculateSize(_map_power_codec);
      size += maxPower_.CalculateSize(_map_maxPower_codec);
      size += stats_.CalculateSize(_map_stats_codec);
      size += resistances_.CalculateSize(_map_resistances_codec);
      if (Bytes0 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Bytes0);
      }
      if (Bytes1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Bytes1);
      }
      if (Bytes2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Bytes2);
      }
      if (MountDisplayId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MountDisplayId);
      }
      if (UnitFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UnitFlags);
      }
      if (MovementFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MovementFlags);
      }
      if (DynamicFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DynamicFlags);
      }
      if (NpcFlags != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NpcFlags);
      }
      size += auras_.CalculateSize(_repeated_auras_codec);
      size += auraFlags_.CalculateSize(_repeated_auraFlags_codec);
      size += auraLevels_.CalculateSize(_repeated_auraLevels_codec);
      size += auraApplications_.CalculateSize(_repeated_auraApplications_codec);
      if (AuraState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AuraState);
      }
      if (PetNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PetNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWUnit other) {
      if (other == null) {
        return;
      }
      if (other.gameObject_ != null) {
        if (gameObject_ == null) {
          GameObject = new global::Game.WoWGameObject();
        }
        GameObject.MergeFrom(other.GameObject);
      }
      if (other.Charm != 0UL) {
        Charm = other.Charm;
      }
      if (other.Summon != 0UL) {
        Summon = other.Summon;
      }
      if (other.CharmedBy != 0UL) {
        CharmedBy = other.CharmedBy;
      }
      if (other.SummonedBy != 0UL) {
        SummonedBy = other.SummonedBy;
      }
      if (other.CreatedBy != 0UL) {
        CreatedBy = other.CreatedBy;
      }
      if (other.TargetGuid != 0UL) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Persuaded != 0UL) {
        Persuaded = other.Persuaded;
      }
      if (other.ChannelObject != 0UL) {
        ChannelObject = other.ChannelObject;
      }
      if (other.ChannelSpellId != 0) {
        ChannelSpellId = other.ChannelSpellId;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.MaxHealth != 0) {
        MaxHealth = other.MaxHealth;
      }
      power_.MergeFrom(other.power_);
      maxPower_.MergeFrom(other.maxPower_);
      stats_.MergeFrom(other.stats_);
      resistances_.MergeFrom(other.resistances_);
      if (other.Bytes0 != 0) {
        Bytes0 = other.Bytes0;
      }
      if (other.Bytes1 != 0) {
        Bytes1 = other.Bytes1;
      }
      if (other.Bytes2 != 0) {
        Bytes2 = other.Bytes2;
      }
      if (other.MountDisplayId != 0) {
        MountDisplayId = other.MountDisplayId;
      }
      if (other.UnitFlags != 0) {
        UnitFlags = other.UnitFlags;
      }
      if (other.MovementFlags != 0) {
        MovementFlags = other.MovementFlags;
      }
      if (other.DynamicFlags != 0) {
        DynamicFlags = other.DynamicFlags;
      }
      if (other.NpcFlags != 0) {
        NpcFlags = other.NpcFlags;
      }
      auras_.Add(other.auras_);
      auraFlags_.Add(other.auraFlags_);
      auraLevels_.Add(other.auraLevels_);
      auraApplications_.Add(other.auraApplications_);
      if (other.AuraState != 0) {
        AuraState = other.AuraState;
      }
      if (other.PetNumber != 0) {
        PetNumber = other.PetNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameObject_ == null) {
              GameObject = new global::Game.WoWGameObject();
            }
            input.ReadMessage(GameObject);
            break;
          }
          case 16: {
            Charm = input.ReadUInt64();
            break;
          }
          case 24: {
            Summon = input.ReadUInt64();
            break;
          }
          case 32: {
            CharmedBy = input.ReadUInt64();
            break;
          }
          case 40: {
            SummonedBy = input.ReadUInt64();
            break;
          }
          case 48: {
            CreatedBy = input.ReadUInt64();
            break;
          }
          case 56: {
            TargetGuid = input.ReadUInt64();
            break;
          }
          case 64: {
            Persuaded = input.ReadUInt64();
            break;
          }
          case 72: {
            ChannelObject = input.ReadUInt64();
            break;
          }
          case 80: {
            ChannelSpellId = input.ReadUInt32();
            break;
          }
          case 88: {
            Health = input.ReadUInt32();
            break;
          }
          case 96: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 106: {
            power_.AddEntriesFrom(input, _map_power_codec);
            break;
          }
          case 114: {
            maxPower_.AddEntriesFrom(input, _map_maxPower_codec);
            break;
          }
          case 122: {
            stats_.AddEntriesFrom(input, _map_stats_codec);
            break;
          }
          case 130: {
            resistances_.AddEntriesFrom(input, _map_resistances_codec);
            break;
          }
          case 136: {
            Bytes0 = input.ReadUInt32();
            break;
          }
          case 144: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 152: {
            Bytes2 = input.ReadUInt32();
            break;
          }
          case 160: {
            MountDisplayId = input.ReadUInt32();
            break;
          }
          case 168: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 176: {
            MovementFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 192: {
            NpcFlags = input.ReadUInt32();
            break;
          }
          case 202:
          case 200: {
            auras_.AddEntriesFrom(input, _repeated_auras_codec);
            break;
          }
          case 210:
          case 208: {
            auraFlags_.AddEntriesFrom(input, _repeated_auraFlags_codec);
            break;
          }
          case 218:
          case 216: {
            auraLevels_.AddEntriesFrom(input, _repeated_auraLevels_codec);
            break;
          }
          case 226:
          case 224: {
            auraApplications_.AddEntriesFrom(input, _repeated_auraApplications_codec);
            break;
          }
          case 232: {
            AuraState = input.ReadUInt32();
            break;
          }
          case 240: {
            PetNumber = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameObject_ == null) {
              GameObject = new global::Game.WoWGameObject();
            }
            input.ReadMessage(GameObject);
            break;
          }
          case 16: {
            Charm = input.ReadUInt64();
            break;
          }
          case 24: {
            Summon = input.ReadUInt64();
            break;
          }
          case 32: {
            CharmedBy = input.ReadUInt64();
            break;
          }
          case 40: {
            SummonedBy = input.ReadUInt64();
            break;
          }
          case 48: {
            CreatedBy = input.ReadUInt64();
            break;
          }
          case 56: {
            TargetGuid = input.ReadUInt64();
            break;
          }
          case 64: {
            Persuaded = input.ReadUInt64();
            break;
          }
          case 72: {
            ChannelObject = input.ReadUInt64();
            break;
          }
          case 80: {
            ChannelSpellId = input.ReadUInt32();
            break;
          }
          case 88: {
            Health = input.ReadUInt32();
            break;
          }
          case 96: {
            MaxHealth = input.ReadUInt32();
            break;
          }
          case 106: {
            power_.AddEntriesFrom(ref input, _map_power_codec);
            break;
          }
          case 114: {
            maxPower_.AddEntriesFrom(ref input, _map_maxPower_codec);
            break;
          }
          case 122: {
            stats_.AddEntriesFrom(ref input, _map_stats_codec);
            break;
          }
          case 130: {
            resistances_.AddEntriesFrom(ref input, _map_resistances_codec);
            break;
          }
          case 136: {
            Bytes0 = input.ReadUInt32();
            break;
          }
          case 144: {
            Bytes1 = input.ReadUInt32();
            break;
          }
          case 152: {
            Bytes2 = input.ReadUInt32();
            break;
          }
          case 160: {
            MountDisplayId = input.ReadUInt32();
            break;
          }
          case 168: {
            UnitFlags = input.ReadUInt32();
            break;
          }
          case 176: {
            MovementFlags = input.ReadUInt32();
            break;
          }
          case 184: {
            DynamicFlags = input.ReadUInt32();
            break;
          }
          case 192: {
            NpcFlags = input.ReadUInt32();
            break;
          }
          case 202:
          case 200: {
            auras_.AddEntriesFrom(ref input, _repeated_auras_codec);
            break;
          }
          case 210:
          case 208: {
            auraFlags_.AddEntriesFrom(ref input, _repeated_auraFlags_codec);
            break;
          }
          case 218:
          case 216: {
            auraLevels_.AddEntriesFrom(ref input, _repeated_auraLevels_codec);
            break;
          }
          case 226:
          case 224: {
            auraApplications_.AddEntriesFrom(ref input, _repeated_auraApplications_codec);
            break;
          }
          case 232: {
            AuraState = input.ReadUInt32();
            break;
          }
          case 240: {
            PetNumber = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for WoWPlayer, extending WoWUnit
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWPlayer : pb::IMessage<WoWPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWPlayer> _parser = new pb::MessageParser<WoWPlayer>(() => new WoWPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWPlayer(WoWPlayer other) : this() {
      unit_ = other.unit_ != null ? other.unit_.Clone() : null;
      playerBytes0_ = other.playerBytes0_;
      playerBytes1_ = other.playerBytes1_;
      playerBytes2_ = other.playerBytes2_;
      playerFlags_ = other.playerFlags_;
      questLogEntries_ = other.questLogEntries_.Clone();
      inventory_ = other.inventory_.Clone();
      bagContents_ = other.bagContents_.Clone();
      keyRing_ = other.keyRing_.Clone();
      farsightGuid_ = other.farsightGuid_;
      comboTargetGuid_ = other.comboTargetGuid_;
      playerXP_ = other.playerXP_;
      skillInfo_ = other.skillInfo_.Clone();
      spellList_ = other.spellList_.Clone();
      spellCooldowns_ = other.spellCooldowns_.Clone();
      spellStacks_ = other.spellStacks_.Clone();
      buffList_ = other.buffList_.Clone();
      characterPoints1_ = other.characterPoints1_;
      characterPoints2_ = other.characterPoints2_;
      trackCreatures_ = other.trackCreatures_;
      trackResources_ = other.trackResources_;
      blockPercent_ = other.blockPercent_;
      dodgePercent_ = other.dodgePercent_;
      parryPercent_ = other.parryPercent_;
      critPercent_ = other.critPercent_;
      rangedCritPercent_ = other.rangedCritPercent_;
      exploredZones_ = other.exploredZones_.Clone();
      restStateExperience_ = other.restStateExperience_;
      coinage_ = other.coinage_;
      posModDamageDone_ = other.posModDamageDone_;
      negModDamageDone_ = other.negModDamageDone_;
      pctModDamageDone_ = other.pctModDamageDone_;
      posStats_ = other.posStats_.Clone();
      negStats_ = other.negStats_.Clone();
      posResistBuff_ = other.posResistBuff_.Clone();
      negResistBuff_ = other.negResistBuff_.Clone();
      ammoId_ = other.ammoId_;
      selfResSpell_ = other.selfResSpell_;
      pvpMedals_ = other.pvpMedals_;
      sessionKills_ = other.sessionKills_;
      watchedFactionIndex_ = other.watchedFactionIndex_;
      combatRating_ = other.combatRating_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWPlayer Clone() {
      return new WoWPlayer(this);
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 1;
    private global::Game.WoWUnit unit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWUnit Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    /// <summary>Field number for the "playerBytes0" field.</summary>
    public const int PlayerBytes0FieldNumber = 2;
    private uint playerBytes0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerBytes0 {
      get { return playerBytes0_; }
      set {
        playerBytes0_ = value;
      }
    }

    /// <summary>Field number for the "playerBytes1" field.</summary>
    public const int PlayerBytes1FieldNumber = 3;
    private uint playerBytes1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerBytes1 {
      get { return playerBytes1_; }
      set {
        playerBytes1_ = value;
      }
    }

    /// <summary>Field number for the "playerBytes2" field.</summary>
    public const int PlayerBytes2FieldNumber = 4;
    private uint playerBytes2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerBytes2 {
      get { return playerBytes2_; }
      set {
        playerBytes2_ = value;
      }
    }

    /// <summary>Field number for the "playerFlags" field.</summary>
    public const int PlayerFlagsFieldNumber = 5;
    private uint playerFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerFlags {
      get { return playerFlags_; }
      set {
        playerFlags_ = value;
      }
    }

    /// <summary>Field number for the "questLogEntries" field.</summary>
    public const int QuestLogEntriesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Game.QuestLogEntry> _repeated_questLogEntries_codec
        = pb::FieldCodec.ForMessage(50, global::Game.QuestLogEntry.Parser);
    private readonly pbc::RepeatedField<global::Game.QuestLogEntry> questLogEntries_ = new pbc::RepeatedField<global::Game.QuestLogEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Game.QuestLogEntry> QuestLogEntries {
      get { return questLogEntries_; }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 7;
    private static readonly pbc::MapField<uint, ulong>.Codec _map_inventory_codec
        = new pbc::MapField<uint, ulong>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt64(16, 0UL), 58);
    private readonly pbc::MapField<uint, ulong> inventory_ = new pbc::MapField<uint, ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, ulong> Inventory {
      get { return inventory_; }
    }

    /// <summary>Field number for the "bagContents" field.</summary>
    public const int BagContentsFieldNumber = 8;
    private static readonly pbc::MapField<uint, uint>.Codec _map_bagContents_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 66);
    private readonly pbc::MapField<uint, uint> bagContents_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> BagContents {
      get { return bagContents_; }
    }

    /// <summary>Field number for the "keyRing" field.</summary>
    public const int KeyRingFieldNumber = 9;
    private static readonly pbc::MapField<uint, uint>.Codec _map_keyRing_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 74);
    private readonly pbc::MapField<uint, uint> keyRing_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> KeyRing {
      get { return keyRing_; }
    }

    /// <summary>Field number for the "farsightGuid" field.</summary>
    public const int FarsightGuidFieldNumber = 10;
    private ulong farsightGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FarsightGuid {
      get { return farsightGuid_; }
      set {
        farsightGuid_ = value;
      }
    }

    /// <summary>Field number for the "comboTargetGuid" field.</summary>
    public const int ComboTargetGuidFieldNumber = 11;
    private ulong comboTargetGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ComboTargetGuid {
      get { return comboTargetGuid_; }
      set {
        comboTargetGuid_ = value;
      }
    }

    /// <summary>Field number for the "playerXP" field.</summary>
    public const int PlayerXPFieldNumber = 12;
    private uint playerXP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlayerXP {
      get { return playerXP_; }
      set {
        playerXP_ = value;
      }
    }

    /// <summary>Field number for the "skillInfo" field.</summary>
    public const int SkillInfoFieldNumber = 13;
    private static readonly pbc::MapField<uint, uint>.Codec _map_skillInfo_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 106);
    private readonly pbc::MapField<uint, uint> skillInfo_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> SkillInfo {
      get { return skillInfo_; }
    }

    /// <summary>Field number for the "spellList" field.</summary>
    public const int SpellListFieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_spellList_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> spellList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SpellList {
      get { return spellList_; }
    }

    /// <summary>Field number for the "spellCooldowns" field.</summary>
    public const int SpellCooldownsFieldNumber = 15;
    private static readonly pbc::MapField<uint, float>.Codec _map_spellCooldowns_codec
        = new pbc::MapField<uint, float>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForFloat(21, 0F), 122);
    private readonly pbc::MapField<uint, float> spellCooldowns_ = new pbc::MapField<uint, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, float> SpellCooldowns {
      get { return spellCooldowns_; }
    }

    /// <summary>Field number for the "spellStacks" field.</summary>
    public const int SpellStacksFieldNumber = 16;
    private static readonly pbc::MapField<uint, uint>.Codec _map_spellStacks_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 130);
    private readonly pbc::MapField<uint, uint> spellStacks_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> SpellStacks {
      get { return spellStacks_; }
    }

    /// <summary>Field number for the "buffList" field.</summary>
    public const int BuffListFieldNumber = 17;
    private static readonly pbc::MapField<uint, float>.Codec _map_buffList_codec
        = new pbc::MapField<uint, float>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForFloat(21, 0F), 138);
    private readonly pbc::MapField<uint, float> buffList_ = new pbc::MapField<uint, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, float> BuffList {
      get { return buffList_; }
    }

    /// <summary>Field number for the "characterPoints1" field.</summary>
    public const int CharacterPoints1FieldNumber = 18;
    private uint characterPoints1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CharacterPoints1 {
      get { return characterPoints1_; }
      set {
        characterPoints1_ = value;
      }
    }

    /// <summary>Field number for the "characterPoints2" field.</summary>
    public const int CharacterPoints2FieldNumber = 19;
    private uint characterPoints2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CharacterPoints2 {
      get { return characterPoints2_; }
      set {
        characterPoints2_ = value;
      }
    }

    /// <summary>Field number for the "trackCreatures" field.</summary>
    public const int TrackCreaturesFieldNumber = 20;
    private uint trackCreatures_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrackCreatures {
      get { return trackCreatures_; }
      set {
        trackCreatures_ = value;
      }
    }

    /// <summary>Field number for the "trackResources" field.</summary>
    public const int TrackResourcesFieldNumber = 21;
    private uint trackResources_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrackResources {
      get { return trackResources_; }
      set {
        trackResources_ = value;
      }
    }

    /// <summary>Field number for the "blockPercent" field.</summary>
    public const int BlockPercentFieldNumber = 22;
    private float blockPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BlockPercent {
      get { return blockPercent_; }
      set {
        blockPercent_ = value;
      }
    }

    /// <summary>Field number for the "dodgePercent" field.</summary>
    public const int DodgePercentFieldNumber = 23;
    private float dodgePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DodgePercent {
      get { return dodgePercent_; }
      set {
        dodgePercent_ = value;
      }
    }

    /// <summary>Field number for the "parryPercent" field.</summary>
    public const int ParryPercentFieldNumber = 24;
    private float parryPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ParryPercent {
      get { return parryPercent_; }
      set {
        parryPercent_ = value;
      }
    }

    /// <summary>Field number for the "critPercent" field.</summary>
    public const int CritPercentFieldNumber = 25;
    private float critPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CritPercent {
      get { return critPercent_; }
      set {
        critPercent_ = value;
      }
    }

    /// <summary>Field number for the "rangedCritPercent" field.</summary>
    public const int RangedCritPercentFieldNumber = 26;
    private float rangedCritPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RangedCritPercent {
      get { return rangedCritPercent_; }
      set {
        rangedCritPercent_ = value;
      }
    }

    /// <summary>Field number for the "exploredZones" field.</summary>
    public const int ExploredZonesFieldNumber = 27;
    private static readonly pbc::MapField<uint, uint>.Codec _map_exploredZones_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 218);
    private readonly pbc::MapField<uint, uint> exploredZones_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> ExploredZones {
      get { return exploredZones_; }
    }

    /// <summary>Field number for the "restStateExperience" field.</summary>
    public const int RestStateExperienceFieldNumber = 28;
    private uint restStateExperience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RestStateExperience {
      get { return restStateExperience_; }
      set {
        restStateExperience_ = value;
      }
    }

    /// <summary>Field number for the "coinage" field.</summary>
    public const int CoinageFieldNumber = 29;
    private uint coinage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Coinage {
      get { return coinage_; }
      set {
        coinage_ = value;
      }
    }

    /// <summary>Field number for the "posModDamageDone" field.</summary>
    public const int PosModDamageDoneFieldNumber = 30;
    private uint posModDamageDone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PosModDamageDone {
      get { return posModDamageDone_; }
      set {
        posModDamageDone_ = value;
      }
    }

    /// <summary>Field number for the "negModDamageDone" field.</summary>
    public const int NegModDamageDoneFieldNumber = 31;
    private uint negModDamageDone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NegModDamageDone {
      get { return negModDamageDone_; }
      set {
        negModDamageDone_ = value;
      }
    }

    /// <summary>Field number for the "pctModDamageDone" field.</summary>
    public const int PctModDamageDoneFieldNumber = 32;
    private uint pctModDamageDone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PctModDamageDone {
      get { return pctModDamageDone_; }
      set {
        pctModDamageDone_ = value;
      }
    }

    /// <summary>Field number for the "posStats" field.</summary>
    public const int PosStatsFieldNumber = 33;
    private static readonly pbc::MapField<uint, uint>.Codec _map_posStats_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 266);
    private readonly pbc::MapField<uint, uint> posStats_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> PosStats {
      get { return posStats_; }
    }

    /// <summary>Field number for the "negStats" field.</summary>
    public const int NegStatsFieldNumber = 34;
    private static readonly pbc::MapField<uint, uint>.Codec _map_negStats_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 274);
    private readonly pbc::MapField<uint, uint> negStats_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> NegStats {
      get { return negStats_; }
    }

    /// <summary>Field number for the "posResistBuff" field.</summary>
    public const int PosResistBuffFieldNumber = 35;
    private static readonly pbc::MapField<uint, uint>.Codec _map_posResistBuff_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 282);
    private readonly pbc::MapField<uint, uint> posResistBuff_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> PosResistBuff {
      get { return posResistBuff_; }
    }

    /// <summary>Field number for the "negResistBuff" field.</summary>
    public const int NegResistBuffFieldNumber = 36;
    private static readonly pbc::MapField<uint, uint>.Codec _map_negResistBuff_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 290);
    private readonly pbc::MapField<uint, uint> negResistBuff_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> NegResistBuff {
      get { return negResistBuff_; }
    }

    /// <summary>Field number for the "ammoId" field.</summary>
    public const int AmmoIdFieldNumber = 37;
    private uint ammoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AmmoId {
      get { return ammoId_; }
      set {
        ammoId_ = value;
      }
    }

    /// <summary>Field number for the "selfResSpell" field.</summary>
    public const int SelfResSpellFieldNumber = 38;
    private uint selfResSpell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SelfResSpell {
      get { return selfResSpell_; }
      set {
        selfResSpell_ = value;
      }
    }

    /// <summary>Field number for the "pvpMedals" field.</summary>
    public const int PvpMedalsFieldNumber = 39;
    private uint pvpMedals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PvpMedals {
      get { return pvpMedals_; }
      set {
        pvpMedals_ = value;
      }
    }

    /// <summary>Field number for the "sessionKills" field.</summary>
    public const int SessionKillsFieldNumber = 40;
    private uint sessionKills_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SessionKills {
      get { return sessionKills_; }
      set {
        sessionKills_ = value;
      }
    }

    /// <summary>Field number for the "watchedFactionIndex" field.</summary>
    public const int WatchedFactionIndexFieldNumber = 41;
    private uint watchedFactionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WatchedFactionIndex {
      get { return watchedFactionIndex_; }
      set {
        watchedFactionIndex_ = value;
      }
    }

    /// <summary>Field number for the "combatRating" field.</summary>
    public const int CombatRatingFieldNumber = 42;
    private static readonly pbc::MapField<uint, uint>.Codec _map_combatRating_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 338);
    private readonly pbc::MapField<uint, uint> combatRating_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> CombatRating {
      get { return combatRating_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Unit, other.Unit)) return false;
      if (PlayerBytes0 != other.PlayerBytes0) return false;
      if (PlayerBytes1 != other.PlayerBytes1) return false;
      if (PlayerBytes2 != other.PlayerBytes2) return false;
      if (PlayerFlags != other.PlayerFlags) return false;
      if(!questLogEntries_.Equals(other.questLogEntries_)) return false;
      if (!Inventory.Equals(other.Inventory)) return false;
      if (!BagContents.Equals(other.BagContents)) return false;
      if (!KeyRing.Equals(other.KeyRing)) return false;
      if (FarsightGuid != other.FarsightGuid) return false;
      if (ComboTargetGuid != other.ComboTargetGuid) return false;
      if (PlayerXP != other.PlayerXP) return false;
      if (!SkillInfo.Equals(other.SkillInfo)) return false;
      if(!spellList_.Equals(other.spellList_)) return false;
      if (!SpellCooldowns.Equals(other.SpellCooldowns)) return false;
      if (!SpellStacks.Equals(other.SpellStacks)) return false;
      if (!BuffList.Equals(other.BuffList)) return false;
      if (CharacterPoints1 != other.CharacterPoints1) return false;
      if (CharacterPoints2 != other.CharacterPoints2) return false;
      if (TrackCreatures != other.TrackCreatures) return false;
      if (TrackResources != other.TrackResources) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BlockPercent, other.BlockPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DodgePercent, other.DodgePercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ParryPercent, other.ParryPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CritPercent, other.CritPercent)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RangedCritPercent, other.RangedCritPercent)) return false;
      if (!ExploredZones.Equals(other.ExploredZones)) return false;
      if (RestStateExperience != other.RestStateExperience) return false;
      if (Coinage != other.Coinage) return false;
      if (PosModDamageDone != other.PosModDamageDone) return false;
      if (NegModDamageDone != other.NegModDamageDone) return false;
      if (PctModDamageDone != other.PctModDamageDone) return false;
      if (!PosStats.Equals(other.PosStats)) return false;
      if (!NegStats.Equals(other.NegStats)) return false;
      if (!PosResistBuff.Equals(other.PosResistBuff)) return false;
      if (!NegResistBuff.Equals(other.NegResistBuff)) return false;
      if (AmmoId != other.AmmoId) return false;
      if (SelfResSpell != other.SelfResSpell) return false;
      if (PvpMedals != other.PvpMedals) return false;
      if (SessionKills != other.SessionKills) return false;
      if (WatchedFactionIndex != other.WatchedFactionIndex) return false;
      if (!CombatRating.Equals(other.CombatRating)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (unit_ != null) hash ^= Unit.GetHashCode();
      if (PlayerBytes0 != 0) hash ^= PlayerBytes0.GetHashCode();
      if (PlayerBytes1 != 0) hash ^= PlayerBytes1.GetHashCode();
      if (PlayerBytes2 != 0) hash ^= PlayerBytes2.GetHashCode();
      if (PlayerFlags != 0) hash ^= PlayerFlags.GetHashCode();
      hash ^= questLogEntries_.GetHashCode();
      hash ^= Inventory.GetHashCode();
      hash ^= BagContents.GetHashCode();
      hash ^= KeyRing.GetHashCode();
      if (FarsightGuid != 0UL) hash ^= FarsightGuid.GetHashCode();
      if (ComboTargetGuid != 0UL) hash ^= ComboTargetGuid.GetHashCode();
      if (PlayerXP != 0) hash ^= PlayerXP.GetHashCode();
      hash ^= SkillInfo.GetHashCode();
      hash ^= spellList_.GetHashCode();
      hash ^= SpellCooldowns.GetHashCode();
      hash ^= SpellStacks.GetHashCode();
      hash ^= BuffList.GetHashCode();
      if (CharacterPoints1 != 0) hash ^= CharacterPoints1.GetHashCode();
      if (CharacterPoints2 != 0) hash ^= CharacterPoints2.GetHashCode();
      if (TrackCreatures != 0) hash ^= TrackCreatures.GetHashCode();
      if (TrackResources != 0) hash ^= TrackResources.GetHashCode();
      if (BlockPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BlockPercent);
      if (DodgePercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DodgePercent);
      if (ParryPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ParryPercent);
      if (CritPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CritPercent);
      if (RangedCritPercent != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RangedCritPercent);
      hash ^= ExploredZones.GetHashCode();
      if (RestStateExperience != 0) hash ^= RestStateExperience.GetHashCode();
      if (Coinage != 0) hash ^= Coinage.GetHashCode();
      if (PosModDamageDone != 0) hash ^= PosModDamageDone.GetHashCode();
      if (NegModDamageDone != 0) hash ^= NegModDamageDone.GetHashCode();
      if (PctModDamageDone != 0) hash ^= PctModDamageDone.GetHashCode();
      hash ^= PosStats.GetHashCode();
      hash ^= NegStats.GetHashCode();
      hash ^= PosResistBuff.GetHashCode();
      hash ^= NegResistBuff.GetHashCode();
      if (AmmoId != 0) hash ^= AmmoId.GetHashCode();
      if (SelfResSpell != 0) hash ^= SelfResSpell.GetHashCode();
      if (PvpMedals != 0) hash ^= PvpMedals.GetHashCode();
      if (SessionKills != 0) hash ^= SessionKills.GetHashCode();
      if (WatchedFactionIndex != 0) hash ^= WatchedFactionIndex.GetHashCode();
      hash ^= CombatRating.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (unit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Unit);
      }
      if (PlayerBytes0 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerBytes0);
      }
      if (PlayerBytes1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlayerBytes1);
      }
      if (PlayerBytes2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayerBytes2);
      }
      if (PlayerFlags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PlayerFlags);
      }
      questLogEntries_.WriteTo(output, _repeated_questLogEntries_codec);
      inventory_.WriteTo(output, _map_inventory_codec);
      bagContents_.WriteTo(output, _map_bagContents_codec);
      keyRing_.WriteTo(output, _map_keyRing_codec);
      if (FarsightGuid != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(FarsightGuid);
      }
      if (ComboTargetGuid != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(ComboTargetGuid);
      }
      if (PlayerXP != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PlayerXP);
      }
      skillInfo_.WriteTo(output, _map_skillInfo_codec);
      spellList_.WriteTo(output, _repeated_spellList_codec);
      spellCooldowns_.WriteTo(output, _map_spellCooldowns_codec);
      spellStacks_.WriteTo(output, _map_spellStacks_codec);
      buffList_.WriteTo(output, _map_buffList_codec);
      if (CharacterPoints1 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(CharacterPoints1);
      }
      if (CharacterPoints2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CharacterPoints2);
      }
      if (TrackCreatures != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(TrackCreatures);
      }
      if (TrackResources != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(TrackResources);
      }
      if (BlockPercent != 0F) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(BlockPercent);
      }
      if (DodgePercent != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(DodgePercent);
      }
      if (ParryPercent != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ParryPercent);
      }
      if (CritPercent != 0F) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(CritPercent);
      }
      if (RangedCritPercent != 0F) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(RangedCritPercent);
      }
      exploredZones_.WriteTo(output, _map_exploredZones_codec);
      if (RestStateExperience != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(RestStateExperience);
      }
      if (Coinage != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(Coinage);
      }
      if (PosModDamageDone != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(PosModDamageDone);
      }
      if (NegModDamageDone != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(NegModDamageDone);
      }
      if (PctModDamageDone != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(PctModDamageDone);
      }
      posStats_.WriteTo(output, _map_posStats_codec);
      negStats_.WriteTo(output, _map_negStats_codec);
      posResistBuff_.WriteTo(output, _map_posResistBuff_codec);
      negResistBuff_.WriteTo(output, _map_negResistBuff_codec);
      if (AmmoId != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(AmmoId);
      }
      if (SelfResSpell != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(SelfResSpell);
      }
      if (PvpMedals != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(PvpMedals);
      }
      if (SessionKills != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(SessionKills);
      }
      if (WatchedFactionIndex != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(WatchedFactionIndex);
      }
      combatRating_.WriteTo(output, _map_combatRating_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (unit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Unit);
      }
      if (PlayerBytes0 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerBytes0);
      }
      if (PlayerBytes1 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlayerBytes1);
      }
      if (PlayerBytes2 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PlayerBytes2);
      }
      if (PlayerFlags != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PlayerFlags);
      }
      questLogEntries_.WriteTo(ref output, _repeated_questLogEntries_codec);
      inventory_.WriteTo(ref output, _map_inventory_codec);
      bagContents_.WriteTo(ref output, _map_bagContents_codec);
      keyRing_.WriteTo(ref output, _map_keyRing_codec);
      if (FarsightGuid != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(FarsightGuid);
      }
      if (ComboTargetGuid != 0UL) {
        output.WriteRawTag(88);
        output.WriteUInt64(ComboTargetGuid);
      }
      if (PlayerXP != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PlayerXP);
      }
      skillInfo_.WriteTo(ref output, _map_skillInfo_codec);
      spellList_.WriteTo(ref output, _repeated_spellList_codec);
      spellCooldowns_.WriteTo(ref output, _map_spellCooldowns_codec);
      spellStacks_.WriteTo(ref output, _map_spellStacks_codec);
      buffList_.WriteTo(ref output, _map_buffList_codec);
      if (CharacterPoints1 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(CharacterPoints1);
      }
      if (CharacterPoints2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(CharacterPoints2);
      }
      if (TrackCreatures != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(TrackCreatures);
      }
      if (TrackResources != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(TrackResources);
      }
      if (BlockPercent != 0F) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(BlockPercent);
      }
      if (DodgePercent != 0F) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(DodgePercent);
      }
      if (ParryPercent != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ParryPercent);
      }
      if (CritPercent != 0F) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(CritPercent);
      }
      if (RangedCritPercent != 0F) {
        output.WriteRawTag(213, 1);
        output.WriteFloat(RangedCritPercent);
      }
      exploredZones_.WriteTo(ref output, _map_exploredZones_codec);
      if (RestStateExperience != 0) {
        output.WriteRawTag(224, 1);
        output.WriteUInt32(RestStateExperience);
      }
      if (Coinage != 0) {
        output.WriteRawTag(232, 1);
        output.WriteUInt32(Coinage);
      }
      if (PosModDamageDone != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(PosModDamageDone);
      }
      if (NegModDamageDone != 0) {
        output.WriteRawTag(248, 1);
        output.WriteUInt32(NegModDamageDone);
      }
      if (PctModDamageDone != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(PctModDamageDone);
      }
      posStats_.WriteTo(ref output, _map_posStats_codec);
      negStats_.WriteTo(ref output, _map_negStats_codec);
      posResistBuff_.WriteTo(ref output, _map_posResistBuff_codec);
      negResistBuff_.WriteTo(ref output, _map_negResistBuff_codec);
      if (AmmoId != 0) {
        output.WriteRawTag(168, 2);
        output.WriteUInt32(AmmoId);
      }
      if (SelfResSpell != 0) {
        output.WriteRawTag(176, 2);
        output.WriteUInt32(SelfResSpell);
      }
      if (PvpMedals != 0) {
        output.WriteRawTag(184, 2);
        output.WriteUInt32(PvpMedals);
      }
      if (SessionKills != 0) {
        output.WriteRawTag(192, 2);
        output.WriteUInt32(SessionKills);
      }
      if (WatchedFactionIndex != 0) {
        output.WriteRawTag(200, 2);
        output.WriteUInt32(WatchedFactionIndex);
      }
      combatRating_.WriteTo(ref output, _map_combatRating_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (unit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unit);
      }
      if (PlayerBytes0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerBytes0);
      }
      if (PlayerBytes1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerBytes1);
      }
      if (PlayerBytes2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerBytes2);
      }
      if (PlayerFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerFlags);
      }
      size += questLogEntries_.CalculateSize(_repeated_questLogEntries_codec);
      size += inventory_.CalculateSize(_map_inventory_codec);
      size += bagContents_.CalculateSize(_map_bagContents_codec);
      size += keyRing_.CalculateSize(_map_keyRing_codec);
      if (FarsightGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FarsightGuid);
      }
      if (ComboTargetGuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ComboTargetGuid);
      }
      if (PlayerXP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerXP);
      }
      size += skillInfo_.CalculateSize(_map_skillInfo_codec);
      size += spellList_.CalculateSize(_repeated_spellList_codec);
      size += spellCooldowns_.CalculateSize(_map_spellCooldowns_codec);
      size += spellStacks_.CalculateSize(_map_spellStacks_codec);
      size += buffList_.CalculateSize(_map_buffList_codec);
      if (CharacterPoints1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CharacterPoints1);
      }
      if (CharacterPoints2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CharacterPoints2);
      }
      if (TrackCreatures != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrackCreatures);
      }
      if (TrackResources != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TrackResources);
      }
      if (BlockPercent != 0F) {
        size += 2 + 4;
      }
      if (DodgePercent != 0F) {
        size += 2 + 4;
      }
      if (ParryPercent != 0F) {
        size += 2 + 4;
      }
      if (CritPercent != 0F) {
        size += 2 + 4;
      }
      if (RangedCritPercent != 0F) {
        size += 2 + 4;
      }
      size += exploredZones_.CalculateSize(_map_exploredZones_codec);
      if (RestStateExperience != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RestStateExperience);
      }
      if (Coinage != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Coinage);
      }
      if (PosModDamageDone != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PosModDamageDone);
      }
      if (NegModDamageDone != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NegModDamageDone);
      }
      if (PctModDamageDone != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PctModDamageDone);
      }
      size += posStats_.CalculateSize(_map_posStats_codec);
      size += negStats_.CalculateSize(_map_negStats_codec);
      size += posResistBuff_.CalculateSize(_map_posResistBuff_codec);
      size += negResistBuff_.CalculateSize(_map_negResistBuff_codec);
      if (AmmoId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AmmoId);
      }
      if (SelfResSpell != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SelfResSpell);
      }
      if (PvpMedals != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PvpMedals);
      }
      if (SessionKills != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SessionKills);
      }
      if (WatchedFactionIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WatchedFactionIndex);
      }
      size += combatRating_.CalculateSize(_map_combatRating_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWPlayer other) {
      if (other == null) {
        return;
      }
      if (other.unit_ != null) {
        if (unit_ == null) {
          Unit = new global::Game.WoWUnit();
        }
        Unit.MergeFrom(other.Unit);
      }
      if (other.PlayerBytes0 != 0) {
        PlayerBytes0 = other.PlayerBytes0;
      }
      if (other.PlayerBytes1 != 0) {
        PlayerBytes1 = other.PlayerBytes1;
      }
      if (other.PlayerBytes2 != 0) {
        PlayerBytes2 = other.PlayerBytes2;
      }
      if (other.PlayerFlags != 0) {
        PlayerFlags = other.PlayerFlags;
      }
      questLogEntries_.Add(other.questLogEntries_);
      inventory_.MergeFrom(other.inventory_);
      bagContents_.MergeFrom(other.bagContents_);
      keyRing_.MergeFrom(other.keyRing_);
      if (other.FarsightGuid != 0UL) {
        FarsightGuid = other.FarsightGuid;
      }
      if (other.ComboTargetGuid != 0UL) {
        ComboTargetGuid = other.ComboTargetGuid;
      }
      if (other.PlayerXP != 0) {
        PlayerXP = other.PlayerXP;
      }
      skillInfo_.MergeFrom(other.skillInfo_);
      spellList_.Add(other.spellList_);
      spellCooldowns_.MergeFrom(other.spellCooldowns_);
      spellStacks_.MergeFrom(other.spellStacks_);
      buffList_.MergeFrom(other.buffList_);
      if (other.CharacterPoints1 != 0) {
        CharacterPoints1 = other.CharacterPoints1;
      }
      if (other.CharacterPoints2 != 0) {
        CharacterPoints2 = other.CharacterPoints2;
      }
      if (other.TrackCreatures != 0) {
        TrackCreatures = other.TrackCreatures;
      }
      if (other.TrackResources != 0) {
        TrackResources = other.TrackResources;
      }
      if (other.BlockPercent != 0F) {
        BlockPercent = other.BlockPercent;
      }
      if (other.DodgePercent != 0F) {
        DodgePercent = other.DodgePercent;
      }
      if (other.ParryPercent != 0F) {
        ParryPercent = other.ParryPercent;
      }
      if (other.CritPercent != 0F) {
        CritPercent = other.CritPercent;
      }
      if (other.RangedCritPercent != 0F) {
        RangedCritPercent = other.RangedCritPercent;
      }
      exploredZones_.MergeFrom(other.exploredZones_);
      if (other.RestStateExperience != 0) {
        RestStateExperience = other.RestStateExperience;
      }
      if (other.Coinage != 0) {
        Coinage = other.Coinage;
      }
      if (other.PosModDamageDone != 0) {
        PosModDamageDone = other.PosModDamageDone;
      }
      if (other.NegModDamageDone != 0) {
        NegModDamageDone = other.NegModDamageDone;
      }
      if (other.PctModDamageDone != 0) {
        PctModDamageDone = other.PctModDamageDone;
      }
      posStats_.MergeFrom(other.posStats_);
      negStats_.MergeFrom(other.negStats_);
      posResistBuff_.MergeFrom(other.posResistBuff_);
      negResistBuff_.MergeFrom(other.negResistBuff_);
      if (other.AmmoId != 0) {
        AmmoId = other.AmmoId;
      }
      if (other.SelfResSpell != 0) {
        SelfResSpell = other.SelfResSpell;
      }
      if (other.PvpMedals != 0) {
        PvpMedals = other.PvpMedals;
      }
      if (other.SessionKills != 0) {
        SessionKills = other.SessionKills;
      }
      if (other.WatchedFactionIndex != 0) {
        WatchedFactionIndex = other.WatchedFactionIndex;
      }
      combatRating_.MergeFrom(other.combatRating_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (unit_ == null) {
              Unit = new global::Game.WoWUnit();
            }
            input.ReadMessage(Unit);
            break;
          }
          case 16: {
            PlayerBytes0 = input.ReadUInt32();
            break;
          }
          case 24: {
            PlayerBytes1 = input.ReadUInt32();
            break;
          }
          case 32: {
            PlayerBytes2 = input.ReadUInt32();
            break;
          }
          case 40: {
            PlayerFlags = input.ReadUInt32();
            break;
          }
          case 50: {
            questLogEntries_.AddEntriesFrom(input, _repeated_questLogEntries_codec);
            break;
          }
          case 58: {
            inventory_.AddEntriesFrom(input, _map_inventory_codec);
            break;
          }
          case 66: {
            bagContents_.AddEntriesFrom(input, _map_bagContents_codec);
            break;
          }
          case 74: {
            keyRing_.AddEntriesFrom(input, _map_keyRing_codec);
            break;
          }
          case 80: {
            FarsightGuid = input.ReadUInt64();
            break;
          }
          case 88: {
            ComboTargetGuid = input.ReadUInt64();
            break;
          }
          case 96: {
            PlayerXP = input.ReadUInt32();
            break;
          }
          case 106: {
            skillInfo_.AddEntriesFrom(input, _map_skillInfo_codec);
            break;
          }
          case 114:
          case 112: {
            spellList_.AddEntriesFrom(input, _repeated_spellList_codec);
            break;
          }
          case 122: {
            spellCooldowns_.AddEntriesFrom(input, _map_spellCooldowns_codec);
            break;
          }
          case 130: {
            spellStacks_.AddEntriesFrom(input, _map_spellStacks_codec);
            break;
          }
          case 138: {
            buffList_.AddEntriesFrom(input, _map_buffList_codec);
            break;
          }
          case 144: {
            CharacterPoints1 = input.ReadUInt32();
            break;
          }
          case 152: {
            CharacterPoints2 = input.ReadUInt32();
            break;
          }
          case 160: {
            TrackCreatures = input.ReadUInt32();
            break;
          }
          case 168: {
            TrackResources = input.ReadUInt32();
            break;
          }
          case 181: {
            BlockPercent = input.ReadFloat();
            break;
          }
          case 189: {
            DodgePercent = input.ReadFloat();
            break;
          }
          case 197: {
            ParryPercent = input.ReadFloat();
            break;
          }
          case 205: {
            CritPercent = input.ReadFloat();
            break;
          }
          case 213: {
            RangedCritPercent = input.ReadFloat();
            break;
          }
          case 218: {
            exploredZones_.AddEntriesFrom(input, _map_exploredZones_codec);
            break;
          }
          case 224: {
            RestStateExperience = input.ReadUInt32();
            break;
          }
          case 232: {
            Coinage = input.ReadUInt32();
            break;
          }
          case 240: {
            PosModDamageDone = input.ReadUInt32();
            break;
          }
          case 248: {
            NegModDamageDone = input.ReadUInt32();
            break;
          }
          case 256: {
            PctModDamageDone = input.ReadUInt32();
            break;
          }
          case 266: {
            posStats_.AddEntriesFrom(input, _map_posStats_codec);
            break;
          }
          case 274: {
            negStats_.AddEntriesFrom(input, _map_negStats_codec);
            break;
          }
          case 282: {
            posResistBuff_.AddEntriesFrom(input, _map_posResistBuff_codec);
            break;
          }
          case 290: {
            negResistBuff_.AddEntriesFrom(input, _map_negResistBuff_codec);
            break;
          }
          case 296: {
            AmmoId = input.ReadUInt32();
            break;
          }
          case 304: {
            SelfResSpell = input.ReadUInt32();
            break;
          }
          case 312: {
            PvpMedals = input.ReadUInt32();
            break;
          }
          case 320: {
            SessionKills = input.ReadUInt32();
            break;
          }
          case 328: {
            WatchedFactionIndex = input.ReadUInt32();
            break;
          }
          case 338: {
            combatRating_.AddEntriesFrom(input, _map_combatRating_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (unit_ == null) {
              Unit = new global::Game.WoWUnit();
            }
            input.ReadMessage(Unit);
            break;
          }
          case 16: {
            PlayerBytes0 = input.ReadUInt32();
            break;
          }
          case 24: {
            PlayerBytes1 = input.ReadUInt32();
            break;
          }
          case 32: {
            PlayerBytes2 = input.ReadUInt32();
            break;
          }
          case 40: {
            PlayerFlags = input.ReadUInt32();
            break;
          }
          case 50: {
            questLogEntries_.AddEntriesFrom(ref input, _repeated_questLogEntries_codec);
            break;
          }
          case 58: {
            inventory_.AddEntriesFrom(ref input, _map_inventory_codec);
            break;
          }
          case 66: {
            bagContents_.AddEntriesFrom(ref input, _map_bagContents_codec);
            break;
          }
          case 74: {
            keyRing_.AddEntriesFrom(ref input, _map_keyRing_codec);
            break;
          }
          case 80: {
            FarsightGuid = input.ReadUInt64();
            break;
          }
          case 88: {
            ComboTargetGuid = input.ReadUInt64();
            break;
          }
          case 96: {
            PlayerXP = input.ReadUInt32();
            break;
          }
          case 106: {
            skillInfo_.AddEntriesFrom(ref input, _map_skillInfo_codec);
            break;
          }
          case 114:
          case 112: {
            spellList_.AddEntriesFrom(ref input, _repeated_spellList_codec);
            break;
          }
          case 122: {
            spellCooldowns_.AddEntriesFrom(ref input, _map_spellCooldowns_codec);
            break;
          }
          case 130: {
            spellStacks_.AddEntriesFrom(ref input, _map_spellStacks_codec);
            break;
          }
          case 138: {
            buffList_.AddEntriesFrom(ref input, _map_buffList_codec);
            break;
          }
          case 144: {
            CharacterPoints1 = input.ReadUInt32();
            break;
          }
          case 152: {
            CharacterPoints2 = input.ReadUInt32();
            break;
          }
          case 160: {
            TrackCreatures = input.ReadUInt32();
            break;
          }
          case 168: {
            TrackResources = input.ReadUInt32();
            break;
          }
          case 181: {
            BlockPercent = input.ReadFloat();
            break;
          }
          case 189: {
            DodgePercent = input.ReadFloat();
            break;
          }
          case 197: {
            ParryPercent = input.ReadFloat();
            break;
          }
          case 205: {
            CritPercent = input.ReadFloat();
            break;
          }
          case 213: {
            RangedCritPercent = input.ReadFloat();
            break;
          }
          case 218: {
            exploredZones_.AddEntriesFrom(ref input, _map_exploredZones_codec);
            break;
          }
          case 224: {
            RestStateExperience = input.ReadUInt32();
            break;
          }
          case 232: {
            Coinage = input.ReadUInt32();
            break;
          }
          case 240: {
            PosModDamageDone = input.ReadUInt32();
            break;
          }
          case 248: {
            NegModDamageDone = input.ReadUInt32();
            break;
          }
          case 256: {
            PctModDamageDone = input.ReadUInt32();
            break;
          }
          case 266: {
            posStats_.AddEntriesFrom(ref input, _map_posStats_codec);
            break;
          }
          case 274: {
            negStats_.AddEntriesFrom(ref input, _map_negStats_codec);
            break;
          }
          case 282: {
            posResistBuff_.AddEntriesFrom(ref input, _map_posResistBuff_codec);
            break;
          }
          case 290: {
            negResistBuff_.AddEntriesFrom(ref input, _map_negResistBuff_codec);
            break;
          }
          case 296: {
            AmmoId = input.ReadUInt32();
            break;
          }
          case 304: {
            SelfResSpell = input.ReadUInt32();
            break;
          }
          case 312: {
            PvpMedals = input.ReadUInt32();
            break;
          }
          case 320: {
            SessionKills = input.ReadUInt32();
            break;
          }
          case 328: {
            WatchedFactionIndex = input.ReadUInt32();
            break;
          }
          case 338: {
            combatRating_.AddEntriesFrom(ref input, _map_combatRating_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for WoWItem, extending WoWGameObject
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWItem : pb::IMessage<WoWItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWItem> _parser = new pb::MessageParser<WoWItem>(() => new WoWItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWItem(WoWItem other) : this() {
      gameObject_ = other.gameObject_ != null ? other.gameObject_.Clone() : null;
      owner_ = other.owner_;
      contained_ = other.contained_;
      creator_ = other.creator_;
      giftCreator_ = other.giftCreator_;
      stackCount_ = other.stackCount_;
      duration_ = other.duration_;
      spellCharges_ = other.spellCharges_.Clone();
      itemFlags_ = other.itemFlags_;
      enchantments_ = other.enchantments_.Clone();
      durability_ = other.durability_;
      propertySeed_ = other.propertySeed_;
      randomPropertiesId_ = other.randomPropertiesId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWItem Clone() {
      return new WoWItem(this);
    }

    /// <summary>Field number for the "gameObject" field.</summary>
    public const int GameObjectFieldNumber = 1;
    private global::Game.WoWGameObject gameObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWGameObject GameObject {
      get { return gameObject_; }
      set {
        gameObject_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private ulong owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "contained" field.</summary>
    public const int ContainedFieldNumber = 3;
    private ulong contained_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Contained {
      get { return contained_; }
      set {
        contained_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 4;
    private ulong creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "giftCreator" field.</summary>
    public const int GiftCreatorFieldNumber = 5;
    private ulong giftCreator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GiftCreator {
      get { return giftCreator_; }
      set {
        giftCreator_ = value;
      }
    }

    /// <summary>Field number for the "stackCount" field.</summary>
    public const int StackCountFieldNumber = 6;
    private uint stackCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StackCount {
      get { return stackCount_; }
      set {
        stackCount_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 7;
    private uint duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "spellCharges" field.</summary>
    public const int SpellChargesFieldNumber = 8;
    private static readonly pbc::MapField<uint, uint>.Codec _map_spellCharges_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 66);
    private readonly pbc::MapField<uint, uint> spellCharges_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> SpellCharges {
      get { return spellCharges_; }
    }

    /// <summary>Field number for the "itemFlags" field.</summary>
    public const int ItemFlagsFieldNumber = 9;
    private uint itemFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemFlags {
      get { return itemFlags_; }
      set {
        itemFlags_ = value;
      }
    }

    /// <summary>Field number for the "enchantments" field.</summary>
    public const int EnchantmentsFieldNumber = 10;
    private static readonly pbc::MapField<uint, uint>.Codec _map_enchantments_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 82);
    private readonly pbc::MapField<uint, uint> enchantments_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Enchantments {
      get { return enchantments_; }
    }

    /// <summary>Field number for the "durability" field.</summary>
    public const int DurabilityFieldNumber = 11;
    private uint durability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Durability {
      get { return durability_; }
      set {
        durability_ = value;
      }
    }

    /// <summary>Field number for the "propertySeed" field.</summary>
    public const int PropertySeedFieldNumber = 12;
    private uint propertySeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PropertySeed {
      get { return propertySeed_; }
      set {
        propertySeed_ = value;
      }
    }

    /// <summary>Field number for the "randomPropertiesId" field.</summary>
    public const int RandomPropertiesIdFieldNumber = 13;
    private uint randomPropertiesId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RandomPropertiesId {
      get { return randomPropertiesId_; }
      set {
        randomPropertiesId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameObject, other.GameObject)) return false;
      if (Owner != other.Owner) return false;
      if (Contained != other.Contained) return false;
      if (Creator != other.Creator) return false;
      if (GiftCreator != other.GiftCreator) return false;
      if (StackCount != other.StackCount) return false;
      if (Duration != other.Duration) return false;
      if (!SpellCharges.Equals(other.SpellCharges)) return false;
      if (ItemFlags != other.ItemFlags) return false;
      if (!Enchantments.Equals(other.Enchantments)) return false;
      if (Durability != other.Durability) return false;
      if (PropertySeed != other.PropertySeed) return false;
      if (RandomPropertiesId != other.RandomPropertiesId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameObject_ != null) hash ^= GameObject.GetHashCode();
      if (Owner != 0UL) hash ^= Owner.GetHashCode();
      if (Contained != 0UL) hash ^= Contained.GetHashCode();
      if (Creator != 0UL) hash ^= Creator.GetHashCode();
      if (GiftCreator != 0UL) hash ^= GiftCreator.GetHashCode();
      if (StackCount != 0) hash ^= StackCount.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      hash ^= SpellCharges.GetHashCode();
      if (ItemFlags != 0) hash ^= ItemFlags.GetHashCode();
      hash ^= Enchantments.GetHashCode();
      if (Durability != 0) hash ^= Durability.GetHashCode();
      if (PropertySeed != 0) hash ^= PropertySeed.GetHashCode();
      if (RandomPropertiesId != 0) hash ^= RandomPropertiesId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameObject);
      }
      if (Owner != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Owner);
      }
      if (Contained != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Contained);
      }
      if (Creator != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Creator);
      }
      if (GiftCreator != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(GiftCreator);
      }
      if (StackCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StackCount);
      }
      if (Duration != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Duration);
      }
      spellCharges_.WriteTo(output, _map_spellCharges_codec);
      if (ItemFlags != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ItemFlags);
      }
      enchantments_.WriteTo(output, _map_enchantments_codec);
      if (Durability != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Durability);
      }
      if (PropertySeed != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PropertySeed);
      }
      if (RandomPropertiesId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RandomPropertiesId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameObject);
      }
      if (Owner != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Owner);
      }
      if (Contained != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Contained);
      }
      if (Creator != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Creator);
      }
      if (GiftCreator != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(GiftCreator);
      }
      if (StackCount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StackCount);
      }
      if (Duration != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Duration);
      }
      spellCharges_.WriteTo(ref output, _map_spellCharges_codec);
      if (ItemFlags != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ItemFlags);
      }
      enchantments_.WriteTo(ref output, _map_enchantments_codec);
      if (Durability != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Durability);
      }
      if (PropertySeed != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PropertySeed);
      }
      if (RandomPropertiesId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(RandomPropertiesId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameObject);
      }
      if (Owner != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Owner);
      }
      if (Contained != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Contained);
      }
      if (Creator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Creator);
      }
      if (GiftCreator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GiftCreator);
      }
      if (StackCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StackCount);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
      }
      size += spellCharges_.CalculateSize(_map_spellCharges_codec);
      if (ItemFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemFlags);
      }
      size += enchantments_.CalculateSize(_map_enchantments_codec);
      if (Durability != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Durability);
      }
      if (PropertySeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PropertySeed);
      }
      if (RandomPropertiesId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RandomPropertiesId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWItem other) {
      if (other == null) {
        return;
      }
      if (other.gameObject_ != null) {
        if (gameObject_ == null) {
          GameObject = new global::Game.WoWGameObject();
        }
        GameObject.MergeFrom(other.GameObject);
      }
      if (other.Owner != 0UL) {
        Owner = other.Owner;
      }
      if (other.Contained != 0UL) {
        Contained = other.Contained;
      }
      if (other.Creator != 0UL) {
        Creator = other.Creator;
      }
      if (other.GiftCreator != 0UL) {
        GiftCreator = other.GiftCreator;
      }
      if (other.StackCount != 0) {
        StackCount = other.StackCount;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      spellCharges_.MergeFrom(other.spellCharges_);
      if (other.ItemFlags != 0) {
        ItemFlags = other.ItemFlags;
      }
      enchantments_.MergeFrom(other.enchantments_);
      if (other.Durability != 0) {
        Durability = other.Durability;
      }
      if (other.PropertySeed != 0) {
        PropertySeed = other.PropertySeed;
      }
      if (other.RandomPropertiesId != 0) {
        RandomPropertiesId = other.RandomPropertiesId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameObject_ == null) {
              GameObject = new global::Game.WoWGameObject();
            }
            input.ReadMessage(GameObject);
            break;
          }
          case 16: {
            Owner = input.ReadUInt64();
            break;
          }
          case 24: {
            Contained = input.ReadUInt64();
            break;
          }
          case 32: {
            Creator = input.ReadUInt64();
            break;
          }
          case 40: {
            GiftCreator = input.ReadUInt64();
            break;
          }
          case 48: {
            StackCount = input.ReadUInt32();
            break;
          }
          case 56: {
            Duration = input.ReadUInt32();
            break;
          }
          case 66: {
            spellCharges_.AddEntriesFrom(input, _map_spellCharges_codec);
            break;
          }
          case 72: {
            ItemFlags = input.ReadUInt32();
            break;
          }
          case 82: {
            enchantments_.AddEntriesFrom(input, _map_enchantments_codec);
            break;
          }
          case 88: {
            Durability = input.ReadUInt32();
            break;
          }
          case 96: {
            PropertySeed = input.ReadUInt32();
            break;
          }
          case 104: {
            RandomPropertiesId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameObject_ == null) {
              GameObject = new global::Game.WoWGameObject();
            }
            input.ReadMessage(GameObject);
            break;
          }
          case 16: {
            Owner = input.ReadUInt64();
            break;
          }
          case 24: {
            Contained = input.ReadUInt64();
            break;
          }
          case 32: {
            Creator = input.ReadUInt64();
            break;
          }
          case 40: {
            GiftCreator = input.ReadUInt64();
            break;
          }
          case 48: {
            StackCount = input.ReadUInt32();
            break;
          }
          case 56: {
            Duration = input.ReadUInt32();
            break;
          }
          case 66: {
            spellCharges_.AddEntriesFrom(ref input, _map_spellCharges_codec);
            break;
          }
          case 72: {
            ItemFlags = input.ReadUInt32();
            break;
          }
          case 82: {
            enchantments_.AddEntriesFrom(ref input, _map_enchantments_codec);
            break;
          }
          case 88: {
            Durability = input.ReadUInt32();
            break;
          }
          case 96: {
            PropertySeed = input.ReadUInt32();
            break;
          }
          case 104: {
            RandomPropertiesId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for WoWContainer, extending WoWItem
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WoWContainer : pb::IMessage<WoWContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WoWContainer> _parser = new pb::MessageParser<WoWContainer>(() => new WoWContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WoWContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWContainer(WoWContainer other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      itemSlots_ = other.itemSlots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WoWContainer Clone() {
      return new WoWContainer(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Game.WoWItem item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Game.WoWItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "itemSlots" field.</summary>
    public const int ItemSlotsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_itemSlots_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> itemSlots_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ItemSlots {
      get { return itemSlots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WoWContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WoWContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if(!itemSlots_.Equals(other.itemSlots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      hash ^= itemSlots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      itemSlots_.WriteTo(output, _repeated_itemSlots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      itemSlots_.WriteTo(ref output, _repeated_itemSlots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      size += itemSlots_.CalculateSize(_repeated_itemSlots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WoWContainer other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Game.WoWItem();
        }
        Item.MergeFrom(other.Item);
      }
      itemSlots_.Add(other.itemSlots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Game.WoWItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18:
          case 16: {
            itemSlots_.AddEntriesFrom(input, _repeated_itemSlots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Game.WoWItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18:
          case 16: {
            itemSlots_.AddEntriesFrom(ref input, _repeated_itemSlots_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Definition for QuestLogEntry
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class QuestLogEntry : pb::IMessage<QuestLogEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestLogEntry> _parser = new pb::MessageParser<QuestLogEntry>(() => new QuestLogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestLogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogEntry(QuestLogEntry other) : this() {
      questLog1_ = other.questLog1_;
      questLog2_ = other.questLog2_;
      questLog3_ = other.questLog3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogEntry Clone() {
      return new QuestLogEntry(this);
    }

    /// <summary>Field number for the "questLog1" field.</summary>
    public const int QuestLog1FieldNumber = 1;
    private uint questLog1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestLog1 {
      get { return questLog1_; }
      set {
        questLog1_ = value;
      }
    }

    /// <summary>Field number for the "questLog2" field.</summary>
    public const int QuestLog2FieldNumber = 2;
    private uint questLog2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestLog2 {
      get { return questLog2_; }
      set {
        questLog2_ = value;
      }
    }

    /// <summary>Field number for the "questLog3" field.</summary>
    public const int QuestLog3FieldNumber = 3;
    private uint questLog3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestLog3 {
      get { return questLog3_; }
      set {
        questLog3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestLogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestLogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestLog1 != other.QuestLog1) return false;
      if (QuestLog2 != other.QuestLog2) return false;
      if (QuestLog3 != other.QuestLog3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestLog1 != 0) hash ^= QuestLog1.GetHashCode();
      if (QuestLog2 != 0) hash ^= QuestLog2.GetHashCode();
      if (QuestLog3 != 0) hash ^= QuestLog3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestLog1 != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestLog1);
      }
      if (QuestLog2 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(QuestLog2);
      }
      if (QuestLog3 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(QuestLog3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestLog1 != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestLog1);
      }
      if (QuestLog2 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(QuestLog2);
      }
      if (QuestLog3 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(QuestLog3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestLog1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestLog1);
      }
      if (QuestLog2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestLog2);
      }
      if (QuestLog3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestLog3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestLogEntry other) {
      if (other == null) {
        return;
      }
      if (other.QuestLog1 != 0) {
        QuestLog1 = other.QuestLog1;
      }
      if (other.QuestLog2 != 0) {
        QuestLog2 = other.QuestLog2;
      }
      if (other.QuestLog3 != 0) {
        QuestLog3 = other.QuestLog3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestLog1 = input.ReadUInt32();
            break;
          }
          case 16: {
            QuestLog2 = input.ReadUInt32();
            break;
          }
          case 24: {
            QuestLog3 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestLog1 = input.ReadUInt32();
            break;
          }
          case 16: {
            QuestLog2 = input.ReadUInt32();
            break;
          }
          case 24: {
            QuestLog3 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reusable message for Item
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Game.GameReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item(Item other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      slot_ = other.slot_;
      quantity_ = other.quantity_;
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 3;
    private string slot_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Slot {
      get { return slot_; }
      set {
        slot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 5;
    private static readonly pbc::MapField<uint, uint>.Codec _map_stats_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 42);
    private readonly pbc::MapField<uint, uint> stats_ = new pbc::MapField<uint, uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, uint> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Slot != other.Slot) return false;
      if (Quantity != other.Quantity) return false;
      if (!Stats.Equals(other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Slot.Length != 0) hash ^= Slot.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Slot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Slot);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Quantity);
      }
      stats_.WriteTo(output, _map_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Slot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Slot);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Quantity);
      }
      stats_.WriteTo(ref output, _map_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Slot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Slot);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      size += stats_.CalculateSize(_map_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Slot.Length != 0) {
        Slot = other.Slot;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      stats_.MergeFrom(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Slot = input.ReadString();
            break;
          }
          case 32: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 42: {
            stats_.AddEntriesFrom(input, _map_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Slot = input.ReadString();
            break;
          }
          case 32: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 42: {
            stats_.AddEntriesFrom(ref input, _map_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
