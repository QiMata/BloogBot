syntax = "proto3";

package pathfinding;

import "game.proto";          // re-uses game.Position (x,y,z)

/* ────────── atomic request / response types ────────── */

message CalculatePathRequest {
  uint32        map_id   = 1;
  game.Position start    = 2;
  game.Position end      = 3;
  bool          straight = 4;   // Detour “straight path” mode
}

message CalculatePathResponse {
  repeated game.Position corners = 1;
}

message LineOfSightRequest {
  uint32        map_id = 1;
  game.Position from   = 2;
  game.Position to     = 3;
}
message LineOfSightResponse { bool in_los = 1; }

message TerrainProbeRequest {
  uint32        map_id         = 1;
  game.Position position       = 2;
  float         capsule_radius = 3;
  float         capsule_height = 4;
}

message NavPolyHit {
  uint64              ref_id  = 1;
  uint32              area    = 2;
  uint32              flags   = 3;
  repeated game.Position verts = 4;
}

message TerrainProbeResponse {
  float               ground_z      = 1;
  float               liquid_z      = 2;
  uint32              terrain_flags = 3;   // see NavTerrain in C#
  repeated NavPolyHit overlaps      = 4;
}

/* ────────── error helper ────────── */
message Error { string message = 1; }

/* ────────── wrapper envelopes ────────── */

message PathfindingRequest {
  oneof payload {
    CalculatePathRequest path     = 1;
    LineOfSightRequest   los      = 2;
    TerrainProbeRequest  terrain  = 3;
  }
}

message PathfindingResponse {
  oneof payload {
    CalculatePathResponse path     = 1;
    LineOfSightResponse   los      = 2;
    TerrainProbeResponse  terrain  = 3;
    Error                 error    = 4;
  }
}
